[
  {
    "project": "vatlab/sos",
    "commit": "c46eeec3fc3cda17437be181f7ec3c12be356b5f",
    "filename": "src/sos/pattern.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vatlab-sos/src/sos/pattern.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sos/pattern.py:53:40 Unbound name [10]: Name `Optional` is used but not defined in the current scope.",
    "message": " Name `Optional` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 53,
    "warning_line": "def glob_wildcards(pattern: str, files: Optional[List[str]] = None) -> Dict[str, Union[List[Any], List[str]]]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from itertools import chain\n\n",
        "source_code_len": 29,
        "target_code": "from itertools import chain\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -11,2 +11,3 @@\n from itertools import chain\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from itertools import chain\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from itertools import chain\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vatlab/sos",
    "commit": "c46eeec3fc3cda17437be181f7ec3c12be356b5f",
    "filename": "src/sos/pattern.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vatlab-sos/src/sos/pattern.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sos/pattern.py:111:77 Unbound name [10]: Name `NoneType` is used but not defined in the current scope.",
    "message": " Name `NoneType` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 111,
    "warning_line": "def extract_pattern(pattern: str, ifiles: List[str]) -> Dict[str, Union[List[NoneType], List[str]]]:"
  }
]