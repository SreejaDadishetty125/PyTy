[
  {
    "project": "Ultimaker/Cura",
    "commit": "33b3bb77c3f1f777a8e29015a219105231ba96d7",
    "filename": "plugins/UM3NetworkPrinting/src/Cloud/CloudOutputDeviceManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/plugins/UM3NetworkPrinting/src/Cloud/CloudOutputDeviceManager.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plugins/UM3NetworkPrinting/src/Cloud/CloudOutputDeviceManager.py:111:45 Invalid type [31]: Expression `[plugins.UM3NetworkPrinting.src.Models.Http.CloudClusterResponse.CloudClusterResponse]` is not a valid type.",
    "message": " Expression `[plugins.UM3NetworkPrinting.src.Models.Http.CloudClusterResponse.CloudClusterResponse]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 111,
    "warning_line": "    def _onDevicesDiscovered(self, clusters: [CloudClusterResponse]) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _onDevicesDiscovered(self, clusters: [CloudClusterResponse]) -> None:\n        \"\"\"**Synchronously** create machines for discovered devices\n",
        "source_code_len": 147,
        "target_code": "\n    def _onDevicesDiscovered(self, clusters: List[CloudClusterResponse]) -> None:\n        \"\"\"**Synchronously** create machines for discovered devices\n",
        "target_code_len": 151,
        "diff_format": "@@ -110,3 +110,3 @@\n \n-    def _onDevicesDiscovered(self, clusters: [CloudClusterResponse]) -> None:\n+    def _onDevicesDiscovered(self, clusters: List[CloudClusterResponse]) -> None:\n         \"\"\"**Synchronously** create machines for discovered devices\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def _onDevicesDiscovered(self, clusters: [CloudClusterResponse]) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def _onDevicesDiscovered(self, clusters: List[CloudClusterResponse]) -> None:\n        <IND>"
      }
    ]
  }
]