[
  {
    "project": "aio-libs/aiodocker",
    "commit": "73f4ded3f35051ecbf6d468fa8461cae564ec857",
    "filename": "aiodocker/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/utils.py:119:8 Incompatible return type [7]: Expected `Mapping[str, typing.Any]` but got `None`.",
    "message": " Expected `Mapping[str, typing.Any]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 119,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef httpize(d: Optional[Mapping]) -> Mapping[str, Any]:\n    if d is None:\n",
        "source_code_len": 75,
        "target_code": "\ndef httpize(d: Optional[Mapping]) -> Optional[Mapping[str, Any]]:\n    if d is None:\n",
        "target_code_len": 85,
        "diff_format": "@@ -116,3 +116,3 @@\n \n-def httpize(d: Optional[Mapping]) -> Mapping[str, Any]:\n+def httpize(d: Optional[Mapping]) -> Optional[Mapping[str, Any]]:\n     if d is None:\n",
        "source_code_with_indent": "\n<DED><DED>def httpize(d: Optional[Mapping]) -> Mapping[str, Any]:\n    <IND>if d is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def httpize(d: Optional[Mapping]) -> Optional[Mapping[str, Any]]:\n    <IND>if d is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]