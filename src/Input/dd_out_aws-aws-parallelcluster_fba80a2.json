[
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:296:45 Incompatible variable type [9]: id is declared to have type `str` but is used as type `None`.",
    "message": " id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 296,
    "warning_line": "    def __init__(self, enabled: bool = None, id: str = None):"
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:381:8 Incompatible variable type [9]: max_count is declared to have type `int` but is used as type `None`.",
    "message": " max_count is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 381,
    "warning_line": "        max_count: int = None,"
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:382:8 Incompatible variable type [9]: min_count is declared to have type `int` but is used as type `None`.",
    "message": " min_count is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 382,
    "warning_line": "        min_count: int = None,"
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:383:8 Incompatible variable type [9]: spot_price is declared to have type `float` but is used as type `None`.",
    "message": " spot_price is declared to have type `float` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 383,
    "warning_line": "        spot_price: float = None,"
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:420:44 Incompatible variable type [9]: scheduler is declared to have type `str` but is used as type `None`.",
    "message": " scheduler is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 420,
    "warning_line": "    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n\nclass Scheduling(Resource):\n    \"\"\"Represent the Scheduling configuration.\"\"\"\n\n    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n        super().__init__()\n        self.scheduler = Param(scheduler, default=\"slurm\")\n        self.queues = queues\n        self.settings = settings\n\n",
        "source_code_len": 395,
        "target_code": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n",
        "target_code_len": 61,
        "diff_format": "@@ -414,12 +412,2 @@\n         self.scaledown_idletime = Param(scaledown_idletime)\n-\n-\n-class Scheduling(Resource):\n-    \"\"\"Represent the Scheduling configuration.\"\"\"\n-\n-    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n-        super().__init__()\n-        self.scheduler = Param(scheduler, default=\"slurm\")\n-        self.queues = queues\n-        self.settings = settings\n \n",
        "source_code_with_indent": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n\n<DED><DED>class Scheduling(Resource):\n    <IND>\"\"\"Represent the Scheduling configuration.\"\"\"\n\n    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n        <IND>super().__init__()\n        self.scheduler = Param(scheduler, default=\"slurm\")\n        self.queues = queues\n        self.settings = settings\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        head_node: HeadNode,\n        scheduling: Scheduling,\n        shared_storage: List[SharedStorage] = None,\n",
        "source_code_len": 113,
        "target_code": "        head_node: HeadNode,\n        shared_storage: List[SharedStorage] = None,\n",
        "target_code_len": 81,
        "diff_format": "@@ -587,3 +575,2 @@\n         head_node: HeadNode,\n-        scheduling: Scheduling,\n         shared_storage: List[SharedStorage] = None,\n",
        "source_code_with_indent": "        head_node: HeadNode,\n        scheduling: Scheduling,\n        shared_storage: List[SharedStorage] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        head_node: HeadNode,\n        shared_storage: List[SharedStorage] = None,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self.head_node = head_node\n        self.scheduling = scheduling\n        self.shared_storage = shared_storage\n",
        "source_code_len": 117,
        "target_code": "        self.head_node = head_node\n        self.shared_storage = shared_storage\n",
        "target_code_len": 80,
        "diff_format": "@@ -597,3 +584,2 @@\n         self.head_node = head_node\n-        self.scheduling = scheduling\n         self.shared_storage = shared_storage\n",
        "source_code_with_indent": "        self.head_node = head_node\n        self.scheduling = scheduling\n        self.shared_storage = shared_storage\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.head_node = head_node\n        self.shared_storage = shared_storage\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:420:67 Incompatible variable type [9]: settings is declared to have type `SchedulingSettings` but is used as type `None`.",
    "message": " settings is declared to have type `SchedulingSettings` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 420,
    "warning_line": "    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n\nclass Scheduling(Resource):\n    \"\"\"Represent the Scheduling configuration.\"\"\"\n\n    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n        super().__init__()\n        self.scheduler = Param(scheduler, default=\"slurm\")\n        self.queues = queues\n        self.settings = settings\n\n",
        "source_code_len": 395,
        "target_code": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n",
        "target_code_len": 61,
        "diff_format": "@@ -414,12 +412,2 @@\n         self.scaledown_idletime = Param(scaledown_idletime)\n-\n-\n-class Scheduling(Resource):\n-    \"\"\"Represent the Scheduling configuration.\"\"\"\n-\n-    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n-        super().__init__()\n-        self.scheduler = Param(scheduler, default=\"slurm\")\n-        self.queues = queues\n-        self.settings = settings\n \n",
        "source_code_with_indent": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n\n<DED><DED>class Scheduling(Resource):\n    <IND>\"\"\"Represent the Scheduling configuration.\"\"\"\n\n    def __init__(self, queues: List[Queue], scheduler: str = None, settings: SchedulingSettings = None):\n        <IND>super().__init__()\n        self.scheduler = Param(scheduler, default=\"slurm\")\n        self.queues = queues\n        self.settings = settings\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.scaledown_idletime = Param(scaledown_idletime)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        head_node: HeadNode,\n        scheduling: Scheduling,\n        shared_storage: List[SharedStorage] = None,\n",
        "source_code_len": 113,
        "target_code": "        head_node: HeadNode,\n        shared_storage: List[SharedStorage] = None,\n",
        "target_code_len": 81,
        "diff_format": "@@ -587,3 +575,2 @@\n         head_node: HeadNode,\n-        scheduling: Scheduling,\n         shared_storage: List[SharedStorage] = None,\n",
        "source_code_with_indent": "        head_node: HeadNode,\n        scheduling: Scheduling,\n        shared_storage: List[SharedStorage] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        head_node: HeadNode,\n        shared_storage: List[SharedStorage] = None,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self.head_node = head_node\n        self.scheduling = scheduling\n        self.shared_storage = shared_storage\n",
        "source_code_len": 117,
        "target_code": "        self.head_node = head_node\n        self.shared_storage = shared_storage\n",
        "target_code_len": 80,
        "diff_format": "@@ -597,3 +584,2 @@\n         self.head_node = head_node\n-        self.scheduling = scheduling\n         self.shared_storage = shared_storage\n",
        "source_code_with_indent": "        self.head_node = head_node\n        self.scheduling = scheduling\n        self.shared_storage = shared_storage\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.head_node = head_node\n        self.shared_storage = shared_storage\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aws/aws-parallelcluster",
    "commit": "fba80a25126d2a3deaf8bdaae2eb9039f5454ec0",
    "filename": "cli/src/pcluster/models/cluster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-aws-parallelcluster/cli/src/pcluster/models/cluster.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cli/src/pcluster/models/cluster.py:530:8 Incompatible variable type [9]: type is declared to have type `str` but is used as type `None`.",
    "message": " type is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 530,
    "warning_line": "        type: str = None,"
  }
]