[
  {
    "project": "grapl-security/grapl",
    "commit": "78de392e2d8718e2d6127506c87d136a201737a3",
    "filename": "src/python/graplctl/tests/shared.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/grapl-security-grapl/src/python/graplctl/tests/shared.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/python/graplctl/tests/shared.py:61:8 Incompatible return type [7]: Expected `ContextManager[BotoSessionMock]` but got `typing.Generator[BotoSessionMock, None, None]`.",
    "message": " Expected `ContextManager[BotoSessionMock]` but got `typing.Generator[BotoSessionMock, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 61,
    "warning_line": "        yield BotoSessionMock(session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import contextmanager\nfrom typing import Any, ContextManager, Dict, Sequence\nfrom unittest.mock import MagicMock, Mock, patch\n",
        "source_code_len": 142,
        "target_code": "from contextlib import contextmanager\nfrom typing import Any, Dict, Iterator, Sequence, cast\nfrom unittest.mock import MagicMock, Mock, patch\n",
        "target_code_len": 142,
        "diff_format": "@@ -1,3 +1,3 @@\n from contextlib import contextmanager\n-from typing import Any, ContextManager, Dict, Sequence\n+from typing import Any, Dict, Iterator, Sequence, cast\n from unittest.mock import MagicMock, Mock, patch\n",
        "source_code_with_indent": "from contextlib import contextmanager\nfrom typing import Any, ContextManager, Dict, Sequence\nfrom unittest.mock import MagicMock, Mock, patch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import contextmanager\nfrom typing import Any, Dict, Iterator, Sequence, cast\nfrom unittest.mock import MagicMock, Mock, patch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@contextmanager\ndef patch_boto3_session() -> ContextManager[BotoSessionMock]:\n    with patch.object(\n",
        "source_code_len": 101,
        "target_code": "@contextmanager\ndef patch_boto3_session() -> Iterator[BotoSessionMock]:\n    with patch.object(\n",
        "target_code_len": 95,
        "diff_format": "@@ -54,3 +54,3 @@\n @contextmanager\n-def patch_boto3_session() -> ContextManager[BotoSessionMock]:\n+def patch_boto3_session() -> Iterator[BotoSessionMock]:\n     with patch.object(\n",
        "source_code_with_indent": "<DED><DED>@contextmanager\ndef patch_boto3_session() -> ContextManager[BotoSessionMock]:\n    <IND>with patch.object(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>@contextmanager\ndef patch_boto3_session() -> Iterator[BotoSessionMock]:\n    <IND>with patch.object(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]