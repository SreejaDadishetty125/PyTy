[
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:121:16 Incompatible return type [7]: Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "message": " Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 121,
    "warning_line": "                yield False"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:127:12 Incompatible return type [7]: Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "message": " Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 127,
    "warning_line": "            yield True"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:129:12 Incompatible return type [7]: Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "message": " Expected `bool` but got `typing.Generator[bool, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 129,
    "warning_line": "            yield False"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:190:8 Incompatible return type [7]: Expected `Tuple[bool, str, Optional[Tuple[int, int]]]` but got `typing.Generator[Tuple[bool, str, None], None, None]`.",
    "message": " Expected `Tuple[bool, str, Optional[Tuple[int, int]]]` but got `typing.Generator[Tuple[bool, str, None], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 190,
    "warning_line": "        yield True, msgs, None"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:219:12 Incompatible return type [7]: Expected `Tuple[bool, int]` but got `typing.Generator[Tuple[bool, int], None, None]`.",
    "message": " Expected `Tuple[bool, int]` but got `typing.Generator[Tuple[bool, int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 219,
    "warning_line": "            yield False, 0"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:255:12 Incompatible return type [7]: Expected `Tuple[bool, str, typing.Any]` but got `typing.Generator[Tuple[bool, str, List[Variable[_T]]], None, None]`.",
    "message": " Expected `Tuple[bool, str, typing.Any]` but got `typing.Generator[Tuple[bool, str, List[Variable[_T]]], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 255,
    "warning_line": "            yield False, '', []"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:326:13 Incompatible parameter type [6]: Expected `typing.Iterator[Variable[_T]]` for 1st positional only parameter to call `next` but got `Tuple[bool, str, Optional[Tuple[int, int]]]`.",
    "message": " Expected `typing.Iterator[Variable[_T]]` for 1st positional only parameter to call `next` but got `Tuple[bool, str, Optional[Tuple[int, int]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 326,
    "warning_line": "        next(call)"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autoload/coqtop.py:331:16 Incompatible return type [7]: Expected `Tuple[bool, str, Optional[Tuple[int, int]]]` but got `typing.Generator[typing.Any, None, None]`.",
    "message": " Expected `Tuple[bool, str, Optional[Tuple[int, int]]]` but got `typing.Generator[typing.Any, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 331,
    "warning_line": "                yield ret"
  },
  {
    "project": "whonore/Coqtail",
    "commit": "5156f84555191283778d29234d8e5f5dedd6080e",
    "filename": "autoload/coqtop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/whonore-Coqtail/autoload/coqtop.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "autoload/coqtop.py:356:22 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Coqtop.send_cmd` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Coqtop.send_cmd` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 356,
    "warning_line": "        self.send_cmd(msg)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            self.done_callback()\n            _ = yield\n            yield self.xml.standardize(cmd, Ok(None))\n\n",
        "source_code_len": 110,
        "target_code": "            self.done_callback()\n            _ = yield  # type: ignore\n            yield self.xml.standardize(cmd, Ok(None))\n            return\n\n",
        "target_code_len": 145,
        "diff_format": "@@ -352,4 +356,5 @@\n             self.done_callback()\n-            _ = yield\n+            _ = yield  # type: ignore\n             yield self.xml.standardize(cmd, Ok(None))\n+            return\n \n",
        "source_code_with_indent": "            <IND>self.done_callback()\n            _ = yield\n            yield self.xml.standardize(cmd, Ok(None))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>self.done_callback()\n            _ = yield  # type: ignore\n            yield self.xml.standardize(cmd, Ok(None))\n            return\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]