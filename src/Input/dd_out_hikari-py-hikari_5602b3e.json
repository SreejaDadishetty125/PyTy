[
  {
    "project": "hikari-py/hikari",
    "commit": "5602b3e69a585f08fa33bb4baf69e755a6e3cac5",
    "filename": "hikari/utilities/aio.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/utilities/aio.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/utilities/aio.py:196:12 Incompatible return type [7]: Expected `typing.Sequence[Variable[T_co](covariant)]` but got implicit return value of `None`.",
    "message": " Expected `typing.Sequence[Variable[T_co](covariant)]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 196,
    "warning_line": "            raise asyncio.TimeoutError(\"all_of gatherer timed out\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    except asyncio.TimeoutError:\n        timed_out = True\n    except asyncio.CancelledError:\n        cancelled = True\n    finally:\n",
        "source_code_len": 131,
        "target_code": "    except asyncio.TimeoutError:\n        raise asyncio.TimeoutError(\"all_of gatherer timed out\") from None\n    except asyncio.CancelledError:\n        raise asyncio.CancelledError(\"all_of gatherer cancelled\") from None\n    finally:\n",
        "target_code_len": 231,
        "diff_format": "@@ -174,5 +166,5 @@\n     except asyncio.TimeoutError:\n-        timed_out = True\n+        raise asyncio.TimeoutError(\"all_of gatherer timed out\") from None\n     except asyncio.CancelledError:\n-        cancelled = True\n+        raise asyncio.CancelledError(\"all_of gatherer cancelled\") from None\n     finally:\n",
        "source_code_with_indent": "    <DED>except asyncio.TimeoutError:\n        <IND>timed_out = True\n    <DED>except asyncio.CancelledError:\n        <IND>cancelled = True\n    <DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>except asyncio.TimeoutError:\n        <IND>raise asyncio.TimeoutError(\"all_of gatherer timed out\") from None\n    <DED>except asyncio.CancelledError:\n        <IND>raise asyncio.CancelledError(\"all_of gatherer cancelled\") from None\n    <DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]