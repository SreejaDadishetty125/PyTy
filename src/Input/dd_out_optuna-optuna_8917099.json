[
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/dashboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/dashboard.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/dashboard.py:29:0 Incompatible variable type [9]: _mode is declared to have type `str` but is used as type `None`.",
    "message": " _mode is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 29,
    "warning_line": "_mode = None  # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_mode = None  # type: str\n_study = None  # type: Optional[pfnopt.study.Study]\n",
        "source_code_len": 79,
        "target_code": "\n_mode = None  # type: Optional[str]\n_study = None  # type: Optional[pfnopt.study.Study]\n",
        "target_code_len": 89,
        "diff_format": "@@ -28,3 +28,3 @@\n \n-_mode = None  # type: str\n+_mode = None  # type: Optional[str]\n _study = None  # type: Optional[pfnopt.study.Study]\n",
        "source_code_with_indent": "\n_mode = None  # type: str\n_study = None  # type: Optional[pfnopt.study.Study]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_mode = None  # type: Optional[str]\n_study = None  # type: Optional[pfnopt.study.Study]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/dashboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/dashboard.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/dashboard.py:298:24 Incompatible parameter type [6]: Expected `pfnopt.study.Study` for 1st positional only parameter to call `_DashboardApp.__init__` but got `Optional[pfnopt.study.Study]`.",
    "message": " Expected `pfnopt.study.Study` for 1st positional only parameter to call `_DashboardApp.__init__` but got `Optional[pfnopt.study.Study]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 298,
    "warning_line": "    app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))\n",
        "source_code_len": 72,
        "target_code": "\n    assert study is not None\n    app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))\n",
        "target_code_len": 101,
        "diff_format": "@@ -297,2 +304,3 @@\n \n+    assert study is not None\n     app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))\n",
        "source_code_with_indent": "\n    app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    assert study is not None\n    app = _DashboardApp(study, launch_update_thread=(mode == 'serve'))\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/base.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/base.py:189:8 Incompatible return type [7]: Expected `List[Tuple[float, float]]` but got `List[Tuple[float, typing.Optional[float]]]`.",
    "message": " Expected `List[Tuple[float, float]]` but got `List[Tuple[float, typing.Optional[float]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 189,
    "warning_line": "        return [",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            for t in all_trials\n            if param_name in t.params and t.state is structs.TrialState.COMPLETE\n            # TODO(Akiba): We also want to use pruned results\n",
        "source_code_len": 175,
        "target_code": "            for t in all_trials\n            if (t.value is not None and\n                param_name in t.params and\n                t.state is structs.TrialState.COMPLETE)\n            # TODO(Akiba): We also want to use pruned results\n",
        "target_code_len": 233,
        "diff_format": "@@ -191,3 +191,5 @@\n             for t in all_trials\n-            if param_name in t.params and t.state is structs.TrialState.COMPLETE\n+            if (t.value is not None and\n+                param_name in t.params and\n+                t.state is structs.TrialState.COMPLETE)\n             # TODO(Akiba): We also want to use pruned results\n",
        "source_code_with_indent": "            for t in all_trials\n            if param_name in t.params and t.state is structs.TrialState.COMPLETE\n            # TODO(Akiba): We also want to use pruned results\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            for t in all_trials\n            if (t.value is not None and\n                param_name in t.params and\n                t.state is structs.TrialState.COMPLETE)\n            # TODO(Akiba): We also want to use pruned results\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:78:73 Incompatible parameter type [6]: Expected `models.StudyModel` for 1st positional only parameter to call `models.StudyUserAttributeModel.find_by_study_and_key` but got `Optional[models.StudyModel]`.",
    "message": " Expected `models.StudyModel` for 1st positional only parameter to call `models.StudyUserAttributeModel.find_by_study_and_key` but got `Optional[models.StudyModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 78,
    "warning_line": "        attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)\n",
        "source_code_len": 176,
        "target_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)\n",
        "target_code_len": 210,
        "diff_format": "@@ -77,2 +78,4 @@\n         study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n+        assert study is not None\n+\n         attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)\n",
        "source_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        attribute = models.StudyUserAttributeModel.find_by_study_and_key(study, key, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:203:12 Incompatible parameter type [6]: Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamDistributionModel.find_by_trial_and_param_name` but got `Optional[models.TrialModel]`.",
    "message": " Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamDistributionModel.find_by_trial_and_param_name` but got `Optional[models.TrialModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 203,
    "warning_line": "            trial, param_name, session, allow_none=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_len": 330,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        assert param_distribution is not None\n\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "target_code_len": 411,
        "diff_format": "@@ -201,4 +211,8 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n+\n         param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n             trial, param_name, session, allow_none=False)\n+        assert param_distribution is not None\n+\n         param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        assert param_distribution is not None\n\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:204:68 Incompatible parameter type [6]: Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamModel.find_by_trial_and_param_name` but got `Optional[models.TrialModel]`.",
    "message": " Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamModel.find_by_trial_and_param_name` but got `Optional[models.TrialModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_len": 330,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        assert param_distribution is not None\n\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "target_code_len": 411,
        "diff_format": "@@ -201,4 +211,8 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n+\n         param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n             trial, param_name, session, allow_none=False)\n+        assert param_distribution is not None\n+\n         param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        param_distribution = models.TrialParamDistributionModel.find_by_trial_and_param_name(\n            trial, param_name, session, allow_none=False)\n        assert param_distribution is not None\n\n        param = models.TrialParamModel.find_by_trial_and_param_name(trial, param_name, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:235:68 Incompatible parameter type [6]: Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialValueModel.find_by_trial_and_step` but got `Optional[models.TrialModel]`.",
    "message": " Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialValueModel.find_by_trial_and_step` but got `Optional[models.TrialModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 235,
    "warning_line": "        trial_value = models.TrialValueModel.find_by_trial_and_step(trial, step, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n\n",
        "source_code_len": 83,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n",
        "target_code_len": 116,
        "diff_format": "@@ -233,2 +249,3 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n \n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:268:52 Incompatible parameter type [6]: Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamModel.where_trial` but got `Optional[models.TrialModel]`.",
    "message": " Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialParamModel.where_trial` but got `Optional[models.TrialModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 268,
    "warning_line": "        params = models.TrialParamModel.where_trial(trial, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_len": 150,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_len": 184,
        "diff_format": "@@ -267,2 +285,4 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n+\n         params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:269:52 Incompatible parameter type [6]: Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialValueModel.where_trial` but got `Optional[models.TrialModel]`.",
    "message": " Expected `models.TrialModel` for 1st positional only parameter to call `models.TrialValueModel.where_trial` but got `Optional[models.TrialModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 269,
    "warning_line": "        values = models.TrialValueModel.where_trial(trial, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_len": 150,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_len": 184,
        "diff_format": "@@ -267,2 +285,4 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n+\n         params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:271:38 Incompatible parameter type [6]: Expected `List[models.TrialModel]` for 1st positional only parameter to call `RDBStorage._merge_trials_orm` but got `List[Optional[models.TrialModel]]`.",
    "message": " Expected `List[models.TrialModel]` for 1st positional only parameter to call `RDBStorage._merge_trials_orm` but got `List[Optional[models.TrialModel]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 271,
    "warning_line": "        return self._merge_trials_orm([trial], params, values)[0]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_len": 150,
        "target_code": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_len": 184,
        "diff_format": "@@ -267,2 +285,4 @@\n         trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n+        assert trial is not None\n+\n         params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        trial = models.TrialModel.find_by_id(trial_id, session, allow_none=False)\n        assert trial is not None\n\n        params = models.TrialParamModel.where_trial(trial, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:279:47 Incompatible parameter type [6]: Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialModel.where_study` but got `Optional[models.StudyModel]`.",
    "message": " Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialModel.where_study` but got `Optional[models.StudyModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 279,
    "warning_line": "        trials = models.TrialModel.where_study(study, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_len": 145,
        "target_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_len": 179,
        "diff_format": "@@ -278,2 +298,4 @@\n         study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n+        assert study is not None\n+\n         trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:280:52 Incompatible parameter type [6]: Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialParamModel.where_study` but got `Optional[models.StudyModel]`.",
    "message": " Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialParamModel.where_study` but got `Optional[models.StudyModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 280,
    "warning_line": "        params = models.TrialParamModel.where_study(study, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_len": 145,
        "target_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_len": 179,
        "diff_format": "@@ -278,2 +298,4 @@\n         study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n+        assert study is not None\n+\n         trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/storages/rdb/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/storages/rdb/storage.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/storages/rdb/storage.py:281:52 Incompatible parameter type [6]: Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialValueModel.where_study` but got `Optional[models.StudyModel]`.",
    "message": " Expected `models.StudyModel` for 1st positional only parameter to call `models.TrialValueModel.where_study` but got `Optional[models.StudyModel]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 281,
    "warning_line": "        values = models.TrialValueModel.where_study(study, session)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_len": 145,
        "target_code": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_len": 179,
        "diff_format": "@@ -278,2 +298,4 @@\n         study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n+        assert study is not None\n+\n         trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        trials = models.TrialModel.where_study(study, session)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        study = models.StudyModel.find_by_id(study_id, session, allow_none=False)\n        assert study is not None\n\n        trials = models.TrialModel.where_study(study, session)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "pfnopt/study.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/pfnopt/study.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pfnopt/study.py:64:8 Incompatible return type [7]: Expected `float` but got `Optional[float]`.",
    "message": " Expected `float` but got `Optional[float]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 64,
    "warning_line": "        return self.best_trial.value",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        return self.best_trial.value\n\n",
        "source_code_len": 39,
        "target_code": "\n        best_value = self.best_trial.value\n        assert best_value is not None\n\n        return best_value\n\n",
        "target_code_len": 110,
        "diff_format": "@@ -63,3 +63,6 @@\n \n-        return self.best_trial.value\n+        best_value = self.best_trial.value\n+        assert best_value is not None\n+\n+        return best_value\n \n",
        "source_code_with_indent": "\n        <IND>return self.best_trial.value\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <IND>best_value = self.best_trial.value\n        assert best_value is not None\n\n        return best_value\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:371:24 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 371,
    "warning_line": "    assert datetime_1 < summaries[0].datetime_start < datetime_2"
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:371:24 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 371,
    "warning_line": "    assert datetime_1 < summaries[0].datetime_start < datetime_2"
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:372:43 Incompatible parameter type [6]: Expected `FrozenTrial` for 1st positional only parameter to call `_check_example_trial_static_attributes` but got `typing.Optional[FrozenTrial]`.",
    "message": " Expected `FrozenTrial` for 1st positional only parameter to call `_check_example_trial_static_attributes` but got `typing.Optional[FrozenTrial]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 372,
    "warning_line": "    _check_example_trial_static_attributes(summaries[0].best_trial, EXAMPLE_TRIALS[0])"
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:393:37 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 393,
    "warning_line": "            assert datetime_before < trial.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if trial.state.is_finished():\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_len": 113,
        "target_code": "        if trial.state.is_finished():\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_len": 220,
        "diff_format": "@@ -392,2 +394,4 @@\n         if trial.state.is_finished():\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is not None\n             assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:393:37 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 393,
    "warning_line": "            assert datetime_before < trial.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if trial.state.is_finished():\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_len": 113,
        "target_code": "        if trial.state.is_finished():\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_len": 220,
        "diff_format": "@@ -392,2 +394,4 @@\n         if trial.state.is_finished():\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is not None\n             assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:394:37 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 394,
    "warning_line": "            assert datetime_before < trial.datetime_complete < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if trial.state.is_finished():\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_len": 113,
        "target_code": "        if trial.state.is_finished():\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_len": 220,
        "diff_format": "@@ -392,2 +394,4 @@\n         if trial.state.is_finished():\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is not None\n             assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:394:37 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 394,
    "warning_line": "            assert datetime_before < trial.datetime_complete < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if trial.state.is_finished():\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_len": 113,
        "target_code": "        if trial.state.is_finished():\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_len": 220,
        "diff_format": "@@ -392,2 +394,4 @@\n         if trial.state.is_finished():\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is not None\n             assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if trial.state.is_finished():\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is not None\n            assert datetime_before < trial.datetime_start < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:396:37 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 396,
    "warning_line": "            assert datetime_before < trial.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            assert datetime_before < trial.datetime_start < datetime_after\n            assert trial.datetime_complete is None\n\n",
        "source_code_len": 141,
        "target_code": "        else:\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is None\n            assert datetime_before < trial.datetime_start < datetime_after\n\n",
        "target_code_len": 193,
        "diff_format": "@@ -395,4 +399,5 @@\n         else:\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is None\n             assert datetime_before < trial.datetime_start < datetime_after\n-            assert trial.datetime_complete is None\n \n",
        "source_code_with_indent": "        <DED>else:\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n            assert trial.datetime_complete is None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>else:\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is None\n            assert datetime_before < trial.datetime_start < datetime_after\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:396:37 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 396,
    "warning_line": "            assert datetime_before < trial.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            assert datetime_before < trial.datetime_start < datetime_after\n            assert trial.datetime_complete is None\n\n",
        "source_code_len": 141,
        "target_code": "        else:\n            assert trial.datetime_start is not None\n            assert trial.datetime_complete is None\n            assert datetime_before < trial.datetime_start < datetime_after\n\n",
        "target_code_len": 193,
        "diff_format": "@@ -395,4 +399,5 @@\n         else:\n+            assert trial.datetime_start is not None\n+            assert trial.datetime_complete is None\n             assert datetime_before < trial.datetime_start < datetime_after\n-            assert trial.datetime_complete is None\n \n",
        "source_code_with_indent": "        <DED>else:\n            <IND>assert datetime_before < trial.datetime_start < datetime_after\n            assert trial.datetime_complete is None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>else:\n            <IND>assert trial.datetime_start is not None\n            assert trial.datetime_complete is None\n            assert datetime_before < trial.datetime_start < datetime_after\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:424:33 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 424,
    "warning_line": "        assert datetime_before < t.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for t in trials:\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_len": 196,
        "target_code": "    for t in trials:\n        assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_len": 291,
        "diff_format": "@@ -423,4 +428,6 @@\n     for t in trials:\n+        assert t.datetime_start is not None\n         assert datetime_before < t.datetime_start < datetime_after\n         if t.state.is_finished():\n+            assert t.datetime_complete is not None\n             assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent": "    for t in trials:\n        <IND>assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    for t in trials:\n        <IND>assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:424:33 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 424,
    "warning_line": "        assert datetime_before < t.datetime_start < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for t in trials:\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_len": 196,
        "target_code": "    for t in trials:\n        assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_len": 291,
        "diff_format": "@@ -423,4 +428,6 @@\n     for t in trials:\n+        assert t.datetime_start is not None\n         assert datetime_before < t.datetime_start < datetime_after\n         if t.state.is_finished():\n+            assert t.datetime_complete is not None\n             assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent": "    for t in trials:\n        <IND>assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    for t in trials:\n        <IND>assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:426:37 Unsupported operand [58]: `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "message": " `<` is not supported for operand types `typing.Optional[datetime]` and `datetime`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 426,
    "warning_line": "            assert datetime_before < t.datetime_complete < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for t in trials:\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_len": 196,
        "target_code": "    for t in trials:\n        assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_len": 291,
        "diff_format": "@@ -423,4 +428,6 @@\n     for t in trials:\n+        assert t.datetime_start is not None\n         assert datetime_before < t.datetime_start < datetime_after\n         if t.state.is_finished():\n+            assert t.datetime_complete is not None\n             assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent": "    for t in trials:\n        <IND>assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    for t in trials:\n        <IND>assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:426:37 Unsupported operand [58]: `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "message": " `<` is not supported for operand types `datetime` and `typing.Optional[datetime]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 426,
    "warning_line": "            assert datetime_before < t.datetime_complete < datetime_after",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for t in trials:\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_len": 196,
        "target_code": "    for t in trials:\n        assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_len": 291,
        "diff_format": "@@ -423,4 +428,6 @@\n     for t in trials:\n+        assert t.datetime_start is not None\n         assert datetime_before < t.datetime_start < datetime_after\n         if t.state.is_finished():\n+            assert t.datetime_complete is not None\n             assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent": "    for t in trials:\n        <IND>assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert datetime_before < t.datetime_complete < datetime_after\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    for t in trials:\n        <IND>assert t.datetime_start is not None\n        assert datetime_before < t.datetime_start < datetime_after\n        if t.state.is_finished():\n            <IND>assert t.datetime_complete is not None\n            assert datetime_before < t.datetime_complete < datetime_after\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/storages_tests/test_storages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/storages_tests/test_storages.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/storages_tests/test_storages.py:440:38 Incompatible parameter type [6]: Expected `float` for 2nd positional only parameter to call `pfnopt.storages.base.BaseStorage.set_trial_value` but got `typing.Optional[float]`.",
    "message": " Expected `float` for 2nd positional only parameter to call `pfnopt.storages.base.BaseStorage.set_trial_value` but got `typing.Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 440,
    "warning_line": "    storage.set_trial_value(trial_id, example_trial.value)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    storage.set_trial_value(trial_id, example_trial.value)\n    storage.set_trial_state(trial_id, example_trial.state)\n",
        "source_code_len": 119,
        "target_code": "\n    if example_trial.value is not None:\n        storage.set_trial_value(trial_id, example_trial.value)\n    storage.set_trial_state(trial_id, example_trial.state)\n",
        "target_code_len": 163,
        "diff_format": "@@ -439,3 +446,4 @@\n \n-    storage.set_trial_value(trial_id, example_trial.value)\n+    if example_trial.value is not None:\n+        storage.set_trial_value(trial_id, example_trial.value)\n     storage.set_trial_state(trial_id, example_trial.state)\n",
        "source_code_with_indent": "\n    storage.set_trial_value(trial_id, example_trial.value)\n    storage.set_trial_state(trial_id, example_trial.state)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    if example_trial.value is not None:\n        <IND>storage.set_trial_value(trial_id, example_trial.value)\n    <DED>storage.set_trial_state(trial_id, example_trial.state)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/test_study.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/test_study.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_study.py:28:0 Incompatible variable type [9]: common_tempfile is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " common_tempfile is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 28,
    "warning_line": "common_tempfile = None  # type: IO[Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ncommon_tempfile = None  # type: IO[Any]\n\n",
        "source_code_len": 42,
        "target_code": "\ncommon_tempfile = None  # type: Optional[IO[Any]]\n\n",
        "target_code_len": 52,
        "diff_format": "@@ -27,3 +27,3 @@\n \n-common_tempfile = None  # type: IO[Any]\n+common_tempfile = None  # type: Optional[IO[Any]]\n \n",
        "source_code_with_indent": "\ncommon_tempfile = None  # type: IO[Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ncommon_tempfile = None  # type: Optional[IO[Any]]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    common_tempfile.close()\n",
        "source_code_len": 29,
        "target_code": "\n    assert common_tempfile is not None\n    common_tempfile.close()\n",
        "target_code_len": 68,
        "diff_format": "@@ -40,2 +40,3 @@\n \n+    assert common_tempfile is not None\n     common_tempfile.close()\n",
        "source_code_with_indent": "\n    <IND>common_tempfile.close()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>assert common_tempfile is not None\n    common_tempfile.close()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif self.storage_specifier == 'common':\n            url = 'sqlite:///{}'.format(common_tempfile.name)\n",
        "source_code_len": 111,
        "target_code": "        elif self.storage_specifier == 'common':\n            assert common_tempfile is not None\n            url = 'sqlite:///{}'.format(common_tempfile.name)\n",
        "target_code_len": 158,
        "diff_format": "@@ -61,2 +62,3 @@\n         elif self.storage_specifier == 'common':\n+            assert common_tempfile is not None\n             url = 'sqlite:///{}'.format(common_tempfile.name)\n",
        "source_code_with_indent": "        <DED>elif self.storage_specifier == 'common':\n            <IND>url = 'sqlite:///{}'.format(common_tempfile.name)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif self.storage_specifier == 'common':\n            <IND>assert common_tempfile is not None\n            url = 'sqlite:///{}'.format(common_tempfile.name)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/test_study.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/test_study.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_study.py:50:8 Incompatible attribute type [8]: Attribute `tempfile` declared in class `StorageSupplier` has type `IO[typing.Any]` but is used as type `None`.",
    "message": " Attribute `tempfile` declared in class `StorageSupplier` has type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 50,
    "warning_line": "        self.tempfile = None  # type: IO[Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.storage_specifier = storage_specifier\n        self.tempfile = None  # type: IO[Any]\n\n",
        "source_code_len": 98,
        "target_code": "        self.storage_specifier = storage_specifier\n        self.tempfile = None  # type: Optional[IO[Any]]\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -49,3 +50,3 @@\n         self.storage_specifier = storage_specifier\n-        self.tempfile = None  # type: IO[Any]\n+        self.tempfile = None  # type: Optional[IO[Any]]\n \n",
        "source_code_with_indent": "        <IND>self.storage_specifier = storage_specifier\n        self.tempfile = None  # type: IO[Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>self.storage_specifier = storage_specifier\n        self.tempfile = None  # type: Optional[IO[Any]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "optuna/optuna",
    "commit": "8917099bb57bb168116e0cb4343ddb82876abb04",
    "filename": "tests/test_study.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/test_study.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_study.py:128:20 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `check_value` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `check_value` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 128,
    "warning_line": "        check_value(frozen_trial.value)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_value(value):\n    # type: (float) -> None\n\n",
        "source_code_len": 53,
        "target_code": "def check_value(value):\n    # type: (Optional[float]) -> None\n\n",
        "target_code_len": 63,
        "diff_format": "@@ -116,3 +118,3 @@\n def check_value(value):\n-    # type: (float) -> None\n+    # type: (Optional[float]) -> None\n \n",
        "source_code_with_indent": "<DED>def check_value(value):\n    # type: (float) -> None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def check_value(value):\n    # type: (Optional[float]) -> None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]