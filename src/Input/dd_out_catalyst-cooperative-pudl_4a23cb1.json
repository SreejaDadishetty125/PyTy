[
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:360:0 Incompatible variable type [9]: FUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str]]]`.",
    "message": " FUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 360,
    "warning_line": "FUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_len": 138,
        "target_code": "\nFUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "target_code_len": 143,
        "diff_format": "@@ -359,3 +359,3 @@\n \n-FUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n+FUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n     'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_with_indent": "\nFUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nFUEL_TYPE_EIA923_GEN_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:373:0 Incompatible variable type [9]: FUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str, str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str]]]`.",
    "message": " FUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str, str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 373,
    "warning_line": "FUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_len": 134,
        "target_code": "\nFUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "target_code_len": 139,
        "diff_format": "@@ -372,3 +372,3 @@\n \n-FUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n+FUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n     'coal': ('ant', 'bit', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_with_indent": "\nFUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nFUEL_TYPE_EIA923_BOILER_FUEL_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:382:0 Incompatible variable type [9]: AER_FUEL_TYPE_STRINGS is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]`.",
    "message": " AER_FUEL_TYPE_STRINGS is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 382,
    "warning_line": "AER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nAER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str]] = {\n    'coal': ('col', 'woc', 'pc'),\n",
        "source_code_len": 84,
        "target_code": "\nAER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str, ...]] = {\n    'coal': ('col', 'woc', 'pc'),\n",
        "target_code_len": 89,
        "diff_format": "@@ -381,3 +381,3 @@\n \n-AER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str]] = {\n+AER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str, ...]] = {\n     'coal': ('col', 'woc', 'pc'),\n",
        "source_code_with_indent": "\nAER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str]] = {\n    'coal': ('col', 'woc', 'pc'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nAER_FUEL_TYPE_STRINGS: Dict[str, Tuple[str, ...]] = {\n    'coal': ('col', 'woc', 'pc'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:400:0 Incompatible variable type [9]: FUEL_TYPE_EIA860_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str], Tuple[str, str, str], Tuple[str, str, str, str], Tuple[str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]]]`.",
    "message": " FUEL_TYPE_EIA860_SIMPLE_MAP is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str], Tuple[str, str, str], Tuple[str, str, str, str], Tuple[str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 400,
    "warning_line": "FUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc', 'coal', 'petroleum coke', 'col', 'woc'),\n",
        "source_code_len": 169,
        "target_code": "\nFUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc', 'coal', 'petroleum coke', 'col', 'woc'),\n",
        "target_code_len": 174,
        "diff_format": "@@ -399,3 +399,3 @@\n \n-FUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n+FUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n     'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc', 'coal', 'petroleum coke', 'col', 'woc'),\n",
        "source_code_with_indent": "\nFUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc', 'coal', 'petroleum coke', 'col', 'woc'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nFUEL_TYPE_EIA860_SIMPLE_MAP: Dict[str, Tuple[str, ...]] = {\n    'coal': ('ant', 'bit', 'cbl', 'lig', 'pc', 'rc', 'sc', 'sub', 'wc', 'coal', 'petroleum coke', 'col', 'woc'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:534:0 Incompatible variable type [9]: WORKING_PARTITIONS is declared to have type `Dict[str, Union[str, typing.Tuple[typing.Any, ...]]]` but is used as type `Dict[str, Union[Dict[str, str], Dict[str, typing.Tuple[Union[int, str], ...]], Dict[str, typing.Tuple[int, ...]], Dict[Variable[_KT], Variable[_VT]]]]`.",
    "message": " WORKING_PARTITIONS is declared to have type `Dict[str, Union[str, typing.Tuple[typing.Any, ...]]]` but is used as type `Dict[str, Union[Dict[str, str], Dict[str, typing.Tuple[Union[int, str], ...]], Dict[str, typing.Tuple[int, ...]], Dict[Variable[_KT], Variable[_VT]]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 534,
    "warning_line": "WORKING_PARTITIONS: Dict[str, Union[str, Tuple]] = {"
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/constants.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/constants.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/constants.py:568:0 Incompatible variable type [9]: PUDL_TABLES is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str, str, str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], str]]`.",
    "message": " PUDL_TABLES is declared to have type `Dict[str, Tuple[str]]` but is used as type `Dict[str, Union[Tuple[str, str, str, str], Tuple[str, str, str, str, str], Tuple[str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], str]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 568,
    "warning_line": "PUDL_TABLES: Dict[str, Tuple[str]] = {"
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/metadata/helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/metadata/helpers.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/metadata/helpers.py:119:72 Incompatible parameter type [6]: Expected `typing_extensions.Literal[0]` for 1st positional only parameter to call `tuple.__getitem__` but got `typing_extensions.Literal['fields']`.",
    "message": " Expected `typing_extensions.Literal[0]` for 1st positional only parameter to call `tuple.__getitem__` but got `typing_extensions.Literal['fields']`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 119,
    "warning_line": "                    fields[ref[\"fields\"].index(field)] for field in key[\"fields\"]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str], dict]]:\n    \"\"\"\n",
        "source_code_len": 79,
        "target_code": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n    \"\"\"\n",
        "target_code_len": 84,
        "diff_format": "@@ -55,3 +55,3 @@\n     resources: Dict[str, dict]\n-) -> Dict[str, Dict[Tuple[str], dict]]:\n+) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str], dict]]:\n    <IND>",
        "target_code_with_indent": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str], dict]],\n    name: str,\n    fields: Tuple[str]\n) -> List[Tuple[tuple, str, tuple]]:\n    \"\"\"\n",
        "source_code_len": 160,
        "target_code": "def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n    name: str,\n    fields: Tuple[str, ...]\n) -> List[Dict[str, Any]]:\n    \"\"\"\n",
        "target_code_len": 160,
        "diff_format": "@@ -88,6 +88,6 @@\n def _traverse_foreign_key_tree(\n-    tree: Dict[str, Dict[Tuple[str], dict]],\n+    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n     name: str,\n-    fields: Tuple[str]\n-) -> List[Tuple[tuple, str, tuple]]:\n+    fields: Tuple[str, ...]\n+) -> List[Dict[str, Any]]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str], dict]],\n    name: str,\n    fields: Tuple[str]\n) -> List[Tuple[tuple, str, tuple]]:\n    <IND>",
        "target_code_with_indent": "<DED>def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n    name: str,\n    fields: Tuple[str, ...]\n) -> List[Dict[str, Any]]:\n    <IND>"
      }
    ]
  },
  {
    "project": "catalyst-cooperative/pudl",
    "commit": "4a23cb1d6b846a9647a0804f332b4777427ac4e6",
    "filename": "src/pudl/metadata/helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/catalyst-cooperative-pudl/src/pudl/metadata/helpers.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pudl/metadata/helpers.py:121:71 Incompatible parameter type [6]: Expected `typing_extensions.Literal[0]` for 1st positional only parameter to call `tuple.__getitem__` but got `typing_extensions.Literal['reference']`.",
    "message": " Expected `typing_extensions.Literal[0]` for 1st positional only parameter to call `tuple.__getitem__` but got `typing_extensions.Literal['reference']`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 121,
    "warning_line": "                keys.append({\"fields\": mapped_fields, \"reference\": key[\"reference\"]})",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str], dict]]:\n    \"\"\"\n",
        "source_code_len": 79,
        "target_code": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n    \"\"\"\n",
        "target_code_len": 84,
        "diff_format": "@@ -55,3 +55,3 @@\n     resources: Dict[str, dict]\n-) -> Dict[str, Dict[Tuple[str], dict]]:\n+) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str], dict]]:\n    <IND>",
        "target_code_with_indent": "    resources: Dict[str, dict]\n) -> Dict[str, Dict[Tuple[str, ...], dict]]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str], dict]],\n    name: str,\n    fields: Tuple[str]\n) -> List[Tuple[tuple, str, tuple]]:\n    \"\"\"\n",
        "source_code_len": 160,
        "target_code": "def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n    name: str,\n    fields: Tuple[str, ...]\n) -> List[Dict[str, Any]]:\n    \"\"\"\n",
        "target_code_len": 160,
        "diff_format": "@@ -88,6 +88,6 @@\n def _traverse_foreign_key_tree(\n-    tree: Dict[str, Dict[Tuple[str], dict]],\n+    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n     name: str,\n-    fields: Tuple[str]\n-) -> List[Tuple[tuple, str, tuple]]:\n+    fields: Tuple[str, ...]\n+) -> List[Dict[str, Any]]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str], dict]],\n    name: str,\n    fields: Tuple[str]\n) -> List[Tuple[tuple, str, tuple]]:\n    <IND>",
        "target_code_with_indent": "<DED>def _traverse_foreign_key_tree(\n    tree: Dict[str, Dict[Tuple[str, ...], dict]],\n    name: str,\n    fields: Tuple[str, ...]\n) -> List[Dict[str, Any]]:\n    <IND>"
      }
    ]
  }
]