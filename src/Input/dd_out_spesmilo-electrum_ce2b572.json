[
  {
    "project": "spesmilo/electrum",
    "commit": "ce2b572fa5a97a4686e92d9eaca7c3a95ece02ec",
    "filename": "electrum/lnchan.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spesmilo-electrum/electrum/lnchan.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "electrum/lnchan.py:784:108 Invalid type [31]: Expression `(bytes, int)` is not a valid type.",
    "message": " Expression `(bytes, int)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 784,
    "warning_line": "    def make_closing_tx(self, local_script: bytes, remote_script: bytes, fee_sat: Optional[int] = None) -> (bytes, int):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def make_closing_tx(self, local_script: bytes, remote_script: bytes, fee_sat: Optional[int] = None) -> (bytes, int):\n        if fee_sat is None:\n",
        "source_code_len": 150,
        "target_code": "\n    def make_closing_tx(self, local_script: bytes, remote_script: bytes,\n                        fee_sat: Optional[int]=None) -> Tuple[bytes, int, str]:\n        if fee_sat is None:\n",
        "target_code_len": 182,
        "diff_format": "@@ -783,3 +783,4 @@\n \n-    def make_closing_tx(self, local_script: bytes, remote_script: bytes, fee_sat: Optional[int] = None) -> (bytes, int):\n+    def make_closing_tx(self, local_script: bytes, remote_script: bytes,\n+                        fee_sat: Optional[int]=None) -> Tuple[bytes, int, str]:\n         if fee_sat is None:\n",
        "source_code_with_indent": "\n    <DED>def make_closing_tx(self, local_script: bytes, remote_script: bytes, fee_sat: Optional[int] = None) -> (bytes, int):\n        <IND>if fee_sat is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def make_closing_tx(self, local_script: bytes, remote_script: bytes,\n                        fee_sat: Optional[int]=None) -> Tuple[bytes, int, str]:\n        <IND>if fee_sat is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]