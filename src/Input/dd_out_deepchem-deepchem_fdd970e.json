[
  {
    "project": "deepchem/deepchem",
    "commit": "fdd970ea5973cd84e86eca3c35bd4ec668b105ab",
    "filename": "deepchem/utils/rdkit_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/utils/rdkit_utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/utils/rdkit_utils.py:652:2 Incompatible return type [7]: Expected `Dict[Tuple[int], Tuple[int]]` but got `Dict[Tuple[int, int], typing.Any]`.",
    "message": " Expected `Dict[Tuple[int], Tuple[int]]` but got `Dict[Tuple[int, int], typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 652,
    "warning_line": "  return paths_dict",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef compute_all_pairs_shortest_path(mol) -> Dict[Tuple[int], Tuple[int]]:\n  \"\"\"Computes the All pair shortest between every pair of nodes\n",
        "source_code_len": 139,
        "target_code": "\ndef compute_all_pairs_shortest_path(\n    mol) -> Dict[Tuple[int, int], Tuple[int, int]]:\n  \"\"\"Computes the All pair shortest between every pair of nodes\n",
        "target_code_len": 154,
        "diff_format": "@@ -630,3 +630,4 @@\n \n-def compute_all_pairs_shortest_path(mol) -> Dict[Tuple[int], Tuple[int]]:\n+def compute_all_pairs_shortest_path(\n+    mol) -> Dict[Tuple[int, int], Tuple[int, int]]:\n   \"\"\"Computes the All pair shortest between every pair of nodes\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def compute_all_pairs_shortest_path(mol) -> Dict[Tuple[int], Tuple[int]]:\n  <IND>",
        "target_code_with_indent": "\n<DED>def compute_all_pairs_shortest_path(\n    mol) -> Dict[Tuple[int, int], Tuple[int, int]]:\n  <IND>"
      }
    ]
  }
]