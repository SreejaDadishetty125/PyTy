[
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/api/views/instance.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/api/views/instance.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/api/views/instance.py:309:12 Incompatible parameter type [6]: Expected `marathon_tools.MarathonDeployStatus` for 4th positional only parameter to call `marathon_app_status` but got `int`.",
    "message": " Expected `marathon_tools.MarathonDeployStatus` for 4th positional only parameter to call `marathon_app_status` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 309,
    "warning_line": "            deploy_status,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    dashboard_link: Optional[str],\n    deploy_status: marathon_tools.MarathonDeployStatus,\n    list_tasks: bool = False,\n",
        "source_code_len": 121,
        "target_code": "    dashboard_link: Optional[str],\n    deploy_status: int,\n    list_tasks: bool = False,\n",
        "target_code_len": 89,
        "diff_format": "@@ -341,3 +341,3 @@\n     dashboard_link: Optional[str],\n-    deploy_status: marathon_tools.MarathonDeployStatus,\n+    deploy_status: int,\n     list_tasks: bool = False,\n",
        "source_code_with_indent": "    dashboard_link: Optional[str],\n    deploy_status: marathon_tools.MarathonDeployStatus,\n    list_tasks: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    dashboard_link: Optional[str],\n    deploy_status: int,\n    list_tasks: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/api/views/instance.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/api/views/instance.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/api/views/instance.py:351:70 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `marathon_tools.MarathonDeployStatus.tostring` but got `marathon_tools.MarathonDeployStatus`.",
    "message": " Expected `int` for 1st positional only parameter to call `marathon_tools.MarathonDeployStatus.tostring` but got `marathon_tools.MarathonDeployStatus`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 351,
    "warning_line": "        \"deploy_status\": marathon_tools.MarathonDeployStatus.tostring(deploy_status),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    dashboard_link: Optional[str],\n    deploy_status: marathon_tools.MarathonDeployStatus,\n    list_tasks: bool = False,\n",
        "source_code_len": 121,
        "target_code": "    dashboard_link: Optional[str],\n    deploy_status: int,\n    list_tasks: bool = False,\n",
        "target_code_len": 89,
        "diff_format": "@@ -341,3 +341,3 @@\n     dashboard_link: Optional[str],\n-    deploy_status: marathon_tools.MarathonDeployStatus,\n+    deploy_status: int,\n     list_tasks: bool = False,\n",
        "source_code_with_indent": "    dashboard_link: Optional[str],\n    deploy_status: marathon_tools.MarathonDeployStatus,\n    list_tasks: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    dashboard_link: Optional[str],\n    deploy_status: int,\n    list_tasks: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/api/views/instance.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/api/views/instance.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/api/views/instance.py:404:40 Incompatible parameter type [6]: Expected `Optional[Tuple[str, List[str]]]` for 2nd parameter `whitelist` to call `get_all_slaves_for_blacklist_whitelist` but got `List[Variable[_T]]`.",
    "message": " Expected `Optional[Tuple[str, List[str]]]` for 2nd parameter `whitelist` to call `get_all_slaves_for_blacklist_whitelist` but got `List[Variable[_T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 404,
    "warning_line": "        blacklist=monitoring_blacklist, whitelist=[]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    filtered_slaves = get_all_slaves_for_blacklist_whitelist(\n        blacklist=monitoring_blacklist, whitelist=[]\n    )\n",
        "source_code_len": 121,
        "target_code": "    filtered_slaves = get_all_slaves_for_blacklist_whitelist(\n        blacklist=monitoring_blacklist, whitelist=None\n    )\n",
        "target_code_len": 123,
        "diff_format": "@@ -403,3 +403,3 @@\n     filtered_slaves = get_all_slaves_for_blacklist_whitelist(\n-        blacklist=monitoring_blacklist, whitelist=[]\n+        blacklist=monitoring_blacklist, whitelist=None\n     )\n",
        "source_code_with_indent": "    filtered_slaves = get_all_slaves_for_blacklist_whitelist(\n        blacklist=monitoring_blacklist, whitelist=[]\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    filtered_slaves = get_all_slaves_for_blacklist_whitelist(\n        blacklist=monitoring_blacklist, whitelist=None\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/api/views/instance.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/api/views/instance.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/api/views/instance.py:601:61 Incompatible parameter type [6]: Expected `typing.SupportsRound[typing.Any]` for 1st positional only parameter to call `round` but got `str`.",
    "message": " Expected `typing.SupportsRound[typing.Any]` for 1st positional only parameter to call `round` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 601,
    "warning_line": "        task_dict[\"duration_seconds\"] = current_time - round(task_start_time)"
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/mesos_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/mesos_tools.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/mesos_tools.py:282:8 Incompatible return type [7]: Expected `Optional[str]` but got `float`.",
    "message": " Expected `Optional[str]` but got `float`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 282,
    "warning_line": "        return float(start_time_string)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_first_status_timestamp(task: Task) -> Optional[str]:\n    try:\n",
        "source_code_len": 71,
        "target_code": "\ndef get_first_status_timestamp(task: Task) -> Optional[float]:\n    try:\n",
        "target_code_len": 73,
        "diff_format": "@@ -278,3 +278,3 @@\n \n-def get_first_status_timestamp(task: Task) -> Optional[str]:\n+def get_first_status_timestamp(task: Task) -> Optional[float]:\n     try:\n",
        "source_code_with_indent": "\n<DED><DED>def get_first_status_timestamp(task: Task) -> Optional[str]:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def get_first_status_timestamp(task: Task) -> Optional[float]:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/mesos_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/mesos_tools.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/mesos_tools.py:296:64 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `datetime.datetime.fromtimestamp` but got `str`.",
    "message": " Expected `float` for 1st positional only parameter to call `datetime.datetime.fromtimestamp` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 296,
    "warning_line": "        first_status_datetime = datetime.datetime.fromtimestamp(first_status_timestamp)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_first_status_timestamp(task: Task) -> Optional[str]:\n    try:\n",
        "source_code_len": 71,
        "target_code": "\ndef get_first_status_timestamp(task: Task) -> Optional[float]:\n    try:\n",
        "target_code_len": 73,
        "diff_format": "@@ -278,3 +278,3 @@\n \n-def get_first_status_timestamp(task: Task) -> Optional[str]:\n+def get_first_status_timestamp(task: Task) -> Optional[float]:\n     try:\n",
        "source_code_with_indent": "\n<DED><DED>def get_first_status_timestamp(task: Task) -> Optional[str]:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def get_first_status_timestamp(task: Task) -> Optional[float]:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "bca4105e68f85642939d28abe9aa87a55ef1513a",
    "filename": "paasta_tools/mesos_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/mesos_tools.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/mesos_tools.py:455:4 Incompatible return type [7]: Expected `MutableMapping[str, Sequence[str]]` but got `Dict[str, List[str]]`.",
    "message": " Expected `MutableMapping[str, Sequence[str]]` but got `Dict[str, List[str]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 455,
    "warning_line": "    return tail_lines_dict",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ") -> MutableMapping[str, Sequence[str]]:\n    tail_lines_dict: Dict[str, List[str]] = {}\n    mesos_cli_config = get_mesos_config()\n",
        "source_code_len": 130,
        "target_code": ") -> MutableMapping[str, Sequence[str]]:\n    tail_lines_dict: MutableMapping[str, Sequence[str]] = {}\n    mesos_cli_config = get_mesos_config()\n",
        "target_code_len": 144,
        "diff_format": "@@ -412,3 +412,3 @@\n ) -> MutableMapping[str, Sequence[str]]:\n-    tail_lines_dict: Dict[str, List[str]] = {}\n+    tail_lines_dict: MutableMapping[str, Sequence[str]] = {}\n     mesos_cli_config = get_mesos_config()\n",
        "source_code_with_indent": ") -> MutableMapping[str, Sequence[str]]:\n    <IND>tail_lines_dict: Dict[str, List[str]] = {}\n    mesos_cli_config = get_mesos_config()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ") -> MutableMapping[str, Sequence[str]]:\n    <IND>tail_lines_dict: MutableMapping[str, Sequence[str]] = {}\n    mesos_cli_config = get_mesos_config()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]