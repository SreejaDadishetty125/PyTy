[
  {
    "project": "r-anime/holo",
    "commit": "92dbaf41501b2e2ceb2138881ee1c437d97562bd",
    "filename": "src/data/database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/r-anime-holo/src/data/database.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/data/database.py:182:57 Invalid type [31]: Expression `typing.List(src.data.models.Service)` is not a valid type.",
    "message": " Expression `typing.List(src.data.models.Service)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 182,
    "warning_line": "\tdef get_services(self, enabled=True, disabled=False) -> List(Service):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\t@db_error_default(list())\n\tdef get_services(self, enabled=True, disabled=False) -> List(Service):\n\t\tservices = list()\n",
        "source_code_len": 119,
        "target_code": "\t@db_error_default(list())\n\tdef get_services(self, enabled=True, disabled=False) -> List[Service]:\n\t\tservices = list()\n",
        "target_code_len": 119,
        "diff_format": "@@ -181,3 +181,3 @@\n \t@db_error_default(list())\n-\tdef get_services(self, enabled=True, disabled=False) -> List(Service):\n+\tdef get_services(self, enabled=True, disabled=False) -> List[Service]:\n \t\tservices = list()\n",
        "source_code_with_indent": " <DED>@db_error_default(list())\n def get_services(self, enabled=True, disabled=False) -> List(Service):\n\t\t<IND>services = list()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": " <DED>@db_error_default(list())\n def get_services(self, enabled=True, disabled=False) -> List[Service]:\n\t\t<IND>services = list()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "r-anime/holo",
    "commit": "92dbaf41501b2e2ceb2138881ee1c437d97562bd",
    "filename": "src/data/database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/r-anime-holo/src/data/database.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/data/database.py:222:101 Invalid type [31]: Expression `typing.List(src.data.models.Stream)` is not a valid type.",
    "message": " Expression `typing.List(src.data.models.Stream)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 222,
    "warning_line": "\tdef get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List(Stream):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\t@db_error_default(list())\n\tdef get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List(Stream):\n\t\t# Not the best combination of options, but it's only the usage needed\n",
        "source_code_len": 214,
        "target_code": "\t@db_error_default(list())\n\tdef get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List[Stream]:\n\t\t# Not the best combination of options, but it's only the usage needed\n",
        "target_code_len": 214,
        "diff_format": "@@ -221,3 +221,3 @@\n \t@db_error_default(list())\n-\tdef get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List(Stream):\n+\tdef get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List[Stream]:\n \t\t# Not the best combination of options, but it's only the usage needed\n",
        "source_code_with_indent": " <DED><DED>@db_error_default(list())\n def get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List(Stream):\n  # Not the best combination of options, but it's only the usage needed\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": " <DED><DED>@db_error_default(list())\n def get_streams(self, service=None, show=None, active=True, unmatched=False, missing_name=False) -> List[Stream]:\n  # Not the best combination of options, but it's only the usage needed\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "r-anime/holo",
    "commit": "92dbaf41501b2e2ceb2138881ee1c437d97562bd",
    "filename": "src/data/database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/r-anime-holo/src/data/database.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/data/database.py:300:59 Invalid type [31]: Expression `typing.List(src.data.models.LinkSite)` is not a valid type.",
    "message": " Expression `typing.List(src.data.models.LinkSite)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 300,
    "warning_line": "\tdef get_link_sites(self, enabled=True, disabled=False) -> List(LinkSite):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\t@db_error_default(list())\n\tdef get_link_sites(self, enabled=True, disabled=False) -> List(LinkSite):\n\t\tsites = list()\n",
        "source_code_len": 119,
        "target_code": "\t@db_error_default(list())\n\tdef get_link_sites(self, enabled=True, disabled=False) -> List[LinkSite]:\n\t\tsites = list()\n",
        "target_code_len": 119,
        "diff_format": "@@ -299,3 +299,3 @@\n \t@db_error_default(list())\n-\tdef get_link_sites(self, enabled=True, disabled=False) -> List(LinkSite):\n+\tdef get_link_sites(self, enabled=True, disabled=False) -> List[LinkSite]:\n \t\tsites = list()\n",
        "source_code_with_indent": " <DED>@db_error_default(list())\n def get_link_sites(self, enabled=True, disabled=False) -> List(LinkSite):\n\t\t<IND>sites = list()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": " <DED>@db_error_default(list())\n def get_link_sites(self, enabled=True, disabled=False) -> List[LinkSite]:\n\t\t<IND>sites = list()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "r-anime/holo",
    "commit": "92dbaf41501b2e2ceb2138881ee1c437d97562bd",
    "filename": "src/data/database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/r-anime-holo/src/data/database.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/data/database.py:313:40 Invalid type [31]: Expression `typing.List(src.data.models.Link)` is not a valid type.",
    "message": " Expression `typing.List(src.data.models.Link)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 313,
    "warning_line": "\tdef get_links(self, show:Show=None) -> List(Link):"
  }
]