[
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/core/query.py",
    "min_patch_found": false,
    "full_warning_msg": "bokeh/core/query.py:176:23 Unsupported operand [58]: `not in` is not supported for right operand type `bokeh.core.property.container.List`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/core/query.py",
    "min_patch_found": false,
    "full_warning_msg": "bokeh/core/query.py:179:46 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `bokeh.core.property.container.List`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/core/query.py",
    "min_patch_found": false,
    "full_warning_msg": "bokeh/core/query.py:181:27 Unsupported operand [58]: `not in` is not supported for right operand type `bokeh.core.property.container.List`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/io/export.py",
    "min_patch_found": false,
    "full_warning_msg": "bokeh/io/export.py:284:16 Incompatible attribute type [8]: Attribute `plot_width` declared in class `Plot` has type `bokeh.core.property.primitive.Int` but is used as type `int`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/io/export.py",
    "min_patch_found": false,
    "full_warning_msg": "bokeh/io/export.py:286:16 Incompatible attribute type [8]: Attribute `plot_height` declared in class `Plot` has type `bokeh.core.property.primitive.Int` but is used as type `int`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:84:8 Incompatible attribute type [8]: Attribute `active_drag` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Drag, str]`.",
    "message": " Attribute `active_drag` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Drag, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 84,
    "warning_line": "        toolbar.active_drag = active_drag",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        toolbar.active_drag = active_drag\n    elif active_drag in tool_map:\n        toolbar.active_drag = tool_map[active_drag]\n    else:\n",
        "source_code_len": 209,
        "target_code": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        toolbar.active_drag = cast(Any, active_drag)\n    elif active_drag in tool_map:\n        toolbar.active_drag = cast(Any, tool_map[active_drag])\n    else:\n",
        "target_code_len": 231,
        "diff_format": "@@ -83,5 +84,5 @@\n     if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n-        toolbar.active_drag = active_drag\n+        toolbar.active_drag = cast(Any, active_drag)\n     elif active_drag in tool_map:\n-        toolbar.active_drag = tool_map[active_drag]\n+        toolbar.active_drag = cast(Any, tool_map[active_drag])\n     else:\n",
        "source_code_with_indent": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        <IND>toolbar.active_drag = active_drag\n    <DED>elif active_drag in tool_map:\n        <IND>toolbar.active_drag = tool_map[active_drag]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        <IND>toolbar.active_drag = cast(Any, active_drag)\n    <DED>elif active_drag in tool_map:\n        <IND>toolbar.active_drag = cast(Any, tool_map[active_drag])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:86:8 Incompatible attribute type [8]: Attribute `active_drag` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "message": " Attribute `active_drag` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 86,
    "warning_line": "        toolbar.active_drag = tool_map[active_drag]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        toolbar.active_drag = active_drag\n    elif active_drag in tool_map:\n        toolbar.active_drag = tool_map[active_drag]\n    else:\n",
        "source_code_len": 209,
        "target_code": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        toolbar.active_drag = cast(Any, active_drag)\n    elif active_drag in tool_map:\n        toolbar.active_drag = cast(Any, tool_map[active_drag])\n    else:\n",
        "target_code_len": 231,
        "diff_format": "@@ -83,5 +84,5 @@\n     if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n-        toolbar.active_drag = active_drag\n+        toolbar.active_drag = cast(Any, active_drag)\n     elif active_drag in tool_map:\n-        toolbar.active_drag = tool_map[active_drag]\n+        toolbar.active_drag = cast(Any, tool_map[active_drag])\n     else:\n",
        "source_code_with_indent": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        <IND>toolbar.active_drag = active_drag\n    <DED>elif active_drag in tool_map:\n        <IND>toolbar.active_drag = tool_map[active_drag]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    if active_drag in ['auto', None] or isinstance(active_drag, Tool):\n        <IND>toolbar.active_drag = cast(Any, active_drag)\n    <DED>elif active_drag in tool_map:\n        <IND>toolbar.active_drag = cast(Any, tool_map[active_drag])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:92:8 Incompatible attribute type [8]: Attribute `active_inspect` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, List[InspectTool], InspectTool, str]`.",
    "message": " Attribute `active_inspect` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, List[InspectTool], InspectTool, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 92,
    "warning_line": "        toolbar.active_inspect = active_inspect",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        toolbar.active_inspect = active_inspect\n    elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        toolbar.active_inspect = tool_map[active_inspect]\n    else:\n",
        "source_code_len": 290,
        "target_code": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        toolbar.active_inspect = cast(Any, active_inspect)\n    elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n    else:\n",
        "target_code_len": 312,
        "diff_format": "@@ -91,5 +92,5 @@\n             (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n-        toolbar.active_inspect = active_inspect\n+        toolbar.active_inspect = cast(Any, active_inspect)\n     elif isinstance(active_inspect, str) and active_inspect in tool_map:\n-        toolbar.active_inspect = tool_map[active_inspect]\n+        toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n     else:\n",
        "source_code_with_indent": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        <IND>toolbar.active_inspect = active_inspect\n    <DED>elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        <IND>toolbar.active_inspect = tool_map[active_inspect]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        <IND>toolbar.active_inspect = cast(Any, active_inspect)\n    <DED>elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        <IND>toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:94:8 Incompatible attribute type [8]: Attribute `active_inspect` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "message": " Attribute `active_inspect` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 94,
    "warning_line": "        toolbar.active_inspect = tool_map[active_inspect]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        toolbar.active_inspect = active_inspect\n    elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        toolbar.active_inspect = tool_map[active_inspect]\n    else:\n",
        "source_code_len": 290,
        "target_code": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        toolbar.active_inspect = cast(Any, active_inspect)\n    elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n    else:\n",
        "target_code_len": 312,
        "diff_format": "@@ -91,5 +92,5 @@\n             (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n-        toolbar.active_inspect = active_inspect\n+        toolbar.active_inspect = cast(Any, active_inspect)\n     elif isinstance(active_inspect, str) and active_inspect in tool_map:\n-        toolbar.active_inspect = tool_map[active_inspect]\n+        toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n     else:\n",
        "source_code_with_indent": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        <IND>toolbar.active_inspect = active_inspect\n    <DED>elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        <IND>toolbar.active_inspect = tool_map[active_inspect]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            (isinstance(active_inspect, list) and all(isinstance(t, Tool) for t in active_inspect)):\n        <IND>toolbar.active_inspect = cast(Any, active_inspect)\n    <DED>elif isinstance(active_inspect, str) and active_inspect in tool_map:\n        <IND>toolbar.active_inspect = cast(Any, tool_map[active_inspect])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:99:8 Incompatible attribute type [8]: Attribute `active_scroll` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Scroll, str]`.",
    "message": " Attribute `active_scroll` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Scroll, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 99,
    "warning_line": "        toolbar.active_scroll = active_scroll",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        toolbar.active_scroll = active_scroll\n    elif active_scroll in tool_map:\n        toolbar.active_scroll = tool_map[active_scroll]\n    else:\n",
        "source_code_len": 223,
        "target_code": "    if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        toolbar.active_scroll = cast(Any, active_scroll)\n    elif active_scroll in tool_map:\n        toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n    else:\n",
        "target_code_len": 245,
        "diff_format": "@@ -98,5 +99,5 @@\n     if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n-        toolbar.active_scroll = active_scroll\n+        toolbar.active_scroll = cast(Any, active_scroll)\n     elif active_scroll in tool_map:\n-        toolbar.active_scroll = tool_map[active_scroll]\n+        toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n     else:\n",
        "source_code_with_indent": "    <DED>if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        <IND>toolbar.active_scroll = active_scroll\n    <DED>elif active_scroll in tool_map:\n        <IND>toolbar.active_scroll = tool_map[active_scroll]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        <IND>toolbar.active_scroll = cast(Any, active_scroll)\n    <DED>elif active_scroll in tool_map:\n        <IND>toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:101:8 Incompatible attribute type [8]: Attribute `active_scroll` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "message": " Attribute `active_scroll` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 101,
    "warning_line": "        toolbar.active_scroll = tool_map[active_scroll]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        toolbar.active_scroll = active_scroll\n    elif active_scroll in tool_map:\n        toolbar.active_scroll = tool_map[active_scroll]\n    else:\n",
        "source_code_len": 223,
        "target_code": "    if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        toolbar.active_scroll = cast(Any, active_scroll)\n    elif active_scroll in tool_map:\n        toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n    else:\n",
        "target_code_len": 245,
        "diff_format": "@@ -98,5 +99,5 @@\n     if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n-        toolbar.active_scroll = active_scroll\n+        toolbar.active_scroll = cast(Any, active_scroll)\n     elif active_scroll in tool_map:\n-        toolbar.active_scroll = tool_map[active_scroll]\n+        toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n     else:\n",
        "source_code_with_indent": "    <DED>if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        <IND>toolbar.active_scroll = active_scroll\n    <DED>elif active_scroll in tool_map:\n        <IND>toolbar.active_scroll = tool_map[active_scroll]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if active_scroll in ['auto', None] or isinstance(active_scroll, Tool):\n        <IND>toolbar.active_scroll = cast(Any, active_scroll)\n    <DED>elif active_scroll in tool_map:\n        <IND>toolbar.active_scroll = cast(Any, tool_map[active_scroll])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:106:8 Incompatible attribute type [8]: Attribute `active_tap` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Tap, str]`.",
    "message": " Attribute `active_tap` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `Union[None, Tap, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 106,
    "warning_line": "        toolbar.active_tap = active_tap",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        toolbar.active_tap = active_tap\n    elif active_tap in tool_map:\n        toolbar.active_tap = tool_map[active_tap]\n    else:\n",
        "source_code_len": 202,
        "target_code": "    if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        toolbar.active_tap = cast(Any, active_tap)\n    elif active_tap in tool_map:\n        toolbar.active_tap = cast(Any, tool_map[active_tap])\n    else:\n",
        "target_code_len": 224,
        "diff_format": "@@ -105,5 +106,5 @@\n     if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n-        toolbar.active_tap = active_tap\n+        toolbar.active_tap = cast(Any, active_tap)\n     elif active_tap in tool_map:\n-        toolbar.active_tap = tool_map[active_tap]\n+        toolbar.active_tap = cast(Any, tool_map[active_tap])\n     else:\n",
        "source_code_with_indent": "    <DED>if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        <IND>toolbar.active_tap = active_tap\n    <DED>elif active_tap in tool_map:\n        <IND>toolbar.active_tap = tool_map[active_tap]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        <IND>toolbar.active_tap = cast(Any, active_tap)\n    <DED>elif active_tap in tool_map:\n        <IND>toolbar.active_tap = cast(Any, tool_map[active_tap])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "dbbfd2724eddcd1f797031915f728536f57791ef",
    "filename": "bokeh/plotting/_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/plotting/_tools.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/plotting/_tools.py:108:8 Incompatible attribute type [8]: Attribute `active_tap` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "message": " Attribute `active_tap` declared in class `bokeh.models.tools.Toolbar` has type `bokeh.core.property.either.Either` but is used as type `bokeh.models.tools.Tool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 108,
    "warning_line": "        toolbar.active_tap = tool_map[active_tap]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Union,\n)\n",
        "source_code_len": 13,
        "target_code": "    Union,\n    cast,\n)\n",
        "target_code_len": 23,
        "diff_format": "@@ -31,2 +31,3 @@\n     Union,\n+    cast,\n )\n",
        "source_code_with_indent": "    Union,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Union,\n    cast,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        toolbar.active_tap = active_tap\n    elif active_tap in tool_map:\n        toolbar.active_tap = tool_map[active_tap]\n    else:\n",
        "source_code_len": 202,
        "target_code": "    if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        toolbar.active_tap = cast(Any, active_tap)\n    elif active_tap in tool_map:\n        toolbar.active_tap = cast(Any, tool_map[active_tap])\n    else:\n",
        "target_code_len": 224,
        "diff_format": "@@ -105,5 +106,5 @@\n     if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n-        toolbar.active_tap = active_tap\n+        toolbar.active_tap = cast(Any, active_tap)\n     elif active_tap in tool_map:\n-        toolbar.active_tap = tool_map[active_tap]\n+        toolbar.active_tap = cast(Any, tool_map[active_tap])\n     else:\n",
        "source_code_with_indent": "    <DED>if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        <IND>toolbar.active_tap = active_tap\n    <DED>elif active_tap in tool_map:\n        <IND>toolbar.active_tap = tool_map[active_tap]\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if active_tap in ['auto', None] or isinstance(active_tap, Tool):\n        <IND>toolbar.active_tap = cast(Any, active_tap)\n    <DED>elif active_tap in tool_map:\n        <IND>toolbar.active_tap = cast(Any, tool_map[active_tap])\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]