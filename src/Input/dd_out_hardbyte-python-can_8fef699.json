[
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:30:8 Incompatible variable type [9]: bitrate is declared to have type `int` but is used as type `None`.",
    "message": " bitrate is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 30,
    "warning_line": "        bitrate: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:31:8 Incompatible variable type [9]: f_clock is declared to have type `int` but is used as type `None`.",
    "message": " f_clock is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 31,
    "warning_line": "        f_clock: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:32:8 Incompatible variable type [9]: brp is declared to have type `int` but is used as type `None`.",
    "message": " brp is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 32,
    "warning_line": "        brp: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:33:8 Incompatible variable type [9]: tseg1 is declared to have type `int` but is used as type `None`.",
    "message": " tseg1 is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 33,
    "warning_line": "        tseg1: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:34:8 Incompatible variable type [9]: tseg2 is declared to have type `int` but is used as type `None`.",
    "message": " tseg2 is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 34,
    "warning_line": "        tseg2: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:35:8 Incompatible variable type [9]: sjw is declared to have type `int` but is used as type `None`.",
    "message": " sjw is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 35,
    "warning_line": "        sjw: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:37:8 Incompatible variable type [9]: btr0 is declared to have type `int` but is used as type `None`.",
    "message": " btr0 is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 37,
    "warning_line": "        btr0: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hardbyte/python-can",
    "commit": "8fef6997b55ea9802c78cf8fbf86fc0f9d13568a",
    "filename": "can/bit_timing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hardbyte-python-can/can/bit_timing.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "can/bit_timing.py:38:8 Incompatible variable type [9]: btr1 is declared to have type `int` but is used as type `None`.",
    "message": " btr1 is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 38,
    "warning_line": "        btr1: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Union\n\n",
        "source_code_len": 26,
        "target_code": "from typing import Optional, Union\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Union\n+from typing import Optional, Union\n \n",
        "source_code_with_indent": "from typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_len": 265,
        "target_code": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_len": 345,
        "diff_format": "@@ -29,11 +29,11 @@\n         self,\n-        bitrate: int = None,\n-        f_clock: int = None,\n-        brp: int = None,\n-        tseg1: int = None,\n-        tseg2: int = None,\n-        sjw: int = None,\n+        bitrate: Optional[int] = None,\n+        f_clock: Optional[int] = None,\n+        brp: Optional[int] = None,\n+        tseg1: Optional[int] = None,\n+        tseg2: Optional[int] = None,\n+        sjw: Optional[int] = None,\n         nof_samples: int = 1,\n-        btr0: int = None,\n-        btr1: int = None,\n+        btr0: Optional[int] = None,\n+        btr1: Optional[int] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        bitrate: int = None,\n        f_clock: int = None,\n        brp: int = None,\n        tseg1: int = None,\n        tseg2: int = None,\n        sjw: int = None,\n        nof_samples: int = 1,\n        btr0: int = None,\n        btr1: int = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        bitrate: Optional[int] = None,\n        f_clock: Optional[int] = None,\n        brp: Optional[int] = None,\n        tseg1: Optional[int] = None,\n        tseg2: Optional[int] = None,\n        sjw: Optional[int] = None,\n        nof_samples: int = 1,\n        btr0: Optional[int] = None,\n        btr1: Optional[int] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]