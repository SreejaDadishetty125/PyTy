[
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:15:4 Inconsistent override [14]: `tests.test_utils.test_statemachine.State1.handle` overrides method defined in `State` inconsistently. Parameter of type `ConsumerStateData` is not a supertype of the overridden parameter `typing.Optional[ConsumerStateData]`.",
    "message": " `tests.test_utils.test_statemachine.State1.handle` overrides method defined in `State` inconsistently. Parameter of type `ConsumerStateData` is not a supertype of the overridden parameter `typing.Optional[ConsumerStateData]`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 15,
    "warning_line": "    def handle("
  },
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:19:8 Incompatible return type [7]: Expected `Tuple[ConsumerStateCompletionEvent, ConsumerStateData]` but got `Tuple[ConsumerStateCompletionEvent, str]`.",
    "message": " Expected `Tuple[ConsumerStateCompletionEvent, ConsumerStateData]` but got `Tuple[ConsumerStateCompletionEvent, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 19,
    "warning_line": "        return (ConsumerStateCompletionEvent.NO_SNAPSHOT, \"consume\")"
  },
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:30:4 Inconsistent override [14]: `tests.test_utils.test_statemachine.State2.handle` overrides method defined in `State` inconsistently. Parameter of type `ConsumerStateData` is not a supertype of the overridden parameter `typing.Optional[ConsumerStateData]`.",
    "message": " `tests.test_utils.test_statemachine.State2.handle` overrides method defined in `State` inconsistently. Parameter of type `ConsumerStateData` is not a supertype of the overridden parameter `typing.Optional[ConsumerStateData]`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 30,
    "warning_line": "    def handle("
  },
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:35:8 Incompatible return type [7]: Expected `Tuple[ConsumerStateCompletionEvent, ConsumerStateData]` but got `Tuple[ConsumerStateCompletionEvent, None]`.",
    "message": " Expected `Tuple[ConsumerStateCompletionEvent, ConsumerStateData]` but got `Tuple[ConsumerStateCompletionEvent, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 35,
    "warning_line": "        return (ConsumerStateCompletionEvent.CONSUMPTION_COMPLETED, None)"
  },
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:42:12 Incompatible parameter type [6]: Expected `Mapping[typing.Type[State[Variable[snuba.utils.state_machine.TStateCompletionEvent], Variable[snuba.utils.state_machine.TStateData]]], Mapping[Variable[snuba.utils.state_machine.TStateCompletionEvent], typing.Optional[typing.Type[State[Variable[snuba.utils.state_machine.TStateCompletionEvent], Variable[snuba.utils.state_machine.TStateData]]]]]]` for 1st parameter `definition` to call `StateMachine.__init__` but got `typing.Dict[typing.Type[typing.Union[State1, State2]], typing.Union[typing.Dict[ConsumerStateCompletionEvent, None], typing.Dict[ConsumerStateCompletionEvent, typing.Type[State2]]]]`.",
    "message": " Expected `Mapping[typing.Type[State[Variable[snuba.utils.state_machine.TStateCompletionEvent], Variable[snuba.utils.state_machine.TStateData]]], Mapping[Variable[snuba.utils.state_machine.TStateCompletionEvent], typing.Optional[typing.Type[State[Variable[snuba.utils.state_machine.TStateCompletionEvent], Variable[snuba.utils.state_machine.TStateData]]]]]]` for 1st parameter `definition` to call `StateMachine.__init__` but got `typing.Dict[typing.Type[typing.Union[State1, State2]], typing.Union[typing.Dict[ConsumerStateCompletionEvent, None], typing.Dict[ConsumerStateCompletionEvent, typing.Type[State2]]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 42,
    "warning_line": "            definition={"
  },
  {
    "project": "getsentry/snuba",
    "commit": "f77d145f546c6909c806dc39c2ce221322589f26",
    "filename": "tests/test_utils/test_statemachine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/test_utils/test_statemachine.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_utils/test_statemachine.py:58:30 Incompatible parameter type [6]: Expected `Set[typing.Type[State[typing.Any, typing.Any]]]` for 1st positional only parameter to call `TestContext.__init__` but got `typing.Dict[typing.Any, typing.Any]`.",
    "message": " Expected `Set[typing.Type[State[typing.Any, typing.Any]]]` for 1st positional only parameter to call `TestContext.__init__` but got `typing.Dict[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 58,
    "warning_line": "        context = TestContext(processed_states)"
  }
]