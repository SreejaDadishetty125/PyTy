[
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jws.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jws.py:135:8 Incompatible variable type [9]: algorithms is declared to have type `List[str]` but is used as type `None`.",
    "message": " algorithms is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 135,
    "warning_line": "        algorithms: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -134,4 +134,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jws.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jws.py:136:8 Incompatible variable type [9]: options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 136,
    "warning_line": "        options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -134,4 +134,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jws.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jws.py:164:8 Incompatible variable type [9]: algorithms is declared to have type `List[str]` but is used as type `None`.",
    "message": " algorithms is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 164,
    "warning_line": "        algorithms: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -134,4 +134,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -163,4 +163,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jws.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jws.py:165:8 Incompatible variable type [9]: options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 165,
    "warning_line": "        options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -134,4 +134,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -163,4 +163,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jwt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jwt.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jwt.py:69:8 Incompatible variable type [9]: algorithms is declared to have type `List[str]` but is used as type `None`.",
    "message": " algorithms is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 69,
    "warning_line": "        algorithms: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -68,4 +68,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jwt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jwt.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jwt.py:70:8 Incompatible variable type [9]: options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 70,
    "warning_line": "        options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -68,4 +68,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jwt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jwt.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jwt.py:115:8 Incompatible variable type [9]: algorithms is declared to have type `List[str]` but is used as type `None`.",
    "message": " algorithms is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 115,
    "warning_line": "        algorithms: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -68,4 +68,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -114,4 +114,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jpadilla/pyjwt",
    "commit": "31a8701d11709ce0807b60f7a5fa604d14175235",
    "filename": "jwt/api_jwt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jpadilla-pyjwt/jwt/api_jwt.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jwt/api_jwt.py:116:8 Incompatible variable type [9]: options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 116,
    "warning_line": "        options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -68,4 +68,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_len": 109,
        "target_code": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_len": 129,
        "diff_format": "@@ -114,4 +114,4 @@\n         key: str = \"\",\n-        algorithms: List[str] = None,\n-        options: Dict = None,\n+        algorithms: Optional[List[str]] = None,\n+        options: Optional[Dict] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        key: str = \"\",\n        algorithms: List[str] = None,\n        options: Dict = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: str = \"\",\n        algorithms: Optional[List[str]] = None,\n        options: Optional[Dict] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]