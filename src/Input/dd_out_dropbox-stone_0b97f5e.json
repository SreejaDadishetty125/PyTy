[
  {
    "project": "dropbox/stone",
    "commit": "0b97f5e70077282de486f407a97105310acb1067",
    "filename": "stone/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dropbox-stone/stone/api.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stone/api.py:59:8 Incompatible return type [7]: Expected `ApiNamespace` but got `typing.Optional[ApiNamespace]`.",
    "message": " Expected `ApiNamespace` but got `typing.Optional[ApiNamespace]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 59,
    "warning_line": "        return self.namespaces.get(name)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            self.namespaces[name] = ApiNamespace(name)\n        return self.namespaces.get(name)\n\n",
        "source_code_len": 97,
        "target_code": "            self.namespaces[name] = ApiNamespace(name)\n        return self.namespaces[name]\n\n",
        "target_code_len": 93,
        "diff_format": "@@ -58,3 +58,3 @@\n             self.namespaces[name] = ApiNamespace(name)\n-        return self.namespaces.get(name)\n+        return self.namespaces[name]\n \n",
        "source_code_with_indent": "            <IND>self.namespaces[name] = ApiNamespace(name)\n        <DED>return self.namespaces.get(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>self.namespaces[name] = ApiNamespace(name)\n        <DED>return self.namespaces[name]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]