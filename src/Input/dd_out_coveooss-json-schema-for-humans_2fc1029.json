[
  {
    "project": "coveooss/json-schema-for-humans",
    "commit": "2fc10297c77fdb102f8546995de71e67cd8d9812",
    "filename": "tests/generate_test.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/coveooss-json-schema-for-humans/tests/generate_test.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/generate_test.py:14:8 Incompatible return type [7]: Expected `Dict[str, typing.Any]` but got `typing.Tuple[typing.Any, typing.Any]`.",
    "message": " Expected `Dict[str, typing.Any]` but got `typing.Tuple[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 14,
    "warning_line": "        return (json.load(test_case_file), test_path.split(os.path.sep))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_len": 46,
        "target_code": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_len": 53,
        "diff_format": "@@ -2,3 +2,3 @@\n import os\n-from typing import Any, Dict, List\n+from typing import Any, Dict, List, Tuple\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_len": 103,
        "target_code": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_len": 121,
        "diff_format": "@@ -9,3 +9,3 @@\n \n-def _get_test_case(name: str) -> Dict[str, Any]:\n+def _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n     \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "coveooss/json-schema-for-humans",
    "commit": "2fc10297c77fdb102f8546995de71e67cd8d9812",
    "filename": "tests/generate_test.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/coveooss-json-schema-for-humans/tests/generate_test.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/generate_test.py:21:29 Incompatible parameter type [6]: Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `generate_from_schema` but got `str`.",
    "message": " Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `generate_from_schema` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 21,
    "warning_line": "        generate_from_schema(test_contents, test_path, False, find_deprecated, find_default), \"html.parser\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_len": 46,
        "target_code": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_len": 53,
        "diff_format": "@@ -2,3 +2,3 @@\n import os\n-from typing import Any, Dict, List\n+from typing import Any, Dict, List, Tuple\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_len": 103,
        "target_code": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_len": 121,
        "diff_format": "@@ -9,3 +9,3 @@\n \n-def _get_test_case(name: str) -> Dict[str, Any]:\n+def _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n     \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "coveooss/json-schema-for-humans",
    "commit": "2fc10297c77fdb102f8546995de71e67cd8d9812",
    "filename": "tests/generate_test.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/coveooss-json-schema-for-humans/tests/generate_test.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/generate_test.py:21:44 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `generate_from_schema` but got `str`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `generate_from_schema` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 21,
    "warning_line": "        generate_from_schema(test_contents, test_path, False, find_deprecated, find_default), \"html.parser\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_len": 46,
        "target_code": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_len": 53,
        "diff_format": "@@ -2,3 +2,3 @@\n import os\n-from typing import Any, Dict, List\n+from typing import Any, Dict, List, Tuple\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Dict, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Dict, List, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_len": 103,
        "target_code": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_len": 121,
        "diff_format": "@@ -9,3 +9,3 @@\n \n-def _get_test_case(name: str) -> Dict[str, Any]:\n+def _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n     \"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent": "\ndef _get_test_case(name: str) -> Dict[str, Any]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _get_test_case(name: str) -> Tuple[Dict[str, Any], List[str]]:\n    <IND>\"\"\"Get the loaded JSON schema for a test case\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]