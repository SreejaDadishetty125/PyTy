[
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/adapters/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/adapters/__init__.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/adapters/__init__.py:356:60 Unbound name [10]: Name `BaseMessageSegment` is used but not defined in the current scope.",
    "message": " Name `BaseMessageSegment` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 356,
    "warning_line": "                 message: Union[str, dict, list, BaseModel, BaseMessageSegment,"
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/adapters/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/adapters/__init__.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/adapters/__init__.py:368:33 Unbound name [10]: Name `BaseMessage` is used but not defined in the current scope.",
    "message": " Name `BaseMessage` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 368,
    "warning_line": "        elif isinstance(message, BaseMessage):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            self.extend(self._construct(message))\n        elif isinstance(message, BaseMessage):\n            self.extend(message)\n        elif isinstance(message, BaseMessageSegment):\n            self.append(message)\n",
        "source_code_len": 217,
        "target_code": "            self.extend(self._construct(message))\n        elif isinstance(message, Message):\n            self.extend(message)\n        elif isinstance(message, MessageSegment):\n            self.append(message)\n",
        "target_code_len": 209,
        "diff_format": "@@ -367,5 +366,5 @@\n             self.extend(self._construct(message))\n-        elif isinstance(message, BaseMessage):\n+        elif isinstance(message, Message):\n             self.extend(message)\n-        elif isinstance(message, BaseMessageSegment):\n+        elif isinstance(message, MessageSegment):\n             self.append(message)\n",
        "source_code_with_indent": "            <IND>self.extend(self._construct(message))\n        <DED>elif isinstance(message, BaseMessage):\n            <IND>self.extend(message)\n        <DED>elif isinstance(message, BaseMessageSegment):\n            <IND>self.append(message)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>self.extend(self._construct(message))\n        <DED>elif isinstance(message, Message):\n            <IND>self.extend(message)\n        <DED>elif isinstance(message, MessageSegment):\n            <IND>self.append(message)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/adapters/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/adapters/__init__.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/adapters/__init__.py:383:4 Inconsistent override [15]: `nonebot.adapters.Message.__add__` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `typing.List[typing.Any]`.",
    "message": " `nonebot.adapters.Message.__add__` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `typing.List[typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 383,
    "warning_line": "    def __add__("
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/adapters/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/adapters/__init__.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/adapters/__init__.py:399:4 Inconsistent override [15]: `nonebot.adapters.Message.append` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "message": " `nonebot.adapters.Message.append` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 399,
    "warning_line": "    def append(self, obj: Union[str, BaseMessageSegment]) -> \"BaseMessage\":"
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/adapters/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/adapters/__init__.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/adapters/__init__.py:417:4 Inconsistent override [15]: `nonebot.adapters.Message.extend` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "message": " `nonebot.adapters.Message.extend` overrides method defined in `list` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 417,
    "warning_line": "    def extend("
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/typing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/typing.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/typing.py:45:30 Unbound name [10]: Name `Bot` is used but not defined in the current scope.",
    "message": " Name `Bot` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 45,
    "warning_line": "EventPreProcessor = Callable[[Bot, Event, State], Awaitable[None]]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from nonebot.rule import Rule\n\n",
        "source_code_len": 137,
        "target_code": "\nfrom typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from nonebot.adapters import Bot, Event\n    from nonebot.matcher import Matcher\n\n",
        "target_code_len": 197,
        "diff_format": "@@ -20,6 +20,7 @@\n \n-from typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n+from typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n \n if TYPE_CHECKING:\n-    from nonebot.rule import Rule\n+    from nonebot.adapters import Bot, Event\n+    from nonebot.matcher import Matcher\n \n",
        "source_code_with_indent": "\nfrom typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    <IND>from nonebot.rule import Rule\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    <IND>from nonebot.adapters import Bot, Event\n    from nonebot.matcher import Matcher\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "a420af75fc22a5cddb645e359ed4fedcdb1a3652",
    "filename": "nonebot/typing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/typing.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/typing.py:45:35 Unbound name [10]: Name `Event` is used but not defined in the current scope.",
    "message": " Name `Event` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 45,
    "warning_line": "EventPreProcessor = Callable[[Bot, Event, State], Awaitable[None]]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from nonebot.rule import Rule\n\n",
        "source_code_len": 137,
        "target_code": "\nfrom typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from nonebot.adapters import Bot, Event\n    from nonebot.matcher import Matcher\n\n",
        "target_code_len": 197,
        "diff_format": "@@ -20,6 +20,7 @@\n \n-from typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n+from typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n \n if TYPE_CHECKING:\n-    from nonebot.rule import Rule\n+    from nonebot.adapters import Bot, Event\n+    from nonebot.matcher import Matcher\n \n",
        "source_code_with_indent": "\nfrom typing import Any, Dict, Union, Optional, Callable, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    <IND>from nonebot.rule import Rule\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Any, Dict, Union, Optional, Callable, NoReturn, Awaitable, TYPE_CHECKING\n\nif TYPE_CHECKING:\n    <IND>from nonebot.adapters import Bot, Event\n    from nonebot.matcher import Matcher\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]