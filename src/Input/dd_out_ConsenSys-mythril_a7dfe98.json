[
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/instructions.py",
    "min_patch_found": false,
    "full_warning_msg": "mythril/laser/ethereum/instructions.py:775:49 Incompatible parameter type [6]: Expected `Union[int, slice]` for 1st positional only parameter to call `mythril.laser.ethereum.state.calldata.BaseCalldata.__getitem__` but got `Union[int, mythril.laser.smt.expression.Expression]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/instructions.py",
    "min_patch_found": false,
    "full_warning_msg": "mythril/laser/ethereum/instructions.py:1366:33 Incompatible parameter type [6]: Expected `mythril.laser.smt.bool.Bool` for 1st positional only parameter to call `mythril.laser.smt.bool.is_true` but got `mythril.laser.smt.expression.Expression`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:63:30 Incompatible parameter type [6]: Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 1st positional only parameter to call `BaseCalldata._load` but got `Union[int, slice]`.",
    "message": " Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 1st positional only parameter to call `BaseCalldata._load` but got `Union[int, slice]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 63,
    "warning_line": "            return self._load(item)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __getitem__(self, item: Union[int, slice]) -> Any:\n        \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\n    def __getitem__(self, item: Union[int, slice, BitVec]) -> Any:\n        \"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -55,3 +55,3 @@\n \n-    def __getitem__(self, item: Union[int, slice]) -> Any:\n+    def __getitem__(self, item: Union[int, slice, BitVec]) -> Any:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def __getitem__(self, item: Union[int, slice]) -> Any:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def __getitem__(self, item: Union[int, slice, BitVec]) -> Any:\n        <IND>"
      }
    ]
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:77:31 Incompatible parameter type [6]: Expected `mythril.laser.smt.expression.Expression` for 1st positional only parameter to call `mythril.laser.smt.expression.simplify` but got `bool`.",
    "message": " Expected `mythril.laser.smt.expression.Expression` for 1st positional only parameter to call `mythril.laser.smt.expression.simplify` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 77,
    "warning_line": "                while simplify(current_index != stop):"
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:78:41 Incompatible parameter type [6]: Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 1st positional only parameter to call `BaseCalldata._load` but got `mythril.laser.smt.expression.Expression`.",
    "message": " Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 1st positional only parameter to call `BaseCalldata._load` but got `mythril.laser.smt.expression.Expression`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 78,
    "warning_line": "                    element = self._load(current_index)"
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:83:45 Unsupported operand [58]: `+` is not supported for operand types `mythril.laser.smt.expression.Expression` and `typing.Any`.",
    "message": " `+` is not supported for operand types `mythril.laser.smt.expression.Expression` and `typing.Any`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 83,
    "warning_line": "                    current_index = simplify(current_index + step)"
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:145:8 Incompatible return type [7]: Expected `mythril.laser.smt.bitvec.BitVec` but got `mythril.laser.smt.expression.Expression`.",
    "message": " Expected `mythril.laser.smt.bitvec.BitVec` but got `mythril.laser.smt.expression.Expression`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 145,
    "warning_line": "        return simplify(self._calldata[item])"
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/calldata.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ConsenSys-mythril/mythril/laser/ethereum/state/calldata.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mythril/laser/ethereum/state/calldata.py:232:16 Incompatible parameter type [6]: Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 2nd positional only parameter to call `mythril.laser.smt.bitvec.If` but got `mythril.laser.smt.expression.Expression`.",
    "message": " Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` for 2nd positional only parameter to call `mythril.laser.smt.bitvec.If` but got `mythril.laser.smt.expression.Expression`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 232,
    "warning_line": "                simplify(self._calldata[cast(BitVec, item)]),"
  },
  {
    "project": "ConsenSys/mythril",
    "commit": "a7dfe98f1ce1827d9a46cfdd5a6bc30b5859b3c5",
    "filename": "mythril/laser/ethereum/state/memory.py",
    "min_patch_found": false,
    "full_warning_msg": "mythril/laser/ethereum/state/memory.py:65:12 Incompatible return type [7]: Expected `Union[int, mythril.laser.smt.bitvec.BitVec]` but got `mythril.laser.smt.expression.Expression`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]