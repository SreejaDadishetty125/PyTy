[
  {
    "project": "osmocom/pysim",
    "commit": "2d4a64b43d85f9afb6433a2e95500262270b73b3",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:981:8 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got `Tuple[typing.Any, typing.Any]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got `Tuple[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 981,
    "warning_line": "        return (dec_data, sw)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def read_binary_dec(self) -> dict:\n        \"\"\"Read [part of] a transparent EF binary data and decode it.\n",
        "source_code_len": 110,
        "target_code": "\n    def read_binary_dec(self) -> Tuple[dict, str]:\n        \"\"\"Read [part of] a transparent EF binary data and decode it.\n",
        "target_code_len": 122,
        "diff_format": "@@ -968,3 +968,3 @@\n \n-    def read_binary_dec(self) -> dict:\n+    def read_binary_dec(self) -> Tuple[dict, str]:\n         \"\"\"Read [part of] a transparent EF binary data and decode it.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def read_binary_dec(self) -> dict:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def read_binary_dec(self) -> Tuple[dict, str]:\n        <IND>"
      }
    ]
  }
]