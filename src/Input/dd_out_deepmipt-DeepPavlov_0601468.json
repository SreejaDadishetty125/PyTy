[
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/preprocessors/field_getter.py",
    "min_patch_found": false,
    "full_warning_msg": "deeppavlov/models/preprocessors/field_getter.py:29:21 Incompatible parameter type [6]: Expected `Union[List[Dict[typing.Any, typing.Any]], Tuple[Dict[typing.Any, typing.Any]]]` for 1st positional only parameter to call `FieldGetter.__call__` but got `Dict[typing.Any, typing.Any]`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/preprocessors/field_getter.py'",
    "dd_fail": true
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/preprocessors/str_lower.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/preprocessors/str_lower.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/preprocessors/str_lower.py:30:25 Incompatible parameter type [6]: Expected `Union[List[List[str]], List[str]]` for 1st positional only parameter to call `StrLower.__call__` but got `Union[List[str], str]`.",
    "message": " Expected `Union[List[List[str]], List[str]]` for 1st positional only parameter to call `StrLower.__call__` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 30,
    "warning_line": "            return [self(line) for line in batch]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __call__(self, batch: Union[List[str], List[List[str]]], **kwargs):\n        if isinstance(batch, (list, tuple)):\n",
        "source_code_len": 122,
        "target_code": "\n    def __call__(self, batch: Union[str, list, tuple]):\n        \"\"\"Recursively search for strings in a list and convert them to lowercase\n\n        Args:\n            batch: a string or a list containing strings at some level of nesting\n\n        Returns:\n            the same structure where all strings are converted to lowercase\n        \"\"\"\n        if isinstance(batch, (list, tuple)):\n",
        "target_code_len": 387,
        "diff_format": "@@ -27,3 +28,11 @@\n \n-    def __call__(self, batch: Union[List[str], List[List[str]]], **kwargs):\n+    def __call__(self, batch: Union[str, list, tuple]):\n+        \"\"\"Recursively search for strings in a list and convert them to lowercase\n+\n+        Args:\n+            batch: a string or a list containing strings at some level of nesting\n+\n+        Returns:\n+            the same structure where all strings are converted to lowercase\n+        \"\"\"\n         if isinstance(batch, (list, tuple)):\n",
        "source_code_with_indent": "\n    <DED>def __call__(self, batch: Union[List[str], List[List[str]]], **kwargs):\n        <IND>if isinstance(batch, (list, tuple)):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __call__(self, batch: Union[str, list, tuple]):\n        <IND>\"\"\"Recursively search for strings in a list and convert them to lowercase\n\n        Args:\n            batch: a string or a list containing strings at some level of nesting\n\n        Returns:\n            the same structure where all strings are converted to lowercase\n        \"\"\"\n        if isinstance(batch, (list, tuple)):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/ru_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/ru_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/ru_tokenizer.py:40:23 Incompatible variable type [9]: stopwords is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " stopwords is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "    def __init__(self, stopwords: list = None, ngram_range: List[int] = None, lemmas=False,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/ru_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/ru_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/ru_tokenizer.py:41:17 Incompatible variable type [9]: lowercase is declared to have type `bool` but is used as type `None`.",
    "message": " lowercase is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 41,
    "warning_line": "                 lowercase: bool = None, alphas_only: bool = None, **kwargs):"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/ru_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/ru_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/ru_tokenizer.py:41:41 Incompatible variable type [9]: alphas_only is declared to have type `bool` but is used as type `None`.",
    "message": " alphas_only is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 41,
    "warning_line": "                 lowercase: bool = None, alphas_only: bool = None, **kwargs):"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:38:23 Incompatible variable type [9]: disable is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " disable is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 38,
    "warning_line": "    def __init__(self, disable: list = None, stopwords: list = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:38:45 Incompatible variable type [9]: stopwords is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " stopwords is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 38,
    "warning_line": "    def __init__(self, disable: list = None, stopwords: list = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:39:17 Incompatible variable type [9]: batch_size is declared to have type `int` but is used as type `None`.",
    "message": " batch_size is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 39,
    "warning_line": "                 batch_size: int = None, ngram_range: List[int] = None, lemmas: bool = False,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:39:41 Incompatible variable type [9]: ngram_range is declared to have type `List[int]` but is used as type `None`.",
    "message": " ngram_range is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 39,
    "warning_line": "                 batch_size: int = None, ngram_range: List[int] = None, lemmas: bool = False,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:40:17 Incompatible variable type [9]: n_threads is declared to have type `int` but is used as type `None`.",
    "message": " n_threads is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "                 n_threads: int = None, lowercase: bool = None, alphas_only: bool = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:40:40 Incompatible variable type [9]: lowercase is declared to have type `bool` but is used as type `None`.",
    "message": " lowercase is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "                 n_threads: int = None, lowercase: bool = None, alphas_only: bool = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0601468959e72806a2e55dfdb015c90d0d2926b5",
    "filename": "deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/tokenizers/spacy_tokenizer.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/tokenizers/spacy_tokenizer.py:40:64 Incompatible variable type [9]: alphas_only is declared to have type `bool` but is used as type `None`.",
    "message": " alphas_only is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "                 n_threads: int = None, lowercase: bool = None, alphas_only: bool = None,"
  }
]