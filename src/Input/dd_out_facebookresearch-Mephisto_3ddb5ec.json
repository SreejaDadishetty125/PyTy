[
  {
    "project": "facebookresearch/Mephisto",
    "commit": "3ddb5ec30d391f25ee9c3e48aa34bc0a12f57862",
    "filename": "mephisto/data_model/blueprint.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-Mephisto/mephisto/data_model/blueprint.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mephisto/data_model/blueprint.py:197:28 Incompatible parameter type [6]: Expected `List[Agent]` for 2nd positional only parameter to call `TaskRunner.run_unit` but got `Agent`.",
    "message": " Expected `List[Agent]` for 2nd positional only parameter to call `TaskRunner.run_unit` but got `Agent`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 197,
    "warning_line": "        self.run_unit(unit, agent)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    # TaskRunners must implement either the unit or assignment versions of the \n    # run and cleanup functions, depending on if the task is run at the assignment\n    # level rather than on the the unit level.\n    \n    def run_unit(self, unit: \"Unit\", agents: List[\"Agent\"]):\n        \"\"\"\n",
        "source_code_len": 289,
        "target_code": "\n    # TaskRunners must implement either the unit or assignment versions of the\n    # run and cleanup functions, depending on if the task is run at the assignment\n    # level rather than on the the unit level.\n\n    def run_unit(self, unit: \"Unit\", agent: \"Agent\"):\n        \"\"\"\n",
        "target_code_len": 277,
        "diff_format": "@@ -236,7 +234,7 @@\n \n-    # TaskRunners must implement either the unit or assignment versions of the \n+    # TaskRunners must implement either the unit or assignment versions of the\n     # run and cleanup functions, depending on if the task is run at the assignment\n     # level rather than on the the unit level.\n-    \n-    def run_unit(self, unit: \"Unit\", agents: List[\"Agent\"]):\n+\n+    def run_unit(self, unit: \"Unit\", agent: \"Agent\"):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    # TaskRunners must implement either the unit or assignment versions of the \n    # run and cleanup functions, depending on if the task is run at the assignment\n    # level rather than on the the unit level.\n    \n    <DED>def run_unit(self, unit: \"Unit\", agents: List[\"Agent\"]):\n        <IND>",
        "target_code_with_indent": "\n    # TaskRunners must implement either the unit or assignment versions of the\n    # run and cleanup functions, depending on if the task is run at the assignment\n    # level rather than on the the unit level.\n\n    <DED>def run_unit(self, unit: \"Unit\", agent: \"Agent\"):\n        <IND>"
      }
    ]
  },
  {
    "project": "facebookresearch/Mephisto",
    "commit": "3ddb5ec30d391f25ee9c3e48aa34bc0a12f57862",
    "filename": "mephisto/server/blueprints/static_task/static_agent_state.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-Mephisto/mephisto/server/blueprints/static_task/static_agent_state.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mephisto/server/blueprints/static_task/static_agent_state.py:69:8 Incompatible return type [7]: Expected `List[Dict[str, typing.Any]]` but got `Dict[str, Optional[Dict[str, typing.Any]]]`.",
    "message": " Expected `List[Dict[str, typing.Any]]` but got `Dict[str, Optional[Dict[str, typing.Any]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 69,
    "warning_line": "        return self.state",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_data(self) -> List[Dict[str, Any]]:\n        \"\"\"Return dict of this agent's state\"\"\"\n",
        "source_code_len": 97,
        "target_code": "\n    def get_data(self) -> Dict[str, Optional[Dict[str, Any]]]:\n        \"\"\"Return dict of this agent's state\"\"\"\n",
        "target_code_len": 112,
        "diff_format": "@@ -66,3 +63,3 @@\n \n-    def get_data(self) -> List[Dict[str, Any]]:\n+    def get_data(self) -> Dict[str, Optional[Dict[str, Any]]]:\n         \"\"\"Return dict of this agent's state\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def get_data(self) -> List[Dict[str, Any]]:\n        <IND>\"\"\"Return dict of this agent's state\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def get_data(self) -> Dict[str, Optional[Dict[str, Any]]]:\n        <IND>\"\"\"Return dict of this agent's state\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/Mephisto",
    "commit": "3ddb5ec30d391f25ee9c3e48aa34bc0a12f57862",
    "filename": "mephisto/server/blueprints/static_task/static_task_runner.py",
    "min_patch_found": false,
    "full_warning_msg": "mephisto/server/blueprints/static_task/static_task_runner.py:51:4 Inconsistent override [14]: `mephisto.server.blueprints.static_task.static_task_runner.StaticTaskRunner.run_unit` overrides method defined in `TaskRunner` inconsistently. Could not find parameter `agents` in overriding signature.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]