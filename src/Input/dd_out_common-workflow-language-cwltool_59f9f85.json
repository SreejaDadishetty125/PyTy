[
  {
    "project": "common-workflow-language/cwltool",
    "commit": "59f9f85907ea064bc613f9080031c6497e2000ff",
    "filename": "cwltool/docker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/docker.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/docker.py:139:33 Incompatible parameter type [6]: Expected `Dict[str, str]` for 2nd positional only parameter to call `DockerCommandLineJob.get_image` but got `bool`.",
    "message": " Expected `Dict[str, str]` for 2nd positional only parameter to call `DockerCommandLineJob.get_image` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 139,
    "warning_line": "            if self.get_image(r, pull_image, dry_run, force_pull=force_pull):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        found = False\n",
        "source_code_len": 160,
        "target_code": "    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool, bool) -> bool\n        found = False\n",
        "target_code_len": 166,
        "diff_format": "@@ -32,3 +32,3 @@\n     def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n-        # type: (Dict[Text, Text], bool, bool) -> bool\n+        # type: (Dict[Text, Text], bool, bool, bool) -> bool\n         found = False\n",
        "source_code_with_indent": "    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        <IND>found = False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool, bool) -> bool\n        <IND>found = False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "59f9f85907ea064bc613f9080031c6497e2000ff",
    "filename": "cwltool/singularity.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/singularity.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/singularity.py:93:33 Incompatible parameter type [6]: Expected `Dict[str, str]` for 2nd positional only parameter to call `SingularityCommandLineJob.get_image` but got `bool`.",
    "message": " Expected `Dict[str, str]` for 2nd positional only parameter to call `SingularityCommandLineJob.get_image` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 93,
    "warning_line": "            if self.get_image(r, pull_image, dry_run):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        found = False\n\n        if force_pull:\n            _logger.warn(\"--force-docker-pull currently not supported for singularity\")\n\n",
        "source_code_len": 291,
        "target_code": "    @staticmethod\n    def get_image(dockerRequirement, pull_image, dry_run=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        found = False\n\n",
        "target_code_len": 161,
        "diff_format": "@@ -23,8 +23,5 @@\n     @staticmethod\n-    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n+    def get_image(dockerRequirement, pull_image, dry_run=False):\n         # type: (Dict[Text, Text], bool, bool) -> bool\n         found = False\n-\n-        if force_pull:\n-            _logger.warn(\"--force-docker-pull currently not supported for singularity\")\n \n",
        "source_code_with_indent": "    <IND>@staticmethod\n    def get_image(dockerRequirement, pull_image, dry_run=False, force_pull=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        <IND>found = False\n\n        if force_pull:\n            <IND>_logger.warn(\"--force-docker-pull currently not supported for singularity\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>@staticmethod\n    def get_image(dockerRequirement, pull_image, dry_run=False):\n        # type: (Dict[Text, Text], bool, bool) -> bool\n        <IND>found = False\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]