[
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/data_transform/features.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/data_transform/features.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/data_transform/features.py:113:8 Incompatible variable type [9]: input_nc_feats is declared to have type `List[int]` but is used as type `None`.",
    "message": " input_nc_feats is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 113,
    "warning_line": "        input_nc_feats: List[int] = None,"
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/data_transform/features.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/data_transform/features.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/data_transform/features.py:134:12 Incompatible variable type [9]: input_nc_feats is declared to have type `List[int]` but is used as type `List[None]`.",
    "message": " input_nc_feats is declared to have type `List[int]` but is used as type `List[None]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 134,
    "warning_line": "            input_nc_feats = [None for _ in range(num_names)]"
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/spatial_ops/neighbour_finder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/spatial_ops/neighbour_finder.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/spatial_ops/neighbour_finder.py:112:76 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[float], float]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[float], float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 112,
    "warning_line": "            self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_len": 80,
        "target_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_len": 86,
        "diff_format": "@@ -1,3 +1,3 @@\n from abc import ABC, abstractmethod\n-from typing import List, Union\n+from typing import List, Union, cast\n import torch\n",
        "source_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if not is_list(max_num_neighbors) and is_list(radius):\n            self._radius = radius\n            self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]\n",
        "source_code_len": 189,
        "target_code": "        if not is_list(max_num_neighbors) and is_list(radius):\n            self._radius = cast(list, radius)\n            max_num_neighbors = cast(int, max_num_neighbors)\n            self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]\n",
        "target_code_len": 262,
        "diff_format": "@@ -110,3 +113,4 @@\n         if not is_list(max_num_neighbors) and is_list(radius):\n-            self._radius = radius\n+            self._radius = cast(list, radius)\n+            max_num_neighbors = cast(int, max_num_neighbors)\n             self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]\n",
        "source_code_with_indent": "        <DED>if not is_list(max_num_neighbors) and is_list(radius):\n            <IND>self._radius = radius\n            self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if not is_list(max_num_neighbors) and is_list(radius):\n            <IND>self._radius = cast(list, radius)\n            max_num_neighbors = cast(int, max_num_neighbors)\n            self._max_num_neighbors = [max_num_neighbors for i in range(len(self._radius))]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/spatial_ops/neighbour_finder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/spatial_ops/neighbour_finder.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/spatial_ops/neighbour_finder.py:117:54 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[int], int]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[int], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 117,
    "warning_line": "            self._radius = [radius for i in range(len(self._max_num_neighbors))]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_len": 80,
        "target_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_len": 86,
        "diff_format": "@@ -1,3 +1,3 @@\n from abc import ABC, abstractmethod\n-from typing import List, Union\n+from typing import List, Union, cast\n import torch\n",
        "source_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if not is_list(radius) and is_list(max_num_neighbors):\n            self._max_num_neighbors = max_num_neighbors\n            self._radius = [radius for i in range(len(self._max_num_neighbors))]\n",
        "source_code_len": 200,
        "target_code": "        if not is_list(radius) and is_list(max_num_neighbors):\n            self._max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(int, radius)\n            self._radius = [radius for i in range(len(self._max_num_neighbors))]\n",
        "target_code_len": 251,
        "diff_format": "@@ -115,3 +119,4 @@\n         if not is_list(radius) and is_list(max_num_neighbors):\n-            self._max_num_neighbors = max_num_neighbors\n+            self._max_num_neighbors = cast(list, max_num_neighbors)\n+            radius = cast(int, radius)\n             self._radius = [radius for i in range(len(self._max_num_neighbors))]\n",
        "source_code_with_indent": "        <DED>if not is_list(radius) and is_list(max_num_neighbors):\n            <IND>self._max_num_neighbors = max_num_neighbors\n            self._radius = [radius for i in range(len(self._max_num_neighbors))]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if not is_list(radius) and is_list(max_num_neighbors):\n            <IND>self._max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(int, radius)\n            self._radius = [radius for i in range(len(self._max_num_neighbors))]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/spatial_ops/neighbour_finder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/spatial_ops/neighbour_finder.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/spatial_ops/neighbour_finder.py:121:19 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[int], int]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[int], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 121,
    "warning_line": "            if len(max_num_neighbors) != len(radius):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_len": 80,
        "target_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_len": 86,
        "diff_format": "@@ -1,3 +1,3 @@\n from abc import ABC, abstractmethod\n-from typing import List, Union\n+from typing import List, Union, cast\n import torch\n",
        "source_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if is_list(max_num_neighbors):\n            if len(max_num_neighbors) != len(radius):\n",
        "source_code_len": 93,
        "target_code": "        if is_list(max_num_neighbors):\n            max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(list, radius)\n            if len(max_num_neighbors) != len(radius):\n",
        "target_code_len": 195,
        "diff_format": "@@ -120,2 +125,4 @@\n         if is_list(max_num_neighbors):\n+            max_num_neighbors = cast(list, max_num_neighbors)\n+            radius = cast(list, radius)\n             if len(max_num_neighbors) != len(radius):\n",
        "source_code_with_indent": "        <DED>if is_list(max_num_neighbors):\n            <IND>if len(max_num_neighbors) != len(radius):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if is_list(max_num_neighbors):\n            <IND>max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(list, radius)\n            if len(max_num_neighbors) != len(radius):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/core/spatial_ops/neighbour_finder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/core/spatial_ops/neighbour_finder.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/core/spatial_ops/neighbour_finder.py:121:45 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[float], float]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[List[float], float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 121,
    "warning_line": "            if len(max_num_neighbors) != len(radius):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_len": 80,
        "target_code": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_len": 86,
        "diff_format": "@@ -1,3 +1,3 @@\n from abc import ABC, abstractmethod\n-from typing import List, Union\n+from typing import List, Union, cast\n import torch\n",
        "source_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import List, Union, cast\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if is_list(max_num_neighbors):\n            if len(max_num_neighbors) != len(radius):\n",
        "source_code_len": 93,
        "target_code": "        if is_list(max_num_neighbors):\n            max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(list, radius)\n            if len(max_num_neighbors) != len(radius):\n",
        "target_code_len": 195,
        "diff_format": "@@ -120,2 +125,4 @@\n         if is_list(max_num_neighbors):\n+            max_num_neighbors = cast(list, max_num_neighbors)\n+            radius = cast(list, radius)\n             if len(max_num_neighbors) != len(radius):\n",
        "source_code_with_indent": "        <DED>if is_list(max_num_neighbors):\n            <IND>if len(max_num_neighbors) != len(radius):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if is_list(max_num_neighbors):\n            <IND>max_num_neighbors = cast(list, max_num_neighbors)\n            radius = cast(list, radius)\n            if len(max_num_neighbors) != len(radius):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/models/segmentation/kpconv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/models/segmentation/kpconv.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/models/segmentation/kpconv.py:106:4 Inconsistent override [14]: `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `data` in overriding signature.",
    "message": " `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `data` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 106,
    "warning_line": "    def forward(self) -> Any:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def forward(self) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_len": 135,
        "target_code": "\n    def forward(self, *args, **kwargs) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_len": 152,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-    def forward(self) -> Any:\n+    def forward(self, *args, **kwargs) -> Any:\n         \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def forward(self) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def forward(self, *args, **kwargs) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/models/segmentation/kpconv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/models/segmentation/kpconv.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/models/segmentation/kpconv.py:106:4 Inconsistent override [14]: `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `precomputed_down` in overriding signature.",
    "message": " `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `precomputed_down` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 106,
    "warning_line": "    def forward(self) -> Any:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def forward(self) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_len": 135,
        "target_code": "\n    def forward(self, *args, **kwargs) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_len": 152,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-    def forward(self) -> Any:\n+    def forward(self, *args, **kwargs) -> Any:\n         \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def forward(self) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def forward(self, *args, **kwargs) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nicolas-chaulet/torch-points3d",
    "commit": "feca7fdd3c50ce10ae550e92658ac4d67c298f7d",
    "filename": "torch_points3d/models/segmentation/kpconv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nicolas-chaulet-torch-points3d/torch_points3d/models/segmentation/kpconv.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "torch_points3d/models/segmentation/kpconv.py:106:4 Inconsistent override [14]: `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `precomputed_up` in overriding signature.",
    "message": " `torch_points3d.models.segmentation.kpconv.KPConvPaper.forward` overrides method defined in `UnwrappedUnetBasedModel` inconsistently. Could not find parameter `precomputed_up` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 106,
    "warning_line": "    def forward(self) -> Any:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def forward(self) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_len": 135,
        "target_code": "\n    def forward(self, *args, **kwargs) -> Any:\n        \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_len": 152,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-    def forward(self) -> Any:\n+    def forward(self, *args, **kwargs) -> Any:\n         \"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def forward(self) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def forward(self, *args, **kwargs) -> Any:\n        <IND>\"\"\"Run forward pass. This will be called by both functions <optimize_parameters> and <test>.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]