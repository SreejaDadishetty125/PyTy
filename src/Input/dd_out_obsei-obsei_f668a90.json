[
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/analyzer/classification_analyzer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/analyzer/classification_analyzer.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/analyzer/classification_analyzer.py:65:4 Inconsistent override [14]: `obsei.analyzer.classification_analyzer.ZeroShotClassificationAnalyzer.analyze_input` overrides method defined in `BaseAnalyzer` inconsistently. Parameter of type `ClassificationAnalyzerConfig` is not a supertype of the overridden parameter `BaseAnalyzerConfig`.",
    "message": " `obsei.analyzer.classification_analyzer.ZeroShotClassificationAnalyzer.analyze_input` overrides method defined in `BaseAnalyzer` inconsistently. Parameter of type `ClassificationAnalyzerConfig` is not a supertype of the overridden parameter `BaseAnalyzerConfig`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 65,
    "warning_line": "    def analyze_input("
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/analyzer/classification_analyzer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/analyzer/classification_analyzer.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/analyzer/classification_analyzer.py:94:16 Incompatible parameter type [6]: Expected `bool` for 3rd positional only parameter to call `ZeroShotClassificationAnalyzer._classify_text_from_model` but got `Optional[bool]`.",
    "message": " Expected `bool` for 3rd positional only parameter to call `ZeroShotClassificationAnalyzer._classify_text_from_model` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 94,
    "warning_line": "                analyzer_config.multi_class_classification,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    labels: List[str]\n    multi_class_classification: Optional[bool] = True\n\n",
        "source_code_len": 77,
        "target_code": "    labels: List[str]\n    multi_class_classification: bool = True\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -19,3 +19,3 @@\n     labels: List[str]\n-    multi_class_classification: Optional[bool] = True\n+    multi_class_classification: bool = True\n \n",
        "source_code_with_indent": "    labels: List[str]\n    multi_class_classification: Optional[bool] = True\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    labels: List[str]\n    multi_class_classification: bool = True\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/configuration.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/configuration.py:21:17 Invalid type [31]: Expression `typing.Optional[pydantic.constr($parameter$min_length = 1)]` is not a valid type.",
    "message": " Expression `typing.Optional[pydantic.constr($parameter$min_length = 1)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[constr(min_length=1)] = Field(\n        None, env=\"obsei_config_filename\"\n    )\n\n",
        "source_code_len": 248,
        "target_code": "    configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n\n",
        "target_code_len": 200,
        "diff_format": "@@ -20,6 +20,4 @@\n     configuration: Optional[Dict[str, Any]] = None\n-    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n-    config_filename: Optional[constr(min_length=1)] = Field(\n-        None, env=\"obsei_config_filename\"\n-    )\n+    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n+    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n \n",
        "source_code_with_indent": "    <IND>configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[constr(min_length=1)] = Field(\n        None, env=\"obsei_config_filename\"\n    )\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/configuration.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/configuration.py:22:21 Invalid type [31]: Expression `typing.Optional[pydantic.constr($parameter$min_length = 1)]` is not a valid type.",
    "message": " Expression `typing.Optional[pydantic.constr($parameter$min_length = 1)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "    config_filename: Optional[constr(min_length=1)] = Field(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[constr(min_length=1)] = Field(\n        None, env=\"obsei_config_filename\"\n    )\n\n",
        "source_code_len": 248,
        "target_code": "    configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n\n",
        "target_code_len": 200,
        "diff_format": "@@ -20,6 +20,4 @@\n     configuration: Optional[Dict[str, Any]] = None\n-    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n-    config_filename: Optional[constr(min_length=1)] = Field(\n-        None, env=\"obsei_config_filename\"\n-    )\n+    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n+    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n \n",
        "source_code_with_indent": "    <IND>configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[constr(min_length=1)] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[constr(min_length=1)] = Field(\n        None, env=\"obsei_config_filename\"\n    )\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>configuration: Optional[Dict[str, Any]] = None\n    config_path: Optional[str] = Field(None, env=\"obsei_config_path\")\n    config_filename: Optional[str] = Field(None, env=\"obsei_config_filename\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/configuration.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/configuration.py:39:15 Unsupported operand [58]: `in` is not supported for right operand type `Optional[Dict[str, typing.Any]]`.",
    "message": " `in` is not supported for right operand type `Optional[Dict[str, typing.Any]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 39,
    "warning_line": "            or key_name not in self.configuration",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            key_name is None\n            or key_name not in self.configuration\n",
        "source_code_len": 79,
        "target_code": "            key_name is None\n            or self.configuration is None\n            or key_name not in self.configuration\n",
        "target_code_len": 121,
        "diff_format": "@@ -38,2 +36,3 @@\n             key_name is None\n+            or self.configuration is None\n             or key_name not in self.configuration\n",
        "source_code_with_indent": "            key_name is None\n            or key_name not in self.configuration\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            key_name is None\n            or self.configuration is None\n            or key_name not in self.configuration\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/processor.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/processor.py:53:12 Incompatible parameter type [6]: Expected `BaseAnalyzerConfig` for 2nd parameter `analyzer_config` to call `BaseAnalyzer.analyze_input` but got `Optional[BaseAnalyzerConfig]`.",
    "message": " Expected `BaseAnalyzerConfig` for 2nd parameter `analyzer_config` to call `BaseAnalyzer.analyze_input` but got `Optional[BaseAnalyzerConfig]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 53,
    "warning_line": "            analyzer_config=analyzer_config,"
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/elasticsearch_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/elasticsearch_sink.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/elasticsearch_sink.py:29:4 Incompatible attribute type [8]: Attribute `base_payload` declared in class `ElasticSearchSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " Attribute `base_payload` declared in class `ElasticSearchSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 29,
    "warning_line": "    base_payload: Dict[str, Any] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    refresh_type: str = \"wait_for\"\n    base_payload: Dict[str, Any] = None\n\n",
        "source_code_len": 76,
        "target_code": "    refresh_type: str = \"wait_for\"\n    base_payload: Optional[Dict[str, Any]] = None\n\n",
        "target_code_len": 86,
        "diff_format": "@@ -28,3 +28,3 @@\n     refresh_type: str = \"wait_for\"\n-    base_payload: Dict[str, Any] = None\n+    base_payload: Optional[Dict[str, Any]] = None\n \n",
        "source_code_with_indent": "    refresh_type: str = \"wait_for\"\n    base_payload: Dict[str, Any] = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    refresh_type: str = \"wait_for\"\n    base_payload: Optional[Dict[str, Any]] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/http_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/http_sink.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/http_sink.py:16:4 Incompatible attribute type [8]: Attribute `headers` declared in class `HttpSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " Attribute `headers` declared in class `HttpSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 16,
    "warning_line": "    headers: Dict[str, Any] = None"
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/http_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/http_sink.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/http_sink.py:17:4 Incompatible attribute type [8]: Attribute `base_payload` declared in class `HttpSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " Attribute `base_payload` declared in class `HttpSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 17,
    "warning_line": "    base_payload: Dict[str, Any] = None"
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/http_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/http_sink.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/http_sink.py:19:4 Incompatible attribute type [8]: Attribute `payload_mapping` declared in class `HttpSinkConfig` has type `Dict[str, List[str]]` but is used as type `None`.",
    "message": " Attribute `payload_mapping` declared in class `HttpSinkConfig` has type `Dict[str, List[str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 19,
    "warning_line": "    payload_mapping: Dict[str, List[str]] = None"
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/http_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/http_sink.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/http_sink.py:20:4 Incompatible attribute type [8]: Attribute `field_conversion` declared in class `HttpSinkConfig` has type `Dict[str, str]` but is used as type `None`.",
    "message": " Attribute `field_conversion` declared in class `HttpSinkConfig` has type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 20,
    "warning_line": "    field_conversion: Dict[str, str] = None"
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/sink/zendesk_sink.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/sink/zendesk_sink.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/sink/zendesk_sink.py:73:4 Incompatible attribute type [8]: Attribute `base_payload` declared in class `ZendeskSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " Attribute `base_payload` declared in class `ZendeskSinkConfig` has type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 73,
    "warning_line": "    base_payload: Dict[str, Any] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    subdomain: Optional[str] = Field(None, env=\"zendesk_subdomain\")\n    cred_info: Optional[ZendeskCredInfo] = None\n    summary_max_length: int = 50\n    labels_count = 3  # Number of labels to fetch\n    base_payload: Dict[str, Any] = None\n\n",
        "source_code_len": 240,
        "target_code": "    subdomain: Optional[str] = Field(None, env=\"zendesk_subdomain\")\n    cred_info: ZendeskCredInfo = Field(ZendeskCredInfo())\n    summary_max_length: int = 50\n    labels_count = 3  # Number of labels to fetch\n    base_payload: Optional[Dict[str, Any]] = None\n\n",
        "target_code_len": 260,
        "diff_format": "@@ -69,6 +69,6 @@\n     subdomain: Optional[str] = Field(None, env=\"zendesk_subdomain\")\n-    cred_info: Optional[ZendeskCredInfo] = None\n+    cred_info: ZendeskCredInfo = Field(ZendeskCredInfo())\n     summary_max_length: int = 50\n     labels_count = 3  # Number of labels to fetch\n-    base_payload: Dict[str, Any] = None\n+    base_payload: Optional[Dict[str, Any]] = None\n \n",
        "source_code_with_indent": "    subdomain: Optional[str] = Field(None, env=\"zendesk_subdomain\")\n    cred_info: Optional[ZendeskCredInfo] = None\n    summary_max_length: int = 50\n    labels_count = 3  # Number of labels to fetch\n    base_payload: Dict[str, Any] = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    subdomain: Optional[str] = Field(None, env=\"zendesk_subdomain\")\n    cred_info: ZendeskCredInfo = Field(ZendeskCredInfo())\n    summary_max_length: int = 50\n    labels_count = 3  # Number of labels to fetch\n    base_payload: Optional[Dict[str, Any]] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:119:32 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[bytes]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[bytes]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 119,
    "warning_line": "            num_of_emails = int(messages[0])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n            num_of_emails = int(messages[0])\n\n",
        "source_code_len": 47,
        "target_code": "\n            num_of_emails = int(str(messages[0]))\n\n",
        "target_code_len": 52,
        "diff_format": "@@ -118,3 +119,3 @@\n \n-            num_of_emails = int(messages[0])\n+            num_of_emails = int(str(messages[0]))\n \n",
        "source_code_with_indent": "\n            num_of_emails = int(messages[0])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n            num_of_emails = int(str(messages[0]))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:137:73 Incompatible parameter type [6]: Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "message": " Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 137,
    "warning_line": "                        email_meta[\"subject\"] = self._parse_email_header(msg, \"Subject\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_len": 112,
        "target_code": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_len": 118,
        "diff_format": "@@ -5,3 +5,3 @@\n from email.header import decode_header\n-from mailbox import Message\n+from email.message import Message\n from typing import Any, Dict, List, Optional\n",
        "source_code_with_indent": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:139:28 Incompatible parameter type [6]: Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "message": " Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 139,
    "warning_line": "                            msg, \"From\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_len": 112,
        "target_code": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_len": 118,
        "diff_format": "@@ -5,3 +5,3 @@\n from email.header import decode_header\n-from mailbox import Message\n+from email.message import Message\n from typing import Any, Dict, List, Optional\n",
        "source_code_with_indent": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:141:76 Incompatible parameter type [6]: Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "message": " Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "                        email_meta[\"to_address\"] = self._parse_email_header(msg, \"To\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_len": 112,
        "target_code": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_len": 118,
        "diff_format": "@@ -5,3 +5,3 @@\n from email.header import decode_header\n-from mailbox import Message\n+from email.message import Message\n from typing import Any, Dict, List, Optional\n",
        "source_code_with_indent": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:142:69 Incompatible parameter type [6]: Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "message": " Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 142,
    "warning_line": "                        date_received_str = self._parse_email_header(msg, \"Date\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_len": 112,
        "target_code": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_len": 118,
        "diff_format": "@@ -5,3 +5,3 @@\n from email.header import decode_header\n-from mailbox import Message\n+from email.message import Message\n from typing import Any, Dict, List, Optional\n",
        "source_code_with_indent": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:164:28 Incompatible parameter type [6]: Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "message": " Expected `Message` for 1st positional only parameter to call `EmailSource._parse_email_header` but got `email.message.Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 164,
    "warning_line": "                            msg, \"Message-ID\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_len": 112,
        "target_code": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_len": 118,
        "diff_format": "@@ -5,3 +5,3 @@\n from email.header import decode_header\n-from mailbox import Message\n+from email.message import Message\n from typing import Any, Dict, List, Optional\n",
        "source_code_with_indent": "from email.header import decode_header\nfrom mailbox import Message\nfrom typing import Any, Dict, List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from email.header import decode_header\nfrom email.message import Message\nfrom typing import Any, Dict, List, Optional\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/email_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/email_source.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/email_source.py:281:33 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `bytes.decode` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `bytes.decode` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 281,
    "warning_line": "            value = value.decode(encoding)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # if it's a bytes, decode to str\n            value = value.decode(encoding)\n        return value\n",
        "source_code_len": 109,
        "target_code": "            # if it's a bytes, decode to str\n            return \"\" if not encoding else value.decode(encoding)\n        return value\n",
        "target_code_len": 132,
        "diff_format": "@@ -280,3 +281,3 @@\n             # if it's a bytes, decode to str\n-            value = value.decode(encoding)\n+            return \"\" if not encoding else value.decode(encoding)\n         return value\n",
        "source_code_with_indent": "            # if it's a bytes, decode to str\n            <IND>value = value.decode(encoding)\n        <DED>return value\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            # if it's a bytes, decode to str\n            <IND>return \"\" if not encoding else value.decode(encoding)\n        <DED>return value\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/reddit_scrapper.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/reddit_scrapper.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/reddit_scrapper.py:57:50 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `typing.Mapping.get` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `typing.Mapping.get` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "        scrapper_stat: Dict[str, Any] = state.get(config.url_id, dict())",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        scrapper_stat: Dict[str, Any] = state.get(config.url_id, dict())\n        lookup_period: str = scrapper_stat.get(\"since_time\", config.lookup_period)\n",
        "source_code_len": 157,
        "target_code": "\n        scrapper_stat: Dict[str, Any] = (\n            dict() if not config.url_id else state.get(config.url_id, dict())\n        )\n        lookup_period: str = scrapper_stat.get(\"since_time\", config.lookup_period)\n",
        "target_code_len": 214,
        "diff_format": "@@ -56,3 +60,5 @@\n \n-        scrapper_stat: Dict[str, Any] = state.get(config.url_id, dict())\n+        scrapper_stat: Dict[str, Any] = (\n+            dict() if not config.url_id else state.get(config.url_id, dict())\n+        )\n         lookup_period: str = scrapper_stat.get(\"since_time\", config.lookup_period)\n",
        "source_code_with_indent": "\n        scrapper_stat: Dict[str, Any] = state.get(config.url_id, dict())\n        lookup_period: str = scrapper_stat.get(\"since_time\", config.lookup_period)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        scrapper_stat: Dict[str, Any] = (\n            dict() if not config.url_id else state.get(config.url_id, dict())\n        )\n        lookup_period: str = scrapper_stat.get(\"since_time\", config.lookup_period)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/reddit_scrapper.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/reddit_scrapper.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/reddit_scrapper.py:69:14 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 69,
    "warning_line": "        state[config.url_id] = scrapper_stat",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        last_index = since_id\n        state[config.url_id] = scrapper_stat\n\n",
        "source_code_len": 76,
        "target_code": "        last_index = since_id\n        if config.url_id:\n            state[config.url_id] = scrapper_stat\n\n",
        "target_code_len": 106,
        "diff_format": "@@ -68,3 +74,4 @@\n         last_index = since_id\n-        state[config.url_id] = scrapper_stat\n+        if config.url_id:\n+            state[config.url_id] = scrapper_stat\n \n",
        "source_code_with_indent": "        last_index = since_id\n        state[config.url_id] = scrapper_stat\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        last_index = since_id\n        if config.url_id:\n            <IND>state[config.url_id] = scrapper_stat\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/reddit_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/reddit_source.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/reddit_source.py:115:33 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 115,
    "warning_line": "                    comment_data[config.post_meta_field] = post_data",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    include_post_meta: Optional[bool] = True\n    post_meta_field: Optional[str] = \"post_meta\"\n    cred_info: Optional[RedditCredInfo] = None\n",
        "source_code_len": 141,
        "target_code": "    include_post_meta: Optional[bool] = True\n    post_meta_field: str = \"post_meta\"\n    cred_info: Optional[RedditCredInfo] = None\n",
        "target_code_len": 131,
        "diff_format": "@@ -38,3 +38,3 @@\n     include_post_meta: Optional[bool] = True\n-    post_meta_field: Optional[str] = \"post_meta\"\n+    post_meta_field: str = \"post_meta\"\n     cred_info: Optional[RedditCredInfo] = None\n",
        "source_code_with_indent": "    include_post_meta: Optional[bool] = True\n    post_meta_field: Optional[str] = \"post_meta\"\n    cred_info: Optional[RedditCredInfo] = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    include_post_meta: Optional[bool] = True\n    post_meta_field: str = \"post_meta\"\n    cred_info: Optional[RedditCredInfo] = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/source/twitter_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/source/twitter_source.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/source/twitter_source.py:136:4 Incompatible attribute type [8]: Attribute `lookup_period` declared in class `TwitterSourceConfig` has type `str` but is used as type `None`.",
    "message": " Attribute `lookup_period` declared in class `TwitterSourceConfig` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 136,
    "warning_line": "    lookup_period: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    until_id: Optional[int] = None\n    lookup_period: str = None\n    tweet_fields: Optional[List[str]] = Field(DEFAULT_TWEET_FIELDS)\n",
        "source_code_len": 133,
        "target_code": "    until_id: Optional[int] = None\n    lookup_period: Optional[str] = None\n    tweet_fields: Optional[List[str]] = Field(DEFAULT_TWEET_FIELDS)\n",
        "target_code_len": 143,
        "diff_format": "@@ -135,3 +135,3 @@\n     until_id: Optional[int] = None\n-    lookup_period: str = None\n+    lookup_period: Optional[str] = None\n     tweet_fields: Optional[List[str]] = Field(DEFAULT_TWEET_FIELDS)\n",
        "source_code_with_indent": "    until_id: Optional[int] = None\n    lookup_period: str = None\n    tweet_fields: Optional[List[str]] = Field(DEFAULT_TWEET_FIELDS)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    until_id: Optional[int] = None\n    lookup_period: Optional[str] = None\n    tweet_fields: Optional[List[str]] = Field(DEFAULT_TWEET_FIELDS)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "obsei/obsei",
    "commit": "f668a90b1ac8cebbbd72d4f02184bba3fa0ecd3c",
    "filename": "obsei/workflow/store.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/obsei-obsei/obsei/workflow/store.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "obsei/workflow/store.py:54:8 Incompatible return type [7]: Expected `List[Workflow]` but got `List[Optional[Workflow]]`.",
    "message": " Expected `List[Workflow]` but got `List[Optional[Workflow]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 54,
    "warning_line": "        return [self._convert_sql_row_to_workflow_data(row) for row in rows]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def _convert_sql_row_to_workflow_data(row) -> Optional[Workflow]:\n        from obsei.workflow.workflow import WorkflowConfig, Workflow\n\n        if row is None:\n            return None\n        config_dict = json.loads(row.config)\n",
        "source_code_len": 251,
        "target_code": "    @staticmethod\n    def _convert_sql_row_to_workflow_data(row) -> Workflow:\n        from obsei.workflow.workflow import WorkflowConfig, Workflow\n\n        config_dict = json.loads(row.config)\n",
        "target_code_len": 193,
        "diff_format": "@@ -187,7 +187,5 @@\n     @staticmethod\n-    def _convert_sql_row_to_workflow_data(row) -> Optional[Workflow]:\n+    def _convert_sql_row_to_workflow_data(row) -> Workflow:\n         from obsei.workflow.workflow import WorkflowConfig, Workflow\n \n-        if row is None:\n-            return None\n         config_dict = json.loads(row.config)\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def _convert_sql_row_to_workflow_data(row) -> Optional[Workflow]:\n        <IND>from obsei.workflow.workflow import WorkflowConfig, Workflow\n\n        if row is None:\n            <IND>return None\n        <DED>config_dict = json.loads(row.config)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@staticmethod\n    def _convert_sql_row_to_workflow_data(row) -> Workflow:\n        <IND>from obsei.workflow.workflow import WorkflowConfig, Workflow\n\n        config_dict = json.loads(row.config)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]