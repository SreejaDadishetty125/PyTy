[
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/graphics/canvas.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/graphics/canvas.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/graphics/canvas.py:93:4 Incompatible return type [7]: Expected `Tuple[str]` but got `typing.Tuple[typing.Any, ...]`.",
    "message": " Expected `Tuple[str]` but got `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 93,
    "warning_line": "    return tuple(tmp_list)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef replace_by_dict(d: dict) -> Tuple[str]:\n    \"\"\"A function use to translate the expression.\"\"\"\n",
        "source_code_len": 99,
        "target_code": "\ndef replace_by_dict(d: dict) -> Tuple[str, ...]:\n    \"\"\"A function use to translate the expression.\"\"\"\n",
        "target_code_len": 104,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-def replace_by_dict(d: dict) -> Tuple[str]:\n+def replace_by_dict(d: dict) -> Tuple[str, ...]:\n     \"\"\"A function use to translate the expression.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>def replace_by_dict(d: dict) -> Tuple[str]:\n    <IND>\"\"\"A function use to translate the expression.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def replace_by_dict(d: dict) -> Tuple[str, ...]:\n    <IND>\"\"\"A function use to translate the expression.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/graphics/color.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/graphics/color.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/graphics/color.py:46:4 Incompatible return type [7]: Expected `Tuple[str]` but got `typing.Tuple[str, ...]`.",
    "message": " Expected `Tuple[str]` but got `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 46,
    "warning_line": "    return tuple(sorted(color_list.keys()))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef colorName() -> Tuple[str]:\n    \"\"\"Get color names.\"\"\"\n",
        "source_code_len": 59,
        "target_code": "\ndef colorName() -> Tuple[str, ...]:\n    \"\"\"Get color names.\"\"\"\n",
        "target_code_len": 64,
        "diff_format": "@@ -43,3 +43,3 @@\n \n-def colorName() -> Tuple[str]:\n+def colorName() -> Tuple[str, ...]:\n     \"\"\"Get color names.\"\"\"\n",
        "source_code_with_indent": "\ndef colorName() -> Tuple[str]:\n    <IND>\"\"\"Get color names.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef colorName() -> Tuple[str, ...]:\n    <IND>\"\"\"Get color names.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:66:8 Incompatible return type [7]: Expected `Tuple[int]` but got `typing.Tuple[typing.Any, ...]`.",
    "message": " Expected `Tuple[int]` but got `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 66,
    "warning_line": "        return tuple(sorted(tmp_set))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \n    def selectedRows(self) -> Tuple[int]:\n        \"\"\"Get what row is been selected.\"\"\"\n",
        "source_code_len": 92,
        "target_code": "    \n    def selectedRows(self) -> Tuple[int, ...]:\n        \"\"\"Get what row is been selected.\"\"\"\n",
        "target_code_len": 97,
        "diff_format": "@@ -60,3 +60,3 @@\n     \n-    def selectedRows(self) -> Tuple[int]:\n+    def selectedRows(self) -> Tuple[int, ...]:\n         \"\"\"Get what row is been selected.\"\"\"\n",
        "source_code_with_indent": "    \n    <DED>def selectedRows(self) -> Tuple[int]:\n        <IND>\"\"\"Get what row is been selected.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    \n    <DED>def selectedRows(self) -> Tuple[int, ...]:\n        <IND>\"\"\"Get what row is been selected.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:125:12 Incompatible return type [7]: Expected `Tuple[core.io.elements.VPoint]` but got `typing.Tuple[typing.Any, ...]`.",
    "message": " Expected `Tuple[core.io.elements.VPoint]` but got `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 125,
    "warning_line": "            return tuple(data)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \n    def data(self, index=-1) -> Tuple[VPoint]:\n        \"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_len": 106,
        "target_code": "    \n    def data(self, index=-1) -> Tuple[VPoint, ...]:\n        \"\"\"Get the digitization of all table data.\"\"\"\n",
        "target_code_len": 111,
        "diff_format": "@@ -100,3 +100,3 @@\n     \n-    def data(self, index=-1) -> Tuple[VPoint]:\n+    def data(self, index=-1) -> Tuple[VPoint, ...]:\n         \"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_with_indent": "    \n    <DED>def data(self, index=-1) -> Tuple[VPoint]:\n        <IND>\"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    \n    <DED>def data(self, index=-1) -> Tuple[VPoint, ...]:\n        <IND>\"\"\"Get the digitization of all table data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:274:43 Incompatible parameter type [6]: Expected `Tuple[int]` for 3rd positional only parameter to call `core.io.elements.VLink.__init__` but got `typing.Union[Tuple[], typing.Tuple[int, ...]]`.",
    "message": " Expected `Tuple[int]` for 3rd positional only parameter to call `core.io.elements.VLink.__init__` but got `typing.Union[Tuple[], typing.Tuple[int, ...]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 274,
    "warning_line": "            data.append(VLink(name, color, points))"
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:275:8 Incompatible return type [7]: Expected `Tuple[core.io.elements.VLink]` but got `typing.Tuple[typing.Any, ...]`.",
    "message": " Expected `Tuple[core.io.elements.VLink]` but got `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 275,
    "warning_line": "        return tuple(data)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \n    def data(self) -> Tuple[VLink]:\n        \"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_len": 95,
        "target_code": "    \n    def data(self) -> Tuple[VLink, ...]:\n        \"\"\"Get the digitization of all table data.\"\"\"\n",
        "target_code_len": 100,
        "diff_format": "@@ -263,3 +263,3 @@\n     \n-    def data(self) -> Tuple[VLink]:\n+    def data(self) -> Tuple[VLink, ...]:\n         \"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_with_indent": "    \n    <DED>def data(self) -> Tuple[VLink]:\n        <IND>\"\"\"Get the digitization of all table data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    \n    <DED>def data(self) -> Tuple[VLink, ...]:\n        <IND>\"\"\"Get the digitization of all table data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:312:8 Incompatible variable type [9]: points is declared to have type `Tuple[int]` but is used as type `Tuple[]`.",
    "message": " points is declared to have type `Tuple[int]` but is used as type `Tuple[]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 312,
    "warning_line": "        points: Tuple[int] =(),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def updateSelectPoint(self,\n        points: Tuple[int] =(),\n        distance: Tuple[float] =()\n    ):\n",
        "source_code_len": 106,
        "target_code": "    def updateSelectPoint(self,\n        points: Tuple[int, ...] =(),\n        distance: Tuple[float, ...] =()\n    ):\n",
        "target_code_len": 116,
        "diff_format": "@@ -311,4 +311,4 @@\n     def updateSelectPoint(self,\n-        points: Tuple[int] =(),\n-        distance: Tuple[float] =()\n+        points: Tuple[int, ...] =(),\n+        distance: Tuple[float, ...] =()\n     ):\n",
        "source_code_with_indent": "    def updateSelectPoint(self,\n        points: Tuple[int] =(),\n        distance: Tuple[float] =()\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def updateSelectPoint(self,\n        points: Tuple[int, ...] =(),\n        distance: Tuple[float, ...] =()\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "KmolYuan/Pyslvs-UI",
    "commit": "98f235117ab61c27c8bb82beed2e3ddc7368399b",
    "filename": "core/widgets/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/KmolYuan-Pyslvs-UI/core/widgets/table.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/widgets/table.py:313:8 Incompatible variable type [9]: distance is declared to have type `Tuple[float]` but is used as type `Tuple[]`.",
    "message": " distance is declared to have type `Tuple[float]` but is used as type `Tuple[]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 313,
    "warning_line": "        distance: Tuple[float] =()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def updateSelectPoint(self,\n        points: Tuple[int] =(),\n        distance: Tuple[float] =()\n    ):\n",
        "source_code_len": 106,
        "target_code": "    def updateSelectPoint(self,\n        points: Tuple[int, ...] =(),\n        distance: Tuple[float, ...] =()\n    ):\n",
        "target_code_len": 116,
        "diff_format": "@@ -311,4 +311,4 @@\n     def updateSelectPoint(self,\n-        points: Tuple[int] =(),\n-        distance: Tuple[float] =()\n+        points: Tuple[int, ...] =(),\n+        distance: Tuple[float, ...] =()\n     ):\n",
        "source_code_with_indent": "    def updateSelectPoint(self,\n        points: Tuple[int] =(),\n        distance: Tuple[float] =()\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def updateSelectPoint(self,\n        points: Tuple[int, ...] =(),\n        distance: Tuple[float, ...] =()\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]