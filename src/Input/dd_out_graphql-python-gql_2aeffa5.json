[
  {
    "project": "graphql-python/gql",
    "commit": "2aeffa50e41b186eaba2d4cfaa0c65d15061bdb4",
    "filename": "gql/transport/requests.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/graphql-python-gql/gql/transport/requests.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "gql/transport/requests.py:84:45 Incompatible parameter type [6]: Expected `Union[None, _typeshed.SupportsItems[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]], typing.Iterable[typing.Tuple[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]]], typing.Tuple[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]], bytes, str]` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "message": " Expected `Union[None, _typeshed.SupportsItems[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]], typing.Iterable[typing.Tuple[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]]], typing.Tuple[Union[bytes, float, int, str], Union[None, typing.Iterable[Union[bytes, float, int, str]], bytes, float, int, str]], bytes, str]` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 84,
    "warning_line": "        response = requests.post(self.url, **post_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_len": 70,
        "target_code": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_len": 86,
        "diff_format": "@@ -83,3 +84,3 @@\n \n-        response = requests.post(self.url, **post_args)\n+        response = requests.post(self.url, **post_args)  # type: ignore\n         try:\n",
        "source_code_with_indent": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "graphql-python/gql",
    "commit": "2aeffa50e41b186eaba2d4cfaa0c65d15061bdb4",
    "filename": "gql/transport/requests.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/graphql-python-gql/gql/transport/requests.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "gql/transport/requests.py:84:45 Incompatible parameter type [6]: Expected `Union[None, typing.IO[typing.Any], typing.Iterable[typing.Tuple[str, typing.Optional[str]]], typing.Mapping[str, typing.Any], bytes, str]` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "message": " Expected `Union[None, typing.IO[typing.Any], typing.Iterable[typing.Tuple[str, typing.Optional[str]]], typing.Mapping[str, typing.Any], bytes, str]` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 84,
    "warning_line": "        response = requests.post(self.url, **post_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_len": 70,
        "target_code": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_len": 86,
        "diff_format": "@@ -83,3 +84,3 @@\n \n-        response = requests.post(self.url, **post_args)\n+        response = requests.post(self.url, **post_args)  # type: ignore\n         try:\n",
        "source_code_with_indent": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "graphql-python/gql",
    "commit": "2aeffa50e41b186eaba2d4cfaa0c65d15061bdb4",
    "filename": "gql/transport/requests.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/graphql-python-gql/gql/transport/requests.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "gql/transport/requests.py:84:45 Incompatible parameter type [6]: Expected `bool` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "message": " Expected `bool` for 2nd positional only parameter to call `requests.api.post` but got `Union[Dict[str, typing.Any], AuthBase, RequestsCookieJar, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 84,
    "warning_line": "        response = requests.post(self.url, **post_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_len": 70,
        "target_code": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_len": 86,
        "diff_format": "@@ -83,3 +84,3 @@\n \n-        response = requests.post(self.url, **post_args)\n+        response = requests.post(self.url, **post_args)  # type: ignore\n         try:\n",
        "source_code_with_indent": "\n        response = requests.post(self.url, **post_args)\n        try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        response = requests.post(self.url, **post_args)  # type: ignore\n        try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]