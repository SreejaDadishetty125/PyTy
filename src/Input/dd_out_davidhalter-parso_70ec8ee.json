[
  {
    "project": "davidhalter/parso",
    "commit": "70ec8eecd1724a64b857c93cbe1cbd457afa352c",
    "filename": "parso/pgen2/generator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/davidhalter-parso/parso/pgen2/generator.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "parso/pgen2/generator.py:281:19 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Grammar.__init__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Grammar.__init__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 281,
    "warning_line": "    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    _calculate_tree_traversal(rule_to_dfas)\n    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)\n\n",
        "source_code_len": 115,
        "target_code": "    _calculate_tree_traversal(rule_to_dfas)\n    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)  # type: ignore\n\n",
        "target_code_len": 131,
        "diff_format": "@@ -280,3 +278,3 @@\n     _calculate_tree_traversal(rule_to_dfas)\n-    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)\n+    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)  # type: ignore\n \n",
        "source_code_with_indent": "    <DED><DED><DED><DED>_calculate_tree_traversal(rule_to_dfas)\n    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED><DED><DED>_calculate_tree_traversal(rule_to_dfas)\n    return Grammar(start_nonterminal, rule_to_dfas, reserved_strings)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]