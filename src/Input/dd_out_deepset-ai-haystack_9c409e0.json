[
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:81:15 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 81,
    "warning_line": "        if len(self.processor.tasks) == 0:"
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:124:54 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Processor.file_to_dicts` but got `Union[None, Path, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Processor.file_to_dicts` but got `Union[None, Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 124,
    "warning_line": "            dicts = list(self.processor.file_to_dicts(filename))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if dicts is None:\n            dicts = list(self.processor.file_to_dicts(filename))\n            # shuffle list of dicts here if we later want to have a random dev set splitted from train set\n",
        "source_code_len": 198,
        "target_code": "        if dicts is None:\n            dicts = list(self.processor.file_to_dicts(filename))  # type: ignore\n            # shuffle list of dicts here if we later want to have a random dev set splitted from train set\n",
        "target_code_len": 214,
        "diff_format": "@@ -123,3 +123,3 @@\n         if dicts is None:\n-            dicts = list(self.processor.file_to_dicts(filename))\n+            dicts = list(self.processor.file_to_dicts(filename))  # type: ignore\n             # shuffle list of dicts here if we later want to have a random dev set splitted from train set\n",
        "source_code_with_indent": "        <DED>if dicts is None:\n            <IND>dicts = list(self.processor.file_to_dicts(filename))\n            # shuffle list of dicts here if we later want to have a random dev set splitted from train set\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if dicts is None:\n            <IND>dicts = list(self.processor.file_to_dicts(filename))  # type: ignore\n            # shuffle list of dicts here if we later want to have a random dev set splitted from train set\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:648:52 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Processor.file_to_dicts` but got `Path`.",
    "message": " Expected `str` for 1st positional only parameter to call `Processor.file_to_dicts` but got `Path`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 648,
    "warning_line": "        dicts_from_files = [processor.file_to_dicts(file) for file in files]"
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:709:54 Unbound name [10]: Name `BertStyleLMProcessor` is used but not defined in the current scope.",
    "message": " Name `BertStyleLMProcessor` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 709,
    "warning_line": "        if len(dicts) < 2 and type(self.processor) == BertStyleLMProcessor:"
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:802:11 Unsupported operand [58]: `in` is not supported for right operand type `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " `in` is not supported for right operand type `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 802,
    "warning_line": "        if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n        if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:\n            return cls._make_question_answering(\n",
        "source_code_len": 138,
        "target_code": "\n        if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:  # type: ignore\n            return cls._make_question_answering(\n",
        "target_code_len": 154,
        "diff_format": "@@ -801,3 +601,3 @@\n \n-        if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:\n+        if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:  # type: ignore\n             return cls._make_question_answering(\n",
        "source_code_with_indent": "\n        <DED>if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:\n            <IND>return cls._make_question_answering(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>if \"question_answering\" in datasilo.processor.tasks and n_inner_splits is None:  # type: ignore\n            <IND>return cls._make_question_answering(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/data_handler/data_silo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/data_handler/data_silo.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/data_handler/data_silo.py:806:13 Unsupported operand [58]: `in` is not supported for right operand type `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " `in` is not supported for right operand type `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 806,
    "warning_line": "        elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            )\n        elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:\n            raise NotImplementedError()\n",
        "source_code_len": 148,
        "target_code": "            )\n        elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:  # type: ignore\n            raise NotImplementedError()\n",
        "target_code_len": 164,
        "diff_format": "@@ -805,3 +605,3 @@\n             )\n-        elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:\n+        elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:  # type: ignore\n             raise NotImplementedError()\n",
        "source_code_with_indent": "            )\n        <DED>elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:\n            <IND>raise NotImplementedError()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            )\n        <DED>elif \"question_answering\" in datasilo.processor.tasks and n_inner_splits is not None:  # type: ignore\n            <IND>raise NotImplementedError()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/adaptive_model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/adaptive_model.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/modeling/adaptive_model.py:343:47 Incompatible parameter type [6]: Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BaseAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BaseAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 343,
    "warning_line": "            model.connect_heads_with_processor(processor.tasks)"
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/biadaptive_model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/biadaptive_model.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/biadaptive_model.py:155:47 Incompatible parameter type [6]: Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BiAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BiAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 155,
    "warning_line": "            model.connect_heads_with_processor(processor.tasks)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if processor:\n            model.connect_heads_with_processor(processor.tasks)\n\n",
        "source_code_len": 87,
        "target_code": "        if processor:\n            model.connect_heads_with_processor(processor.tasks)  # type: ignore\n\n",
        "target_code_len": 103,
        "diff_format": "@@ -154,3 +154,3 @@\n         if processor:\n-            model.connect_heads_with_processor(processor.tasks)\n+            model.connect_heads_with_processor(processor.tasks)  # type: ignore\n \n",
        "source_code_with_indent": "        if processor:\n            <IND>model.connect_heads_with_processor(processor.tasks)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if processor:\n            <IND>model.connect_heads_with_processor(processor.tasks)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/biadaptive_model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/biadaptive_model.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/biadaptive_model.py:460:59 Incompatible parameter type [6]: Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BiAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `BiAdaptiveModel.connect_heads_with_processor` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 460,
    "warning_line": "            bi_adaptive_model.connect_heads_with_processor(processor.tasks)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if processor:\n            bi_adaptive_model.connect_heads_with_processor(processor.tasks)\n\n",
        "source_code_len": 99,
        "target_code": "        if processor:\n            bi_adaptive_model.connect_heads_with_processor(processor.tasks)  # type: ignore\n\n",
        "target_code_len": 115,
        "diff_format": "@@ -459,3 +459,3 @@\n         if processor:\n-            bi_adaptive_model.connect_heads_with_processor(processor.tasks)\n+            bi_adaptive_model.connect_heads_with_processor(processor.tasks)  # type: ignore\n \n",
        "source_code_with_indent": "        <DED>if processor:\n            <IND>bi_adaptive_model.connect_heads_with_processor(processor.tasks)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if processor:\n            <IND>bi_adaptive_model.connect_heads_with_processor(processor.tasks)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:275:4 Inconsistent override [14]: `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `config_file` in overriding signature.",
    "message": " `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `config_file` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 275,
    "warning_line": "    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        \"\"\"\n",
        "source_code_len": 139,
        "target_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        \"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -274,3 +274,3 @@\n     @classmethod\n-    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n+    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        <IND>",
        "target_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        <IND>"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:275:4 Inconsistent override [14]: `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `load_weights` in overriding signature.",
    "message": " `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `load_weights` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 275,
    "warning_line": "    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        \"\"\"\n",
        "source_code_len": 139,
        "target_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        \"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -274,3 +274,3 @@\n     @classmethod\n-    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n+    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        <IND>",
        "target_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        <IND>"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:275:4 Inconsistent override [14]: `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `strict` in overriding signature.",
    "message": " `haystack.basics.modeling.prediction_head.QuestionAnsweringHead.load` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `strict` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 275,
    "warning_line": "    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        \"\"\"\n",
        "source_code_len": 139,
        "target_code": "    @classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        \"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -274,3 +274,3 @@\n     @classmethod\n-    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n+    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):\n        <IND>",
        "target_code_with_indent": "    <DED>@classmethod\n    def load(cls, pretrained_model_name_or_path: Union[str, Path], revision: Optional[str] = None, **kwargs):  # type: ignore[override]\n        <IND>"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:294:20 Unsupported operand [58]: `in` is not supported for right operand type `Union[Path, str]`.",
    "message": " `in` is not supported for right operand type `Union[Path, str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 294,
    "warning_line": "                and \"config.json\" in pretrained_model_name_or_path \\",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in pretrained_model_name_or_path \\\n                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        else:\n",
        "source_code_len": 324,
        "target_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in str(pretrained_model_name_or_path) \\\n                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        else:\n",
        "target_code_len": 339,
        "diff_format": "@@ -293,6 +293,6 @@\n         if os.path.exists(pretrained_model_name_or_path) \\\n-                and \"config.json\" in pretrained_model_name_or_path \\\n-                and \"prediction_head\" in pretrained_model_name_or_path:\n+                and \"config.json\" in str(pretrained_model_name_or_path) \\\n+                and \"prediction_head\" in str(pretrained_model_name_or_path):\n             # a) FARM style\n-            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n+            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n         else:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in pretrained_model_name_or_path                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        <DED>else:\n",
        "target_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in str(pretrained_model_name_or_path)                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        <DED>else:\n"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:295:20 Unsupported operand [58]: `in` is not supported for right operand type `Union[Path, str]`.",
    "message": " `in` is not supported for right operand type `Union[Path, str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 295,
    "warning_line": "                and \"prediction_head\" in pretrained_model_name_or_path:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in pretrained_model_name_or_path \\\n                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        else:\n",
        "source_code_len": 324,
        "target_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in str(pretrained_model_name_or_path) \\\n                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        else:\n",
        "target_code_len": 339,
        "diff_format": "@@ -293,6 +293,6 @@\n         if os.path.exists(pretrained_model_name_or_path) \\\n-                and \"config.json\" in pretrained_model_name_or_path \\\n-                and \"prediction_head\" in pretrained_model_name_or_path:\n+                and \"config.json\" in str(pretrained_model_name_or_path) \\\n+                and \"prediction_head\" in str(pretrained_model_name_or_path):\n             # a) FARM style\n-            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n+            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n         else:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in pretrained_model_name_or_path                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        <DED>else:\n",
        "target_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in str(pretrained_model_name_or_path)                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        <DED>else:\n"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:297:51 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `PredictionHead.load` but got `Union[Path, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `PredictionHead.load` but got `Union[Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 297,
    "warning_line": "            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in pretrained_model_name_or_path \\\n                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        else:\n",
        "source_code_len": 324,
        "target_code": "        if os.path.exists(pretrained_model_name_or_path) \\\n                and \"config.json\" in str(pretrained_model_name_or_path) \\\n                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        else:\n",
        "target_code_len": 339,
        "diff_format": "@@ -293,6 +293,6 @@\n         if os.path.exists(pretrained_model_name_or_path) \\\n-                and \"config.json\" in pretrained_model_name_or_path \\\n-                and \"prediction_head\" in pretrained_model_name_or_path:\n+                and \"config.json\" in str(pretrained_model_name_or_path) \\\n+                and \"prediction_head\" in str(pretrained_model_name_or_path):\n             # a) FARM style\n-            super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n+            super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n         else:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in pretrained_model_name_or_path                and \"prediction_head\" in pretrained_model_name_or_path:\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(pretrained_model_name_or_path)\n        <DED>else:\n",
        "target_code_with_indent": "        if os.path.exists(pretrained_model_name_or_path)                and \"config.json\" in str(pretrained_model_name_or_path)                and \"prediction_head\" in str(pretrained_model_name_or_path):\n            # a) FARM style\n            <IND>super(QuestionAnsweringHead, cls).load(str(pretrained_model_name_or_path))\n        <DED>else:\n"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/prediction_head.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/prediction_head.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/prediction_head.py:1000:4 Inconsistent override [14]: `haystack.basics.modeling.prediction_head.TextSimilarityHead.logits_to_loss` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `labels` in overriding signature.",
    "message": " `haystack.basics.modeling.prediction_head.TextSimilarityHead.logits_to_loss` overrides method defined in `PredictionHead` inconsistently. Could not find parameter `labels` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 1000,
    "warning_line": "    def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):\n        \"\"\"\n",
        "source_code_len": 107,
        "target_code": "\n    def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):  # type: ignore[override]\n        \"\"\"\n",
        "target_code_len": 133,
        "diff_format": "@@ -999,3 +999,3 @@\n \n-    def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):\n+    def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):  # type: ignore[override]\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def logits_to_loss(self, logits: Tuple[torch.Tensor, torch.Tensor], label_ids, **kwargs):  # type: ignore[override]\n        <IND>"
      }
    ]
  },
  {
    "project": "deepset-ai/haystack",
    "commit": "9c409e00127fd21072b74779431277e8338dd71b",
    "filename": "haystack/basics/modeling/predictions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepset-ai-haystack/haystack/basics/modeling/predictions.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "haystack/basics/modeling/predictions.py:293:38 Incompatible parameter type [6]: Expected `Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "message": " Expected `Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "            del ret[\"predictions\"][0][\"id\"]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if squad:\n            del ret[\"predictions\"][0][\"id\"]\n            ret[\"predictions\"][0][\"question_id\"] = self.id\n        return ret\n",
        "source_code_len": 140,
        "target_code": "        if squad:\n            del ret[\"predictions\"][0][\"id\"]  # type: ignore\n            ret[\"predictions\"][0][\"question_id\"] = self.id  # type: ignore\n        return ret\n",
        "target_code_len": 172,
        "diff_format": "@@ -292,4 +292,4 @@\n         if squad:\n-            del ret[\"predictions\"][0][\"id\"]\n-            ret[\"predictions\"][0][\"question_id\"] = self.id\n+            del ret[\"predictions\"][0][\"id\"]  # type: ignore\n+            ret[\"predictions\"][0][\"question_id\"] = self.id  # type: ignore\n         return ret\n",
        "source_code_with_indent": "        if squad:\n            <IND>del ret[\"predictions\"][0][\"id\"]\n            ret[\"predictions\"][0][\"question_id\"] = self.id\n        <DED>return ret\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if squad:\n            <IND>del ret[\"predictions\"][0][\"id\"]  # type: ignore\n            ret[\"predictions\"][0][\"question_id\"] = self.id  # type: ignore\n        <DED>return ret\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]