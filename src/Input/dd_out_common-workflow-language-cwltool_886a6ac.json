[
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/argparser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/argparser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/argparser.py:354:4 Incompatible variable type [9]: action is declared to have type `Union[argparse.Action, str]` but is used as type `None`.",
    "message": " action is declared to have type `Union[argparse.Action, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 354,
    "warning_line": "    action = None  # type: Union[argparse.Action, Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/argparser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/argparser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/argparser.py:404:52 Incompatible parameter type [6]: Expected `Union[typing.Type[argparse.Action], str]` for 4th parameter `action` to call `argparse._ActionsContainer.add_argument` but got `Union[argparse.Action, str]`.",
    "message": " Expected `Union[typing.Type[argparse.Action], str]` for 4th parameter `action` to call `argparse._ActionsContainer.add_argument` but got `Union[argparse.Action, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 404,
    "warning_line": "        flag + name, required=required, help=ahelp, action=action,"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:89:8 Incompatible attribute type [8]: Attribute `schemaDefs` declared in class `Builder` has type `Dict[str, Dict[str, typing.Any]]` but is used as type `None`.",
    "message": " Attribute `schemaDefs` declared in class `Builder` has type `Dict[str, Dict[str, typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 89,
    "warning_line": "        self.schemaDefs = None  # type: Dict[Text, Dict[Text, Any]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:90:8 Incompatible attribute type [8]: Attribute `files` declared in class `Builder` has type `List[Dict[str, str]]` but is used as type `None`.",
    "message": " Attribute `files` declared in class `Builder` has type `List[Dict[str, str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 90,
    "warning_line": "        self.files = None  # type: List[Dict[Text, Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:91:8 Incompatible attribute type [8]: Attribute `fs_access` declared in class `Builder` has type `StdFsAccess` but is used as type `None`.",
    "message": " Attribute `fs_access` declared in class `Builder` has type `StdFsAccess` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 91,
    "warning_line": "        self.fs_access = None  # type: StdFsAccess"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:92:8 Incompatible attribute type [8]: Attribute `job` declared in class `Builder` has type `Dict[str, Union[Dict[str, typing.Any], List[typing.Any], str]]` but is used as type `None`.",
    "message": " Attribute `job` declared in class `Builder` has type `Dict[str, Union[Dict[str, typing.Any], List[typing.Any], str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 92,
    "warning_line": "        self.job = None  # type: Dict[Text, Union[Dict[Text, Any], List, Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:93:8 Incompatible attribute type [8]: Attribute `requirements` declared in class `Builder` has type `List[Dict[str, typing.Any]]` but is used as type `None`.",
    "message": " Attribute `requirements` declared in class `Builder` has type `List[Dict[str, typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 93,
    "warning_line": "        self.requirements = None  # type: List[Dict[Text, Any]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:94:8 Incompatible attribute type [8]: Attribute `hints` declared in class `Builder` has type `List[Dict[str, typing.Any]]` but is used as type `None`.",
    "message": " Attribute `hints` declared in class `Builder` has type `List[Dict[str, typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 94,
    "warning_line": "        self.hints = None  # type: List[Dict[Text, Any]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:95:8 Incompatible attribute type [8]: Attribute `outdir` declared in class `Builder` has type `str` but is used as type `None`.",
    "message": " Attribute `outdir` declared in class `Builder` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 95,
    "warning_line": "        self.outdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:96:8 Incompatible attribute type [8]: Attribute `tmpdir` declared in class `Builder` has type `str` but is used as type `None`.",
    "message": " Attribute `tmpdir` declared in class `Builder` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 96,
    "warning_line": "        self.tmpdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:97:8 Incompatible attribute type [8]: Attribute `resources` declared in class `Builder` has type `Dict[str, Union[int, str]]` but is used as type `None`.",
    "message": " Attribute `resources` declared in class `Builder` has type `Dict[str, Union[int, str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 97,
    "warning_line": "        self.resources = None  # type: Dict[Text, Union[int, Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:99:8 Incompatible attribute type [8]: Attribute `timeout` declared in class `Builder` has type `int` but is used as type `None`.",
    "message": " Attribute `timeout` declared in class `Builder` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 99,
    "warning_line": "        self.timeout = None  # type: int"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:100:8 Incompatible attribute type [8]: Attribute `pathmapper` declared in class `Builder` has type `PathMapper` but is used as type `None`.",
    "message": " Attribute `pathmapper` declared in class `Builder` has type `PathMapper` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 100,
    "warning_line": "        self.pathmapper = None  # type: PathMapper"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:101:8 Incompatible attribute type [8]: Attribute `stagedir` declared in class `Builder` has type `str` but is used as type `None`.",
    "message": " Attribute `stagedir` declared in class `Builder` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 101,
    "warning_line": "        self.stagedir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:102:8 Incompatible attribute type [8]: Attribute `make_fs_access` declared in class `Builder` has type `Type[StdFsAccess]` but is used as type `None`.",
    "message": " Attribute `make_fs_access` declared in class `Builder` has type `Type[StdFsAccess]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 102,
    "warning_line": "        self.make_fs_access = None  # type: Type[StdFsAccess]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:105:8 Incompatible attribute type [8]: Attribute `mutation_manager` declared in class `Builder` has type `MutationManager` but is used as type `None`.",
    "message": " Attribute `mutation_manager` declared in class `Builder` has type `MutationManager` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 105,
    "warning_line": "        self.mutation_manager = None  # type: MutationManager"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:113:8 Incompatible attribute type [8]: Attribute `find_default_container` declared in class `Builder` has type `typing.Callable[[], str]` but is used as type `None`.",
    "message": " Attribute `find_default_container` declared in class `Builder` has type `typing.Callable[[], str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 113,
    "warning_line": "        self.find_default_container = None  # type: Callable[[], Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:124:40 Incompatible variable type [9]: lead_pos is declared to have type `Union[List[int], int]` but is used as type `None`.",
    "message": " lead_pos is declared to have type `Union[List[int], int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 124,
    "warning_line": "    def bind_input(self, schema, datum, lead_pos=None, tail_pos=None, discover_secondaryFiles=False):"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:124:55 Incompatible variable type [9]: tail_pos is declared to have type `List[int]` but is used as type `None`.",
    "message": " tail_pos is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 124,
    "warning_line": "    def bind_input(self, schema, datum, lead_pos=None, tail_pos=None, discover_secondaryFiles=False):"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:131:8 Incompatible variable type [9]: binding is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " binding is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 131,
    "warning_line": "        binding = None  # type: Dict[Text,Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/builder.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/builder.py:202:16 Incompatible variable type [9]: binding is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " binding is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 202,
    "warning_line": "                binding = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/checker.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/checker.py:37:96 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `check_types` but got `None`.",
    "message": " Expected `str` for 3rd positional only parameter to call `check_types` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 37,
    "warning_line": "        return check_types({\"items\": _get_type(srctype), \"type\": \"array\"}, _get_type(sinktype), None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_len": 417,
        "target_code": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_len": 461,
        "diff_format": "@@ -1,14 +1,15 @@\n+import logging\n from collections import namedtuple\n-import logging\n-\n-from typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\n+from typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n+                    Generator, Iterable, List, Optional, Text, Union, cast)\n+\n+import schema_salad.validate as validate\n+from schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\n import six\n \n-from schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\n-import schema_salad.validate as validate\n+from .errors import WorkflowException\n+from .loghandler import _logger\n from .process import shortname\n-from .errors import WorkflowException\n from .utils import json_dumps\n \n-_logger = logging.getLogger(\"cwltool\")\n \n",
        "source_code_with_indent": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_len": 182,
        "target_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "target_code_len": 202,
        "diff_format": "@@ -22,3 +23,3 @@\n def check_types(srctype, sinktype, linkMerge, valueFrom):\n-    # type: (Any, Any, Text, Text) -> Text\n+    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n     \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    <IND>",
        "target_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/checker.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/checker.py:37:102 Incompatible parameter type [6]: Expected `str` for 4th positional only parameter to call `check_types` but got `None`.",
    "message": " Expected `str` for 4th positional only parameter to call `check_types` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 37,
    "warning_line": "        return check_types({\"items\": _get_type(srctype), \"type\": \"array\"}, _get_type(sinktype), None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_len": 417,
        "target_code": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_len": 461,
        "diff_format": "@@ -1,14 +1,15 @@\n+import logging\n from collections import namedtuple\n-import logging\n-\n-from typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\n+from typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n+                    Generator, Iterable, List, Optional, Text, Union, cast)\n+\n+import schema_salad.validate as validate\n+from schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\n import six\n \n-from schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\n-import schema_salad.validate as validate\n+from .errors import WorkflowException\n+from .loghandler import _logger\n from .process import shortname\n-from .errors import WorkflowException\n from .utils import json_dumps\n \n-_logger = logging.getLogger(\"cwltool\")\n \n",
        "source_code_with_indent": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_len": 182,
        "target_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "target_code_len": 202,
        "diff_format": "@@ -22,3 +23,3 @@\n def check_types(srctype, sinktype, linkMerge, valueFrom):\n-    # type: (Any, Any, Text, Text) -> Text\n+    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n     \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    <IND>",
        "target_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/checker.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/checker.py:39:88 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `check_types` but got `None`.",
    "message": " Expected `str` for 3rd positional only parameter to call `check_types` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 39,
    "warning_line": "        return check_types(merge_flatten_type(_get_type(srctype)), _get_type(sinktype), None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_len": 417,
        "target_code": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_len": 461,
        "diff_format": "@@ -1,14 +1,15 @@\n+import logging\n from collections import namedtuple\n-import logging\n-\n-from typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\n+from typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n+                    Generator, Iterable, List, Optional, Text, Union, cast)\n+\n+import schema_salad.validate as validate\n+from schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\n import six\n \n-from schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\n-import schema_salad.validate as validate\n+from .errors import WorkflowException\n+from .loghandler import _logger\n from .process import shortname\n-from .errors import WorkflowException\n from .utils import json_dumps\n \n-_logger = logging.getLogger(\"cwltool\")\n \n",
        "source_code_with_indent": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_len": 182,
        "target_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "target_code_len": 202,
        "diff_format": "@@ -22,3 +23,3 @@\n def check_types(srctype, sinktype, linkMerge, valueFrom):\n-    # type: (Any, Any, Text, Text) -> Text\n+    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n     \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    <IND>",
        "target_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/checker.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/checker.py:39:94 Incompatible parameter type [6]: Expected `str` for 4th positional only parameter to call `check_types` but got `None`.",
    "message": " Expected `str` for 4th positional only parameter to call `check_types` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 39,
    "warning_line": "        return check_types(merge_flatten_type(_get_type(srctype)), _get_type(sinktype), None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_len": 417,
        "target_code": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_len": 461,
        "diff_format": "@@ -1,14 +1,15 @@\n+import logging\n from collections import namedtuple\n-import logging\n-\n-from typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\n+from typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n+                    Generator, Iterable, List, Optional, Text, Union, cast)\n+\n+import schema_salad.validate as validate\n+from schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\n import six\n \n-from schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\n-import schema_salad.validate as validate\n+from .errors import WorkflowException\n+from .loghandler import _logger\n from .process import shortname\n-from .errors import WorkflowException\n from .utils import json_dumps\n \n-_logger = logging.getLogger(\"cwltool\")\n \n",
        "source_code_with_indent": "from collections import namedtuple\nimport logging\n\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Text, Union, cast\nimport six\n\nfrom schema_salad.sourceline import SourceLine, cmap, strip_dup_lineno, indent, bullets\nimport schema_salad.validate as validate\nfrom .process import shortname\nfrom .errors import WorkflowException\nfrom .utils import json_dumps\n\n_logger = logging.getLogger(\"cwltool\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom collections import namedtuple\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Generator, Iterable, List, Optional, Text, Union, cast)\n\nimport schema_salad.validate as validate\nfrom schema_salad.sourceline import SourceLine, bullets, strip_dup_lineno\nimport six\n\nfrom .errors import WorkflowException\nfrom .loghandler import _logger\nfrom .process import shortname\nfrom .utils import json_dumps\n\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_len": 182,
        "target_code": "def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "target_code_len": 202,
        "diff_format": "@@ -22,3 +23,3 @@\n def check_types(srctype, sinktype, linkMerge, valueFrom):\n-    # type: (Any, Any, Text, Text) -> Text\n+    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n     \"\"\"Check if the source and sink types are \"pass\", \"warning\", or \"exception\".\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Text, Text) -> Text\n    <IND>",
        "target_code_with_indent": "<DED>def check_types(srctype, sinktype, linkMerge, valueFrom):\n    # type: (Any, Any, Optional[Text], Optional[Text]) -> Text\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:67:12 Incompatible attribute type [8]: Attribute `builder` declared in class `ExpressionTool.ExpressionJob` has type `Builder` but is used as type `None`.",
    "message": " Attribute `builder` declared in class `ExpressionTool.ExpressionJob` has type `Builder` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 67,
    "warning_line": "            self.builder = None  # type: Builder"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:68:12 Incompatible attribute type [8]: Attribute `requirements` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "message": " Attribute `requirements` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 68,
    "warning_line": "            self.requirements = None  # type: Dict[Text, Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:69:12 Incompatible attribute type [8]: Attribute `hints` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "message": " Attribute `hints` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 69,
    "warning_line": "            self.hints = None  # type: Dict[Text, Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:70:12 Incompatible attribute type [8]: Attribute `collect_outputs` declared in class `ExpressionTool.ExpressionJob` has type `typing.Callable[[typing.Any], typing.Any]` but is used as type `None`.",
    "message": " Attribute `collect_outputs` declared in class `ExpressionTool.ExpressionJob` has type `typing.Callable[[typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 70,
    "warning_line": "            self.collect_outputs = None  # type: Callable[[Any], Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:71:12 Incompatible attribute type [8]: Attribute `output_callback` declared in class `ExpressionTool.ExpressionJob` has type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "message": " Attribute `output_callback` declared in class `ExpressionTool.ExpressionJob` has type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 71,
    "warning_line": "            self.output_callback = None  # type: Callable[[Any, Any], Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:72:12 Incompatible attribute type [8]: Attribute `outdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "message": " Attribute `outdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 72,
    "warning_line": "            self.outdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:73:12 Incompatible attribute type [8]: Attribute `tmpdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "message": " Attribute `tmpdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 73,
    "warning_line": "            self.tmpdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:74:12 Incompatible attribute type [8]: Attribute `script` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "message": " Attribute `script` declared in class `ExpressionTool.ExpressionJob` has type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 74,
    "warning_line": "            self.script = None  # type: Dict[Text, Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:100:8 Incompatible attribute type [8]: Attribute `outdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "message": " Attribute `outdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 100,
    "warning_line": "        j.outdir = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:101:8 Incompatible attribute type [8]: Attribute `tmpdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "message": " Attribute `tmpdir` declared in class `ExpressionTool.ExpressionJob` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 101,
    "warning_line": "        j.tmpdir = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:360:8 Incompatible attribute type [8]: Attribute `stdin` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stdin` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 360,
    "warning_line": "        j.stdin = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:361:8 Incompatible attribute type [8]: Attribute `stderr` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stderr` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 361,
    "warning_line": "        j.stderr = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:362:8 Incompatible attribute type [8]: Attribute `stdout` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stdout` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 362,
    "warning_line": "        j.stdout = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:381:8 Incompatible attribute type [8]: Attribute `pathmapper` declared in class `Builder` has type `PathMapper` but is used as type `None`.",
    "message": " Attribute `pathmapper` declared in class `Builder` has type `PathMapper` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 381,
    "warning_line": "        builder.pathmapper = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/command_line_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/command_line_tool.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/command_line_tool.py:734:16 Incompatible variable type [9]: r is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " r is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 734,
    "warning_line": "                r = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/docker_id.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/docker_id.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/docker_id.py:23:8 Incompatible return type [7]: Expected `Tuple[int, int]` but got `Tuple[None, None]`.",
    "message": " Expected `Tuple[int, int]` but got `Tuple[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 23,
    "warning_line": "        return (None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 225,
        "target_code": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 269,
        "diff_format": "@@ -1,9 +1,11 @@\n-from __future__ import print_function\n-from __future__ import absolute_import\n+from __future__ import absolute_import, print_function\n+\n import os\n import sys\n-from typing import List, Text, Tuple\n+from typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n+\n from .utils import subprocess\n \n-def docker_vm_id():  # type: () -> Tuple[int, int]\n+\n+def docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/docker_id.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/docker_id.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/docker_id.py:40:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 40,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 225,
        "target_code": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 269,
        "diff_format": "@@ -1,9 +1,11 @@\n-from __future__ import print_function\n-from __future__ import absolute_import\n+from __future__ import absolute_import, print_function\n+\n import os\n import sys\n-from typing import List, Text, Tuple\n+from typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n+\n from .utils import subprocess\n \n-def docker_vm_id():  # type: () -> Tuple[int, int]\n+\n+def docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        return docker_machine_id()\n    else:\n        return (None, None)\n\n\ndef check_output_and_strip(cmd):  # type: (List[Text]) -> Text\n    \"\"\"\n",
        "source_code_len": 146,
        "target_code": "        return docker_machine_id()\n    return (None, None)\n\n\ndef check_output_and_strip(cmd):  # type: (List[Text]) -> Optional[Text]\n    \"\"\"\n",
        "target_code_len": 142,
        "diff_format": "@@ -21,7 +23,6 @@\n         return docker_machine_id()\n-    else:\n-        return (None, None)\n+    return (None, None)\n \n \n-def check_output_and_strip(cmd):  # type: (List[Text]) -> Text\n+def check_output_and_strip(cmd):  # type: (List[Text]) -> Optional[Text]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        <IND>return docker_machine_id()\n    <DED>else:\n        <IND>return (None, None)\n\n\n<DED><DED>def check_output_and_strip(cmd):  # type: (List[Text]) -> Text\n    <IND>",
        "target_code_with_indent": "        <IND>return docker_machine_id()\n    <DED>return (None, None)\n\n\n<DED>def check_output_and_strip(cmd):  # type: (List[Text]) -> Optional[Text]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef docker_machine_name():  # type: () -> Text\n    \"\"\"\n",
        "source_code_len": 56,
        "target_code": "\ndef docker_machine_name():  # type: () -> Optional[Text]\n    \"\"\"\n",
        "target_code_len": 66,
        "diff_format": "@@ -42,3 +43,3 @@\n \n-def docker_machine_name():  # type: () -> Text\n+def docker_machine_name():  # type: () -> Optional[Text]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def docker_machine_name():  # type: () -> Text\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>def docker_machine_name():  # type: () -> Optional[Text]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    machine_name = docker_machine_name()\n    return cmd_output_matches(['docker-machine', 'status', machine_name], 'Running')\n",
        "source_code_len": 126,
        "target_code": "    machine_name = docker_machine_name()\n    if not machine_name:\n        return False\n    return cmd_output_matches(['docker-machine', 'status', machine_name], 'Running')\n",
        "target_code_len": 172,
        "diff_format": "@@ -78,2 +76,4 @@\n     machine_name = docker_machine_name()\n+    if not machine_name:\n+        return False\n     return cmd_output_matches(['docker-machine', 'status', machine_name], 'Running')\n",
        "source_code_with_indent": "    machine_name = docker_machine_name()\n    return cmd_output_matches(['docker-machine', 'status', machine_name], 'Running')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    machine_name = docker_machine_name()\n    if not machine_name:\n        <IND>return False\n    <DED>return cmd_output_matches(['docker-machine', 'status', machine_name], 'Running')\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    machine_name = docker_machine_name()\n    uid = cmd_output_to_int(['docker-machine', 'ssh', machine_name, \"id -u\"])\n",
        "source_code_len": 119,
        "target_code": "    machine_name = docker_machine_name()\n    if not machine_name:\n        return (None, None)\n    uid = cmd_output_to_int(['docker-machine', 'ssh', machine_name, \"id -u\"])\n",
        "target_code_len": 172,
        "diff_format": "@@ -113,2 +113,4 @@\n     machine_name = docker_machine_name()\n+    if not machine_name:\n+        return (None, None)\n     uid = cmd_output_to_int(['docker-machine', 'ssh', machine_name, \"id -u\"])\n",
        "source_code_with_indent": "    machine_name = docker_machine_name()\n    uid = cmd_output_to_int(['docker-machine', 'ssh', machine_name, \"id -u\"])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    machine_name = docker_machine_name()\n    if not machine_name:\n        <IND>return (None, None)\n    <DED>uid = cmd_output_to_int(['docker-machine', 'ssh', machine_name, \"id -u\"])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/docker_id.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/docker_id.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/docker_id.py:94:12 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 94,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 225,
        "target_code": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 269,
        "diff_format": "@@ -1,9 +1,11 @@\n-from __future__ import print_function\n-from __future__ import absolute_import\n+from __future__ import absolute_import, print_function\n+\n import os\n import sys\n-from typing import List, Text, Tuple\n+from typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n+\n from .utils import subprocess\n \n-def docker_vm_id():  # type: () -> Tuple[int, int]\n+\n+def docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n    \"\"\"\n",
        "source_code_len": 66,
        "target_code": "\ndef cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n    \"\"\"\n",
        "target_code_len": 76,
        "diff_format": "@@ -81,3 +81,3 @@\n \n-def cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n+def cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n    <IND>",
        "target_code_with_indent": "\n<DED>def cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef boot2docker_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 82,
        "diff_format": "@@ -97,3 +97,3 @@\n \n-def boot2docker_id():  # type: () -> Tuple[int, int]\n+def boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def boot2docker_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "\n<DED>def boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef docker_machine_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 65,
        "target_code": "\ndef docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -106,3 +106,3 @@\n \n-def docker_machine_id():  # type: () -> Tuple[int, int]\n+def docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def docker_machine_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "\n<DED>def docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/docker_id.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/docker_id.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/docker_id.py:95:4 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 95,
    "warning_line": "    return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 225,
        "target_code": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 269,
        "diff_format": "@@ -1,9 +1,11 @@\n-from __future__ import print_function\n-from __future__ import absolute_import\n+from __future__ import absolute_import, print_function\n+\n import os\n import sys\n-from typing import List, Text, Tuple\n+from typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n+\n from .utils import subprocess\n \n-def docker_vm_id():  # type: () -> Tuple[int, int]\n+\n+def docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "from __future__ import print_function\nfrom __future__ import absolute_import\nimport os\nimport sys\nfrom typing import List, Text, Tuple\nfrom .utils import subprocess\n\ndef docker_vm_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "from __future__ import absolute_import, print_function\n\nimport os\nimport sys\nfrom typing import List, Optional, Text, Tuple  # pylint: disable=unused-import\n\nfrom .utils import subprocess\n\n\ndef docker_vm_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n    \"\"\"\n",
        "source_code_len": 66,
        "target_code": "\ndef cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n    \"\"\"\n",
        "target_code_len": 76,
        "diff_format": "@@ -81,3 +81,3 @@\n \n-def cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n+def cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def cmd_output_to_int(cmd):  # type: (List[Text]) -> int\n    <IND>",
        "target_code_with_indent": "\n<DED>def cmd_output_to_int(cmd):  # type: (List[Text]) -> Optional[int]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef boot2docker_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 82,
        "diff_format": "@@ -97,3 +97,3 @@\n \n-def boot2docker_id():  # type: () -> Tuple[int, int]\n+def boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def boot2docker_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "\n<DED>def boot2docker_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef docker_machine_id():  # type: () -> Tuple[int, int]\n    \"\"\"\n",
        "source_code_len": 65,
        "target_code": "\ndef docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -106,3 +106,3 @@\n \n-def docker_machine_id():  # type: () -> Tuple[int, int]\n+def docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def docker_machine_id():  # type: () -> Tuple[int, int]\n    <IND>",
        "target_code_with_indent": "\n<DED>def docker_machine_id():  # type: () -> Tuple[Optional[int], Optional[int]]\n    <IND>"
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:121:8 Incompatible return type [7]: Expected `List[int]` but got `None`.",
    "message": " Expected `List[int]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 121,
    "warning_line": "        return None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:129:8 Incompatible variable type [9]: key is declared to have type `Union[int, str]` but is used as type `None`.",
    "message": " key is declared to have type `Union[int, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 129,
    "warning_line": "        key = None  # type: Union[Text, int]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:160:44 Incompatible variable type [9]: timeout is declared to have type `int` but is used as type `None`.",
    "message": " timeout is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 160,
    "warning_line": "def evaluator(ex, jslib, obj, fullJS=False, timeout=None, force_docker_pull=False, debug=False, js_console=False):"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:197:16 Incompatible variable type [9]: timeout is declared to have type `int` but is used as type `None`.",
    "message": " timeout is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 197,
    "warning_line": "                timeout=None, fullJS=None, jslib=\"\", force_docker_pull=False,"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:197:30 Incompatible variable type [9]: fullJS is declared to have type `bool` but is used as type `None`.",
    "message": " fullJS is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 197,
    "warning_line": "                timeout=None, fullJS=None, jslib=\"\", force_docker_pull=False,"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/expression.py:231:43 Incompatible variable type [9]: timeout is declared to have type `int` but is used as type `None`.",
    "message": " timeout is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 231,
    "warning_line": "            context=None, pull_image=True, timeout=None, force_docker_pull=False,"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:134:8 Incompatible attribute type [8]: Attribute `builder` declared in class `JobBase` has type `Builder` but is used as type `None`.",
    "message": " Attribute `builder` declared in class `JobBase` has type `Builder` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 134,
    "warning_line": "        self.builder = None  # type: Builder"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:135:8 Incompatible attribute type [8]: Attribute `joborder` declared in class `JobBase` has type `Dict[str, Union[Dict[str, typing.Any], List[typing.Any], str]]` but is used as type `None`.",
    "message": " Attribute `joborder` declared in class `JobBase` has type `Dict[str, Union[Dict[str, typing.Any], List[typing.Any], str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 135,
    "warning_line": "        self.joborder = None  # type: Dict[Text, Union[Dict[Text, Any], List, Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:136:8 Incompatible attribute type [8]: Attribute `stdin` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stdin` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 136,
    "warning_line": "        self.stdin = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:137:8 Incompatible attribute type [8]: Attribute `stderr` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stderr` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 137,
    "warning_line": "        self.stderr = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:138:8 Incompatible attribute type [8]: Attribute `stdout` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stdout` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 138,
    "warning_line": "        self.stdout = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:139:8 Incompatible attribute type [8]: Attribute `successCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "message": " Attribute `successCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 139,
    "warning_line": "        self.successCodes = None  # type: Iterable[int]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:140:8 Incompatible attribute type [8]: Attribute `temporaryFailCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "message": " Attribute `temporaryFailCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 140,
    "warning_line": "        self.temporaryFailCodes = None  # type: Iterable[int]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:141:8 Incompatible attribute type [8]: Attribute `permanentFailCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "message": " Attribute `permanentFailCodes` declared in class `JobBase` has type `Iterable[int]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 141,
    "warning_line": "        self.permanentFailCodes = None  # type: Iterable[int]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:142:8 Incompatible attribute type [8]: Attribute `requirements` declared in class `JobBase` has type `List[Dict[str, str]]` but is used as type `None`.",
    "message": " Attribute `requirements` declared in class `JobBase` has type `List[Dict[str, str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 142,
    "warning_line": "        self.requirements = None  # type: List[Dict[Text, Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:143:8 Incompatible attribute type [8]: Attribute `hints` declared in class `JobBase` has type `Dict[str, str]` but is used as type `None`.",
    "message": " Attribute `hints` declared in class `JobBase` has type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 143,
    "warning_line": "        self.hints = None  # type: Dict[Text,Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:144:8 Incompatible attribute type [8]: Attribute `name` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `name` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 144,
    "warning_line": "        self.name = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:145:8 Incompatible attribute type [8]: Attribute `command_line` declared in class `JobBase` has type `List[str]` but is used as type `None`.",
    "message": " Attribute `command_line` declared in class `JobBase` has type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 145,
    "warning_line": "        self.command_line = None  # type: List[Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:146:8 Incompatible attribute type [8]: Attribute `pathmapper` declared in class `JobBase` has type `PathMapper` but is used as type `None`.",
    "message": " Attribute `pathmapper` declared in class `JobBase` has type `PathMapper` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 146,
    "warning_line": "        self.pathmapper = None  # type: PathMapper"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:147:8 Incompatible attribute type [8]: Attribute `make_pathmapper` declared in class `JobBase` has type `typing.Callable[..., PathMapper]` but is used as type `None`.",
    "message": " Attribute `make_pathmapper` declared in class `JobBase` has type `typing.Callable[..., PathMapper]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 147,
    "warning_line": "        self.make_pathmapper = None  # type: Callable[..., PathMapper]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:148:8 Incompatible attribute type [8]: Attribute `generatemapper` declared in class `JobBase` has type `PathMapper` but is used as type `None`.",
    "message": " Attribute `generatemapper` declared in class `JobBase` has type `PathMapper` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 148,
    "warning_line": "        self.generatemapper = None  # type: PathMapper"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:149:8 Incompatible attribute type [8]: Attribute `collect_outputs` declared in class `JobBase` has type `Union[typing.Callable[[typing.Any], typing.Any], functools.partial[typing.Any]]` but is used as type `None`.",
    "message": " Attribute `collect_outputs` declared in class `JobBase` has type `Union[typing.Callable[[typing.Any], typing.Any], functools.partial[typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 149,
    "warning_line": "        self.collect_outputs = None  # type: Union[Callable[[Any], Any], functools.partial[Any]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:150:8 Incompatible attribute type [8]: Attribute `output_callback` declared in class `JobBase` has type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "message": " Attribute `output_callback` declared in class `JobBase` has type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 150,
    "warning_line": "        self.output_callback = None  # type: Callable[[Any, Any], Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:151:8 Incompatible attribute type [8]: Attribute `outdir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `outdir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 151,
    "warning_line": "        self.outdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:152:8 Incompatible attribute type [8]: Attribute `tmpdir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `tmpdir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 152,
    "warning_line": "        self.tmpdir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:153:8 Incompatible attribute type [8]: Attribute `environment` declared in class `JobBase` has type `MutableMapping[str, str]` but is used as type `None`.",
    "message": " Attribute `environment` declared in class `JobBase` has type `MutableMapping[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 153,
    "warning_line": "        self.environment = None  # type: MutableMapping[Text, Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:154:8 Incompatible attribute type [8]: Attribute `generatefiles` declared in class `JobBase` has type `Dict[str, Union[Dict[str, str], List[Dict[str, str]], str]]` but is used as type `None`.",
    "message": " Attribute `generatefiles` declared in class `JobBase` has type `Dict[str, Union[Dict[str, str], List[Dict[str, str]], str]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 154,
    "warning_line": "        self.generatefiles = None  # type: Dict[Text, Union[List[Dict[Text, Text]], Dict[Text, Text], Text]]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:155:8 Incompatible attribute type [8]: Attribute `stagedir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "message": " Attribute `stagedir` declared in class `JobBase` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 155,
    "warning_line": "        self.stagedir = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:156:8 Incompatible attribute type [8]: Attribute `inplace_update` declared in class `JobBase` has type `bool` but is used as type `None`.",
    "message": " Attribute `inplace_update` declared in class `JobBase` has type `bool` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 156,
    "warning_line": "        self.inplace_update = None  # type: bool"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:157:8 Incompatible attribute type [8]: Attribute `timelimit` declared in class `JobBase` has type `int` but is used as type `None`.",
    "message": " Attribute `timelimit` declared in class `JobBase` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 157,
    "warning_line": "        self.timelimit = None  # type: int"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:189:17 Incompatible variable type [9]: tmp_outdir_prefix is declared to have type `str` but is used as type `None`.",
    "message": " tmp_outdir_prefix is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 189,
    "warning_line": "                 tmp_outdir_prefix=None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:194:8 Incompatible variable type [9]: shouldquote is declared to have type `typing.Callable[[typing.Any], typing.Any]` but is used as type `None`.",
    "message": " shouldquote is declared to have type `typing.Callable[[typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 194,
    "warning_line": "        shouldquote = None  # type: Callable[[Any], Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        shouldquote = None  # type: Callable[[Any], Any]\n        if scr:\n            shouldquote = lambda x: False\n        else:\n            shouldquote = needs_shell_quoting_re.search\n\n",
        "source_code_len": 187,
        "target_code": "\n        shouldquote = needs_shell_quoting_re.search   # type: Callable[[Any], Any]\n        if scr:\n            shouldquote = lambda x: False\n\n",
        "target_code_len": 143,
        "diff_format": "@@ -193,7 +210,5 @@\n \n-        shouldquote = None  # type: Callable[[Any], Any]\n+        shouldquote = needs_shell_quoting_re.search   # type: Callable[[Any], Any]\n         if scr:\n             shouldquote = lambda x: False\n-        else:\n-            shouldquote = needs_shell_quoting_re.search\n \n",
        "source_code_with_indent": "\n        shouldquote = None  # type: Callable[[Any], Any]\n        if scr:\n            <IND>shouldquote = lambda x: False\n        <DED>else:\n            <IND>shouldquote = needs_shell_quoting_re.search\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        shouldquote = needs_shell_quoting_re.search   # type: Callable[[Any], Any]\n        if scr:\n            <IND>shouldquote = lambda x: False\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:243:16 Incompatible parameter type [6]: Expected `str` for 2nd parameter `stdin_path` to call `_job_popen` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 2nd parameter `stdin_path` to call `_job_popen` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 243,
    "warning_line": "                stdin_path=stdin_path,"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:366:30 Incompatible variable type [9]: tmp_outdir_prefix is declared to have type `str` but is used as type `None`.",
    "message": " tmp_outdir_prefix is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 366,
    "warning_line": "                              tmp_outdir_prefix=None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:385:8 Incompatible variable type [9]: env is declared to have type `MutableMapping[str, str]` but is used as type `None`.",
    "message": " env is declared to have type `MutableMapping[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 385,
    "warning_line": "        env = None  # type: MutableMapping[Text, Text]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        img_id = None\n        env = None  # type: MutableMapping[Text, Text]\n        user_space_docker_cmd = kwargs.get(\"user_space_docker_cmd\")\n",
        "source_code_len": 145,
        "target_code": "        img_id = None\n        env = cast(MutableMapping[Text, Text], os.environ)\n        user_space_docker_cmd = kwargs.get(\"user_space_docker_cmd\")\n",
        "target_code_len": 149,
        "diff_format": "@@ -384,3 +411,3 @@\n         img_id = None\n-        env = None  # type: MutableMapping[Text, Text]\n+        env = cast(MutableMapping[Text, Text], os.environ)\n         user_space_docker_cmd = kwargs.get(\"user_space_docker_cmd\")\n",
        "source_code_with_indent": "        img_id = None\n        env = None  # type: MutableMapping[Text, Text]\n        user_space_docker_cmd = kwargs.get(\"user_space_docker_cmd\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        img_id = None\n        env = cast(MutableMapping[Text, Text], os.environ)\n        user_space_docker_cmd = kwargs.get(\"user_space_docker_cmd\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:444:8 Incompatible variable type [9]: job_script_contents is declared to have type `str` but is used as type `None`.",
    "message": " job_script_contents is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 444,
    "warning_line": "        job_script_contents=None,  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:451:8 Incompatible variable type [9]: stdin is declared to have type `Union[IO[typing.Any], int]` but is used as type `None`.",
    "message": " stdin is declared to have type `Union[IO[typing.Any], int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 451,
    "warning_line": "        stdin = None  # type: Union[IO[Any], int]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:452:8 Incompatible variable type [9]: stderr is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " stderr is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 452,
    "warning_line": "        stderr = None  # type: IO[Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:453:8 Incompatible variable type [9]: stdout is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " stdout is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 453,
    "warning_line": "        stdout = None  # type: IO[Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/load_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/load_tool.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/load_tool.py:75:4 Incompatible variable type [9]: uri is declared to have type `str` but is used as type `None`.",
    "message": " uri is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 75,
    "warning_line": "    uri = None  # type: Text",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    uri = None  # type: Text\n    split = urllib.parse.urlsplit(argsworkflow)\n",
        "source_code_len": 78,
        "target_code": "\n    uri = None  # type: Optional[Text]\n    split = urllib.parse.urlsplit(argsworkflow)\n",
        "target_code_len": 88,
        "diff_format": "@@ -74,3 +76,3 @@\n \n-    uri = None  # type: Text\n+    uri = None  # type: Optional[Text]\n     split = urllib.parse.urlsplit(argsworkflow)\n",
        "source_code_with_indent": "\n    <IND>uri = None  # type: Text\n    split = urllib.parse.urlsplit(argsworkflow)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>uri = None  # type: Optional[Text]\n    split = urllib.parse.urlsplit(argsworkflow)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/load_tool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/load_tool.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/load_tool.py:105:4 Incompatible variable type [9]: uri is declared to have type `str` but is used as type `None`.",
    "message": " uri is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 105,
    "warning_line": "    uri = None  # type: Text",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    uri = None  # type: Text\n    workflowobj = None  # type: CommentedMap\n    if isinstance(argsworkflow, string_types):\n",
        "source_code_len": 122,
        "target_code": "\n    uri = None  # type: Optional[Text]\n    workflowobj = None  # type: Optional[CommentedMap]\n    if isinstance(argsworkflow, string_types):\n",
        "target_code_len": 142,
        "diff_format": "@@ -104,4 +106,4 @@\n \n-    uri = None  # type: Text\n-    workflowobj = None  # type: CommentedMap\n+    uri = None  # type: Optional[Text]\n+    workflowobj = None  # type: Optional[CommentedMap]\n     if isinstance(argsworkflow, string_types):\n",
        "source_code_with_indent": "\n    uri = None  # type: Text\n    workflowobj = None  # type: CommentedMap\n    if isinstance(argsworkflow, string_types):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    uri = None  # type: Optional[Text]\n    workflowobj = None  # type: Optional[CommentedMap]\n    if isinstance(argsworkflow, string_types):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/main.py",
    "file_hunks_size": 34,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/main.py:338:9 Incompatible variable type [9]: stdout is declared to have type `Union[StreamWriter, TextIO]` but is used as type `None`.",
    "message": " stdout is declared to have type `Union[StreamWriter, TextIO]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 338,
    "warning_line": "         stdout=None,  # type: Union[TextIO, codecs.StreamWriter]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/main.py",
    "file_hunks_size": 34,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/main.py:341:9 Incompatible variable type [9]: job_order_object is declared to have type `MutableMapping[str, typing.Any]` but is used as type `None`.",
    "message": " job_order_object is declared to have type `MutableMapping[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 341,
    "warning_line": "         job_order_object=None,  # type: MutableMapping[Text, Any]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/main.py",
    "file_hunks_size": 34,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/main.py:458:69 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `use_custom_schema` but got `bytes`.",
    "message": " Expected `str` for 3rd positional only parameter to call `use_custom_schema` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 458,
    "warning_line": "            use_custom_schema(\"v1.0\", \"http://commonwl.org/cwltool\", res.read())"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/main.py",
    "file_hunks_size": 34,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/main.py:506:12 Incompatible variable type [9]: job_script_provider is declared to have type `typing.Callable[[typing.Any, List[str]], str]` but is used as type `None`.",
    "message": " job_script_provider is declared to have type `typing.Callable[[typing.Any, List[str]], str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 506,
    "warning_line": "            job_script_provider = None  # type: Callable[[Any, List[str]], Text]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/pack.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/pack.py:35:33 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to anonymous call but got `None`.",
    "message": " Expected `str` for 1st positional only parameter to anonymous call but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 35,
    "warning_line": "                find_run(loadref(None, d[\"run\"]), loadref, runs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import absolute_import\nimport copy\nimport re\nfrom typing import Any, Callable, Dict, List, Set, Text, Union, cast\n\nfrom schema_salad.ref_resolver import Loader, SubLoader\nfrom six.moves import urllib\nfrom ruamel.yaml.comments import CommentedSeq, CommentedMap\n\nfrom .process import shortname, uniquename\nimport six\n\n",
        "source_code_len": 332,
        "target_code": "from __future__ import absolute_import\n\nimport copy\nfrom typing import (Any, Callable, Dict, List, # pylint: disable=unused-import\n                    Optional, Set, Text, Union, cast)\n\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom six import string_types, iteritems\nfrom six.moves import urllib\nfrom schema_salad.ref_resolver import (Loader, # pylint: disable=unused-import\n                                       SubLoader)\n\nfrom .process import shortname, uniquename\n\n",
        "target_code_len": 489,
        "diff_format": "@@ -1,12 +1,14 @@\n from __future__ import absolute_import\n+\n import copy\n-import re\n-from typing import Any, Callable, Dict, List, Set, Text, Union, cast\n-\n-from schema_salad.ref_resolver import Loader, SubLoader\n+from typing import (Any, Callable, Dict, List, # pylint: disable=unused-import\n+                    Optional, Set, Text, Union, cast)\n+\n+from ruamel.yaml.comments import CommentedMap, CommentedSeq\n+from six import string_types, iteritems\n from six.moves import urllib\n-from ruamel.yaml.comments import CommentedSeq, CommentedMap\n+from schema_salad.ref_resolver import (Loader, # pylint: disable=unused-import\n+                                       SubLoader)\n \n from .process import shortname, uniquename\n-import six\n \n",
        "source_code_with_indent": "from __future__ import absolute_import\nimport copy\nimport re\nfrom typing import Any, Callable, Dict, List, Set, Text, Union, cast\n\nfrom schema_salad.ref_resolver import Loader, SubLoader\nfrom six.moves import urllib\nfrom ruamel.yaml.comments import CommentedSeq, CommentedMap\n\nfrom .process import shortname, uniquename\nimport six\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from __future__ import absolute_import\n\nimport copy\nfrom typing import (Any, Callable, Dict, List, # pylint: disable=unused-import\n                    Optional, Set, Text, Union, cast)\n\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom six import string_types, iteritems\nfrom six.moves import urllib\nfrom schema_salad.ref_resolver import (Loader, # pylint: disable=unused-import\n                                       SubLoader)\n\nfrom .process import shortname, uniquename\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\ndef find_run(d, loadref, runs):  # type: (Any, Callable[[Text, Text], Union[Dict, List, Text]], Set[Text]) -> None\n    if isinstance(d, list):\n",
        "source_code_len": 145,
        "target_code": "\nLoadRefType = Callable[[Optional[Text], Text], Union[Dict, List, Text, None]]\n\n\ndef find_run(d,        # type: Any\n             loadref,  # type: LoadRefType\n             runs      # type: Set[Text]\n            ):  # type: (...) -> None\n    if isinstance(d, list):\n",
        "target_code_len": 266,
        "diff_format": "@@ -25,4 +27,9 @@\n \n-\n-def find_run(d, loadref, runs):  # type: (Any, Callable[[Text, Text], Union[Dict, List, Text]], Set[Text]) -> None\n+LoadRefType = Callable[[Optional[Text], Text], Union[Dict, List, Text, None]]\n+\n+\n+def find_run(d,        # type: Any\n+             loadref,  # type: LoadRefType\n+             runs      # type: Set[Text]\n+            ):  # type: (...) -> None\n     if isinstance(d, list):\n",
        "source_code_with_indent": "\n\n<DED><DED><DED>def find_run(d, loadref, runs):  # type: (Any, Callable[[Text, Text], Union[Dict, List, Text]], Set[Text]) -> None\n    <IND>if isinstance(d, list):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED><DED>LoadRefType = Callable[[Optional[Text], Text], Union[Dict, List, Text, None]]\n\n\ndef find_run(d,        # type: Any\n             loadref,  # type: LoadRefType\n             runs      # type: Set[Text]\n            ):  # type: (...) -> None\n    <IND>if isinstance(d, list):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    elif isinstance(d, dict):\n        if \"run\" in d and isinstance(d[\"run\"], six.string_types):\n            if d[\"run\"] not in runs:\n",
        "source_code_len": 133,
        "target_code": "    elif isinstance(d, dict):\n        if \"run\" in d and isinstance(d[\"run\"], string_types):\n            if d[\"run\"] not in runs:\n",
        "target_code_len": 129,
        "diff_format": "@@ -31,3 +38,3 @@\n     elif isinstance(d, dict):\n-        if \"run\" in d and isinstance(d[\"run\"], six.string_types):\n+        if \"run\" in d and isinstance(d[\"run\"], string_types):\n             if d[\"run\"] not in runs:\n",
        "source_code_with_indent": "    <DED><DED>elif isinstance(d, dict):\n        <IND>if \"run\" in d and isinstance(d[\"run\"], six.string_types):\n            <IND>if d[\"run\"] not in runs:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>elif isinstance(d, dict):\n        <IND>if \"run\" in d and isinstance(d[\"run\"], string_types):\n            <IND>if d[\"run\"] not in runs:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for i in (\"id\", \"name\"):\n            if i in d and isinstance(d[i], six.string_types):\n                ids.add(d[i])\n",
        "source_code_len": 125,
        "target_code": "        for i in (\"id\", \"name\"):\n            if i in d and isinstance(d[i], string_types):\n                ids.add(d[i])\n",
        "target_code_len": 121,
        "diff_format": "@@ -45,3 +52,3 @@\n         for i in (\"id\", \"name\"):\n-            if i in d and isinstance(d[i], six.string_types):\n+            if i in d and isinstance(d[i], string_types):\n                 ids.add(d[i])\n",
        "source_code_with_indent": "        <IND>for i in (\"id\", \"name\"):\n            <IND>if i in d and isinstance(d[i], six.string_types):\n                <IND>ids.add(d[i])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>for i in (\"id\", \"name\"):\n            <IND>if i in d and isinstance(d[i], string_types):\n                <IND>ids.add(d[i])\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for s, v in enumerate(d):\n            if isinstance(v, six.string_types):\n                if v in rewrite:\n",
        "source_code_len": 115,
        "target_code": "        for s, v in enumerate(d):\n            if isinstance(v, string_types):\n                if v in rewrite:\n",
        "target_code_len": 111,
        "diff_format": "@@ -55,3 +62,3 @@\n         for s, v in enumerate(d):\n-            if isinstance(v, six.string_types):\n+            if isinstance(v, string_types):\n                 if v in rewrite:\n",
        "source_code_with_indent": "        <IND>for s, v in enumerate(d):\n            <IND>if isinstance(v, six.string_types):\n                <IND>if v in rewrite:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>for s, v in enumerate(d):\n            <IND>if isinstance(v, string_types):\n                <IND>if v in rewrite:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for s, v in d.items():\n            if isinstance(v, six.string_types):\n                if v in rewrite:\n",
        "source_code_len": 112,
        "target_code": "        for s, v in d.items():\n            if isinstance(v, string_types):\n                if v in rewrite:\n",
        "target_code_len": 108,
        "diff_format": "@@ -65,3 +72,3 @@\n         for s, v in d.items():\n-            if isinstance(v, six.string_types):\n+            if isinstance(v, string_types):\n                 if v in rewrite:\n",
        "source_code_with_indent": "        <IND>for s, v in d.items():\n            <IND>if isinstance(v, six.string_types):\n                <IND>if v in rewrite:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>for s, v in d.items():\n            <IND>if isinstance(v, string_types):\n                <IND>if v in rewrite:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if isinstance(processobj, dict):\n        document_loader.idx[processobj[\"id\"]] = CommentedMap(six.iteritems(processobj))\n    elif isinstance(processobj, list):\n        path, frag = urllib.parse.urldefrag(uri)\n        for po in processobj:\n",
        "source_code_len": 243,
        "target_code": "    if isinstance(processobj, dict):\n        document_loader.idx[processobj[\"id\"]] = CommentedMap(iteritems(processobj))\n    elif isinstance(processobj, list):\n        _, frag = urllib.parse.urldefrag(uri)\n        for po in processobj:\n",
        "target_code_len": 236,
        "diff_format": "@@ -105,5 +116,5 @@\n     if isinstance(processobj, dict):\n-        document_loader.idx[processobj[\"id\"]] = CommentedMap(six.iteritems(processobj))\n+        document_loader.idx[processobj[\"id\"]] = CommentedMap(iteritems(processobj))\n     elif isinstance(processobj, list):\n-        path, frag = urllib.parse.urldefrag(uri)\n+        _, frag = urllib.parse.urldefrag(uri)\n         for po in processobj:\n",
        "source_code_with_indent": "    if isinstance(processobj, dict):\n        <IND>document_loader.idx[processobj[\"id\"]] = CommentedMap(six.iteritems(processobj))\n    <DED>elif isinstance(processobj, list):\n        <IND>path, frag = urllib.parse.urldefrag(uri)\n        for po in processobj:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    if isinstance(processobj, dict):\n        <IND>document_loader.idx[processobj[\"id\"]] = CommentedMap(iteritems(processobj))\n    <DED>elif isinstance(processobj, list):\n        <IND>_, frag = urllib.parse.urldefrag(uri)\n        for po in processobj:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    uri = po[\"id\"]\n            document_loader.idx[po[\"id\"]] = CommentedMap(six.iteritems(po))\n\n    def loadref(b, u):\n        # type: (Text, Text) -> Union[Dict, List, Text]\n        return document_loader.resolve_ref(u, base_url=b)[0]\n\n",
        "source_code_len": 253,
        "target_code": "                    uri = po[\"id\"]\n            document_loader.idx[po[\"id\"]] = CommentedMap(iteritems(po))\n\n    def loadref(base, uri):\n        # type: (Optional[Text], Text) -> Union[Dict, List, Text, None]\n        return document_loader.resolve_ref(uri, base_url=base)[0]\n\n",
        "target_code_len": 275,
        "diff_format": "@@ -112,7 +123,7 @@\n                     uri = po[\"id\"]\n-            document_loader.idx[po[\"id\"]] = CommentedMap(six.iteritems(po))\n-\n-    def loadref(b, u):\n-        # type: (Text, Text) -> Union[Dict, List, Text]\n-        return document_loader.resolve_ref(u, base_url=b)[0]\n+            document_loader.idx[po[\"id\"]] = CommentedMap(iteritems(po))\n+\n+    def loadref(base, uri):\n+        # type: (Optional[Text], Text) -> Union[Dict, List, Text, None]\n+        return document_loader.resolve_ref(uri, base_url=base)[0]\n \n",
        "source_code_with_indent": "                    <IND>uri = po[\"id\"]\n            <DED><DED>document_loader.idx[po[\"id\"]] = CommentedMap(six.iteritems(po))\n\n    <DED><DED>def loadref(b, u):\n        # type: (Text, Text) -> Union[Dict, List, Text]\n        <IND>return document_loader.resolve_ref(u, base_url=b)[0]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    <IND>uri = po[\"id\"]\n            <DED><DED>document_loader.idx[po[\"id\"]] = CommentedMap(iteritems(po))\n\n    <DED><DED>def loadref(base, uri):\n        # type: (Optional[Text], Text) -> Union[Dict, List, Text, None]\n        <IND>return document_loader.resolve_ref(uri, base_url=base)[0]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/pathmapper.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/pathmapper.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/pathmapper.py:291:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `None`.",
    "message": " Expected `Tuple[str, str]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 291,
    "warning_line": "        return None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/process.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/process.py",
    "file_hunks_size": 35,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/process.py:116:0 Incompatible variable type [9]: SCHEMA_FILE is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " SCHEMA_FILE is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 116,
    "warning_line": "SCHEMA_FILE = None  # type: Dict[Text, Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_len": 259,
        "target_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_len": 289,
        "diff_format": "@@ -115,5 +115,5 @@\n SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\n-SCHEMA_FILE = None  # type: Dict[Text, Any]\n-SCHEMA_DIR = None  # type: Dict[Text, Any]\n-SCHEMA_ANY = None  # type: Dict[Text, Any]\n+SCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n \n",
        "source_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/process.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/process.py",
    "file_hunks_size": 35,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/process.py:117:0 Incompatible variable type [9]: SCHEMA_DIR is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " SCHEMA_DIR is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 117,
    "warning_line": "SCHEMA_DIR = None  # type: Dict[Text, Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_len": 259,
        "target_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_len": 289,
        "diff_format": "@@ -115,5 +115,5 @@\n SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\n-SCHEMA_FILE = None  # type: Dict[Text, Any]\n-SCHEMA_DIR = None  # type: Dict[Text, Any]\n-SCHEMA_ANY = None  # type: Dict[Text, Any]\n+SCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n \n",
        "source_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/process.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/process.py",
    "file_hunks_size": 35,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/process.py:118:0 Incompatible variable type [9]: SCHEMA_ANY is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " SCHEMA_ANY is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 118,
    "warning_line": "SCHEMA_ANY = None  # type: Dict[Text, Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_len": 259,
        "target_code": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_len": 289,
        "diff_format": "@@ -115,5 +115,5 @@\n SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\n-SCHEMA_FILE = None  # type: Dict[Text, Any]\n-SCHEMA_DIR = None  # type: Dict[Text, Any]\n-SCHEMA_ANY = None  # type: Dict[Text, Any]\n+SCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\n+SCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n \n",
        "source_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Dict[Text, Any]\nSCHEMA_DIR = None  # type: Dict[Text, Any]\nSCHEMA_ANY = None  # type: Dict[Text, Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "SCHEMA_CACHE = {}  # type: Dict[Text, Tuple[Loader, Union[schema.Names, schema.SchemaParseException], Dict[Text, Any], Loader]]\nSCHEMA_FILE = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_DIR = None  # type: Optional[Dict[Text, Any]]\nSCHEMA_ANY = None  # type: Optional[Dict[Text, Any]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/process.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/process.py",
    "file_hunks_size": 35,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/process.py:369:33 Incompatible parameter type [6]: Expected `Union[Dict[str, typing.Any], List[typing.Any], str]` for 2nd positional only parameter to call `dict.__setitem__` but got `None`.",
    "message": " Expected `Union[Dict[str, typing.Any], List[typing.Any], str]` for 2nd positional only parameter to call `dict.__setitem__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 369,
    "warning_line": "                job[fieldname] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef fillInDefaults(inputs, job):\n    # type: (List[Dict[Text, Text]], Dict[Text, Union[Dict[Text, Any], List, Text]]) -> None\n    for e, inp in enumerate(inputs):\n",
        "source_code_len": 164,
        "target_code": "\ndef fillInDefaults(inputs,  # type: List[Dict[Text, Text]]\n                   job      # Dict[Text, Union[Dict[Text, Any], Any, None]]\n                  ):  # type: (...) -> None\n    for e, inp in enumerate(inputs):\n",
        "target_code_len": 217,
        "diff_format": "@@ -358,4 +362,5 @@\n \n-def fillInDefaults(inputs, job):\n-    # type: (List[Dict[Text, Text]], Dict[Text, Union[Dict[Text, Any], List, Text]]) -> None\n+def fillInDefaults(inputs,  # type: List[Dict[Text, Text]]\n+                   job      # Dict[Text, Union[Dict[Text, Any], Any, None]]\n+                  ):  # type: (...) -> None\n     for e, inp in enumerate(inputs):\n",
        "source_code_with_indent": "\n<DED><DED><DED>def fillInDefaults(inputs, job):\n    # type: (List[Dict[Text, Text]], Dict[Text, Union[Dict[Text, Any], List, Text]]) -> None\n    <IND>for e, inp in enumerate(inputs):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED><DED>def fillInDefaults(inputs,  # type: List[Dict[Text, Text]]\n                   job      # Dict[Text, Union[Dict[Text, Any], Any, None]]\n                  ):  # type: (...) -> None\n    <IND>for e, inp in enumerate(inputs):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/process.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/process.py",
    "file_hunks_size": 35,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/process.py:861:4 Incompatible variable type [9]: deps is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " deps is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 861,
    "warning_line": "    deps = None  # type: Dict[Text, Any]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    r = []  # type: List[Dict[Text, Text]]\n    deps = None  # type: Dict[Text, Any]\n    if isinstance(doc, dict):\n",
        "source_code_len": 114,
        "target_code": "    r = []  # type: List[Dict[Text, Text]]\n    if isinstance(doc, dict):\n",
        "target_code_len": 73,
        "diff_format": "@@ -860,3 +885,2 @@\n     r = []  # type: List[Dict[Text, Text]]\n-    deps = None  # type: Dict[Text, Any]\n     if isinstance(doc, dict):\n",
        "source_code_with_indent": "    <IND>r = []  # type: List[Dict[Text, Text]]\n    deps = None  # type: Dict[Text, Any]\n    if isinstance(doc, dict):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>r = []  # type: List[Dict[Text, Text]]\n    if isinstance(doc, dict):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if u and not u.startswith(\"_:\"):\n                deps = {\n                    \"class\": doc[\"class\"],\n                    \"location\": urljoin(base, u)\n                }\n                if \"basename\" in doc:\n",
        "source_code_len": 218,
        "target_code": "            if u and not u.startswith(\"_:\"):\n                deps = {\"class\": doc[\"class\"],\"location\": urljoin(base, u)\n                       }  # type: Dict[Text, Any]\n                if \"basename\" in doc:\n",
        "target_code_len": 208,
        "diff_format": "@@ -875,6 +899,4 @@\n             if u and not u.startswith(\"_:\"):\n-                deps = {\n-                    \"class\": doc[\"class\"],\n-                    \"location\": urljoin(base, u)\n-                }\n+                deps = {\"class\": doc[\"class\"],\"location\": urljoin(base, u)\n+                       }  # type: Dict[Text, Any]\n                 if \"basename\" in doc:\n",
        "source_code_with_indent": "            if u and not u.startswith(\"_:\"):\n                <IND>deps = {\n                    \"class\": doc[\"class\"],\n                    \"location\": urljoin(base, u)\n                }\n                if \"basename\" in doc:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if u and not u.startswith(\"_:\"):\n                <IND>deps = {\"class\": doc[\"class\"],\"location\": urljoin(base, u)\n                       }  # type: Dict[Text, Any]\n                if \"basename\" in doc:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/update.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/update.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/update.py:31:4 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got `None`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 31,
    "warning_line": "    return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import absolute_import\nimport copy\nimport re\nimport traceback\nfrom typing import (Any, Callable, Dict, Text,  # pylint: disable=unused-import\n                    Tuple, Union)\nfrom copy import deepcopy\n\nimport six\nfrom six.moves import urllib\nimport schema_salad.validate\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom schema_salad.ref_resolver import Loader\n\nfrom .utils import aslist, visit_class\n\ndef findId(doc, frg):  # type: (Any, Any) -> Dict\n    if isinstance(doc, dict):\n",
        "source_code_len": 514,
        "target_code": "from __future__ import absolute_import\n\nimport copy\nimport re\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Optional, Text, Tuple, Union)\n\nimport schema_salad.validate\nfrom schema_salad.ref_resolver import Loader  # pylint: disable=unused-import\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom six import string_types\nfrom six.moves import urllib\n\nfrom .utils import visit_class\n\n\ndef findId(doc, frg):  # type: (Any, Any) -> Optional[Dict]\n    if isinstance(doc, dict):\n",
        "target_code_len": 536,
        "diff_format": "@@ -1,18 +1,18 @@\n from __future__ import absolute_import\n+\n import copy\n import re\n-import traceback\n-from typing import (Any, Callable, Dict, Text,  # pylint: disable=unused-import\n-                    Tuple, Union)\n-from copy import deepcopy\n-\n-import six\n+from typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n+                    Optional, Text, Tuple, Union)\n+\n+import schema_salad.validate\n+from schema_salad.ref_resolver import Loader  # pylint: disable=unused-import\n+from ruamel.yaml.comments import CommentedMap, CommentedSeq\n+from six import string_types\n from six.moves import urllib\n-import schema_salad.validate\n-from ruamel.yaml.comments import CommentedMap, CommentedSeq\n-from schema_salad.ref_resolver import Loader\n-\n-from .utils import aslist, visit_class\n-\n-def findId(doc, frg):  # type: (Any, Any) -> Dict\n+\n+from .utils import visit_class\n+\n+\n+def findId(doc, frg):  # type: (Any, Any) -> Optional[Dict]\n     if isinstance(doc, dict):\n",
        "source_code_with_indent": "from __future__ import absolute_import\nimport copy\nimport re\nimport traceback\nfrom typing import (Any, Callable, Dict, Text,  # pylint: disable=unused-import\n                    Tuple, Union)\nfrom copy import deepcopy\n\nimport six\nfrom six.moves import urllib\nimport schema_salad.validate\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom schema_salad.ref_resolver import Loader\n\nfrom .utils import aslist, visit_class\n\ndef findId(doc, frg):  # type: (Any, Any) -> Dict\n    <IND>if isinstance(doc, dict):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from __future__ import absolute_import\n\nimport copy\nimport re\nfrom typing import (Any, Callable, Dict,  # pylint: disable=unused-import\n                    Optional, Text, Tuple, Union)\n\nimport schema_salad.validate\nfrom schema_salad.ref_resolver import Loader  # pylint: disable=unused-import\nfrom ruamel.yaml.comments import CommentedMap, CommentedSeq\nfrom six import string_types\nfrom six.moves import urllib\n\nfrom .utils import visit_class\n\n\ndef findId(doc, frg):  # type: (Any, Any) -> Optional[Dict]\n    <IND>if isinstance(doc, dict):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "                frag = \"#\" + frag\n                r = findId(r, frag)\n            return func(r, loader, imp)\n\ndef v1_0dev4to1_0(doc, loader, baseuri):\n    # type: (Any, Loader, Text) -> Tuple[Any, Text]\n",
        "source_code_len": 204,
        "target_code": "                frag = \"#\" + frag\n                r = findId(r, frag)  # type: ignore\n            return func(r, loader, imp)\n\ndef v1_0dev4to1_0(doc, loader, baseuri):  # pylint: disable=unused-argument\n    # type: (Any, Loader, Text) -> Tuple[Any, Text]\n",
        "target_code_len": 255,
        "diff_format": "@@ -101,6 +101,6 @@\n                 frag = \"#\" + frag\n-                r = findId(r, frag)\n+                r = findId(r, frag)  # type: ignore\n             return func(r, loader, imp)\n \n-def v1_0dev4to1_0(doc, loader, baseuri):\n+def v1_0dev4to1_0(doc, loader, baseuri):  # pylint: disable=unused-argument\n     # type: (Any, Loader, Text) -> Tuple[Any, Text]\n",
        "source_code_with_indent": "                <IND>frag = \"#\" + frag\n                r = findId(r, frag)\n            <DED>return func(r, loader, imp)\n\n<DED><DED><DED>def v1_0dev4to1_0(doc, loader, baseuri):\n    # type: (Any, Loader, Text) -> Tuple[Any, Text]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>frag = \"#\" + frag\n                r = findId(r, frag)  # type: ignore\n            <DED>return func(r, loader, imp)\n\n<DED><DED><DED>def v1_0dev4to1_0(doc, loader, baseuri):  # pylint: disable=unused-argument\n    # type: (Any, Loader, Text) -> Tuple[Any, Text]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/utils.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/utils.py:41:4 Incompatible return type [7]: Expected `Tuple[typing.Any, bool]` but got `Tuple[None, None]`.",
    "message": " Expected `Tuple[typing.Any, bool]` but got `Tuple[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 41,
    "warning_line": "    return (None, None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import stat\nfrom functools import partial\n\nfrom typing import (Any, AnyStr, Callable,  # pylint: disable=unused-import\n                    Dict, Iterable, IO, List, Text, Tuple, Union)\nif os.name == 'posix':\n",
        "source_code_len": 208,
        "target_code": "import stat\nfrom functools import partial  # pylint: disable=unused-import\nfrom typing import (IO, Any, AnyStr, Callable,  # pylint: disable=unused-import\n                    Dict, Iterable, List, Optional, Text, Tuple, TypeVar,\n                    Union)\n\nimport six\nfrom six.moves import urllib, zip_longest\nfrom mypy_extensions import TypedDict\n\n# no imports from cwltool allowed\n\n\nif os.name == 'posix':\n",
        "target_code_len": 408,
        "diff_format": "@@ -9,6 +7,14 @@\n import stat\n-from functools import partial\n-\n-from typing import (Any, AnyStr, Callable,  # pylint: disable=unused-import\n-                    Dict, Iterable, IO, List, Text, Tuple, Union)\n+from functools import partial  # pylint: disable=unused-import\n+from typing import (IO, Any, AnyStr, Callable,  # pylint: disable=unused-import\n+                    Dict, Iterable, List, Optional, Text, Tuple, TypeVar,\n+                    Union)\n+\n+import six\n+from six.moves import urllib, zip_longest\n+from mypy_extensions import TypedDict\n+\n+# no imports from cwltool allowed\n+\n+\n if os.name == 'posix':\n",
        "source_code_with_indent": "import stat\nfrom functools import partial\n\nfrom typing import (Any, AnyStr, Callable,  # pylint: disable=unused-import\n                    Dict, Iterable, IO, List, Text, Tuple, Union)\nif os.name == 'posix':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import stat\nfrom functools import partial  # pylint: disable=unused-import\nfrom typing import (IO, Any, AnyStr, Callable,  # pylint: disable=unused-import\n                    Dict, Iterable, List, Optional, Text, Tuple, TypeVar,\n                    Union)\n\nimport six\nfrom six.moves import urllib, zip_longest\nfrom mypy_extensions import TypedDict\n\n# no imports from cwltool allowed\n\n\nif os.name == 'posix':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        return l\n    else:\n        return [l]\n\n\ndef get_feature(self, feature):  # type: (Any, Any) -> Tuple[Any, bool]\n    for t in reversed(self.requirements):\n        if t[\"class\"] == feature:\n            return (t, True)\n    for t in reversed(self.hints):\n        if t[\"class\"] == feature:\n            return (t, False)\n    return (None, None)\n",
        "source_code_len": 348,
        "target_code": "        return l\n    return [l]\n\n\ndef get_feature(self,    # type: Any\n                feature  # type: Any\n               ):  # type: (...) -> Tuple[Optional[Any], Optional[bool]]\n    for item in reversed(self.requirements):\n        if item[\"class\"] == feature:\n            return (item, True)\n    for item in reversed(self.hints):\n        if item[\"class\"] == feature:\n            return (item, False)\n    return (None, None)\n",
        "target_code_len": 427,
        "diff_format": "@@ -29,13 +36,14 @@\n         return l\n-    else:\n-        return [l]\n-\n-\n-def get_feature(self, feature):  # type: (Any, Any) -> Tuple[Any, bool]\n-    for t in reversed(self.requirements):\n-        if t[\"class\"] == feature:\n-            return (t, True)\n-    for t in reversed(self.hints):\n-        if t[\"class\"] == feature:\n-            return (t, False)\n+    return [l]\n+\n+\n+def get_feature(self,    # type: Any\n+                feature  # type: Any\n+               ):  # type: (...) -> Tuple[Optional[Any], Optional[bool]]\n+    for item in reversed(self.requirements):\n+        if item[\"class\"] == feature:\n+            return (item, True)\n+    for item in reversed(self.hints):\n+        if item[\"class\"] == feature:\n+            return (item, False)\n     return (None, None)\n",
        "source_code_with_indent": "        <IND>return l\n    <DED>else:\n        <IND>return [l]\n\n\n<DED><DED>def get_feature(self, feature):  # type: (Any, Any) -> Tuple[Any, bool]\n    <IND>for t in reversed(self.requirements):\n        <IND>if t[\"class\"] == feature:\n            <IND>return (t, True)\n    <DED><DED>for t in reversed(self.hints):\n        <IND>if t[\"class\"] == feature:\n            <IND>return (t, False)\n    <DED><DED>return (None, None)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>return l\n    <DED>return [l]\n\n\n<DED>def get_feature(self,    # type: Any\n                feature  # type: Any\n               ):  # type: (...) -> Tuple[Optional[Any], Optional[bool]]\n    <IND>for item in reversed(self.requirements):\n        <IND>if item[\"class\"] == feature:\n            <IND>return (item, True)\n    <DED><DED>for item in reversed(self.hints):\n        <IND>if item[\"class\"] == feature:\n            <IND>return (item, False)\n    <DED><DED>return (None, None)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:138:20 Incompatible return type [7]: Expected `Dict[str, typing.Any]` but got `None`.",
    "message": " Expected `Dict[str, typing.Any]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 138,
    "warning_line": "                    return None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:158:8 Incompatible attribute type [8]: Attribute `iterable` declared in class `WorkflowJobStep` has type `Iterable[typing.Any]` but is used as type `None`.",
    "message": " Attribute `iterable` declared in class `WorkflowJobStep` has type `Iterable[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 158,
    "warning_line": "        self.iterable = None  # type: Iterable"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:178:8 Incompatible attribute type [8]: Attribute `state` declared in class `WorkflowJob` has type `Dict[str, WorkflowStateItem]` but is used as type `None`.",
    "message": " Attribute `state` declared in class `WorkflowJob` has type `Dict[str, WorkflowStateItem]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 178,
    "warning_line": "        self.state = None  # type: Dict[Text, WorkflowStateItem]"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:179:8 Incompatible attribute type [8]: Attribute `processStatus` declared in class `WorkflowJob` has type `str` but is used as type `None`.",
    "message": " Attribute `processStatus` declared in class `WorkflowJob` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 179,
    "warning_line": "        self.processStatus = None  # type: Text"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:292:28 Incompatible parameter type [6]: Expected `str` for 4th positional only parameter to call `expression.do_eval` but got `None`.",
    "message": " Expected `str` for 4th positional only parameter to call `expression.do_eval` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 292,
    "warning_line": "                            None, None, {}, context=v, debug=debug, js_console=js_console, timeout=timeout)"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:292:34 Incompatible parameter type [6]: Expected `str` for 5th positional only parameter to call `expression.do_eval` but got `None`.",
    "message": " Expected `str` for 5th positional only parameter to call `expression.do_eval` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 292,
    "warning_line": "                            None, None, {}, context=v, debug=debug, js_console=js_console, timeout=timeout)"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:377:40 Incompatible parameter type [6]: Expected `WorkflowStateItem` for 2nd positional only parameter to call `dict.__setitem__` but got `None`.",
    "message": " Expected `WorkflowStateItem` for 2nd positional only parameter to call `dict.__setitem__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 377,
    "warning_line": "                self.state[out[\"id\"]] = None"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:667:8 Incompatible attribute type [8]: Attribute `total` declared in class `ReceiveScatterOutput` has type `int` but is used as type `None`.",
    "message": " Attribute `total` declared in class `ReceiveScatterOutput` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 667,
    "warning_line": "        self.total = None  # type: int"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:725:26 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 725,
    "warning_line": "        output[i[\"id\"]] = [None] * l"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:725:35 Unsupported operand [58]: `*` is not supported for operand types `List[None]` and `typing.Optional[int]`.",
    "message": " `*` is not supported for operand types `List[None]` and `typing.Optional[int]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 725,
    "warning_line": "        output[i[\"id\"]] = [None] * l"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:730:22 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 2nd positional only parameter to call `range.__init__` but got `typing.Optional[int]`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 2nd positional only parameter to call `range.__init__` but got `typing.Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 730,
    "warning_line": "    for n in range(0, l):"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:739:16 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `ReceiveScatterOutput.setTotal` but got `typing.Optional[int]`.",
    "message": " Expected `int` for 1st positional only parameter to call `ReceiveScatterOutput.setTotal` but got `typing.Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 739,
    "warning_line": "    rc.setTotal(l)"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:750:26 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 750,
    "warning_line": "        output[i[\"id\"]] = [None] * l"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:792:4 Incompatible variable type [9]: rc is declared to have type `ReceiveScatterOutput` but is used as type `None`.",
    "message": " rc is declared to have type `ReceiveScatterOutput` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 792,
    "warning_line": "    rc = None  # type: ReceiveScatterOutput"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "886a6ac41c685f20d39e352f9c657e59f3312265",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 46,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:797:30 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 797,
    "warning_line": "            output[i[\"id\"]] = [None] * crossproduct_size(joborder, scatter_keys)"
  }
]