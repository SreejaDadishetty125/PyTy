[
  {
    "project": "Knio/pynmea2",
    "commit": "b52decfa23d8482b072e42507692533666c4151e",
    "filename": "pynmea2/types/talker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Knio-pynmea2/pynmea2/types/talker.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pynmea2/types/talker.py:127:4 Inconsistent override [15]: `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 127,
    "warning_line": "    fields = (",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    fields = (\n        ('Timestamp', 'timestamp'),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_len": 102,
        "target_code": "    fields = (\n        ('Timestamp', 'timestamp', timestamp),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "target_code_len": 113,
        "diff_format": "@@ -127,3 +127,3 @@\n     fields = (\n-        ('Timestamp', 'timestamp'),\n+        ('Timestamp', 'timestamp', timestamp),\n         ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_with_indent": "    <IND>fields = (\n        ('Timestamp', 'timestamp'),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>fields = (\n        ('Timestamp', 'timestamp', timestamp),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Knio/pynmea2",
    "commit": "b52decfa23d8482b072e42507692533666c4151e",
    "filename": "pynmea2/types/talker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Knio-pynmea2/pynmea2/types/talker.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pynmea2/types/talker.py:143:4 Inconsistent override [15]: `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 143,
    "warning_line": "    fields = (",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    fields = (\n        ('Timestamp', 'timestamp'),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_len": 102,
        "target_code": "    fields = (\n        ('Timestamp', 'timestamp', timestamp),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "target_code_len": 113,
        "diff_format": "@@ -143,3 +143,3 @@\n     fields = (\n-        ('Timestamp', 'timestamp'),\n+        ('Timestamp', 'timestamp', timestamp),\n         ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_with_indent": "    <IND>fields = (\n        ('Timestamp', 'timestamp'),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>fields = (\n        ('Timestamp', 'timestamp', timestamp),\n        ('Latitude of next Waypoint', 'lat_next'),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Knio/pynmea2",
    "commit": "b52decfa23d8482b072e42507692533666c4151e",
    "filename": "pynmea2/types/talker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Knio-pynmea2/pynmea2/types/talker.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pynmea2/types/talker.py:312:4 Inconsistent override [15]: `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 312,
    "warning_line": "    fields = ("
  },
  {
    "project": "Knio/pynmea2",
    "commit": "b52decfa23d8482b072e42507692533666c4151e",
    "filename": "pynmea2/types/talker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Knio-pynmea2/pynmea2/types/talker.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pynmea2/types/talker.py:387:4 Inconsistent override [15]: `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str], typing.Tuple[str, str]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 387,
    "warning_line": "    fields = (",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    fields = (\n        (\"Timestamp (UTC)\", \"timestamp\"),\n        (\"Date (DD/MM/YY\", \"date\"),\n",
        "source_code_len": 93,
        "target_code": "    fields = (\n        (\"Timestamp (UTC)\", \"timestamp\", timestamp),\n        (\"Date (DD/MM/YY\", \"date\"),\n",
        "target_code_len": 104,
        "diff_format": "@@ -387,3 +387,3 @@\n     fields = (\n-        (\"Timestamp (UTC)\", \"timestamp\"),\n+        (\"Timestamp (UTC)\", \"timestamp\", timestamp),\n         (\"Date (DD/MM/YY\", \"date\"),\n",
        "source_code_with_indent": "    fields = (\n        (\"Timestamp (UTC)\", \"timestamp\"),\n        (\"Date (DD/MM/YY\", \"date\"),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    fields = (\n        (\"Timestamp (UTC)\", \"timestamp\", timestamp),\n        (\"Date (DD/MM/YY\", \"date\"),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Knio/pynmea2",
    "commit": "b52decfa23d8482b072e42507692533666c4151e",
    "filename": "pynmea2/types/talker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Knio-pynmea2/pynmea2/types/talker.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pynmea2/types/talker.py:479:4 Inconsistent override [15]: `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `fields` overrides attribute defined in `pynmea2.nmea.NMEASentence` inconsistently. Type `typing.Tuple[typing.Tuple[str, str], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]], typing.Tuple[str, str, typing.Type[Decimal]]]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 479,
    "warning_line": "    fields = (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    fields = (\n        (\"Timestamp\", \"timestamp\"), # hhmmss.ss = UTC\n        (\"Day\", \"day\", Decimal), # 01 to 31\n        (\"Month\", \"month\",  Decimal), # 01 to 12\n        (\"Year\", \"year\",  Decimal), # Year = YYYY\n        (\"Local Zone Description\", \"local_zone\",  Decimal), # 00 to +/- 13 hours\n        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  Decimal)\n    ) # same sign as hours\n\n",
        "source_code_len": 396,
        "target_code": "    fields = (\n        (\"Timestamp\", \"timestamp\", timestamp), # hhmmss.ss = UTC\n        (\"Day\", \"day\", int), # 01 to 31\n        (\"Month\", \"month\",  int), # 01 to 12\n        (\"Year\", \"year\",  int), # Year = YYYY\n        (\"Local Zone Description\", \"local_zone\",  int), # 00 to +/- 13 hours\n        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  int) # same sign as hours\n    )\n\n    @property\n    def datestamp(self):\n        return datetime.date(year=self.year, month=self.month, day=self.day)\n\n    @property\n    def tzinfo(self):\n        return TZInfo(self.local_zone, self.local_zone_minutes)\n\n    @property\n    def datetime(self):\n        d = datetime.datetime.combine(self.datestamp, self.timestamp)\n        return d.replace(tzinfo=self.tzinfo)\n\n\n\n\n",
        "target_code_len": 762,
        "diff_format": "@@ -479,9 +479,25 @@\n     fields = (\n-        (\"Timestamp\", \"timestamp\"), # hhmmss.ss = UTC\n-        (\"Day\", \"day\", Decimal), # 01 to 31\n-        (\"Month\", \"month\",  Decimal), # 01 to 12\n-        (\"Year\", \"year\",  Decimal), # Year = YYYY\n-        (\"Local Zone Description\", \"local_zone\",  Decimal), # 00 to +/- 13 hours\n-        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  Decimal)\n-    ) # same sign as hours\n+        (\"Timestamp\", \"timestamp\", timestamp), # hhmmss.ss = UTC\n+        (\"Day\", \"day\", int), # 01 to 31\n+        (\"Month\", \"month\",  int), # 01 to 12\n+        (\"Year\", \"year\",  int), # Year = YYYY\n+        (\"Local Zone Description\", \"local_zone\",  int), # 00 to +/- 13 hours\n+        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  int) # same sign as hours\n+    )\n+\n+    @property\n+    def datestamp(self):\n+        return datetime.date(year=self.year, month=self.month, day=self.day)\n+\n+    @property\n+    def tzinfo(self):\n+        return TZInfo(self.local_zone, self.local_zone_minutes)\n+\n+    @property\n+    def datetime(self):\n+        d = datetime.datetime.combine(self.datestamp, self.timestamp)\n+        return d.replace(tzinfo=self.tzinfo)\n+\n+\n+\n \n",
        "source_code_with_indent": "    <IND>fields = (\n        (\"Timestamp\", \"timestamp\"), # hhmmss.ss = UTC\n        (\"Day\", \"day\", Decimal), # 01 to 31\n        (\"Month\", \"month\",  Decimal), # 01 to 12\n        (\"Year\", \"year\",  Decimal), # Year = YYYY\n        (\"Local Zone Description\", \"local_zone\",  Decimal), # 00 to +/- 13 hours\n        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  Decimal)\n    ) # same sign as hours\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>fields = (\n        (\"Timestamp\", \"timestamp\", timestamp), # hhmmss.ss = UTC\n        (\"Day\", \"day\", int), # 01 to 31\n        (\"Month\", \"month\",  int), # 01 to 12\n        (\"Year\", \"year\",  int), # Year = YYYY\n        (\"Local Zone Description\", \"local_zone\",  int), # 00 to +/- 13 hours\n        (\"Local Zone Minutes Description\", \"local_zone_minutes\",  int) # same sign as hours\n    )\n\n    @property\n    def datestamp(self):\n        <IND>return datetime.date(year=self.year, month=self.month, day=self.day)\n\n    <DED>@property\n    def tzinfo(self):\n        <IND>return TZInfo(self.local_zone, self.local_zone_minutes)\n\n    <DED>@property\n    def datetime(self):\n        <IND>d = datetime.datetime.combine(self.datestamp, self.timestamp)\n        return d.replace(tzinfo=self.tzinfo)\n\n\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]