[
  {
    "project": "kyb3r/modmail",
    "commit": "742bb2386c9aeec405b00b49527dff0934edb5c5",
    "filename": "core/clients.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kyb3r-modmail/core/clients.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/clients.py:18:8 Incompatible attribute type [8]: Attribute `headers` declared in class `ApiClient` has type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " Attribute `headers` declared in class `ApiClient` has type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 18,
    "warning_line": "        self.headers: dict = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom bot import ModmailBot\n\n\nclass ApiClient:\n    def __init__(self, bot: ModmailBot):\n        self.bot = bot\n",
        "source_code_len": 111,
        "target_code": "\n\nclass ApiClient:\n    def __init__(self, bot):\n        self.bot = bot\n",
        "target_code_len": 71,
        "diff_format": "@@ -10,7 +10,5 @@\n \n-from bot import ModmailBot\n-\n \n class ApiClient:\n-    def __init__(self, bot: ModmailBot):\n+    def __init__(self, bot):\n         self.bot = bot\n",
        "source_code_with_indent": "\nfrom bot import ModmailBot\n\n\nclass ApiClient:\n    <IND>def __init__(self, bot: ModmailBot):\n        <IND>self.bot = bot\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nclass ApiClient:\n    <IND>def __init__(self, bot):\n        <IND>self.bot = bot\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, bot: ModmailBot,\n                 access_token: str = None,\n",
        "source_code_len": 84,
        "target_code": "\n    def __init__(self, bot,\n                 access_token: str = None,\n",
        "target_code_len": 72,
        "diff_format": "@@ -47,3 +45,3 @@\n \n-    def __init__(self, bot: ModmailBot,\n+    def __init__(self, bot,\n                  access_token: str = None,\n",
        "source_code_with_indent": "\n    def __init__(self, bot: ModmailBot,\n                 access_token: str = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, bot,\n                 access_token: str = None,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    async def login(cls, bot: ModmailBot) -> 'Github':\n        self = cls(bot, bot.config.get('github_access_token'))\n",
        "source_code_len": 135,
        "target_code": "    @classmethod\n    async def login(cls, bot) -> 'Github':\n        self = cls(bot, bot.config.get('github_access_token'))\n",
        "target_code_len": 123,
        "diff_format": "@@ -96,3 +94,3 @@\n     @classmethod\n-    async def login(cls, bot: ModmailBot) -> 'Github':\n+    async def login(cls, bot) -> 'Github':\n         self = cls(bot, bot.config.get('github_access_token'))\n",
        "source_code_with_indent": "    <DED>@classmethod\n    async def login(cls, bot: ModmailBot) -> 'Github':\n        <IND>self = cls(bot, bot.config.get('github_access_token'))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    async def login(cls, bot) -> 'Github':\n        <IND>self = cls(bot, bot.config.get('github_access_token'))\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, bot: ModmailBot):\n        super().__init__(bot)\n",
        "source_code_len": 72,
        "target_code": "\n    def __init__(self, bot):\n        super().__init__(bot)\n",
        "target_code_len": 60,
        "diff_format": "@@ -115,3 +113,3 @@\n \n-    def __init__(self, bot: ModmailBot):\n+    def __init__(self, bot):\n         super().__init__(bot)\n",
        "source_code_with_indent": "\n    def __init__(self, bot: ModmailBot):\n        <IND>super().__init__(bot)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, bot):\n        <IND>super().__init__(bot)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, bot: ModmailBot):\n        super().__init__(bot)\n",
        "source_code_len": 72,
        "target_code": "\n    def __init__(self, bot):\n        super().__init__(bot)\n",
        "target_code_len": 60,
        "diff_format": "@@ -215,3 +213,3 @@\n \n-    def __init__(self, bot: ModmailBot):\n+    def __init__(self, bot):\n         super().__init__(bot)\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, bot: ModmailBot):\n        <IND>super().__init__(bot)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, bot):\n        <IND>super().__init__(bot)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "kyb3r/modmail",
    "commit": "742bb2386c9aeec405b00b49527dff0934edb5c5",
    "filename": "core/clients.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kyb3r-modmail/core/clients.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/clients.py:121:45 Unsupported operand [58]: `+` is not supported for operand types `str` and `Optional[str]`.",
    "message": " `+` is not supported for operand types `str` and `Optional[str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 121,
    "warning_line": "                'Authorization': 'Bearer ' + self.token",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, bot: ModmailBot):\n        super().__init__(bot)\n",
        "source_code_len": 72,
        "target_code": "\n    def __init__(self, bot):\n        super().__init__(bot)\n",
        "target_code_len": 60,
        "diff_format": "@@ -115,3 +113,3 @@\n \n-    def __init__(self, bot: ModmailBot):\n+    def __init__(self, bot):\n         super().__init__(bot)\n",
        "source_code_with_indent": "\n    def __init__(self, bot: ModmailBot):\n        <IND>super().__init__(bot)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, bot):\n        <IND>super().__init__(bot)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "kyb3r/modmail",
    "commit": "742bb2386c9aeec405b00b49527dff0934edb5c5",
    "filename": "core/clients.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kyb3r-modmail/core/clients.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/clients.py:221:45 Unsupported operand [58]: `+` is not supported for operand types `str` and `Optional[str]`.",
    "message": " `+` is not supported for operand types `str` and `Optional[str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 221,
    "warning_line": "                'Authorization': 'Bearer ' + self.token",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, bot: ModmailBot):\n        super().__init__(bot)\n",
        "source_code_len": 72,
        "target_code": "\n    def __init__(self, bot):\n        super().__init__(bot)\n",
        "target_code_len": 60,
        "diff_format": "@@ -215,3 +213,3 @@\n \n-    def __init__(self, bot: ModmailBot):\n+    def __init__(self, bot):\n         super().__init__(bot)\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, bot: ModmailBot):\n        <IND>super().__init__(bot)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, bot):\n        <IND>super().__init__(bot)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]