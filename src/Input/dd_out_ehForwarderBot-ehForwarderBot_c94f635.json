[
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/coordinator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/coordinator.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/coordinator.py:103:8 Incompatible variable type [9]: msg is declared to have type `ehforwarderbot.message.EFBMsg` but is used as type `Optional[ehforwarderbot.message.EFBMsg]`.",
    "message": " msg is declared to have type `ehforwarderbot.message.EFBMsg` but is used as type `Optional[ehforwarderbot.message.EFBMsg]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 103,
    "warning_line": "        msg = i.process_message(msg)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for i in middlewares:\n        msg = i.process_message(msg)\n        if msg is None:\n            return None\n\n",
        "source_code_len": 112,
        "target_code": "    for i in middlewares:\n        m = i.process_message(msg)\n        if m is None:\n            return None\n        # for mypy type check\n        assert m is not None\n        msg = m\n\n",
        "target_code_len": 183,
        "diff_format": "@@ -102,5 +102,8 @@\n     for i in middlewares:\n-        msg = i.process_message(msg)\n-        if msg is None:\n+        m = i.process_message(msg)\n+        if m is None:\n             return None\n+        # for mypy type check\n+        assert m is not None\n+        msg = m\n \n",
        "source_code_with_indent": "    <DED>for i in middlewares:\n        <IND>msg = i.process_message(msg)\n        if msg is None:\n            <IND>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>for i in middlewares:\n        <IND>m = i.process_message(msg)\n        if m is None:\n            <IND>return None\n        # for mypy type check\n        <DED>assert m is not None\n        msg = m\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/message.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/message.py:188:12 Incompatible attribute type [8]: Attribute `deliver_to` declared in class `EFBMsg` has type `EFBChannel` but is used as type `typing.Union[EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `deliver_to` declared in class `EFBMsg` has type `EFBChannel` but is used as type `typing.Union[EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 188,
    "warning_line": "            self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        try:\n            self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n        except NameError:\n            self.deliver_to = None\n\n",
        "source_code_len": 155,
        "target_code": "        try:\n            dt = coordinator.get_module_by_id(state['deliver_to'])\n            if isinstance(dt, EFBChannel):\n                self.deliver_to = dt\n        except NameError:\n            pass\n\n",
        "target_code_len": 204,
        "diff_format": "@@ -187,5 +187,7 @@\n         try:\n-            self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n+            dt = coordinator.get_module_by_id(state['deliver_to'])\n+            if isinstance(dt, EFBChannel):\n+                self.deliver_to = dt\n         except NameError:\n-            self.deliver_to = None\n+            pass\n \n",
        "source_code_with_indent": "        <DED>try:\n            <IND>self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n        <DED>except NameError:\n            <IND>self.deliver_to = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>try:\n            <IND>dt = coordinator.get_module_by_id(state['deliver_to'])\n            if isinstance(dt, EFBChannel):\n                <IND>self.deliver_to = dt\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/message.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/message.py:190:12 Incompatible attribute type [8]: Attribute `deliver_to` declared in class `EFBMsg` has type `EFBChannel` but is used as type `None`.",
    "message": " Attribute `deliver_to` declared in class `EFBMsg` has type `EFBChannel` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 190,
    "warning_line": "            self.deliver_to = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        try:\n            self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n        except NameError:\n            self.deliver_to = None\n\n",
        "source_code_len": 155,
        "target_code": "        try:\n            dt = coordinator.get_module_by_id(state['deliver_to'])\n            if isinstance(dt, EFBChannel):\n                self.deliver_to = dt\n        except NameError:\n            pass\n\n",
        "target_code_len": 204,
        "diff_format": "@@ -187,5 +187,7 @@\n         try:\n-            self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n+            dt = coordinator.get_module_by_id(state['deliver_to'])\n+            if isinstance(dt, EFBChannel):\n+                self.deliver_to = dt\n         except NameError:\n-            self.deliver_to = None\n+            pass\n \n",
        "source_code_with_indent": "        <DED>try:\n            <IND>self.deliver_to = coordinator.get_module_by_id(state['deliver_to'])\n        <DED>except NameError:\n            <IND>self.deliver_to = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>try:\n            <IND>dt = coordinator.get_module_by_id(state['deliver_to'])\n            if isinstance(dt, EFBChannel):\n                <IND>self.deliver_to = dt\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/message.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/message.py:322:8 Incompatible attribute type [8]: Attribute `args` declared in class `EFBMsgCommand` has type `List[typing.Any]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "message": " Attribute `args` declared in class `EFBMsgCommand` has type `List[typing.Any]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 322,
    "warning_line": "        self.args = tuple(args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    callable_name: str = \"\"\n    args: List[Any] = []\n    kwargs: Dict[str, Any] = {}\n\n",
        "source_code_len": 86,
        "target_code": "    callable_name: str = \"\"\n    args: Tuple = tuple()\n    kwargs: Mapping[str, Any] = {}\n\n",
        "target_code_len": 90,
        "diff_format": "@@ -294,4 +296,4 @@\n     callable_name: str = \"\"\n-    args: List[Any] = []\n-    kwargs: Dict[str, Any] = {}\n+    args: Tuple = tuple()\n+    kwargs: Mapping[str, Any] = {}\n \n",
        "source_code_with_indent": "    callable_name: str = \"\"\n    args: List[Any] = []\n    kwargs: Dict[str, Any] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    callable_name: str = \"\"\n    args: Tuple = tuple()\n    kwargs: Mapping[str, Any] = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:44:12 Incompatible attribute type [8]: Attribute `destination_channel` declared in class `EFBStatus` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `destination_channel` declared in class `EFBStatus` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 44,
    "warning_line": "            self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        self.__dict__.update(state)\n        try:\n            self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n        except NameError:\n            self.destination_channel = None\n\n",
        "source_code_len": 270,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        self.__dict__.update(state)\n        try:\n            dc = coordinator.get_module_by_id(state['destination_channel'])\n            if isinstance(dc, EFBChannel):\n                self.destination_channel = dc\n        except NameError:\n            pass\n\n",
        "target_code_len": 310,
        "diff_format": "@@ -40,8 +40,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         self.__dict__.update(state)\n         try:\n-            self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n+            dc = coordinator.get_module_by_id(state['destination_channel'])\n+            if isinstance(dc, EFBChannel):\n+                self.destination_channel = dc\n         except NameError:\n-            self.destination_channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>self.__dict__.update(state)\n        try:\n            <IND>self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n        <DED>except NameError:\n            <IND>self.destination_channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>self.__dict__.update(state)\n        try:\n            <IND>dc = coordinator.get_module_by_id(state['destination_channel'])\n            if isinstance(dc, EFBChannel):\n                <IND>self.destination_channel = dc\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:46:12 Incompatible attribute type [8]: Attribute `destination_channel` declared in class `EFBStatus` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "message": " Attribute `destination_channel` declared in class `EFBStatus` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 46,
    "warning_line": "            self.destination_channel = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        self.__dict__.update(state)\n        try:\n            self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n        except NameError:\n            self.destination_channel = None\n\n",
        "source_code_len": 270,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        self.__dict__.update(state)\n        try:\n            dc = coordinator.get_module_by_id(state['destination_channel'])\n            if isinstance(dc, EFBChannel):\n                self.destination_channel = dc\n        except NameError:\n            pass\n\n",
        "target_code_len": 310,
        "diff_format": "@@ -40,8 +40,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         self.__dict__.update(state)\n         try:\n-            self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n+            dc = coordinator.get_module_by_id(state['destination_channel'])\n+            if isinstance(dc, EFBChannel):\n+                self.destination_channel = dc\n         except NameError:\n-            self.destination_channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>self.__dict__.update(state)\n        try:\n            <IND>self.destination_channel = coordinator.get_module_by_id(state['destination_channel'])\n        <DED>except NameError:\n            <IND>self.destination_channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>self.__dict__.update(state)\n        try:\n            <IND>dc = coordinator.get_module_by_id(state['destination_channel'])\n            if isinstance(dc, EFBChannel):\n                <IND>self.destination_channel = dc\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:95:12 Incompatible attribute type [8]: Attribute `channel` declared in class `EFBChatUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `channel` declared in class `EFBChatUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 95,
    "warning_line": "            self.channel = coordinator.get_module_by_id(state['channel'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            self.channel = coordinator.get_module_by_id(state['channel'])\n        except NameError:\n            self.channel = None\n\n",
        "source_code_len": 254,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                self.channel = c\n        except NameError:\n            pass\n\n",
        "target_code_len": 303,
        "diff_format": "@@ -91,8 +93,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBChatUpdates, self).__setstate__(state)\n         try:\n-            self.channel = coordinator.get_module_by_id(state['channel'])\n+            c = coordinator.get_module_by_id(state['channel'])\n+            if isinstance(c, EFBChannel):\n+                self.channel = c\n         except NameError:\n-            self.channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            <IND>self.channel = coordinator.get_module_by_id(state['channel'])\n        <DED>except NameError:\n            <IND>self.channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            <IND>c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                <IND>self.channel = c\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:97:12 Incompatible attribute type [8]: Attribute `channel` declared in class `EFBChatUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "message": " Attribute `channel` declared in class `EFBChatUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 97,
    "warning_line": "            self.channel = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            self.channel = coordinator.get_module_by_id(state['channel'])\n        except NameError:\n            self.channel = None\n\n",
        "source_code_len": 254,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                self.channel = c\n        except NameError:\n            pass\n\n",
        "target_code_len": 303,
        "diff_format": "@@ -91,8 +93,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBChatUpdates, self).__setstate__(state)\n         try:\n-            self.channel = coordinator.get_module_by_id(state['channel'])\n+            c = coordinator.get_module_by_id(state['channel'])\n+            if isinstance(c, EFBChannel):\n+                self.channel = c\n         except NameError:\n-            self.channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            <IND>self.channel = coordinator.get_module_by_id(state['channel'])\n        <DED>except NameError:\n            <IND>self.channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBChatUpdates, self).__setstate__(state)\n        try:\n            <IND>c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                <IND>self.channel = c\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:150:12 Incompatible attribute type [8]: Attribute `channel` declared in class `EFBMemberUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `channel` declared in class `EFBMemberUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 150,
    "warning_line": "            self.channel = coordinator.get_module_by_id(state['channel'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            self.channel = coordinator.get_module_by_id(state['channel'])\n        except NameError:\n            self.channel = None\n\n",
        "source_code_len": 256,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                self.channel = c\n        except NameError:\n            pass\n\n",
        "target_code_len": 305,
        "diff_format": "@@ -146,8 +150,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBMemberUpdates, self).__setstate__(state)\n         try:\n-            self.channel = coordinator.get_module_by_id(state['channel'])\n+            c = coordinator.get_module_by_id(state['channel'])\n+            if isinstance(c, EFBChannel):\n+                self.channel = c\n         except NameError:\n-            self.channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            <IND>self.channel = coordinator.get_module_by_id(state['channel'])\n        <DED>except NameError:\n            <IND>self.channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            <IND>c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                <IND>self.channel = c\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:152:12 Incompatible attribute type [8]: Attribute `channel` declared in class `EFBMemberUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "message": " Attribute `channel` declared in class `EFBMemberUpdates` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 152,
    "warning_line": "            self.channel = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            self.channel = coordinator.get_module_by_id(state['channel'])\n        except NameError:\n            self.channel = None\n\n",
        "source_code_len": 256,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                self.channel = c\n        except NameError:\n            pass\n\n",
        "target_code_len": 305,
        "diff_format": "@@ -146,8 +150,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBMemberUpdates, self).__setstate__(state)\n         try:\n-            self.channel = coordinator.get_module_by_id(state['channel'])\n+            c = coordinator.get_module_by_id(state['channel'])\n+            if isinstance(c, EFBChannel):\n+                self.channel = c\n         except NameError:\n-            self.channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            <IND>self.channel = coordinator.get_module_by_id(state['channel'])\n        <DED>except NameError:\n            <IND>self.channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBMemberUpdates, self).__setstate__(state)\n        try:\n            <IND>c = coordinator.get_module_by_id(state['channel'])\n            if isinstance(c, EFBChannel):\n                <IND>self.channel = c\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:218:12 Incompatible attribute type [8]: Attribute `source_channel` declared in class `EFBMessageRemoval` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `source_channel` declared in class `EFBMessageRemoval` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 218,
    "warning_line": "            self.source_channel = coordinator.get_module_by_id(state['source_channel'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n        except NameError:\n            self.source_channel = None\n\n",
        "source_code_len": 278,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            sc = coordinator.get_module_by_id(state['source_channel'])\n            if isinstance(sc, EFBChannel):\n                self.source_channel = sc\n        except NameError:\n            pass\n\n",
        "target_code_len": 323,
        "diff_format": "@@ -214,8 +220,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBMessageRemoval, self).__setstate__(state)\n         try:\n-            self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n+            sc = coordinator.get_module_by_id(state['source_channel'])\n+            if isinstance(sc, EFBChannel):\n+                self.source_channel = sc\n         except NameError:\n-            self.source_channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            <IND>self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n        <DED>except NameError:\n            <IND>self.source_channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            <IND>sc = coordinator.get_module_by_id(state['source_channel'])\n            if isinstance(sc, EFBChannel):\n                <IND>self.source_channel = sc\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:220:12 Incompatible attribute type [8]: Attribute `source_channel` declared in class `EFBMessageRemoval` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "message": " Attribute `source_channel` declared in class `EFBMessageRemoval` has type `ehforwarderbot.channel.EFBChannel` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 220,
    "warning_line": "            self.source_channel = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_len": 96,
        "target_code": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,3 +3,3 @@\n from abc import abstractmethod, ABC\n-from typing import Iterable, Dict, Iterable, TYPE_CHECKING\n+from typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n \n",
        "source_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import abstractmethod, ABC\nfrom typing import Iterable, Dict, Iterable, TYPE_CHECKING, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __setstate__(self, state: Dict[str, any]):\n        super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n        except NameError:\n            self.source_channel = None\n\n",
        "source_code_len": 278,
        "target_code": "\n    def __setstate__(self, state: Dict[str, Any]):\n        super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            sc = coordinator.get_module_by_id(state['source_channel'])\n            if isinstance(sc, EFBChannel):\n                self.source_channel = sc\n        except NameError:\n            pass\n\n",
        "target_code_len": 323,
        "diff_format": "@@ -214,8 +220,10 @@\n \n-    def __setstate__(self, state: Dict[str, any]):\n+    def __setstate__(self, state: Dict[str, Any]):\n         super(EFBMessageRemoval, self).__setstate__(state)\n         try:\n-            self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n+            sc = coordinator.get_module_by_id(state['source_channel'])\n+            if isinstance(sc, EFBChannel):\n+                self.source_channel = sc\n         except NameError:\n-            self.source_channel = None\n+            pass\n \n",
        "source_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, any]):\n        <IND>super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            <IND>self.source_channel = coordinator.get_module_by_id(state['source_channel'])\n        <DED>except NameError:\n            <IND>self.source_channel = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __setstate__(self, state: Dict[str, Any]):\n        <IND>super(EFBMessageRemoval, self).__setstate__(state)\n        try:\n            <IND>sc = coordinator.get_module_by_id(state['source_channel'])\n            if isinstance(sc, EFBChannel):\n                <IND>self.source_channel = sc\n        <DED><DED>except NameError:\n            <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/status.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/status.py:246:8 Incompatible attribute type [8]: Attribute `destination_channel` declared in class `EFBReactToMessage` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "message": " Attribute `destination_channel` declared in class `EFBReactToMessage` has type `ehforwarderbot.channel.EFBChannel` but is used as type `typing.Union[ehforwarderbot.channel.EFBChannel, ehforwarderbot.middleware.EFBMiddleware]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 246,
    "warning_line": "        self.destination_channel: EFBChannel = coordinator.get_module_by_id(self.chat.module_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.reaction: str = reaction\n        self.destination_channel: EFBChannel = coordinator.get_module_by_id(self.chat.module_id)\n\n",
        "source_code_len": 136,
        "target_code": "        self.reaction: str = reaction\n        dc = coordinator.get_module_by_id(self.chat.module_id)\n        if isinstance(dc, EFBChannel):\n            self.destination_channel = dc\n\n",
        "target_code_len": 183,
        "diff_format": "@@ -245,3 +253,5 @@\n         self.reaction: str = reaction\n-        self.destination_channel: EFBChannel = coordinator.get_module_by_id(self.chat.module_id)\n+        dc = coordinator.get_module_by_id(self.chat.module_id)\n+        if isinstance(dc, EFBChannel):\n+            self.destination_channel = dc\n \n",
        "source_code_with_indent": "        self.reaction: str = reaction\n        self.destination_channel: EFBChannel = coordinator.get_module_by_id(self.chat.module_id)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.reaction: str = reaction\n        dc = coordinator.get_module_by_id(self.chat.module_id)\n        if isinstance(dc, EFBChannel):\n            <IND>self.destination_channel = dc\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/utils.py:72:16 Unsupported operand [58]: `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "message": " `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 72,
    "warning_line": "    data_path = get_base_path() / 'profiles' / profile / module_id",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_base_path() -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 58,
        "target_code": "\ndef get_base_path() -> Path:\n    \"\"\"\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +36,3 @@\n \n-def get_base_path() -> Union[os.PathLike, Path]:\n+def get_base_path() -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_base_path() -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_base_path() -> Path:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\ndef get_data_path(module_id: str) -> Path:\n    \"\"\"\n",
        "target_code_len": 52,
        "diff_format": "@@ -58,3 +59,3 @@\n \n-def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n+def get_data_path(module_id: str) -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Path:\n    <IND>"
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/utils.py:98:22 Unsupported operand [58]: `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "message": " `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 98,
    "warning_line": "        config_path = get_base_path() / 'profiles' / profile",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_base_path() -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 58,
        "target_code": "\ndef get_base_path() -> Path:\n    \"\"\"\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +36,3 @@\n \n-def get_base_path() -> Union[os.PathLike, Path]:\n+def get_base_path() -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_base_path() -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_base_path() -> Path:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\ndef get_data_path(module_id: str) -> Path:\n    \"\"\"\n",
        "target_code_len": 52,
        "diff_format": "@@ -58,3 +59,3 @@\n \n-def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n+def get_data_path(module_id: str) -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Path:\n    <IND>"
      }
    ]
  },
  {
    "project": "ehForwarderBot/ehForwarderBot",
    "commit": "c94f6351e6201fd3e5ebd5059d44799cd55e0071",
    "filename": "ehforwarderbot/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-ehForwarderBot/ehforwarderbot/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ehforwarderbot/utils.py:111:19 Unsupported operand [58]: `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "message": " `/` is not supported for operand types `Union[os.PathLike[typing.Any], Path]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 111,
    "warning_line": "    channel_path = get_base_path() / \"modules\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_base_path() -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 58,
        "target_code": "\ndef get_base_path() -> Path:\n    \"\"\"\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +36,3 @@\n \n-def get_base_path() -> Union[os.PathLike, Path]:\n+def get_base_path() -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_base_path() -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_base_path() -> Path:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\ndef get_data_path(module_id: str) -> Path:\n    \"\"\"\n",
        "target_code_len": 52,
        "diff_format": "@@ -58,3 +59,3 @@\n \n-def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n+def get_data_path(module_id: str) -> Path:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Union[os.PathLike, Path]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_data_path(module_id: str) -> Path:\n    <IND>"
      }
    ]
  }
]