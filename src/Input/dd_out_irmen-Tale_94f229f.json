[
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:47:36 Incompatible parameter type [6]: Expected `Tuple[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Tuple[str, ...]`.",
    "message": " Expected `Tuple[str]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 47,
    "warning_line": "            cmds_aliases[command] = aliases",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "all_commands = {}   # type: Dict[str, Callable]\ncmds_aliases = {}   # type: Dict[str, Tuple[str]]  # commands -> tuple of aliases\nabbreviations = {}   # type: Dict[str, str]  # will be injected\n",
        "source_code_len": 194,
        "target_code": "all_commands = {}   # type: Dict[str, Callable]\ncmds_aliases = {}   # type: Dict[str, Tuple[str, ...]]  # commands -> tuple of one or more aliases\nabbreviations = {}   # type: Dict[str, str]  # will be injected\n",
        "target_code_len": 211,
        "diff_format": "@@ -26,3 +26,3 @@\n all_commands = {}   # type: Dict[str, Callable]\n-cmds_aliases = {}   # type: Dict[str, Tuple[str]]  # commands -> tuple of aliases\n+cmds_aliases = {}   # type: Dict[str, Tuple[str, ...]]  # commands -> tuple of one or more aliases\n abbreviations = {}   # type: Dict[str, str]  # will be injected\n",
        "source_code_with_indent": "all_commands = {}   # type: Dict[str, Callable]\ncmds_aliases = {}   # type: Dict[str, Tuple[str]]  # commands -> tuple of aliases\nabbreviations = {}   # type: Dict[str, str]  # will be injected\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "all_commands = {}   # type: Dict[str, Callable]\ncmds_aliases = {}   # type: Dict[str, Tuple[str, ...]]  # commands -> tuple of one or more aliases\nabbreviations = {}   # type: Dict[str, str]  # will be injected\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:112:46 Incompatible parameter type [6]: Expected `typing.Union[base.Item, base.Living, base.Location]` for 2nd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "message": " Expected `typing.Union[base.Item, base.Living, base.Location]` for 2nd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 112,
    "warning_line": "            player.tell_object_location(item, container, False)"
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:169:54 Incompatible parameter type [6]: Expected `typing.Union[base.Item, base.Living, base.Location]` for 2nd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "message": " Expected `typing.Union[base.Item, base.Living, base.Location]` for 2nd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 169,
    "warning_line": "                    player.tell_object_location(item, container)"
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:534:77 Incompatible variable type [9]: target is declared to have type `base.MudObject` but is used as type `None`.",
    "message": " target is declared to have type `base.MudObject` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 534,
    "warning_line": "def give_stuff(player: Player, items: Iterable[base.Item], target_name: str, target: base.MudObject=None) -> None:"
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:682:31 Incompatible parameter type [6]: Expected `typing.Union[base.Item, base.Living, base.Location]` for 1st positional only parameter to call `base.Living.__contains__` but got `base.MudObject`.",
    "message": " Expected `typing.Union[base.Item, base.Living, base.Location]` for 1st positional only parameter to call `base.Living.__contains__` but got `base.MudObject`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 682,
    "warning_line": "            elif container and container in player:"
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:683:58 Incompatible parameter type [6]: Expected `bool` for 3rd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "message": " Expected `bool` for 3rd positional only parameter to call `Player.tell_object_location` but got `base.MudObject`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 683,
    "warning_line": "                player.tell_object_location(player, item, container)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            elif container and container in player:\n                player.tell_object_location(player, item, container)\n            else:\n",
        "source_code_len": 139,
        "target_code": "            elif container and container in player:\n                player.tell_object_location(player, item, True)\n            else:\n",
        "target_code_len": 134,
        "diff_format": "@@ -682,3 +682,3 @@\n             elif container and container in player:\n-                player.tell_object_location(player, item, container)\n+                player.tell_object_location(player, item, True)\n             else:\n",
        "source_code_with_indent": "            <DED>elif container and container in player:\n                <IND>player.tell_object_location(player, item, container)\n            <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <DED>elif container and container in player:\n                <IND>player.tell_object_location(player, item, True)\n            <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:1317:41 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `Player.tell` but got `datetime.datetime`.",
    "message": " Expected `str` for 2nd positional only parameter to call `Player.tell` but got `datetime.datetime`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1317,
    "warning_line": "        player.tell(\"The game time is:\", ctx.clock)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is:\", ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is:\", real_time)\n        return\n",
        "source_code_len": 194,
        "target_code": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is: %s\" % ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is: %s\" % real_time)\n        return\n",
        "target_code_len": 202,
        "diff_format": "@@ -1316,5 +1317,5 @@\n         real_time = real_time.replace(microsecond=0)\n-        player.tell(\"The game time is:\", ctx.clock)\n+        player.tell(\"The game time is: %s\" % ctx.clock)\n         player.tell(\"\\n\")\n-        player.tell(\"Real time is:\", real_time)\n+        player.tell(\"Real time is: %s\" % real_time)\n         return\n",
        "source_code_with_indent": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is:\", ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is:\", real_time)\n        return\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is: %s\" % ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is: %s\" % real_time)\n        return\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "irmen/Tale",
    "commit": "94f229f32f7582feb748086bc61f90290d4d645b",
    "filename": "tale/cmds/normal.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/irmen-Tale/tale/cmds/normal.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tale/cmds/normal.py:1319:37 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `Player.tell` but got `datetime.datetime`.",
    "message": " Expected `str` for 2nd positional only parameter to call `Player.tell` but got `datetime.datetime`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1319,
    "warning_line": "        player.tell(\"Real time is:\", real_time)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is:\", ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is:\", real_time)\n        return\n",
        "source_code_len": 194,
        "target_code": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is: %s\" % ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is: %s\" % real_time)\n        return\n",
        "target_code_len": 202,
        "diff_format": "@@ -1316,5 +1317,5 @@\n         real_time = real_time.replace(microsecond=0)\n-        player.tell(\"The game time is:\", ctx.clock)\n+        player.tell(\"The game time is: %s\" % ctx.clock)\n         player.tell(\"\\n\")\n-        player.tell(\"Real time is:\", real_time)\n+        player.tell(\"Real time is: %s\" % real_time)\n         return\n",
        "source_code_with_indent": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is:\", ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is:\", real_time)\n        return\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        real_time = real_time.replace(microsecond=0)\n        player.tell(\"The game time is: %s\" % ctx.clock)\n        player.tell(\"\\n\")\n        player.tell(\"Real time is: %s\" % real_time)\n        return\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]