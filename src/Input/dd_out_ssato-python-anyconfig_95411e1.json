[
  {
    "project": "ssato/python-anyconfig",
    "commit": "95411e13eccfe51b4cb7173a1d4208c14b1be17b",
    "filename": "src/anyconfig/template/jinja2_.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/src/anyconfig/template/jinja2_.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/anyconfig/template/jinja2_.py:41:61 Incompatible parameter type [6]: Expected `typing.Union[typing.Iterable[str], str]` for 1st positional only parameter to call `jinja2.loaders.FileSystemLoader.__init__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "message": " Expected `typing.Union[typing.Iterable[str], str]` for 1st positional only parameter to call `jinja2.loaders.FileSystemLoader.__init__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 41,
    "warning_line": "    return jinja2.Environment(loader=jinja2.FileSystemLoader(paths))"
  },
  {
    "project": "ssato/python-anyconfig",
    "commit": "95411e13eccfe51b4cb7173a1d4208c14b1be17b",
    "filename": "src/anyconfig/template/jinja2_.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/src/anyconfig/template/jinja2_.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/anyconfig/template/jinja2_.py:69:31 Incompatible parameter type [6]: Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `pathlib.Path.__new__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "message": " Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `pathlib.Path.__new__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 69,
    "warning_line": "    tmpldir = str(pathlib.Path(template_file).parent.resolve())"
  },
  {
    "project": "ssato/python-anyconfig",
    "commit": "95411e13eccfe51b4cb7173a1d4208c14b1be17b",
    "filename": "src/anyconfig/template/jinja2_.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/src/anyconfig/template/jinja2_.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/anyconfig/template/jinja2_.py:71:32 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `list.__init__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `list.__init__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "        return [tmpldir] + list(paths)"
  },
  {
    "project": "ssato/python-anyconfig",
    "commit": "95411e13eccfe51b4cb7173a1d4208c14b1be17b",
    "filename": "src/anyconfig/template/jinja2_.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/src/anyconfig/template/jinja2_.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/anyconfig/template/jinja2_.py:126:20 Incompatible parameter type [6]: Expected `typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]` for 1st positional only parameter to call `open` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "message": " Expected `typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]` for 1st positional only parameter to call `open` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 126,
    "warning_line": "        return open(template_file).read()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_len": 140,
        "target_code": "\ndef render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "target_code_len": 146,
        "diff_format": "@@ -113,3 +116,3 @@\n \n-def render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n+def render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                 paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_with_indent": "\n<DED>def render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ssato/python-anyconfig",
    "commit": "95411e13eccfe51b4cb7173a1d4208c14b1be17b",
    "filename": "src/anyconfig/template/jinja2_.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/src/anyconfig/template/jinja2_.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/anyconfig/template/jinja2_.py:134:41 Incompatible parameter type [6]: Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `pathlib.Path.__new__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "message": " Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `pathlib.Path.__new__` but got `typing.Union[typing.Iterable[typing.Union[pathlib.Path, str]], pathlib.Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 134,
    "warning_line": "    return env.get_template(pathlib.Path(template_file).name).render(**ctx)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_len": 140,
        "target_code": "\ndef render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "target_code_len": 146,
        "diff_format": "@@ -113,3 +116,3 @@\n \n-def render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n+def render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                 paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_with_indent": "\n<DED>def render_impl(template_file: PathsT, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def render_impl(template_file: pathlib.Path, ctx: MaybeContextT = None,\n                paths: MaybePathsT = None, filters: MaybeFiltersT = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]