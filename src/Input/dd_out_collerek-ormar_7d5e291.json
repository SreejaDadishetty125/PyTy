[
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fastapi/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fastapi/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fastapi/docs001.py:35:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 35,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -34,4 +34,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fastapi/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fastapi/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fastapi/docs001.py:36:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 36,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -34,4 +34,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fastapi/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fastapi/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fastapi/docs001.py:45:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 45,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 139,
        "diff_format": "@@ -44,5 +44,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fastapi/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fastapi/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fastapi/docs001.py:46:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 46,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 139,
        "diff_format": "@@ -44,5 +44,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fastapi/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fastapi/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fastapi/docs001.py:47:14 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.fastapi.docs001.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.fastapi.docs001.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 47,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 139,
        "diff_format": "@@ -44,5 +44,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:24:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:26:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs001.py:27:16 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.fields.docs001.Department)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.fields.docs001.Department)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    department: ormar.ForeignKey(Department)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:24:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_len": 197,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_len": 199,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_len": 197,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_len": 199,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:26:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_len": 197,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_len": 199,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs002.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs002.py:27:16 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.fields.docs002.Department, $parameter$related_name = \"my_courses\")` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.fields.docs002.Department, $parameter$related_name = \"my_courses\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    department: ormar.ForeignKey(Department, related_name=\"my_courses\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_len": 197,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_len": 199,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department, related_name=\"my_courses\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:24:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_len": 169,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_len": 171,
        "diff_format": "@@ -23,5 +25,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_len": 169,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_len": 171,
        "diff_format": "@@ -23,5 +25,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:26:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_len": 169,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_len": 171,
        "diff_format": "@@ -23,5 +25,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs003.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs003.py:27:16 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.fields.docs003.Department)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.fields.docs003.Department)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    department: ormar.ForeignKey(Department)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_len": 169,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_len": 171,
        "diff_format": "@@ -23,5 +25,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs004.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs004.py:17:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_len": 257,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_len": 261,
        "diff_format": "@@ -16,6 +18,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default='Acme')\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default='Acme')\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs004.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs004.py:18:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 18,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_len": 257,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_len": 261,
        "diff_format": "@@ -16,6 +18,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default='Acme')\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default='Acme')\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs004.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs004.py:19:13 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200, $parameter$server_default = \"Acme\")` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200, $parameter$server_default = \"Acme\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    company: ormar.String(max_length=200, server_default='Acme')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_len": 257,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_len": 261,
        "diff_format": "@@ -16,6 +18,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default='Acme')\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default='Acme')\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs004.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs004.py:20:16 Invalid type [31]: Expression `ormar.Integer($parameter$server_default = sqlalchemy.text(\"10\"))` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$server_default = sqlalchemy.text(\"10\"))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    sort_order: ormar.Integer(server_default=text(\"10\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_len": 257,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_len": 261,
        "diff_format": "@@ -16,6 +18,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default='Acme')\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default='Acme')\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/fields/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/fields/docs004.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/fields/docs004.py:21:13 Invalid type [31]: Expression `ormar.DateTime($parameter$server_default = sqlalchemy.func.now())` is not a valid type.",
    "message": " Expression `ormar.DateTime($parameter$server_default = sqlalchemy.func.now())` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    created: ormar.DateTime(server_default=func.now())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_len": 257,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_len": 261,
        "diff_format": "@@ -16,6 +18,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default='Acme')\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default='Acme')\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default='Acme')\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default='Acme')\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs001.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs001.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -14,4 +14,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs001.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs001.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -14,4 +14,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs001.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs001.py:17:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -14,4 +14,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs002.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs002.py:18:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 18,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -17,4 +17,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs002.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs002.py:19:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -17,4 +17,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs002.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs002.py:20:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_len": 124,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_len": 126,
        "diff_format": "@@ -17,4 +17,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs003.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs003.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs003.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs003.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs003.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs003.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs003.py:17:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs004.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs004.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs004.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs004.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs004.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs004.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs004.py:17:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs005.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs005.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs005.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs005.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs005.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs005.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs005.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs005.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs005.py:17:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -14,5 +14,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs008.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs008.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs008.py:16:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"child_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"child_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    id: ormar.Integer(name='child_id', primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_len": 237,
        "target_code": "\n    id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_len": 241,
        "diff_format": "@@ -15,5 +15,5 @@\n \n-    id: ormar.Integer(name='child_id', primary_key=True)\n-    first_name: ormar.String(name='fname', max_length=100)\n-    last_name: ormar.String(name='lname', max_length=100)\n-    born_year: ormar.Integer(name='year_born', nullable=True)\n+    id = ormar.Integer(name='child_id', primary_key=True)\n+    first_name = ormar.String(name='fname', max_length=100)\n+    last_name = ormar.String(name='lname', max_length=100)\n+    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs008.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs008.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs008.py:17:16 Invalid type [31]: Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    first_name: ormar.String(name='fname', max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_len": 237,
        "target_code": "\n    id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_len": 241,
        "diff_format": "@@ -15,5 +15,5 @@\n \n-    id: ormar.Integer(name='child_id', primary_key=True)\n-    first_name: ormar.String(name='fname', max_length=100)\n-    last_name: ormar.String(name='lname', max_length=100)\n-    born_year: ormar.Integer(name='year_born', nullable=True)\n+    id = ormar.Integer(name='child_id', primary_key=True)\n+    first_name = ormar.String(name='fname', max_length=100)\n+    last_name = ormar.String(name='lname', max_length=100)\n+    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs008.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs008.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs008.py:18:15 Invalid type [31]: Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 18,
    "warning_line": "    last_name: ormar.String(name='lname', max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_len": 237,
        "target_code": "\n    id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_len": 241,
        "diff_format": "@@ -15,5 +15,5 @@\n \n-    id: ormar.Integer(name='child_id', primary_key=True)\n-    first_name: ormar.String(name='fname', max_length=100)\n-    last_name: ormar.String(name='lname', max_length=100)\n-    born_year: ormar.Integer(name='year_born', nullable=True)\n+    id = ormar.Integer(name='child_id', primary_key=True)\n+    first_name = ormar.String(name='fname', max_length=100)\n+    last_name = ormar.String(name='lname', max_length=100)\n+    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs008.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs008.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs008.py:19:15 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"year_born\", $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"year_born\", $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    born_year: ormar.Integer(name='year_born', nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_len": 237,
        "target_code": "\n    id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_len": 241,
        "diff_format": "@@ -15,5 +15,5 @@\n \n-    id: ormar.Integer(name='child_id', primary_key=True)\n-    first_name: ormar.String(name='fname', max_length=100)\n-    last_name: ormar.String(name='lname', max_length=100)\n-    born_year: ormar.Integer(name='year_born', nullable=True)\n+    id = ormar.Integer(name='child_id', primary_key=True)\n+    first_name = ormar.String(name='fname', max_length=100)\n+    last_name = ormar.String(name='lname', max_length=100)\n+    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='child_id', primary_key=True)\n    first_name: ormar.String(name='fname', max_length=100)\n    last_name: ormar.String(name='lname', max_length=100)\n    born_year: ormar.Integer(name='year_born', nullable=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='child_id', primary_key=True)\n    first_name = ormar.String(name='fname', max_length=100)\n    last_name = ormar.String(name='lname', max_length=100)\n    born_year = ormar.Integer(name='year_born', nullable=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs009.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs009.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs009.py:7:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"album_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"album_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 7,
    "warning_line": "    id: ormar.Integer(name='album_id', primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='album_id', primary_key=True)\n    name: ormar.String(name='album_name', max_length=100)\n    artist: ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(name='album_id', primary_key=True)\n    name = ormar.String(name='album_name', max_length=100)\n    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "target_code_len": 173,
        "diff_format": "@@ -6,4 +6,4 @@\n \n-    id: ormar.Integer(name='album_id', primary_key=True)\n-    name: ormar.String(name='album_name', max_length=100)\n-    artist: ormar.ForeignKey(Artist, name='artist_id')\n+    id = ormar.Integer(name='album_id', primary_key=True)\n+    name = ormar.String(name='album_name', max_length=100)\n+    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='album_id', primary_key=True)\n    name: ormar.String(name='album_name', max_length=100)\n    artist: ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='album_id', primary_key=True)\n    name = ormar.String(name='album_name', max_length=100)\n    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs009.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs009.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs009.py:8:10 Invalid type [31]: Expression `ormar.String($parameter$name = \"album_name\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"album_name\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 8,
    "warning_line": "    name: ormar.String(name='album_name', max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name='album_id', primary_key=True)\n    name: ormar.String(name='album_name', max_length=100)\n    artist: ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(name='album_id', primary_key=True)\n    name = ormar.String(name='album_name', max_length=100)\n    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "target_code_len": 173,
        "diff_format": "@@ -6,4 +6,4 @@\n \n-    id: ormar.Integer(name='album_id', primary_key=True)\n-    name: ormar.String(name='album_name', max_length=100)\n-    artist: ormar.ForeignKey(Artist, name='artist_id')\n+    id = ormar.Integer(name='album_id', primary_key=True)\n+    name = ormar.String(name='album_name', max_length=100)\n+    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name='album_id', primary_key=True)\n    name: ormar.String(name='album_name', max_length=100)\n    artist: ormar.ForeignKey(Artist, name='artist_id')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name='album_id', primary_key=True)\n    name = ormar.String(name='album_name', max_length=100)\n    artist= ormar.ForeignKey(Artist, name='artist_id')\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs009.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs009.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs009.py:9:12 Invalid type [31]: Expression `ormar.ForeignKey(Artist, $parameter$name = \"artist_id\")` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(Artist, $parameter$name = \"artist_id\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 9,
    "warning_line": "    artist: ormar.ForeignKey(Artist, name='artist_id')"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs010.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs010.py:14:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"artist_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"artist_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 14,
    "warning_line": "    id: ormar.Integer(name='artist_id', primary_key=True)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs010.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs010.py:15:16 Invalid type [31]: Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    first_name: ormar.String(name='fname', max_length=100)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs010.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs010.py:16:15 Invalid type [31]: Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    last_name: ormar.String(name='lname', max_length=100)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs010.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs010.py:17:15 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"year\")` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"year\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    born_year: ormar.Integer(name='year')"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/models/docs010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/models/docs010.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/models/docs010.py:18:14 Invalid type [31]: Expression `ormar.ManyToMany(Child, $parameter$through = docs_src.models.docs010.ArtistChildren)` is not a valid type.",
    "message": " Expression `ormar.ManyToMany(Child, $parameter$through = docs_src.models.docs010.ArtistChildren)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 18,
    "warning_line": "    children: ormar.ManyToMany(Child, through=ArtistChildren)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:25:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:26:11 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.queries.docs001.Album)` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:27:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/queries/docs001.py",
    "min_patch_found": false,
    "full_warning_msg": "docs_src/queries/docs001.py:28:14 Invalid type [31]: Expression `ormar.Integer()` is not a valid type.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:16:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -14,4 +16,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:24:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:26:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs001.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs001.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs001.py:27:16 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.relations.docs001.Department)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.relations.docs001.Department)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    department: ormar.ForeignKey(Department)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_len": 170,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_len": 172,
        "diff_format": "@@ -23,6 +25,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    completed: ormar.Boolean(default=False)\n-    department: ormar.ForeignKey(Department)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    completed= ormar.Boolean(default=False)\n+    department= ormar.ForeignKey(Department)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    completed: ormar.Boolean(default=False)\n    department: ormar.ForeignKey(Department)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    completed= ormar.Boolean(default=False)\n    department= ormar.ForeignKey(Department)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:15:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 15,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -14,5 +16,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:16:16 Invalid type [31]: Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 16,
    "warning_line": "    first_name: ormar.String(max_length=80)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -14,5 +16,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:17:15 Invalid type [31]: Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "    last_name: ormar.String(max_length=80)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -14,5 +16,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:26:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_len": 80,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_len": 82,
        "diff_format": "@@ -25,4 +27,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=40)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=40)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:27:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 40)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 40)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    name: ormar.String(max_length=40)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_len": 80,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_len": 82,
        "diff_format": "@@ -25,4 +27,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=40)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=40)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:45:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 45,
    "warning_line": "    id: ormar.Integer(primary_key=True)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:46:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 46,
    "warning_line": "    title: ormar.String(max_length=200)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:47:16 Invalid type [31]: Expression `ormar.ManyToMany(docs_src.relations.docs002.Category, $parameter$through = docs_src.relations.docs002.PostCategory)` is not a valid type.",
    "message": " Expression `ormar.ManyToMany(docs_src.relations.docs002.Category, $parameter$through = docs_src.relations.docs002.PostCategory)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 47,
    "warning_line": "    categories: ormar.ManyToMany(Category, through=PostCategory)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "docs_src/relations/docs002.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/docs_src/relations/docs002.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "docs_src/relations/docs002.py:48:12 Invalid type [31]: Expression `ormar.ForeignKey(docs_src.relations.docs002.Author)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(docs_src.relations.docs002.Author)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 48,
    "warning_line": "    author: ormar.ForeignKey(Author)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:18:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"child_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"child_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 18,
    "warning_line": "    id: ormar.Integer(name=\"child_id\", primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_len": 238,
        "target_code": "\n    id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_len": 242,
        "diff_format": "@@ -17,6 +17,6 @@\n \n-    id: ormar.Integer(name=\"child_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n+    id = ormar.Integer(name=\"child_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:19:16 Invalid type [31]: Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    first_name: ormar.String(name=\"fname\", max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_len": 238,
        "target_code": "\n    id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_len": 242,
        "diff_format": "@@ -17,6 +17,6 @@\n \n-    id: ormar.Integer(name=\"child_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n+    id = ormar.Integer(name=\"child_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:20:15 Invalid type [31]: Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    last_name: ormar.String(name=\"lname\", max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_len": 238,
        "target_code": "\n    id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_len": 242,
        "diff_format": "@@ -17,6 +17,6 @@\n \n-    id: ormar.Integer(name=\"child_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n+    id = ormar.Integer(name=\"child_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:21:15 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"year_born\", $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"year_born\", $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    born_year: ormar.Integer(name=\"year_born\", nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_len": 238,
        "target_code": "\n    id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_len": 242,
        "diff_format": "@@ -17,6 +17,6 @@\n \n-    id: ormar.Integer(name=\"child_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n+    id = ormar.Integer(name=\"child_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"child_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year_born\", nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:37:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"artist_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"artist_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 37,
    "warning_line": "    id: ormar.Integer(name=\"artist_id\", primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_len": 281,
        "target_code": "\n    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_len": 300,
        "diff_format": "@@ -36,7 +36,9 @@\n \n-    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year\")\n-    children: ormar.ManyToMany(Child, through=ArtistChildren)\n+    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year\")\n+    children = ormar.ManyToMany(\n+        Child, through=ArtistChildren\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:38:16 Invalid type [31]: Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"fname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 38,
    "warning_line": "    first_name: ormar.String(name=\"fname\", max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_len": 281,
        "target_code": "\n    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_len": 300,
        "diff_format": "@@ -36,7 +36,9 @@\n \n-    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year\")\n-    children: ormar.ManyToMany(Child, through=ArtistChildren)\n+    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year\")\n+    children = ormar.ManyToMany(\n+        Child, through=ArtistChildren\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:39:15 Invalid type [31]: Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"lname\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 39,
    "warning_line": "    last_name: ormar.String(name=\"lname\", max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_len": 281,
        "target_code": "\n    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_len": 300,
        "diff_format": "@@ -36,7 +36,9 @@\n \n-    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year\")\n-    children: ormar.ManyToMany(Child, through=ArtistChildren)\n+    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year\")\n+    children = ormar.ManyToMany(\n+        Child, through=ArtistChildren\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:40:15 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"year\")` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"year\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 40,
    "warning_line": "    born_year: ormar.Integer(name=\"year\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_len": 281,
        "target_code": "\n    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_len": 300,
        "diff_format": "@@ -36,7 +36,9 @@\n \n-    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year\")\n-    children: ormar.ManyToMany(Child, through=ArtistChildren)\n+    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year\")\n+    children = ormar.ManyToMany(\n+        Child, through=ArtistChildren\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:41:14 Invalid type [31]: Expression `ormar.ManyToMany(tests.test_aliases.Child, $parameter$through = tests.test_aliases.ArtistChildren)` is not a valid type.",
    "message": " Expression `ormar.ManyToMany(tests.test_aliases.Child, $parameter$through = tests.test_aliases.ArtistChildren)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "    children: ormar.ManyToMany(Child, through=ArtistChildren)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_len": 281,
        "target_code": "\n    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_len": 300,
        "diff_format": "@@ -36,7 +36,9 @@\n \n-    id: ormar.Integer(name=\"artist_id\", primary_key=True)\n-    first_name: ormar.String(name=\"fname\", max_length=100)\n-    last_name: ormar.String(name=\"lname\", max_length=100)\n-    born_year: ormar.Integer(name=\"year\")\n-    children: ormar.ManyToMany(Child, through=ArtistChildren)\n+    id = ormar.Integer(name=\"artist_id\", primary_key=True)\n+    first_name = ormar.String(name=\"fname\", max_length=100)\n+    last_name = ormar.String(name=\"lname\", max_length=100)\n+    born_year = ormar.Integer(name=\"year\")\n+    children = ormar.ManyToMany(\n+        Child, through=ArtistChildren\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name: ormar.String(name=\"fname\", max_length=100)\n    last_name: ormar.String(name=\"lname\", max_length=100)\n    born_year: ormar.Integer(name=\"year\")\n    children: ormar.ManyToMany(Child, through=ArtistChildren)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"artist_id\", primary_key=True)\n    first_name = ormar.String(name=\"fname\", max_length=100)\n    last_name = ormar.String(name=\"lname\", max_length=100)\n    born_year = ormar.Integer(name=\"year\")\n    children = ormar.ManyToMany(\n        Child, through=ArtistChildren\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:50:8 Invalid type [31]: Expression `ormar.Integer($parameter$name = \"album_id\", $parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$name = \"album_id\", $parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 50,
    "warning_line": "    id: ormar.Integer(name=\"album_id\", primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_len": 172,
        "target_code": "\n    id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_len": 175,
        "diff_format": "@@ -49,5 +51,5 @@\n \n-    id: ormar.Integer(name=\"album_id\", primary_key=True)\n-    name: ormar.String(name=\"album_name\", max_length=100)\n-    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n+    id = ormar.Integer(name=\"album_id\", primary_key=True)\n+    name = ormar.String(name=\"album_name\", max_length=100)\n+    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:51:10 Invalid type [31]: Expression `ormar.String($parameter$name = \"album_name\", $parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$name = \"album_name\", $parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 51,
    "warning_line": "    name: ormar.String(name=\"album_name\", max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_len": 172,
        "target_code": "\n    id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_len": 175,
        "diff_format": "@@ -49,5 +51,5 @@\n \n-    id: ormar.Integer(name=\"album_id\", primary_key=True)\n-    name: ormar.String(name=\"album_name\", max_length=100)\n-    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n+    id = ormar.Integer(name=\"album_id\", primary_key=True)\n+    name = ormar.String(name=\"album_name\", max_length=100)\n+    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_aliases.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_aliases.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_aliases.py:52:12 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_aliases.Artist, $parameter$name = \"artist_id\")` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_aliases.Artist, $parameter$name = \"artist_id\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    artist: ormar.ForeignKey(Artist, name=\"artist_id\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_len": 172,
        "target_code": "\n    id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_len": 175,
        "diff_format": "@@ -49,5 +51,5 @@\n \n-    id: ormar.Integer(name=\"album_id\", primary_key=True)\n-    name: ormar.String(name=\"album_name\", max_length=100)\n-    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n+    id = ormar.Integer(name=\"album_id\", primary_key=True)\n+    name = ormar.String(name=\"album_name\", max_length=100)\n+    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(name=\"album_id\", primary_key=True)\n    name: ormar.String(name=\"album_name\", max_length=100)\n    artist: ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(name=\"album_id\", primary_key=True)\n    name = ormar.String(name=\"album_name\", max_length=100)\n    artist = ormar.ForeignKey(Artist, name=\"artist_id\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:25:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:26:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200, $parameter$default = \"aaa\")` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200, $parameter$default = \"aaa\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    name: ormar.String(max_length=200, default=\"aaa\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:27:13 Invalid type [31]: Expression `ormar.DateTime($parameter$default = datetime.datetime.now)` is not a valid type.",
    "message": " Expression `ormar.DateTime($parameter$default = datetime.datetime.now)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    created: ormar.DateTime(default=datetime.datetime.now)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:28:17 Invalid type [31]: Expression `ormar.Date($parameter$default = datetime.date.today)` is not a valid type.",
    "message": " Expression `ormar.Date($parameter$default = datetime.date.today)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 28,
    "warning_line": "    created_day: ormar.Date(default=datetime.date.today)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:29:18 Invalid type [31]: Expression `ormar.Time($parameter$default = tests.test_columns.time)` is not a valid type.",
    "message": " Expression `ormar.Time($parameter$default = tests.test_columns.time)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 29,
    "warning_line": "    created_time: ormar.Time(default=time)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:30:17 Invalid type [31]: Expression `ormar.Text($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Text($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    description: ormar.Text(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:31:11 Invalid type [31]: Expression `ormar.Float($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Float($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    value: ormar.Float(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_columns.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_columns.py:32:10 Invalid type [31]: Expression `ormar.JSON($parameter$default = {  })` is not a valid type.",
    "message": " Expression `ormar.JSON($parameter$default = {  })` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    data: ormar.JSON(default={})",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_len": 369,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_len": 377,
        "diff_format": "@@ -24,10 +25,10 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=200, default=\"aaa\")\n-    created: ormar.DateTime(default=datetime.datetime.now)\n-    created_day: ormar.Date(default=datetime.date.today)\n-    created_time: ormar.Time(default=time)\n-    description: ormar.Text(nullable=True)\n-    value: ormar.Float(nullable=True)\n-    data: ormar.JSON(default={})\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=200, default=\"aaa\")\n+    created = ormar.DateTime(default=datetime.datetime.now)\n+    created_day = ormar.Date(default=datetime.date.today)\n+    created_time = ormar.Time(default=time)\n+    description = ormar.Text(nullable=True)\n+    value = ormar.Float(nullable=True)\n+    data = ormar.JSON(default={})\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=200, default=\"aaa\")\n    created: ormar.DateTime(default=datetime.datetime.now)\n    created_day: ormar.Date(default=datetime.date.today)\n    created_time: ormar.Time(default=time)\n    description: ormar.Text(nullable=True)\n    value: ormar.Float(nullable=True)\n    data: ormar.JSON(default={})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=200, default=\"aaa\")\n    created = ormar.DateTime(default=datetime.datetime.now)\n    created_day = ormar.Date(default=datetime.date.today)\n    created_time = ormar.Time(default=time)\n    description = ormar.Text(nullable=True)\n    value = ormar.Float(nullable=True)\n    data = ormar.JSON(default={})\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_docs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_docs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_docs.py:41:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -40,4 +40,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_docs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_docs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_docs.py:42:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 42,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -40,4 +40,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_docs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_docs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_docs.py:54:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 54,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_len": 150,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_len": 167,
        "diff_format": "@@ -53,5 +53,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    categories = ormar.ManyToMany(\n+        Category, through=ItemsXCategories\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_docs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_docs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_docs.py:55:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 55,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_len": 150,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_len": 167,
        "diff_format": "@@ -53,5 +53,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    categories = ormar.ManyToMany(\n+        Category, through=ItemsXCategories\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_docs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_docs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_docs.py:56:16 Invalid type [31]: Expression `ormar.ManyToMany(tests.test_fastapi_docs.Category, $parameter$through = tests.test_fastapi_docs.ItemsXCategories)` is not a valid type.",
    "message": " Expression `ormar.ManyToMany(tests.test_fastapi_docs.Category, $parameter$through = tests.test_fastapi_docs.ItemsXCategories)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 56,
    "warning_line": "    categories: ormar.ManyToMany(Category, through=ItemsXCategories)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_len": 150,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_len": 167,
        "diff_format": "@@ -53,5 +53,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    categories = ormar.ManyToMany(\n+        Category, through=ItemsXCategories\n+    )\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    categories: ormar.ManyToMany(Category, through=ItemsXCategories)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    categories = ormar.ManyToMany(\n        Category, through=ItemsXCategories\n    )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_usage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_usage.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_usage.py:21:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -20,4 +22,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_usage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_usage.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_usage.py:22:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -20,4 +22,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_usage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_usage.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_usage.py:31:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -30,5 +32,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_usage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_usage.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_usage.py:32:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -30,5 +32,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_fastapi_usage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_fastapi_usage.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_fastapi_usage.py:33:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_fastapi_usage.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_fastapi_usage.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 33,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -30,5 +32,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:19:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    id: ormar.Integer(primary_key=True)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:20:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    name: ormar.String(max_length=100)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:29:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 29,
    "warning_line": "    id: ormar.Integer(primary_key=True)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:30:11 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_foreign_keys.Album)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_foreign_keys.Album)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    album: ormar.ForeignKey(Album)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:31:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    title: ormar.String(max_length=100)"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:32:14 Invalid type [31]: Expression `ormar.Integer()` is not a valid type.",
    "message": " Expression `ormar.Integer()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    position: ormar.Integer()"
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:41:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_len": 148,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 151,
        "diff_format": "@@ -40,5 +42,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:42:11 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_foreign_keys.Album, $parameter$related_name = \"cover_pictures\")` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_foreign_keys.Album, $parameter$related_name = \"cover_pictures\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 42,
    "warning_line": "    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_len": 148,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 151,
        "diff_format": "@@ -40,5 +42,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:43:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 43,
    "warning_line": "    title: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_len": 148,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 151,
        "diff_format": "@@ -40,5 +42,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    album: ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:52:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_len": 117,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n\nclass Organization(object):\n    pass\n\n",
        "target_code_len": 158,
        "diff_format": "@@ -51,4 +53,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+    id = ormar.Integer(primary_key=True)\n+    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+\n+\n+class Organization(object):\n+    pass\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n\n<DED>class Organization(object):\n    <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:53:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100, $parameter$choices = [\"ACME Ltd\", \"Other ltd\"])` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100, $parameter$choices = [\"ACME Ltd\", \"Other ltd\"])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 53,
    "warning_line": "    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_len": 117,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n\nclass Organization(object):\n    pass\n\n",
        "target_code_len": 158,
        "diff_format": "@@ -51,4 +53,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+    id = ormar.Integer(primary_key=True)\n+    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+\n+\n+class Organization(object):\n+    pass\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    ident: ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n\n<DED>class Organization(object):\n    <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:62:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 62,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 121,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -61,5 +67,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    org: ormar.ForeignKey(Organisation)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org = ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:63:9 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_foreign_keys.Organisation)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_foreign_keys.Organisation)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 63,
    "warning_line": "    org: ormar.ForeignKey(Organisation)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 121,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -61,5 +67,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    org: ormar.ForeignKey(Organisation)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org = ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:64:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 64,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 121,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -61,5 +67,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    org: ormar.ForeignKey(Organisation)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org = ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    org: ormar.ForeignKey(Organisation)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org = ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:73:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 73,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_len": 115,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 118,
        "diff_format": "@@ -72,5 +78,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    team: ormar.ForeignKey(Team)\n-    email: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team = ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:74:10 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_foreign_keys.Team)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_foreign_keys.Team)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 74,
    "warning_line": "    team: ormar.ForeignKey(Team)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_len": 115,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 118,
        "diff_format": "@@ -72,5 +78,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    team: ormar.ForeignKey(Team)\n-    email: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team = ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_foreign_keys.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_foreign_keys.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_foreign_keys.py:75:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 75,
    "warning_line": "    email: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_len": 115,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 118,
        "diff_format": "@@ -72,5 +78,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    team: ormar.ForeignKey(Team)\n-    email: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team = ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    team: ormar.ForeignKey(Team)\n    email: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team = ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:21:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -20,5 +21,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:22:16 Invalid type [31]: Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "    first_name: ormar.String(max_length=80)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -20,5 +21,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:23:15 Invalid type [31]: Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 80)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 23,
    "warning_line": "    last_name: ormar.String(max_length=80)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_len": 132,
        "diff_format": "@@ -20,5 +21,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    first_name: ormar.String(max_length=80)\n-    last_name: ormar.String(max_length=80)\n+    id = ormar.Integer(primary_key=True)\n+    first_name = ormar.String(max_length=80)\n+    last_name = ormar.String(max_length=80)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    first_name: ormar.String(max_length=80)\n    last_name: ormar.String(max_length=80)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    first_name = ormar.String(max_length=80)\n    last_name = ormar.String(max_length=80)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:32:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_len": 80,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_len": 82,
        "diff_format": "@@ -31,4 +32,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=40)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=40)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:33:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 40)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 40)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 33,
    "warning_line": "    name: ormar.String(max_length=40)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_len": 80,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_len": 82,
        "diff_format": "@@ -31,4 +32,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=40)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=40)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=40)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=40)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:49:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 49,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_len": 201,
        "diff_format": "@@ -48,6 +49,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    categories: ormar.ManyToMany(Category, through=PostCategory)\n-    author: ormar.ForeignKey(Author)\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    categories = ormar.ManyToMany(\n+        Category, through=PostCategory\n+    )\n+    author= ormar.ForeignKey(Author)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:50:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 50,
    "warning_line": "    title: ormar.String(max_length=200)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_len": 201,
        "diff_format": "@@ -48,6 +49,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    categories: ormar.ManyToMany(Category, through=PostCategory)\n-    author: ormar.ForeignKey(Author)\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    categories = ormar.ManyToMany(\n+        Category, through=PostCategory\n+    )\n+    author= ormar.ForeignKey(Author)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:51:16 Invalid type [31]: Expression `ormar.ManyToMany(tests.test_many_to_many.Category, $parameter$through = tests.test_many_to_many.PostCategory)` is not a valid type.",
    "message": " Expression `ormar.ManyToMany(tests.test_many_to_many.Category, $parameter$through = tests.test_many_to_many.PostCategory)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 51,
    "warning_line": "    categories: ormar.ManyToMany(Category, through=PostCategory)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_len": 201,
        "diff_format": "@@ -48,6 +49,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    categories: ormar.ManyToMany(Category, through=PostCategory)\n-    author: ormar.ForeignKey(Author)\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    categories = ormar.ManyToMany(\n+        Category, through=PostCategory\n+    )\n+    author= ormar.ForeignKey(Author)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_many_to_many.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_many_to_many.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_many_to_many.py:52:12 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_many_to_many.Author)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_many_to_many.Author)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    author: ormar.ForeignKey(Author)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_len": 201,
        "diff_format": "@@ -48,6 +49,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    categories: ormar.ManyToMany(Category, through=PostCategory)\n-    author: ormar.ForeignKey(Author)\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    categories = ormar.ManyToMany(\n+        Category, through=PostCategory\n+    )\n+    author= ormar.ForeignKey(Author)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    categories: ormar.ManyToMany(Category, through=PostCategory)\n    author: ormar.ForeignKey(Author)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    categories = ormar.ManyToMany(\n        Category, through=PostCategory\n    )\n    author= ormar.ForeignKey(Author)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:20:10 Invalid type [31]: Expression `fields.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `fields.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    test: fields.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:21:17 Invalid type [31]: Expression `fields.String($parameter$max_length = 250)` is not a valid type.",
    "message": " Expression `fields.String($parameter$max_length = 250)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    test_string: fields.String(max_length=250)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:22:15 Invalid type [31]: Expression `fields.Text($parameter$default = \"\")` is not a valid type.",
    "message": " Expression `fields.Text($parameter$default = \"\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "    test_text: fields.Text(default=\"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:23:15 Invalid type [31]: Expression `fields.Boolean($parameter$nullable = False)` is not a valid type.",
    "message": " Expression `fields.Boolean($parameter$nullable = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 23,
    "warning_line": "    test_bool: fields.Boolean(nullable=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:24:16 Invalid type [31]: Expression `fields.Float()` is not a valid type.",
    "message": " Expression `fields.Float()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    test_float: fields.Float() = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:25:19 Invalid type [31]: Expression `fields.DateTime($parameter$default = datetime.datetime.now)` is not a valid type.",
    "message": " Expression `fields.DateTime($parameter$default = datetime.datetime.now)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    test_datetime: fields.DateTime(default=datetime.datetime.now)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:26:15 Invalid type [31]: Expression `fields.Date($parameter$default = datetime.date.today)` is not a valid type.",
    "message": " Expression `fields.Date($parameter$default = datetime.date.today)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    test_date: fields.Date(default=datetime.date.today)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:27:15 Invalid type [31]: Expression `fields.Time($parameter$default = datetime.time)` is not a valid type.",
    "message": " Expression `fields.Time($parameter$default = datetime.time)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    test_time: fields.Time(default=datetime.time)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:28:15 Invalid type [31]: Expression `fields.JSON($parameter$default = {  })` is not a valid type.",
    "message": " Expression `fields.JSON($parameter$default = {  })` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 28,
    "warning_line": "    test_json: fields.JSON(default={})",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:29:17 Invalid type [31]: Expression `fields.BigInteger($parameter$default = 0)` is not a valid type.",
    "message": " Expression `fields.BigInteger($parameter$default = 0)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 29,
    "warning_line": "    test_bigint: fields.BigInteger(default=0)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:30:18 Invalid type [31]: Expression `fields.Decimal($parameter$scale = 10, $parameter$precision = 2)` is not a valid type.",
    "message": " Expression `fields.Decimal($parameter$scale = 10, $parameter$precision = 2)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    test_decimal: fields.Decimal(scale=10, precision=2)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:31:19 Invalid type [31]: Expression `fields.Decimal($parameter$max_digits = 10, $parameter$decimal_places = 2)` is not a valid type.",
    "message": " Expression `fields.Decimal($parameter$max_digits = 10, $parameter$decimal_places = 2)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:52:10 Invalid type [31]: Expression `fields.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `fields.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    test: fields.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_model_definition.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_model_definition.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_model_definition.py:53:17 Invalid type [31]: Expression `fields.String($parameter$max_length = 250)` is not a valid type.",
    "message": " Expression `fields.String($parameter$max_length = 250)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 53,
    "warning_line": "    test_string: fields.String(max_length=250)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_len": 131,
        "target_code": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -6,6 +8,8 @@\n import sqlalchemy\n-\n-import ormar.fields as fields\n+import typing\n+\n+import ormar\n from ormar.exceptions import ModelDefinitionError\n from ormar.models import Model\n+from tests.settings import DATABASE_URL\n \n",
        "source_code_with_indent": "import sqlalchemy\n\nimport ormar.fields as fields\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sqlalchemy\nimport typing\n\nimport ormar\nfrom ormar.exceptions import ModelDefinitionError\nfrom ormar.models import Model\nfrom tests.settings import DATABASE_URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_len": 595,
        "target_code": "\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_len": 610,
        "diff_format": "@@ -19,14 +23,14 @@\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n-    test_text: fields.Text(default=\"\")\n-    test_bool: fields.Boolean(nullable=False)\n-    test_float: fields.Float() = None\n-    test_datetime: fields.DateTime(default=datetime.datetime.now)\n-    test_date: fields.Date(default=datetime.date.today)\n-    test_time: fields.Time(default=datetime.time)\n-    test_json: fields.JSON(default={})\n-    test_bigint: fields.BigInteger(default=0)\n-    test_decimal: fields.Decimal(scale=10, precision=2)\n-    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+    test_text = ormar.Text(default=\"\")\n+    test_bool = ormar.Boolean(nullable=False)\n+    test_float: ormar.Float() = None  # type: ignore\n+    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n+    test_date = ormar.Date(default=datetime.date.today)\n+    test_time = ormar.Time(default=datetime.time)\n+    test_json = ormar.JSON(default={})\n+    test_bigint = ormar.BigInteger(default=0)\n+    test_decimal = ormar.Decimal(scale=10, precision=2)\n+    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n \n",
        "source_code_with_indent": "\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n    test_text: fields.Text(default=\"\")\n    test_bool: fields.Boolean(nullable=False)\n    test_float: fields.Float() = None\n    test_datetime: fields.DateTime(default=datetime.datetime.now)\n    test_date: fields.Date(default=datetime.date.today)\n    test_time: fields.Time(default=datetime.time)\n    test_json: fields.JSON(default={})\n    test_bigint: fields.BigInteger(default=0)\n    test_decimal: fields.Decimal(scale=10, precision=2)\n    test_decimal2: fields.Decimal(max_digits=10, decimal_places=2)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n    test_text = ormar.Text(default=\"\")\n    test_bool = ormar.Boolean(nullable=False)\n    test_float: ormar.Float() = None  # type: ignore\n    test_datetime = ormar.DateTime(default=datetime.datetime.now)\n    test_date = ormar.Date(default=datetime.date.today)\n    test_time = ormar.Time(default=datetime.time)\n    test_json = ormar.JSON(default={})\n    test_bigint = ormar.BigInteger(default=0)\n    test_decimal = ormar.Decimal(scale=10, precision=2)\n    test_decimal2 = ormar.Decimal(max_digits=10, decimal_places=2)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        tablename = \"example2\"\n        metadata = metadata\n\n    test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_len": 167,
        "target_code": "    class Meta:\n        tablename = \"examples\"\n        metadata = metadata\n\n    test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n@pytest.fixture(scope=\"module\")\ndef event_loop():\n    loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_len": 493,
        "diff_format": "@@ -48,7 +52,22 @@\n     class Meta:\n-        tablename = \"example2\"\n+        tablename = \"examples\"\n         metadata = metadata\n \n-    test: fields.Integer(primary_key=True)\n-    test_string: fields.String(max_length=250)\n+    test = ormar.Integer(primary_key=True)\n+    test_string = ormar.String(max_length=250)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def event_loop():\n+    loop = asyncio.get_event_loop()\n+    yield loop\n+    loop.close()\n+\n+\n+@pytest.fixture(autouse=True, scope=\"module\")\n+async def create_test_database():\n+    engine = sqlalchemy.create_engine(DATABASE_URL)\n+    metadata.create_all(engine)\n+    yield\n+    metadata.drop_all(engine)\n \n",
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"example2\"\n        metadata = metadata\n\n    <DED>test: fields.Integer(primary_key=True)\n    test_string: fields.String(max_length=250)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = \"examples\"\n        metadata = metadata\n\n    <DED>test = ormar.Integer(primary_key=True)\n    test_string = ormar.String(max_length=250)\n\n\n<DED>@pytest.fixture(scope=\"module\")\ndef event_loop():\n    <IND>loop = asyncio.get_event_loop()\n    yield loop\n    loop.close()\n\n\n<DED>@pytest.fixture(autouse=True, scope=\"module\")\nasync def create_test_database():\n    <IND>engine = sqlalchemy.create_engine(DATABASE_URL)\n    metadata.create_all(engine)\n    yield\n    metadata.drop_all(engine)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:25:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    test_json: ormar.JSON(nullable=True)\n\n",
        "source_code_len": 83,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    test_json= ormar.JSON(nullable=True)\n\n",
        "target_code_len": 84,
        "diff_format": "@@ -24,4 +24,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    test_json: ormar.JSON(nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    test_json= ormar.JSON(nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    test_json: ormar.JSON(nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    test_json= ormar.JSON(nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:26:15 Invalid type [31]: Expression `ormar.JSON($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.JSON($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    test_json: ormar.JSON(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    test_json: ormar.JSON(nullable=True)\n\n",
        "source_code_len": 83,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    test_json= ormar.JSON(nullable=True)\n\n",
        "target_code_len": 84,
        "diff_format": "@@ -24,4 +24,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    test_json: ormar.JSON(nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    test_json= ormar.JSON(nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    test_json: ormar.JSON(nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    test_json= ormar.JSON(nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:35:8 Invalid type [31]: Expression `ormar.UUID($parameter$primary_key = True, $parameter$default = uuid.uuid4)` is not a valid type.",
    "message": " Expression `ormar.UUID($parameter$primary_key = True, $parameter$default = uuid.uuid4)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 35,
    "warning_line": "    id: ormar.UUID(primary_key=True, default=uuid.uuid4)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text: ormar.Text()\n\n",
        "source_code_len": 87,
        "target_code": "\n    id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text = ormar.Text()\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -34,4 +34,4 @@\n \n-    id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n-    test_text: ormar.Text()\n+    id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n+    test_text = ormar.Text()\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text: ormar.Text()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text = ormar.Text()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:36:15 Invalid type [31]: Expression `ormar.Text()` is not a valid type.",
    "message": " Expression `ormar.Text()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 36,
    "warning_line": "    test_text: ormar.Text()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text: ormar.Text()\n\n",
        "source_code_len": 87,
        "target_code": "\n    id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text = ormar.Text()\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -34,4 +34,4 @@\n \n-    id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n-    test_text: ormar.Text()\n+    id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n+    test_text = ormar.Text()\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text: ormar.Text()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id= ormar.UUID(primary_key=True, default=uuid.uuid4)\n    test_text = ormar.Text()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:45:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 45,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, default=\"\")\n\n",
        "source_code_len": 93,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, default=\"\")\n\n",
        "target_code_len": 95,
        "diff_format": "@@ -44,4 +44,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100, default=\"\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100, default=\"\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, default=\"\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, default=\"\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:46:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100, $parameter$default = \"\")` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100, $parameter$default = \"\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 46,
    "warning_line": "    name: ormar.String(max_length=100, default=\"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, default=\"\")\n\n",
        "source_code_len": 93,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, default=\"\")\n\n",
        "target_code_len": 95,
        "diff_format": "@@ -44,4 +44,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100, default=\"\")\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100, default=\"\")\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, default=\"\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, default=\"\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:55:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 55,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_len": 224,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -54,7 +54,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    rating: ormar.Integer(minimum=1, maximum=5)\n-    in_stock: ormar.Boolean(default=False)\n-    last_delivery: ormar.Date(default=datetime.now)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    rating = ormar.Integer(minimum=1, maximum=5)\n+    in_stock= ormar.Boolean(default=False)\n+    last_delivery= ormar.Date(default=datetime.now)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:56:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 56,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_len": 224,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -54,7 +54,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    rating: ormar.Integer(minimum=1, maximum=5)\n-    in_stock: ormar.Boolean(default=False)\n-    last_delivery: ormar.Date(default=datetime.now)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    rating = ormar.Integer(minimum=1, maximum=5)\n+    in_stock= ormar.Boolean(default=False)\n+    last_delivery= ormar.Date(default=datetime.now)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:57:12 Invalid type [31]: Expression `ormar.Integer($parameter$minimum = 1, $parameter$maximum = 5)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$minimum = 1, $parameter$maximum = 5)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 57,
    "warning_line": "    rating: ormar.Integer(minimum=1, maximum=5)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_len": 224,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -54,7 +54,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    rating: ormar.Integer(minimum=1, maximum=5)\n-    in_stock: ormar.Boolean(default=False)\n-    last_delivery: ormar.Date(default=datetime.now)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    rating = ormar.Integer(minimum=1, maximum=5)\n+    in_stock= ormar.Boolean(default=False)\n+    last_delivery= ormar.Date(default=datetime.now)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:58:14 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 58,
    "warning_line": "    in_stock: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_len": 224,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -54,7 +54,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    rating: ormar.Integer(minimum=1, maximum=5)\n-    in_stock: ormar.Boolean(default=False)\n-    last_delivery: ormar.Date(default=datetime.now)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    rating = ormar.Integer(minimum=1, maximum=5)\n+    in_stock= ormar.Boolean(default=False)\n+    last_delivery= ormar.Date(default=datetime.now)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:59:19 Invalid type [31]: Expression `ormar.Date($parameter$default = datetime.datetime.now)` is not a valid type.",
    "message": " Expression `ormar.Date($parameter$default = datetime.datetime.now)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 59,
    "warning_line": "    last_delivery: ormar.Date(default=datetime.now)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_len": 224,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -54,7 +54,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    rating: ormar.Integer(minimum=1, maximum=5)\n-    in_stock: ormar.Boolean(default=False)\n-    last_delivery: ormar.Date(default=datetime.now)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    rating = ormar.Integer(minimum=1, maximum=5)\n+    in_stock= ormar.Boolean(default=False)\n+    last_delivery= ormar.Date(default=datetime.now)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    rating: ormar.Integer(minimum=1, maximum=5)\n    in_stock: ormar.Boolean(default=False)\n    last_delivery: ormar.Date(default=datetime.now)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    rating = ormar.Integer(minimum=1, maximum=5)\n    in_stock= ormar.Boolean(default=False)\n    last_delivery= ormar.Date(default=datetime.now)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:73:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 73,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_len": 328,
        "diff_format": "@@ -72,8 +72,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(\n         max_length=9, choices=country_name_choices, default=\"Canada\",\n     )\n-    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n-    country_code: ormar.Integer(\n+    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n+    country_code = ormar.Integer(\n         minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:74:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 9, $parameter$choices = $local_tests?test_models$country_name_choices, $parameter$default = \"Canada\")` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 9, $parameter$choices = $local_tests?test_models$country_name_choices, $parameter$default = \"Canada\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 74,
    "warning_line": "    name: ormar.String(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_len": 328,
        "diff_format": "@@ -72,8 +72,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(\n         max_length=9, choices=country_name_choices, default=\"Canada\",\n     )\n-    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n-    country_code: ormar.Integer(\n+    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n+    country_code = ormar.Integer(\n         minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:77:11 Invalid type [31]: Expression `ormar.Boolean($parameter$choices = $local_tests?test_models$country_taxed_choices, $parameter$default = True)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$choices = $local_tests?test_models$country_taxed_choices, $parameter$default = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 77,
    "warning_line": "    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_len": 328,
        "diff_format": "@@ -72,8 +72,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(\n         max_length=9, choices=country_name_choices, default=\"Canada\",\n     )\n-    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n-    country_code: ormar.Integer(\n+    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n+    country_code = ormar.Integer(\n         minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_models.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_models.py:78:18 Invalid type [31]: Expression `ormar.Integer($parameter$minimum = 0, $parameter$maximum = 1000, $parameter$choices = $local_tests?test_models$country_country_code_choices, $parameter$default = 1)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$minimum = 0, $parameter$maximum = 1000, $parameter$choices = $local_tests?test_models$country_country_code_choices, $parameter$default = 1)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 78,
    "warning_line": "    country_code: ormar.Integer(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_len": 328,
        "diff_format": "@@ -72,8 +72,8 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(\n         max_length=9, choices=country_name_choices, default=\"Canada\",\n     )\n-    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n-    country_code: ormar.Integer(\n+    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n+    country_code = ormar.Integer(\n         minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed: ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code: ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(\n        max_length=9, choices=country_name_choices, default=\"Canada\",\n    )\n    taxed= ormar.Boolean(choices=country_taxed_choices, default=True)\n    country_code = ormar.Integer(\n        minimum=0, maximum=1000, choices=country_country_code_choices, default=1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_reallife_fastapi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_reallife_fastapi.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_reallife_fastapi.py:38:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 38,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -37,4 +37,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_reallife_fastapi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_reallife_fastapi.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_reallife_fastapi.py:39:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 39,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -37,4 +37,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_reallife_fastapi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_reallife_fastapi.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_reallife_fastapi.py:48:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 48,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -47,5 +47,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_reallife_fastapi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_reallife_fastapi.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_reallife_fastapi.py:49:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 49,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -47,5 +47,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_reallife_fastapi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_reallife_fastapi.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_reallife_fastapi.py:50:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_reallife_fastapi.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_reallife_fastapi.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 50,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 137,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 140,
        "diff_format": "@@ -47,5 +47,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    category = ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    category = ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:20:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True, $parameter$autoincrement = False)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True, $parameter$autoincrement = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    id: ormar.Integer(primary_key=True, autoincrement=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 102,
        "target_code": "\n    id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 104,
        "diff_format": "@@ -19,4 +20,4 @@\n \n-    id: ormar.Integer(primary_key=True, autoincrement=False)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True, autoincrement=False)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:21:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 102,
        "target_code": "\n    id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 104,
        "diff_format": "@@ -19,4 +20,4 @@\n \n-    id: ormar.Integer(primary_key=True, autoincrement=False)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True, autoincrement=False)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:30:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -29,4 +30,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:31:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -29,4 +30,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:40:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 40,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -39,5 +40,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:41:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -39,5 +40,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:42:16 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Department, $parameter$nullable = False)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Department, $parameter$nullable = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 42,
    "warning_line": "    department: ormar.ForeignKey(Department, nullable=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -39,5 +40,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:51:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 51,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:52:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:53:17 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_same_table_joins.SchoolClass)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_same_table_joins.SchoolClass)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 53,
    "warning_line": "    schoolclass: ormar.ForeignKey(SchoolClass)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:54:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 54,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:63:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 63,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:64:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 64,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:65:17 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_same_table_joins.SchoolClass)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_same_table_joins.SchoolClass)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 65,
    "warning_line": "    schoolclass: ormar.ForeignKey(SchoolClass)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_more_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_more_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_more_same_table_joins.py:66:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_more_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 66,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:21:4 Incompatible attribute type [8]: Attribute `id` declared in class `Album` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Album` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 21,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 93,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -20,4 +20,4 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    name: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:22:4 Incompatible attribute type [8]: Attribute `name` declared in class `Album` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `name` declared in class `Album` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 22,
    "warning_line": "    name: str = ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 93,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -20,4 +20,4 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    name: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:31:4 Incompatible attribute type [8]: Attribute `id` declared in class `Track` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Track` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 31,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_len": 183,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -30,6 +30,6 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Optional[Album] = ormar.ForeignKey(Album)\n-    title: str = ormar.String(max_length=100)\n-    position: int = ormar.Integer()\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album)\n+    title = ormar.String(max_length=100)\n+    position = ormar.Integer()\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:32:4 Incompatible attribute type [8]: Attribute `album` declared in class `Track` has type `Optional[Album]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "message": " Attribute `album` declared in class `Track` has type `Optional[Album]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 32,
    "warning_line": "    album: Optional[Album] = ormar.ForeignKey(Album)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_len": 183,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -30,6 +30,6 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Optional[Album] = ormar.ForeignKey(Album)\n-    title: str = ormar.String(max_length=100)\n-    position: int = ormar.Integer()\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album)\n+    title = ormar.String(max_length=100)\n+    position = ormar.Integer()\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:33:4 Incompatible attribute type [8]: Attribute `title` declared in class `Track` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `title` declared in class `Track` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 33,
    "warning_line": "    title: str = ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_len": 183,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -30,6 +30,6 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Optional[Album] = ormar.ForeignKey(Album)\n-    title: str = ormar.String(max_length=100)\n-    position: int = ormar.Integer()\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album)\n+    title = ormar.String(max_length=100)\n+    position = ormar.Integer()\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:34:4 Incompatible attribute type [8]: Attribute `position` declared in class `Track` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `position` declared in class `Track` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 34,
    "warning_line": "    position: int = ormar.Integer()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_len": 183,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -30,6 +30,6 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Optional[Album] = ormar.ForeignKey(Album)\n-    title: str = ormar.String(max_length=100)\n-    position: int = ormar.Integer()\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album)\n+    title = ormar.String(max_length=100)\n+    position = ormar.Integer()\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Optional[Album] = ormar.ForeignKey(Album)\n    title: str = ormar.String(max_length=100)\n    position: int = ormar.Integer()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album)\n    title = ormar.String(max_length=100)\n    position = ormar.Integer()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:43:4 Incompatible attribute type [8]: Attribute `id` declared in class `Cover` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Cover` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 43,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 168,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -42,5 +42,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:44:4 Incompatible attribute type [8]: Attribute `album` declared in class `Cover` has type `Album` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "message": " Attribute `album` declared in class `Cover` has type `Album` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 44,
    "warning_line": "    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 168,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -42,5 +42,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:45:4 Incompatible attribute type [8]: Attribute `title` declared in class `Cover` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `title` declared in class `Cover` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 45,
    "warning_line": "    title: str = ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 168,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -42,5 +42,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n-    title: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n+    title = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    album: Album = ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    album= ormar.ForeignKey(Album, related_name=\"cover_pictures\")\n    title = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:54:4 Incompatible attribute type [8]: Attribute `id` declared in class `Organisation` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Organisation` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 54,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "target_code_len": 119,
        "diff_format": "@@ -53,4 +53,4 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+    id = ormar.Integer(primary_key=True)\n+    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:55:4 Incompatible attribute type [8]: Attribute `ident` declared in class `Organisation` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `ident` declared in class `Organisation` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 55,
    "warning_line": "    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_len": 129,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "target_code_len": 119,
        "diff_format": "@@ -53,4 +53,4 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n+    id = ormar.Integer(primary_key=True)\n+    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    ident: str = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    ident = ormar.String(max_length=100, choices=[\"ACME Ltd\", \"Other ltd\"])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:64:4 Incompatible attribute type [8]: Attribute `id` declared in class `Team` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Team` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 64,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 158,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -63,5 +63,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n-    name: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org= ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:65:4 Incompatible attribute type [8]: Attribute `org` declared in class `Team` has type `Optional[Organisation]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "message": " Attribute `org` declared in class `Team` has type `Optional[Organisation]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 65,
    "warning_line": "    org: Optional[Organisation] = ormar.ForeignKey(Organisation)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 158,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -63,5 +63,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n-    name: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org= ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:66:4 Incompatible attribute type [8]: Attribute `name` declared in class `Team` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `name` declared in class `Team` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 66,
    "warning_line": "    name: str = ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 158,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -63,5 +63,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n-    name: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    org= ormar.ForeignKey(Organisation)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    org: Optional[Organisation] = ormar.ForeignKey(Organisation)\n    name: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    org= ormar.ForeignKey(Organisation)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:75:4 Incompatible attribute type [8]: Attribute `id` declared in class `Member` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "message": " Attribute `id` declared in class `Member` has type `int` but is used as type `ormar.fields.model_fields.Integer`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 75,
    "warning_line": "    id: int = ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 144,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 117,
        "diff_format": "@@ -74,5 +74,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    team: Optional[Team] = ormar.ForeignKey(Team)\n-    email: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team= ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:76:4 Incompatible attribute type [8]: Attribute `team` declared in class `Member` has type `Optional[Team]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "message": " Attribute `team` declared in class `Member` has type `Optional[Team]` but is used as type `typing.Type[ormar.fields.foreign_key.ForeignKeyField]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 76,
    "warning_line": "    team: Optional[Team] = ormar.ForeignKey(Team)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 144,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 117,
        "diff_format": "@@ -74,5 +74,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    team: Optional[Team] = ormar.ForeignKey(Team)\n-    email: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team= ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_new_annotation_style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_new_annotation_style.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_new_annotation_style.py:77:4 Incompatible attribute type [8]: Attribute `email` declared in class `Member` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "message": " Attribute `email` declared in class `Member` has type `str` but is used as type `ormar.fields.model_fields.String`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 77,
    "warning_line": "    email: str = ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_len": 144,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_len": 117,
        "diff_format": "@@ -74,5 +74,5 @@\n \n-    id: int = ormar.Integer(primary_key=True)\n-    team: Optional[Team] = ormar.ForeignKey(Team)\n-    email: str = ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    team= ormar.ForeignKey(Team)\n+    email = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: int = ormar.Integer(primary_key=True)\n    team: Optional[Team] = ormar.ForeignKey(Team)\n    email: str = ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    team= ormar.ForeignKey(Team)\n    email = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_non_integer_pkey.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_non_integer_pkey.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_non_integer_pkey.py:24:8 Invalid type [31]: Expression `ormar.String($parameter$primary_key = True, $parameter$default = tests.test_non_integer_pkey.key, $parameter$max_length = 8)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$primary_key = True, $parameter$default = tests.test_non_integer_pkey.key, $parameter$max_length = 8)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.String(primary_key=True, default=key, max_length=8)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.String(primary_key=True, default=key, max_length=8)\n    name: ormar.String(max_length=32)\n\n",
        "source_code_len": 106,
        "target_code": "\n    id = ormar.String(primary_key=True, default=key, max_length=8)\n    name = ormar.String(max_length=32)\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -23,4 +23,4 @@\n \n-    id: ormar.String(primary_key=True, default=key, max_length=8)\n-    name: ormar.String(max_length=32)\n+    id = ormar.String(primary_key=True, default=key, max_length=8)\n+    name = ormar.String(max_length=32)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.String(primary_key=True, default=key, max_length=8)\n    name: ormar.String(max_length=32)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.String(primary_key=True, default=key, max_length=8)\n    name = ormar.String(max_length=32)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_non_integer_pkey.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_non_integer_pkey.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_non_integer_pkey.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 32)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 32)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=32)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.String(primary_key=True, default=key, max_length=8)\n    name: ormar.String(max_length=32)\n\n",
        "source_code_len": 106,
        "target_code": "\n    id = ormar.String(primary_key=True, default=key, max_length=8)\n    name = ormar.String(max_length=32)\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -23,4 +23,4 @@\n \n-    id: ormar.String(primary_key=True, default=key, max_length=8)\n-    name: ormar.String(max_length=32)\n+    id = ormar.String(primary_key=True, default=key, max_length=8)\n+    name = ormar.String(max_length=32)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.String(primary_key=True, default=key, max_length=8)\n    name: ormar.String(max_length=32)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.String(primary_key=True, default=key, max_length=8)\n    name = ormar.String(max_length=32)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:19:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_len": 175,
        "diff_format": "@@ -18,6 +20,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    author: ormar.String(max_length=100)\n-    genre: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    author = ormar.String(max_length=100)\n+    genre = ormar.String(\n         max_length=100,\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:20:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    title: ormar.String(max_length=200)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_len": 175,
        "diff_format": "@@ -18,6 +20,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    author: ormar.String(max_length=100)\n-    genre: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    author = ormar.String(max_length=100)\n+    genre = ormar.String(\n         max_length=100,\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:21:12 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    author: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_len": 175,
        "diff_format": "@@ -18,6 +20,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    author: ormar.String(max_length=100)\n-    genre: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    author = ormar.String(max_length=100)\n+    genre = ormar.String(\n         max_length=100,\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:22:11 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100, $parameter$default = \"Fiction\", $parameter$choices = [\"Fiction\", \"Adventure\", \"Historic\", \"Fantasy\"])` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100, $parameter$default = \"Fiction\", $parameter$choices = [\"Fiction\", \"Adventure\", \"Historic\", \"Fantasy\"])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "    genre: ormar.String(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_len": 171,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_len": 175,
        "diff_format": "@@ -18,6 +20,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    title: ormar.String(max_length=200)\n-    author: ormar.String(max_length=100)\n-    genre: ormar.String(\n+    id = ormar.Integer(primary_key=True)\n+    title = ormar.String(max_length=200)\n+    author = ormar.String(max_length=100)\n+    genre = ormar.String(\n         max_length=100,\n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    title: ormar.String(max_length=200)\n    author: ormar.String(max_length=100)\n    genre: ormar.String(\n        max_length=100,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    title = ormar.String(max_length=200)\n    author = ormar.String(max_length=100)\n    genre = ormar.String(\n        max_length=100,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:35:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 35,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -34,5 +36,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:36:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 36,
    "warning_line": "    text: ormar.String(max_length=500)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -34,5 +36,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:37:15 Invalid type [31]: Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "message": " Expression `ormar.Boolean($parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 37,
    "warning_line": "    completed: ormar.Boolean(default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_len": 125,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -34,5 +36,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    completed: ormar.Boolean(default=False)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    completed= ormar.Boolean(default=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    completed: ormar.Boolean(default=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    completed= ormar.Boolean(default=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:46:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 46,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=500)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=500)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -45,4 +47,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=500)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=500)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=500)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=500)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:47:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 47,
    "warning_line": "    name: ormar.String(max_length=500)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=500)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=500)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -45,4 +47,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=500)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=500)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=500)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=500)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:56:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 56,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_len": 122,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -55,5 +57,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    category: ormar.ForeignKey(Category)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    category= ormar.ForeignKey(Category)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:57:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 500)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 57,
    "warning_line": "    text: ormar.String(max_length=500)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_len": 122,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -55,5 +57,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    category: ormar.ForeignKey(Category)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    category= ormar.ForeignKey(Category)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_queryset_level_methods.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_queryset_level_methods.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_queryset_level_methods.py:58:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_queryset_level_methods.Category)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_queryset_level_methods.Category)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 58,
    "warning_line": "    category: ormar.ForeignKey(Category)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_len": 122,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_len": 124,
        "diff_format": "@@ -55,5 +57,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    text: ormar.String(max_length=500)\n-    category: ormar.ForeignKey(Category)\n+    id = ormar.Integer(primary_key=True)\n+    text = ormar.String(max_length=500)\n+    category= ormar.ForeignKey(Category)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    text: ormar.String(max_length=500)\n    category: ormar.ForeignKey(Category)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    text = ormar.String(max_length=500)\n    category= ormar.ForeignKey(Category)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:20:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True, $parameter$autoincrement = False)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True, $parameter$autoincrement = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    id: ormar.Integer(primary_key=True, autoincrement=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 102,
        "target_code": "\n    id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 104,
        "diff_format": "@@ -19,4 +20,4 @@\n \n-    id: ormar.Integer(primary_key=True, autoincrement=False)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True, autoincrement=False)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:21:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 102,
        "target_code": "\n    id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 104,
        "diff_format": "@@ -19,4 +20,4 @@\n \n-    id: ormar.Integer(primary_key=True, autoincrement=False)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True, autoincrement=False)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True, autoincrement=False)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True, autoincrement=False)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:30:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -29,5 +30,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:31:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -29,5 +30,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:32:16 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_same_table_joins.Department, $parameter$nullable = False)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_same_table_joins.Department, $parameter$nullable = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    department: ormar.ForeignKey(Department, nullable=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_len": 142,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -29,5 +30,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    department: ormar.ForeignKey(Department, nullable=False)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    department= ormar.ForeignKey(Department, nullable=False)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    department: ormar.ForeignKey(Department, nullable=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    department= ormar.ForeignKey(Department, nullable=False)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:41:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -40,4 +41,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:42:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 42,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_len": 81,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -40,4 +41,4 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:51:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 51,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:52:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:53:17 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_same_table_joins.SchoolClass)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_same_table_joins.SchoolClass)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 53,
    "warning_line": "    schoolclass: ormar.ForeignKey(SchoolClass)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:54:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 54,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -50,6 +51,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:63:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 63,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:64:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 64,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:65:17 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_same_table_joins.SchoolClass)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_same_table_joins.SchoolClass)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 65,
    "warning_line": "    schoolclass: ormar.ForeignKey(SchoolClass)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_same_table_joins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_same_table_joins.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_same_table_joins.py:66:14 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_same_table_joins.Category, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 66,
    "warning_line": "    category: ormar.ForeignKey(Category, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_len": 184,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_len": 186,
        "diff_format": "@@ -62,6 +63,6 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    schoolclass: ormar.ForeignKey(SchoolClass)\n-    category: ormar.ForeignKey(Category, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    schoolclass= ormar.ForeignKey(SchoolClass)\n+    category= ormar.ForeignKey(Category, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    schoolclass: ormar.ForeignKey(SchoolClass)\n    category: ormar.ForeignKey(Category, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    schoolclass= ormar.ForeignKey(SchoolClass)\n    category= ormar.ForeignKey(Category, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:19:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_len": 139,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_len": 142,
        "diff_format": "@@ -18,5 +20,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100, nullable=False)\n-    founded: ormar.Integer(nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100, nullable=False)\n+    founded = ormar.Integer(nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:20:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100, $parameter$nullable = False)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100, $parameter$nullable = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 20,
    "warning_line": "    name: ormar.String(max_length=100, nullable=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_len": 139,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_len": 142,
        "diff_format": "@@ -18,5 +20,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100, nullable=False)\n-    founded: ormar.Integer(nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100, nullable=False)\n+    founded = ormar.Integer(nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:21:13 Invalid type [31]: Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 21,
    "warning_line": "    founded: ormar.Integer(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_len": 139,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_len": 142,
        "diff_format": "@@ -18,5 +20,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100, nullable=False)\n-    founded: ormar.Integer(nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100, nullable=False)\n+    founded = ormar.Integer(nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100, nullable=False)\n    founded: ormar.Integer(nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100, nullable=False)\n    founded = ormar.Integer(nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:30:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:31:18 Invalid type [31]: Expression `ormar.ForeignKey(tests.test_selecting_subset_of_columns.Company)` is not a valid type.",
    "message": " Expression `ormar.ForeignKey(tests.test_selecting_subset_of_columns.Company)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    manufacturer: ormar.ForeignKey(Company)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:32:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:33:10 Invalid type [31]: Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 33,
    "warning_line": "    year: ormar.Integer(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:34:18 Invalid type [31]: Expression `ormar.String($parameter$max_length = 20, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 20, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 34,
    "warning_line": "    gearbox_type: ormar.String(max_length=20, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:35:11 Invalid type [31]: Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 35,
    "warning_line": "    gears: ormar.Integer(nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_selecting_subset_of_columns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_selecting_subset_of_columns.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_selecting_subset_of_columns.py:36:17 Invalid type [31]: Expression `ormar.String($parameter$max_length = 20, $parameter$nullable = True)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 20, $parameter$nullable = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 36,
    "warning_line": "    aircon_type: ormar.String(max_length=20, nullable=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_len": 325,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_len": 331,
        "diff_format": "@@ -29,9 +31,9 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    manufacturer: ormar.ForeignKey(Company)\n-    name: ormar.String(max_length=100)\n-    year: ormar.Integer(nullable=True)\n-    gearbox_type: ormar.String(max_length=20, nullable=True)\n-    gears: ormar.Integer(nullable=True)\n-    aircon_type: ormar.String(max_length=20, nullable=True)\n+    id = ormar.Integer(primary_key=True)\n+    manufacturer= ormar.ForeignKey(Company)\n+    name = ormar.String(max_length=100)\n+    year = ormar.Integer(nullable=True)\n+    gearbox_type = ormar.String(max_length=20, nullable=True)\n+    gears = ormar.Integer(nullable=True)\n+    aircon_type = ormar.String(max_length=20, nullable=True)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    manufacturer: ormar.ForeignKey(Company)\n    name: ormar.String(max_length=100)\n    year: ormar.Integer(nullable=True)\n    gearbox_type: ormar.String(max_length=20, nullable=True)\n    gears: ormar.Integer(nullable=True)\n    aircon_type: ormar.String(max_length=20, nullable=True)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    manufacturer= ormar.ForeignKey(Company)\n    name = ormar.String(max_length=100)\n    year = ormar.Integer(nullable=True)\n    gearbox_type = ormar.String(max_length=20, nullable=True)\n    gears = ormar.Integer(nullable=True)\n    aircon_type = ormar.String(max_length=20, nullable=True)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_server_default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_server_default.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_server_default.py:23:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 23,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_len": 258,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_len": 262,
        "diff_format": "@@ -22,7 +22,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default=\"Acme\")\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default=\"Acme\")\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_server_default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_server_default.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_server_default.py:24:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_len": 258,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_len": 262,
        "diff_format": "@@ -22,7 +22,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default=\"Acme\")\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default=\"Acme\")\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_server_default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_server_default.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_server_default.py:25:13 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200, $parameter$server_default = \"Acme\")` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200, $parameter$server_default = \"Acme\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    company: ormar.String(max_length=200, server_default=\"Acme\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_len": 258,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_len": 262,
        "diff_format": "@@ -22,7 +22,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default=\"Acme\")\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default=\"Acme\")\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_server_default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_server_default.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_server_default.py:26:16 Invalid type [31]: Expression `ormar.Integer($parameter$server_default = sqlalchemy.text(\"10\"))` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$server_default = sqlalchemy.text(\"10\"))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    sort_order: ormar.Integer(server_default=text(\"10\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_len": 258,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_len": 262,
        "diff_format": "@@ -22,7 +22,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default=\"Acme\")\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default=\"Acme\")\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_server_default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_server_default.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_server_default.py:27:13 Invalid type [31]: Expression `ormar.DateTime($parameter$server_default = sqlalchemy.func.now())` is not a valid type.",
    "message": " Expression `ormar.DateTime($parameter$server_default = sqlalchemy.func.now())` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "    created: ormar.DateTime(server_default=func.now())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_len": 258,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_len": 262,
        "diff_format": "@@ -22,7 +22,7 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200, server_default=\"Acme\")\n-    sort_order: ormar.Integer(server_default=text(\"10\"))\n-    created: ormar.DateTime(server_default=func.now())\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200, server_default=\"Acme\")\n+    sort_order = ormar.Integer(server_default=text(\"10\"))\n+    created= ormar.DateTime(server_default=func.now())\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order: ormar.Integer(server_default=text(\"10\"))\n    created: ormar.DateTime(server_default=func.now())\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200, server_default=\"Acme\")\n    sort_order = ormar.Integer(server_default=text(\"10\"))\n    created= ormar.DateTime(server_default=func.now())\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_unique_constraints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_unique_constraints.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_unique_constraints.py:24:8 Invalid type [31]: Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "message": " Expression `ormar.Integer($parameter$primary_key = True)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    id: ormar.Integer(primary_key=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_len": 123,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_len": 126,
        "diff_format": "@@ -23,5 +23,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_unique_constraints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_unique_constraints.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_unique_constraints.py:25:10 Invalid type [31]: Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 100)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    name: ormar.String(max_length=100)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_len": 123,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_len": 126,
        "diff_format": "@@ -23,5 +23,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "collerek/ormar",
    "commit": "7d5e291a19e2ed21f264a17970e6ffd31ef1c73c",
    "filename": "tests/test_unique_constraints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/collerek-ormar/tests/test_unique_constraints.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_unique_constraints.py:26:13 Invalid type [31]: Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "message": " Expression `ormar.String($parameter$max_length = 200)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "    company: ormar.String(max_length=200)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_len": 123,
        "target_code": "\n    id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_len": 126,
        "diff_format": "@@ -23,5 +23,5 @@\n \n-    id: ormar.Integer(primary_key=True)\n-    name: ormar.String(max_length=100)\n-    company: ormar.String(max_length=200)\n+    id = ormar.Integer(primary_key=True)\n+    name = ormar.String(max_length=100)\n+    company = ormar.String(max_length=200)\n \n",
        "source_code_with_indent": "\n    <DED>id: ormar.Integer(primary_key=True)\n    name: ormar.String(max_length=100)\n    company: ormar.String(max_length=200)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>id = ormar.Integer(primary_key=True)\n    name = ormar.String(max_length=100)\n    company = ormar.String(max_length=200)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]