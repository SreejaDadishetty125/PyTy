[
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:1141:54 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1141,
    "warning_line": "            reverse_type = reverse_type.copy_modified(arg_types=[reverse_type.arg_types[0]] * 2,"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:1257:12 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1257,
    "warning_line": "            arg_types=[forward_base_erased, forward_item.arg_types[0]],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:1262:12 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1262,
    "warning_line": "            arg_types=[reverse_type.arg_types[1], reverse_type.arg_types[0]],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:3658:12 Incompatible return type [7]: Expected `Tuple[Optional[Dict[Expression, Type]], Optional[Dict[Expression, Type]]]` but got `Tuple[Optional[Dict[RefExpr, Type]], Optional[Dict[RefExpr, Type]]]`.",
    "message": " Expected `Tuple[Optional[Dict[Expression, Type]], Optional[Dict[Expression, Type]]]` but got `Tuple[Optional[Dict[RefExpr, Type]], Optional[Dict[RefExpr, Type]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 3658,
    "warning_line": "            return if_map, else_map"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:4324:8 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 2nd parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 2nd parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 4324,
    "warning_line": "        arg_types=type_list[:-1],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/checker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checker.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checker.py:4325:8 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 3rd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 3rd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 4325,
    "warning_line": "        ret_type=type_list[-1],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/ctypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/ctypes.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/ctypes.py:174:20 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 174,
    "warning_line": "                    arg_types=ctx.default_signature.arg_types[:1] + [arg_type],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:132:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 132,
    "warning_line": "                arg_types=arg_type.arg_types,"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:133:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[int], typing.Any]` for 2nd parameter `arg_kinds` to call `CallableType.copy_modified` but got `typing.List[int]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[int], typing.Any]` for 2nd parameter `arg_kinds` to call `CallableType.copy_modified` but got `typing.List[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 133,
    "warning_line": "                arg_kinds=arg_type.arg_kinds,"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:135:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[mypy.types.TypeVarDef], typing.Any]` for 4th parameter `variables` to call `CallableType.copy_modified` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[mypy.types.TypeVarDef], typing.Any]` for 4th parameter `variables` to call `CallableType.copy_modified` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 135,
    "warning_line": "                variables=arg_type.variables,"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:152:20 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 152,
    "warning_line": "            and len(signature.variables) == 1"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:169:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 169,
    "warning_line": "                arg_types=[signature.arg_types[0],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:171:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 2nd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 2nd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 171,
    "warning_line": "                ret_type=ret_type)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:224:20 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[typing.List[mypy.types.TypeVarDef]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 224,
    "warning_line": "            and len(signature.variables) == 1"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:235:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 235,
    "warning_line": "                arg_types=[str_type, typ],"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:236:16 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 2nd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 2nd parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 236,
    "warning_line": "                ret_type=typ)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:237:35 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 237,
    "warning_line": "    return signature.copy_modified(arg_types=[str_type, signature.arg_types[1]])"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:287:43 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 287,
    "warning_line": "            return signature.copy_modified(arg_types=[str_type, value_type])"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:288:35 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 288,
    "warning_line": "    return signature.copy_modified(arg_types=[str_type, signature.arg_types[1]])"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:330:47 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Instance]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[Instance]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 330,
    "warning_line": "    return ctx.default_signature.copy_modified(arg_types=[str_type])"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/plugins/default.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/plugins/default.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/plugins/default.py:360:39 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[TypedDictType]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[typing.List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `typing.List[TypedDictType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 360,
    "warning_line": "        return signature.copy_modified(arg_types=[arg_type])"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/stats.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/stats.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/stats.py:329:40 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "message": " Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 329,
    "warning_line": "            self.record_line(self.line, TYPE_UNANALYZED)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/stats.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/stats.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/stats.py:339:40 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "message": " Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 339,
    "warning_line": "            self.record_line(self.line, TYPE_ANY)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/stats.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/stats.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/stats.py:344:40 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "message": " Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 344,
    "warning_line": "            self.record_line(self.line, TYPE_IMPRECISE)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/stats.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/stats.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/stats.py:347:40 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "message": " Expected `int` for 2nd positional only parameter to call `StatisticsVisitor.record_line` but got `Final`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 347,
    "warning_line": "            self.record_line(self.line, TYPE_PRECISE)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:268:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 268,
    "warning_line": "    __slots__ = ('name', 'args', 'optional', 'empty_tuple_index',"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:404:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 404,
    "warning_line": "    __slots__ = ('type_of_any', 'source_any', 'missing_import_name')"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:528:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 528,
    "warning_line": "    __slots__ = ()"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:605:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 605,
    "warning_line": "    __slots__ = ('type', 'args', 'erased', 'invalid', 'type_ref', 'last_known_value')"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:733:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str, str, str, str, str, str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 733,
    "warning_line": "    __slots__ = ('name', 'fullname', 'id', 'values', 'upper_bound', 'variance')"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:790:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 790,
    "warning_line": "    __slots__ = ('fallback',)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:902:22 Incompatible variable type [9]: arg_types is declared to have type `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` but is used as type `Final[typing.Any]`.",
    "message": " arg_types is declared to have type `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` but is used as type `Final[typing.Any]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 902,
    "warning_line": "                      arg_types: Bogus[List[Type]] = _dummy,"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:919:12 Incompatible parameter type [6]: Expected `List[Type]` for 1st parameter `arg_types` to call `CallableType.__init__` but got `Union[List[Type], mypy_extensions.FlexibleAlias[List[Type], typing.Any]]`.",
    "message": " Expected `List[Type]` for 1st parameter `arg_types` to call `CallableType.__init__` but got `Union[List[Type], mypy_extensions.FlexibleAlias[List[Type], typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 919,
    "warning_line": "            arg_types=arg_types if arg_types is not _dummy else self.arg_types,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            variables = []\n        self.arg_types = arg_types\n        self.arg_kinds = arg_kinds\n",
        "source_code_len": 97,
        "target_code": "            variables = []\n        self.arg_types = list(arg_types)\n        self.arg_kinds = arg_kinds\n",
        "target_code_len": 103,
        "diff_format": "@@ -870,3 +978,3 @@\n             variables = []\n-        self.arg_types = arg_types\n+        self.arg_types = list(arg_types)\n         self.arg_kinds = arg_kinds\n",
        "source_code_with_indent": "            <IND>variables = []\n        <DED>self.arg_types = arg_types\n        self.arg_kinds = arg_kinds\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>variables = []\n        <DED>self.arg_types = list(arg_types)\n        self.arg_kinds = arg_kinds\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:1582:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "message": " `__slots__` overrides attribute defined in `Type` inconsistently. Type `Tuple[str]` is not a subtype of the overridden attribute `Tuple[str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 1582,
    "warning_line": "    __slots__ = ('items',)"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:1771:4 Incompatible attribute type [8]: Attribute `item` declared in class `TypeType` has type `Type` but is used as type `None`.",
    "message": " Attribute `item` declared in class `TypeType` has type `Type` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 1771,
    "warning_line": "    item = None  # type: Type"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:1780:8 Incompatible attribute type [8]: Attribute `item` declared in class `TypeType` has type `Type` but is used as type `mypy_extensions.FlexibleAlias[Union[AnyType, CallableType, Instance, NoneType, TupleType, TypeVarType], typing.Any]`.",
    "message": " Attribute `item` declared in class `TypeType` has type `Type` but is used as type `mypy_extensions.FlexibleAlias[Union[AnyType, CallableType, Instance, NoneType, TupleType, TypeVarType], typing.Any]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 1780,
    "warning_line": "        self.item = item"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:2123:8 Incompatible return type [7]: Expected `FunctionLike` but got `Type`.",
    "message": " Expected `FunctionLike` but got `Type`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 2123,
    "warning_line": "        return func.type"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:2146:8 Incompatible parameter type [6]: Expected `List[Type]` for 1st positional only parameter to call `CallableType.__init__` but got `List[AnyType]`.",
    "message": " Expected `List[Type]` for 1st positional only parameter to call `CallableType.__init__` but got `List[AnyType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 2146,
    "warning_line": "        [AnyType(TypeOfAny.unannotated)] * len(fdef.arg_names),"
  },
  {
    "project": "python/mypy",
    "commit": "e04bf78e1261ce8a5eac6080286049010a85daf7",
    "filename": "mypy/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/types.py",
    "file_hunks_size": 57,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/types.py:2177:32 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[Type], typing.Any]` for 1st parameter `arg_types` to call `CallableType.copy_modified` but got `List[Type]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 2177,
    "warning_line": "        return tp.copy_modified(arg_types=new_args[:-1], ret_type=new_args[-1],"
  }
]