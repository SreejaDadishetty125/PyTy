[
  {
    "project": "common-workflow-language/cwltool",
    "commit": "f0a3eb1a9b441098654f3e9a89fef418dffe6536",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:749:16 Incompatible parameter type [6]: Expected `Dict[str, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]]` for 5th positional only parameter to call `static_checker` but got `Dict[str, Dict[str, typing.Any]]`.",
    "message": " Expected `Dict[str, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]]` for 5th positional only parameter to call `static_checker` but got `Dict[str, Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 749,
    "warning_line": "                param_to_step,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        step_inputs = []  # type: List[Any]\n        step_outputs = []  # type: List[Any]\n        param_to_step = {}  # type: Dict[str, Dict[str, Any]]\n        for step in self.steps:\n",
        "source_code_len": 184,
        "target_code": "\n        step_inputs = []  # type: List[CWLObjectType]\n        step_outputs = []  # type: List[CWLObjectType]\n        param_to_step = {}  # type: Dict[str, CWLObjectType]\n        for step in self.steps:\n",
        "target_code_len": 203,
        "diff_format": "@@ -731,5 +127,5 @@\n \n-        step_inputs = []  # type: List[Any]\n-        step_outputs = []  # type: List[Any]\n-        param_to_step = {}  # type: Dict[str, Dict[str, Any]]\n+        step_inputs = []  # type: List[CWLObjectType]\n+        step_outputs = []  # type: List[CWLObjectType]\n+        param_to_step = {}  # type: Dict[str, CWLObjectType]\n         for step in self.steps:\n",
        "source_code_with_indent": "\n        step_inputs = []  # type: List[Any]\n        step_outputs = []  # type: List[Any]\n        param_to_step = {}  # type: Dict[str, Dict[str, Any]]\n        for step in self.steps:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        step_inputs = []  # type: List[CWLObjectType]\n        step_outputs = []  # type: List[CWLObjectType]\n        param_to_step = {}  # type: Dict[str, CWLObjectType]\n        for step in self.steps:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "f0a3eb1a9b441098654f3e9a89fef418dffe6536",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:1156:26 Incompatible parameter type [6]: Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "message": " Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1156,
    "warning_line": "        output[i[\"id\"]] = [None] * jobl"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "f0a3eb1a9b441098654f3e9a89fef418dffe6536",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:1191:26 Incompatible parameter type [6]: Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "message": " Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1191,
    "warning_line": "        output[i[\"id\"]] = [None] * jobl"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "f0a3eb1a9b441098654f3e9a89fef418dffe6536",
    "filename": "cwltool/workflow.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/workflow.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/workflow.py:1249:26 Incompatible parameter type [6]: Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "message": " Expected `List[Union[None, MutableMapping[str, Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], MutableSequence[Union[None, MutableMapping[str, typing.Any], MutableSequence[typing.Any], bool, float, int, str]], bool, float, int, str]], bool, float, int, str]]` for 2nd positional only parameter to call `MutableMapping.__setitem__` but got `List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1249,
    "warning_line": "        output[i[\"id\"]] = [None] * crossproduct_size(joborder, scatter_keys)"
  }
]