[
  {
    "project": "edgedb/edgedb",
    "commit": "84300d9e60b449cc3aa7e1e8246aa93fcb3e5607",
    "filename": "edb/schema/inheriting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/inheriting.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/inheriting.py:378:42 Incompatible parameter type [6]: Expected `typing.List[Variable[so.InheritingObjectT (bound to so.InheritingObject)]]` for 4th positional only parameter to call `InheritingObjectCommand._rebase_ref` but got `typing.List[s_referencing.ReferencedInheritingObject]`.",
    "message": " Expected `typing.List[Variable[so.InheritingObjectT (bound to so.InheritingObject)]]` for 4th positional only parameter to call `InheritingObjectCommand._rebase_ref` but got `typing.List[s_referencing.ReferencedInheritingObject]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 378,
    "warning_line": "                    schema, context, obj, existing_bases, bases)"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "84300d9e60b449cc3aa7e1e8246aa93fcb3e5607",
    "filename": "edb/schema/inheriting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/inheriting.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/inheriting.py:378:58 Incompatible parameter type [6]: Expected `typing.List[Variable[so.InheritingObjectT (bound to so.InheritingObject)]]` for 5th positional only parameter to call `InheritingObjectCommand._rebase_ref` but got `typing.List[so.InheritingObject]`.",
    "message": " Expected `typing.List[Variable[so.InheritingObjectT (bound to so.InheritingObject)]]` for 5th positional only parameter to call `InheritingObjectCommand._rebase_ref` but got `typing.List[so.InheritingObject]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 378,
    "warning_line": "                    schema, context, obj, existing_bases, bases)"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "84300d9e60b449cc3aa7e1e8246aa93fcb3e5607",
    "filename": "edb/schema/schema.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/schema.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/schema.py:1587:12 Incompatible return type [7]: Expected `typing.Optional[Variable[so.Object_T (bound to so.Object)]]` but got `typing.Union[None, so.Object, Variable[so.Object_T (bound to so.Object)]]`.",
    "message": " Expected `typing.Optional[Variable[so.Object_T (bound to so.Object)]]` but got `typing.Union[None, so.Object, Variable[so.Object_T (bound to so.Object)]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1587,
    "warning_line": "            return self._base_schema.get("
  }
]