[
  {
    "project": "optuna/optuna",
    "commit": "cb557f0242729d9a7fb63f16081cffd0aeafa342",
    "filename": "optuna/integration/cma.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/optuna/integration/cma.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "optuna/integration/cma.py:117:12 Incompatible variable type [9]: seed is declared to have type `int` but is used as type `None`.",
    "message": " seed is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 117,
    "warning_line": "            seed=None,  # type: int",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cma_stds=None,  # type: Optional[Dict[str, float]]\n            seed=None,  # type: int\n            cma_opts=None,  # type: Optional[Dict[str, Any]]\n",
        "source_code_len": 160,
        "target_code": "            cma_stds=None,  # type: Optional[Dict[str, float]]\n            seed=None,  # type: Optional[int]\n            cma_opts=None,  # type: Optional[Dict[str, Any]]\n",
        "target_code_len": 170,
        "diff_format": "@@ -116,3 +116,3 @@\n             cma_stds=None,  # type: Optional[Dict[str, float]]\n-            seed=None,  # type: int\n+            seed=None,  # type: Optional[int]\n             cma_opts=None,  # type: Optional[Dict[str, Any]]\n",
        "source_code_with_indent": "            cma_stds=None,  # type: Optional[Dict[str, float]]\n            seed=None,  # type: int\n            cma_opts=None,  # type: Optional[Dict[str, Any]]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            cma_stds=None,  # type: Optional[Dict[str, float]]\n            seed=None,  # type: Optional[int]\n            cma_opts=None,  # type: Optional[Dict[str, Any]]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]