[
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/floodsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/floodsub.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/floodsub.py:28:8 Incompatible attribute type [8]: Attribute `protocols` declared in class `FloodSub` has type `List[str]` but is used as type `Sequence[str]`.",
    "message": " Attribute `protocols` declared in class `FloodSub` has type `List[str]` but is used as type `Sequence[str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 28,
    "warning_line": "        self.protocols = protocols",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self, protocols: Sequence[str]) -> None:\n        self.protocols = protocols\n        self.pubsub = None\n",
        "source_code_len": 120,
        "target_code": "    def __init__(self, protocols: Sequence[str]) -> None:\n        self.protocols = list(protocols)\n        self.pubsub = None\n",
        "target_code_len": 126,
        "diff_format": "@@ -27,3 +27,3 @@\n     def __init__(self, protocols: Sequence[str]) -> None:\n-        self.protocols = protocols\n+        self.protocols = list(protocols)\n         self.pubsub = None\n",
        "source_code_with_indent": "    def __init__(self, protocols: Sequence[str]) -> None:\n        <IND>self.protocols = protocols\n        self.pubsub = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self, protocols: Sequence[str]) -> None:\n        <IND>self.protocols = list(protocols)\n        self.pubsub = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/floodsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/floodsub.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/floodsub.py:57:4 Inconsistent override [15]: `libp2p.pubsub.floodsub.FloodSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.floodsub.FloodSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 57,
    "warning_line": "    async def handle_rpc(self, rpc: rpc_pb2.ControlMessage, sender_peer_id: ID):"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/floodsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/floodsub.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/floodsub.py:93:4 Inconsistent override [15]: `libp2p.pubsub.floodsub.FloodSub.join` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.floodsub.FloodSub.join` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 93,
    "warning_line": "    async def join(self, topic: str):"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/floodsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/floodsub.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/floodsub.py:101:4 Inconsistent override [15]: `libp2p.pubsub.floodsub.FloodSub.leave` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.floodsub.FloodSub.leave` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 101,
    "warning_line": "    async def leave(self, topic: str):"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:65:8 Incompatible attribute type [8]: Attribute `protocols` declared in class `GossipSub` has type `List[str]` but is used as type `Sequence[str]`.",
    "message": " Attribute `protocols` declared in class `GossipSub` has type `List[str]` but is used as type `Sequence[str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 65,
    "warning_line": "        self.protocols: List[str] = protocols",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # pylint: disable=too-many-arguments\n        self.protocols: List[str] = protocols\n        self.pubsub: Pubsub = None\n\n",
        "source_code_len": 127,
        "target_code": "        # pylint: disable=too-many-arguments\n        self.protocols = list(protocols)\n        self.pubsub = None\n\n",
        "target_code_len": 114,
        "diff_format": "@@ -64,4 +64,4 @@\n         # pylint: disable=too-many-arguments\n-        self.protocols: List[str] = protocols\n-        self.pubsub: Pubsub = None\n+        self.protocols = list(protocols)\n+        self.pubsub = None\n \n",
        "source_code_with_indent": "        # pylint: disable=too-many-arguments\n        <IND>self.protocols: List[str] = protocols\n        self.pubsub: Pubsub = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # pylint: disable=too-many-arguments\n        <IND>self.protocols = list(protocols)\n        self.pubsub = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:98:8 Incompatible return type [7]: Expected `List[typing.Any]` but got `Sequence[str]`.",
    "message": " Expected `List[typing.Any]` but got `Sequence[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "        return self.protocols",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    protocols: Sequence[str]\n    pubsub: Pubsub\n",
        "source_code_len": 49,
        "target_code": "\n    protocols: List[str]\n    pubsub: Pubsub\n",
        "target_code_len": 45,
        "diff_format": "@@ -29,3 +29,3 @@\n \n-    protocols: Sequence[str]\n+    protocols: List[str]\n     pubsub: Pubsub\n",
        "source_code_with_indent": "\n    <IND>protocols: Sequence[str]\n    pubsub: Pubsub\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>protocols: List[str]\n    pubsub: Pubsub\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:136:4 Inconsistent override [14]: `libp2p.pubsub.gossipsub.GossipSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `ID`.",
    "message": " `libp2p.pubsub.gossipsub.GossipSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `ID`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 136,
    "warning_line": "    async def handle_rpc(self, rpc: rpc_pb2.Message, sender_peer_id: str):"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:136:4 Inconsistent override [15]: `libp2p.pubsub.gossipsub.GossipSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.gossipsub.GossipSub.handle_rpc` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, typing.Any]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 136,
    "warning_line": "    async def handle_rpc(self, rpc: rpc_pb2.Message, sender_peer_id: str):"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:232:4 Inconsistent override [15]: `libp2p.pubsub.gossipsub.GossipSub.join` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, None]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.gossipsub.GossipSub.join` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, None]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 232,
    "warning_line": "    async def join(self, topic: str) -> None:"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:271:4 Inconsistent override [15]: `libp2p.pubsub.gossipsub.GossipSub.leave` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, None]` is not a subtype of the overridden return `None`.",
    "message": " `libp2p.pubsub.gossipsub.GossipSub.leave` overrides method defined in `IPubsubRouter` inconsistently. Returned type `typing.Coroutine[typing.Any, typing.Any, None]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 271,
    "warning_line": "    async def leave(self, topic: str) -> None:"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:339:16 Incompatible variable type [9]: selected_peers is declared to have type `List[str]` but is used as type `List[ID]`.",
    "message": " selected_peers is declared to have type `List[str]` but is used as type `List[ID]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 339,
    "warning_line": "                selected_peers = self._get_in_topic_gossipsub_peers_from_minus("
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:346:16 Incompatible variable type [9]: fanout_peers_not_in_mesh is declared to have type `List[str]` but is used as type `List[typing.Union[ID, str]]`.",
    "message": " fanout_peers_not_in_mesh is declared to have type `List[str]` but is used as type `List[typing.Union[ID, str]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 346,
    "warning_line": "                fanout_peers_not_in_mesh: List[str] = ["
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/gossipsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/gossipsub.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/gossipsub.py:456:12 Incompatible variable type [9]: selection_pool is declared to have type `List[typing.Any]` but is used as type `Sequence[typing.Any]`.",
    "message": " selection_pool is declared to have type `List[typing.Any]` but is used as type `Sequence[typing.Any]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 456,
    "warning_line": "            selection_pool: List[Any] = pool",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # Don't create a new selection_pool if we are not subbing anything\n            selection_pool: List[Any] = pool\n\n",
        "source_code_len": 125,
        "target_code": "            # Don't create a new selection_pool if we are not subbing anything\n            selection_pool = list(pool)\n\n",
        "target_code_len": 120,
        "diff_format": "@@ -455,3 +456,3 @@\n             # Don't create a new selection_pool if we are not subbing anything\n-            selection_pool: List[Any] = pool\n+            selection_pool = list(pool)\n \n",
        "source_code_with_indent": "            # Don't create a new selection_pool if we are not subbing anything\n            <IND>selection_pool: List[Any] = pool\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            # Don't create a new selection_pool if we are not subbing anything\n            <IND>selection_pool = list(pool)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/mcache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/mcache.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/mcache.py:53:8 Incompatible attribute type [8]: Attribute `history` declared in class `MessageCache` has type `typing.Type[List[List[MessageCache.CacheEntry]]]` but is used as type `List[Variable[_T]]`.",
    "message": " Attribute `history` declared in class `MessageCache` has type `typing.Type[List[List[MessageCache.CacheEntry]]]` but is used as type `List[Variable[_T]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 53,
    "warning_line": "        self.history = []",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_len": 39,
        "target_code": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +38,3 @@\n \n-    history = List[List[CacheEntry]]\n+    history: List[List[CacheEntry]]\n \n",
        "source_code_with_indent": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/mcache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/mcache.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/mcache.py:102:27 Unbound name [10]: Name `CacheEntry` is used but not defined in the current scope.",
    "message": " Name `CacheEntry` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 102,
    "warning_line": "        last_entries: List[CacheEntry] = self.history[len(self.history) - 1]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if not self.history[0]:\n            self.history[0] = []\n\n        self.history[0].append(self.CacheEntry(mid, msg.topicIDs))\n\n",
        "source_code_len": 135,
        "target_code": "\n        self.history[0].append(CacheEntry(mid, msg.topicIDs))\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -65,6 +68,3 @@\n \n-        if not self.history[0]:\n-            self.history[0] = []\n-\n-        self.history[0].append(self.CacheEntry(mid, msg.topicIDs))\n+        self.history[0].append(CacheEntry(mid, msg.topicIDs))\n \n",
        "source_code_with_indent": "\n        if not self.history[0]:\n            <IND>self.history[0] = []\n\n        <DED>self.history[0].append(self.CacheEntry(mid, msg.topicIDs))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self.history[0].append(CacheEntry(mid, msg.topicIDs))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/mcache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/mcache.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/mcache.py:102:58 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Type[List[List[MessageCache.CacheEntry]]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Type[List[List[MessageCache.CacheEntry]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 102,
    "warning_line": "        last_entries: List[CacheEntry] = self.history[len(self.history) - 1]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_len": 39,
        "target_code": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +38,3 @@\n \n-    history = List[List[CacheEntry]]\n+    history: List[List[CacheEntry]]\n \n",
        "source_code_with_indent": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/mcache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/mcache.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/mcache.py:107:21 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Type[List[List[MessageCache.CacheEntry]]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Type[List[List[MessageCache.CacheEntry]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 107,
    "warning_line": "        i: int = len(self.history) - 2",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_len": 39,
        "target_code": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_len": 38,
        "diff_format": "@@ -35,3 +38,3 @@\n \n-    history = List[List[CacheEntry]]\n+    history: List[List[CacheEntry]]\n \n",
        "source_code_with_indent": "\n    history = List[List[CacheEntry]]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    history: List[List[CacheEntry]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/pubsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/pubsub.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/pubsub.py:83:53 Incompatible parameter type [6]: Expected `typing.Sequence[ID]` for 1st positional only parameter to call `PubsubNotifee.__init__` but got `asyncio.queues.Queue[str]`.",
    "message": " Expected `typing.Sequence[ID]` for 1st positional only parameter to call `PubsubNotifee.__init__` but got `asyncio.queues.Queue[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 83,
    "warning_line": "        self.host.get_network().notify(PubsubNotifee(self.peer_queue))"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/pubsub.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/pubsub.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/pubsub.py:199:12 Incompatible variable type [9]: peer_id is declared to have type `ID` but is used as type `str`.",
    "message": " peer_id is declared to have type `ID` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 199,
    "warning_line": "            peer_id: ID = await self.peer_queue.get()"
  },
  {
    "project": "libp2p/py-libp2p",
    "commit": "b2f496d081db5176636449d585dbbdba7f71061d",
    "filename": "libp2p/pubsub/pubsub_notifee.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/libp2p-py-libp2p/libp2p/pubsub/pubsub_notifee.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libp2p/pubsub/pubsub_notifee.py:34:37 Call error [29]: `typing._Alias` is not a function.",
    "message": " `typing._Alias` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 34,
    "warning_line": "        self.initiator_peers_queue = List(initiator_peers_queue)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import (\n    List,\n    Sequence,\n",
        "source_code_len": 45,
        "target_code": "import asyncio\nfrom typing import (\n    Sequence,\n",
        "target_code_len": 50,
        "diff_format": "@@ -1,3 +1,3 @@\n+import asyncio\n from typing import (\n-    List,\n     Sequence,\n",
        "source_code_with_indent": "from typing import (\n    List,\n    Sequence,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import asyncio\nfrom typing import (\n    Sequence,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom libp2p.network.connection.raw_connection import (\n    RawConnection,\n)\n",
        "source_code_len": 77,
        "target_code": "\nfrom libp2p.stream_muxer.mplex.mplex import (\n    Mplex,\n)\n",
        "target_code_len": 60,
        "diff_format": "@@ -7,4 +7,4 @@\n \n-from libp2p.network.connection.raw_connection import (\n-    RawConnection,\n+from libp2p.stream_muxer.mplex.mplex import (\n+    Mplex,\n )\n",
        "source_code_with_indent": "\nfrom libp2p.network.connection.raw_connection import (\n    RawConnection,\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom libp2p.stream_muxer.mplex.mplex import (\n    Mplex,\n)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    initiator_peers_queue: List[ID]\n\n    def __init__(self, initiator_peers_queue: Sequence[ID]) -> None:\n        \"\"\"\n",
        "source_code_len": 119,
        "target_code": "\n    # FIXME: Should be changed to type 'peer.ID'\n    initiator_peers_queue: asyncio.Queue[str]\n\n    def __init__(self, initiator_peers_queue: asyncio.Queue[str]) -> None:\n        \"\"\"\n",
        "target_code_len": 184,
        "diff_format": "@@ -26,5 +24,6 @@\n \n-    initiator_peers_queue: List[ID]\n+    # FIXME: Should be changed to type 'peer.ID'\n+    initiator_peers_queue: asyncio.Queue[str]\n \n-    def __init__(self, initiator_peers_queue: Sequence[ID]) -> None:\n+    def __init__(self, initiator_peers_queue: asyncio.Queue[str]) -> None:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <IND>initiator_peers_queue: List[ID]\n\n    def __init__(self, initiator_peers_queue: Sequence[ID]) -> None:\n        <IND>",
        "target_code_with_indent": "\n    # FIXME: Should be changed to type 'peer.ID'\n    <IND>initiator_peers_queue: asyncio.Queue[str]\n\n    def __init__(self, initiator_peers_queue: asyncio.Queue[str]) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        self.initiator_peers_queue = List(initiator_peers_queue)\n\n",
        "source_code_len": 78,
        "target_code": "        \"\"\"\n        self.initiator_peers_queue = initiator_peers_queue\n\n",
        "target_code_len": 72,
        "diff_format": "@@ -33,3 +32,3 @@\n         \"\"\"\n-        self.initiator_peers_queue = List(initiator_peers_queue)\n+        self.initiator_peers_queue = initiator_peers_queue\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        self.initiator_peers_queue = List(initiator_peers_queue)\n\n",
        "target_code_with_indent": "\n        self.initiator_peers_queue = initiator_peers_queue\n\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    async def connected(self, network: INetwork, conn: RawConnection) -> None:\n        \"\"\"\n",
        "source_code_len": 92,
        "target_code": "\n    async def connected(self, network: INetwork, conn: Mplex) -> None:\n        \"\"\"\n",
        "target_code_len": 84,
        "diff_format": "@@ -41,3 +40,3 @@\n \n-    async def connected(self, network: INetwork, conn: RawConnection) -> None:\n+    async def connected(self, network: INetwork, conn: Mplex) -> None:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>async def connected(self, network: INetwork, conn: RawConnection) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>async def connected(self, network: INetwork, conn: Mplex) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    async def disconnected(self, network: INetwork, conn: RawConnection) -> None:\n        pass\n",
        "source_code_len": 96,
        "target_code": "\n    async def disconnected(self, network: INetwork, conn: Mplex) -> None:\n        pass\n",
        "target_code_len": 88,
        "diff_format": "@@ -54,3 +53,3 @@\n \n-    async def disconnected(self, network: INetwork, conn: RawConnection) -> None:\n+    async def disconnected(self, network: INetwork, conn: Mplex) -> None:\n         pass\n",
        "source_code_with_indent": "\n    <DED><DED>async def disconnected(self, network: INetwork, conn: RawConnection) -> None:\n        <IND>pass\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>async def disconnected(self, network: INetwork, conn: Mplex) -> None:\n        <IND>pass\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]