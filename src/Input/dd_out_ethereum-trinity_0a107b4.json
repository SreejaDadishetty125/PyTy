[
  {
    "project": "ethereum/trinity",
    "commit": "0a107b452d66d74798db541f629d4dc6b740c9a2",
    "filename": "eth2/beacon/tools/fixtures/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth2/beacon/tools/fixtures/parser.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth2/beacon/tools/fixtures/parser.py:82:51 Incompatible parameter type [6]: Expected `Tuple[Path]` for 2nd positional only parameter to call `TestCaseDescriptor.__init__` but got `typing.Generator[Path, None, None]`.",
    "message": " Expected `Tuple[Path]` for 2nd positional only parameter to call `TestCaseDescriptor.__init__` but got `typing.Generator[Path, None, None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "    return TestCaseDescriptor(test_case_path.name, parts, format_type)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    name: str\n    parts: Tuple[Path]\n    format_type: FormatType\n",
        "source_code_len": 65,
        "target_code": "    name: str\n    parts: Tuple[Path, ...]\n    format_type: FormatType\n",
        "target_code_len": 70,
        "diff_format": "@@ -27,3 +27,3 @@\n     name: str\n-    parts: Tuple[Path]\n+    parts: Tuple[Path, ...]\n     format_type: FormatType\n",
        "source_code_with_indent": "    <IND>name: str\n    parts: Tuple[Path]\n    format_type: FormatType\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>name: str\n    parts: Tuple[Path, ...]\n    format_type: FormatType\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor]\n\n",
        "source_code_len": 68,
        "target_code": "    name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -34,3 +34,3 @@\n     name: str\n-    test_case_descriptors: Tuple[TestCaseDescriptor]\n+    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n \n",
        "source_code_with_indent": "    <IND>name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ") -> TestCaseDescriptor:\n    parts = (\n        part_path\n",
        "source_code_len": 57,
        "target_code": ") -> TestCaseDescriptor:\n    parts = tuple(\n        part_path\n",
        "target_code_len": 62,
        "diff_format": "@@ -76,3 +76,3 @@\n ) -> TestCaseDescriptor:\n-    parts = (\n+    parts = tuple(\n         part_path\n",
        "source_code_with_indent": ") -> TestCaseDescriptor:\n    <IND>parts = (\n        part_path\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ") -> TestCaseDescriptor:\n    <IND>parts = tuple(\n        part_path\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for test_suite in test_handler_path.iterdir():\n        test_case_descriptors = (\n            _load_test_case(test_case_path, format_type)\n",
        "source_code_len": 142,
        "target_code": "    for test_suite in test_handler_path.iterdir():\n        test_case_descriptors = tuple(\n            _load_test_case(test_case_path, format_type)\n",
        "target_code_len": 147,
        "diff_format": "@@ -89,3 +89,3 @@\n     for test_suite in test_handler_path.iterdir():\n-        test_case_descriptors = (\n+        test_case_descriptors = tuple(\n             _load_test_case(test_case_path, format_type)\n",
        "source_code_with_indent": "    <IND>for test_suite in test_handler_path.iterdir():\n        <IND>test_case_descriptors = (\n            _load_test_case(test_case_path, format_type)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>for test_suite in test_handler_path.iterdir():\n        <IND>test_case_descriptors = tuple(\n            _load_test_case(test_case_path, format_type)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ethereum/trinity",
    "commit": "0a107b452d66d74798db541f629d4dc6b740c9a2",
    "filename": "eth2/beacon/tools/fixtures/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth2/beacon/tools/fixtures/parser.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth2/beacon/tools/fixtures/parser.py:94:51 Incompatible parameter type [6]: Expected `Tuple[TestCaseDescriptor]` for 2nd positional only parameter to call `TestSuiteDescriptor.__init__` but got `typing.Generator[TestCaseDescriptor, None, None]`.",
    "message": " Expected `Tuple[TestCaseDescriptor]` for 2nd positional only parameter to call `TestSuiteDescriptor.__init__` but got `typing.Generator[TestCaseDescriptor, None, None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 94,
    "warning_line": "        yield TestSuiteDescriptor(test_suite.name, test_case_descriptors)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    name: str\n    parts: Tuple[Path]\n    format_type: FormatType\n",
        "source_code_len": 65,
        "target_code": "    name: str\n    parts: Tuple[Path, ...]\n    format_type: FormatType\n",
        "target_code_len": 70,
        "diff_format": "@@ -27,3 +27,3 @@\n     name: str\n-    parts: Tuple[Path]\n+    parts: Tuple[Path, ...]\n     format_type: FormatType\n",
        "source_code_with_indent": "    <IND>name: str\n    parts: Tuple[Path]\n    format_type: FormatType\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>name: str\n    parts: Tuple[Path, ...]\n    format_type: FormatType\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor]\n\n",
        "source_code_len": 68,
        "target_code": "    name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -34,3 +34,3 @@\n     name: str\n-    test_case_descriptors: Tuple[TestCaseDescriptor]\n+    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n \n",
        "source_code_with_indent": "    <IND>name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>name: str\n    test_case_descriptors: Tuple[TestCaseDescriptor, ...]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ") -> TestCaseDescriptor:\n    parts = (\n        part_path\n",
        "source_code_len": 57,
        "target_code": ") -> TestCaseDescriptor:\n    parts = tuple(\n        part_path\n",
        "target_code_len": 62,
        "diff_format": "@@ -76,3 +76,3 @@\n ) -> TestCaseDescriptor:\n-    parts = (\n+    parts = tuple(\n         part_path\n",
        "source_code_with_indent": ") -> TestCaseDescriptor:\n    <IND>parts = (\n        part_path\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ") -> TestCaseDescriptor:\n    <IND>parts = tuple(\n        part_path\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for test_suite in test_handler_path.iterdir():\n        test_case_descriptors = (\n            _load_test_case(test_case_path, format_type)\n",
        "source_code_len": 142,
        "target_code": "    for test_suite in test_handler_path.iterdir():\n        test_case_descriptors = tuple(\n            _load_test_case(test_case_path, format_type)\n",
        "target_code_len": 147,
        "diff_format": "@@ -89,3 +89,3 @@\n     for test_suite in test_handler_path.iterdir():\n-        test_case_descriptors = (\n+        test_case_descriptors = tuple(\n             _load_test_case(test_case_path, format_type)\n",
        "source_code_with_indent": "    <IND>for test_suite in test_handler_path.iterdir():\n        <IND>test_case_descriptors = (\n            _load_test_case(test_case_path, format_type)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>for test_suite in test_handler_path.iterdir():\n        <IND>test_case_descriptors = tuple(\n            _load_test_case(test_case_path, format_type)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]