[
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/manager.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/manager.py:326:8 Incompatible return type [7]: Expected `str` but got `typing.Optional[str]`.",
    "message": " Expected `str` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 326,
    "warning_line": "        return mimetypes.guess_extension(mime)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_file_extension(self, mime: str) -> str:\n        return mimetypes.guess_extension(mime)\n",
        "source_code_len": 100,
        "target_code": "\n    def get_file_extension(self, mime: str) -> typing.Optional[str]:\n        return mimetypes.guess_extension(mime)\n",
        "target_code_len": 117,
        "diff_format": "@@ -324,3 +324,3 @@\n \n-    def get_file_extension(self, mime: str) -> str:\n+    def get_file_extension(self, mime: str) -> typing.Optional[str]:\n         return mimetypes.guess_extension(mime)\n",
        "source_code_with_indent": "\n    <DED>def get_file_extension(self, mime: str) -> str:\n        <IND>return mimetypes.guess_extension(mime)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_file_extension(self, mime: str) -> typing.Optional[str]:\n        <IND>return mimetypes.guess_extension(mime)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/manager.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/manager.py:329:8 Incompatible return type [7]: Expected `typing.List[str]` but got `typing.List[typing.Optional[str]]`.",
    "message": " Expected `typing.List[str]` but got `typing.List[typing.Optional[str]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 329,
    "warning_line": "        return [mimetypes.guess_extension(mime) for mime in self.get_supported_mimetypes()]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def get_supported_file_extensions(self) -> typing.List[str]:\n        return [mimetypes.guess_extension(mime) for mime in self.get_supported_mimetypes()]\n",
        "source_code_len": 157,
        "target_code": "    def get_supported_file_extensions(self) -> typing.List[str]:\n        supported_file_extensions = []\n        for mime in self.get_supported_mimetypes():\n            extension = mimetypes.guess_extension(mime)\n            if extension:\n                supported_file_extensions.append(extension)\n        return supported_file_extensions\n",
        "target_code_len": 339,
        "diff_format": "@@ -328,2 +328,7 @@\n     def get_supported_file_extensions(self) -> typing.List[str]:\n-        return [mimetypes.guess_extension(mime) for mime in self.get_supported_mimetypes()]\n+        supported_file_extensions = []\n+        for mime in self.get_supported_mimetypes():\n+            extension = mimetypes.guess_extension(mime)\n+            if extension:\n+                supported_file_extensions.append(extension)\n+        return supported_file_extensions\n",
        "source_code_with_indent": "    <DED>def get_supported_file_extensions(self) -> typing.List[str]:\n        <IND>return [mimetypes.guess_extension(mime) for mime in self.get_supported_mimetypes()]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def get_supported_file_extensions(self) -> typing.List[str]:\n        <IND>supported_file_extensions = []\n        for mime in self.get_supported_mimetypes():\n            <IND>extension = mimetypes.guess_extension(mime)\n            if extension:\n                <IND>supported_file_extensions.append(extension)\n        <DED><DED>return supported_file_extensions\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/archive__zip.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/archive__zip.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/archive__zip.py:21:8 Incompatible attribute type [8]: Attribute `last_modification` declared in class `FileInfo` has type `datetime` but is used as type `None`.",
    "message": " Attribute `last_modification` declared in class `FileInfo` has type `datetime` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 21,
    "warning_line": "        self.last_modification = None  # type: datetime"
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/archive__zip.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/archive__zip.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/archive__zip.py:41:8 Incompatible attribute type [8]: Attribute `last_modification` declared in class `ArchiveInfo` has type `datetime` but is used as type `None`.",
    "message": " Attribute `last_modification` declared in class `ArchiveInfo` has type `datetime` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 41,
    "warning_line": "        self.last_modification = None  # type: datetime",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.size__compressed = 0\n        self.last_modification = None  # type: datetime\n\n",
        "source_code_len": 91,
        "target_code": "        self.size__compressed = 0\n        self.last_modification = None  # type: typing.Optional[datetime]\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -40,3 +40,3 @@\n         self.size__compressed = 0\n-        self.last_modification = None  # type: datetime\n+        self.last_modification = None  # type: typing.Optional[datetime]\n \n",
        "source_code_with_indent": "        self.size__compressed = 0\n        self.last_modification = None  # type: datetime\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.size__compressed = 0\n        self.last_modification = None  # type: typing.Optional[datetime]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/document__scribus.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/document__scribus.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/document__scribus.py:93:8 Incompatible variable type [9]: input_extension is declared to have type `str` but is used as type `typing.Optional[str]`.",
    "message": " input_extension is declared to have type `str` but is used as type `typing.Optional[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 93,
    "warning_line": "        input_extension = mimetypes.guess_extension(mimetype)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    file_content: typing.IO[bytes],\n    input_extension: str,  # example: '.dxf'\n    cache_path: str,\n",
        "source_code_len": 102,
        "target_code": "    file_content: typing.IO[bytes],\n    input_extension: typing.Optional[str],  # example: '.dxf'\n    cache_path: str,\n",
        "target_code_len": 119,
        "diff_format": "@@ -82,3 +82,3 @@\n     file_content: typing.IO[bytes],\n-    input_extension: str,  # example: '.dxf'\n+    input_extension: typing.Optional[str],  # example: '.dxf'\n     cache_path: str,\n",
        "source_code_with_indent": "    file_content: typing.IO[bytes],\n    input_extension: str,  # example: '.dxf'\n    cache_path: str,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    file_content: typing.IO[bytes],\n    input_extension: typing.Optional[str],  # example: '.dxf'\n    cache_path: str,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        input_extension = mimetypes.guess_extension(mimetype)\n    temporary_input_content_path = output_filepath + input_extension  # nopep8\n    flag_file_path = create_flag_file(output_filepath)\n",
        "source_code_len": 196,
        "target_code": "        input_extension = mimetypes.guess_extension(mimetype)\n    temporary_input_content_path = output_filepath\n    if input_extension:\n        temporary_input_content_path += input_extension\n    flag_file_path = create_flag_file(output_filepath)\n",
        "target_code_len": 248,
        "diff_format": "@@ -93,3 +93,5 @@\n         input_extension = mimetypes.guess_extension(mimetype)\n-    temporary_input_content_path = output_filepath + input_extension  # nopep8\n+    temporary_input_content_path = output_filepath\n+    if input_extension:\n+        temporary_input_content_path += input_extension\n     flag_file_path = create_flag_file(output_filepath)\n",
        "source_code_with_indent": "        <IND>input_extension = mimetypes.guess_extension(mimetype)\n    <DED>temporary_input_content_path = output_filepath + input_extension  # nopep8\n    flag_file_path = create_flag_file(output_filepath)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>input_extension = mimetypes.guess_extension(mimetype)\n    <DED>temporary_input_content_path = output_filepath\n    if input_extension:\n        <IND>temporary_input_content_path += input_extension\n    <DED>flag_file_path = create_flag_file(output_filepath)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/document_generic.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/document_generic.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/document_generic.py:171:20 Incompatible parameter type [6]: Expected `str` for 4th parameter `mimetype` to call `DocumentPreviewBuilder.build_pdf_preview` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 4th parameter `mimetype` to call `DocumentPreviewBuilder.build_pdf_preview` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 171,
    "warning_line": "                    mimetype=mimetype,"
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/image__wand.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/image__wand.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/image__wand.py:117:57 Incompatible variable type [9]: preview_dims is declared to have type `ImgDims` but is used as type `None`.",
    "message": " preview_dims is declared to have type `ImgDims` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 117,
    "warning_line": "        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def image_to_jpeg_wand(\n        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims = None\n    ) -> BytesIO:\n",
        "source_code_len": 132,
        "target_code": "    def image_to_jpeg_wand(\n        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims\n    ) -> BytesIO:\n",
        "target_code_len": 125,
        "diff_format": "@@ -116,3 +116,3 @@\n     def image_to_jpeg_wand(\n-        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims = None\n+        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims\n     ) -> BytesIO:\n",
        "source_code_with_indent": "    <DED><DED><DED><DED>def image_to_jpeg_wand(\n        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims = None\n    ) -> BytesIO:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED><DED><DED>def image_to_jpeg_wand(\n        self, jpeg: typing.Union[str, typing.IO[bytes]], preview_dims: ImgDims\n    ) -> BytesIO:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "algoo/preview-generator",
    "commit": "59fbd9b641f0e67c560760aa51334d56f41b891d",
    "filename": "preview_generator/preview/builder/office__libreoffice.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/algoo-preview-generator/preview_generator/preview/builder/office__libreoffice.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "preview_generator/preview/builder/office__libreoffice.py:76:8 Incompatible variable type [9]: input_extension is declared to have type `str` but is used as type `typing.Optional[str]`.",
    "message": " input_extension is declared to have type `str` but is used as type `typing.Optional[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 76,
    "warning_line": "        input_extension = mimetypes.guess_extension(mimetype)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    file_content: typing.IO[bytes],\n    input_extension: str,  # example: '.dxf'\n    cache_path: str,\n",
        "source_code_len": 102,
        "target_code": "    file_content: typing.IO[bytes],\n    input_extension: typing.Optional[str],  # example: '.dxf'\n    cache_path: str,\n",
        "target_code_len": 119,
        "diff_format": "@@ -65,3 +65,3 @@\n     file_content: typing.IO[bytes],\n-    input_extension: str,  # example: '.dxf'\n+    input_extension: typing.Optional[str],  # example: '.dxf'\n     cache_path: str,\n",
        "source_code_with_indent": "    file_content: typing.IO[bytes],\n    input_extension: str,  # example: '.dxf'\n    cache_path: str,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    file_content: typing.IO[bytes],\n    input_extension: typing.Optional[str],  # example: '.dxf'\n    cache_path: str,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]