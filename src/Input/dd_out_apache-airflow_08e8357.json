[
  {
    "project": "apache/airflow",
    "commit": "08e835729b50cac2a68fab24bf2b52a587112776",
    "filename": "dev/import_all_classes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/dev/import_all_classes.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dev/import_all_classes.py:34:4 Incompatible variable type [9]: provider_ids is declared to have type `List[str]` but is used as type `None`.",
    "message": " provider_ids is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 34,
    "warning_line": "    provider_ids: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from inspect import isclass\nfrom typing import List, Set, Tuple\nfrom warnings import WarningMessage\n",
        "source_code_len": 100,
        "target_code": "from inspect import isclass\nfrom typing import List, Optional, Set, Tuple\nfrom warnings import WarningMessage\n",
        "target_code_len": 110,
        "diff_format": "@@ -24,3 +24,3 @@\n from inspect import isclass\n-from typing import List, Set, Tuple\n+from typing import List, Optional, Set, Tuple\n from warnings import WarningMessage\n",
        "source_code_with_indent": "from inspect import isclass\nfrom typing import List, Set, Tuple\nfrom warnings import WarningMessage\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from inspect import isclass\nfrom typing import List, Optional, Set, Tuple\nfrom warnings import WarningMessage\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    prefix: str,\n    provider_ids: List[str] = None,\n    print_imports: bool = False,\n",
        "source_code_len": 86,
        "target_code": "    prefix: str,\n    provider_ids: Optional[List[str]] = None,\n    print_imports: bool = False,\n",
        "target_code_len": 96,
        "diff_format": "@@ -33,3 +33,3 @@\n     prefix: str,\n-    provider_ids: List[str] = None,\n+    provider_ids: Optional[List[str]] = None,\n     print_imports: bool = False,\n",
        "source_code_with_indent": "    prefix: str,\n    provider_ids: List[str] = None,\n    print_imports: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    prefix: str,\n    provider_ids: Optional[List[str]] = None,\n    print_imports: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "08e835729b50cac2a68fab24bf2b52a587112776",
    "filename": "dev/provider_packages/prepare_provider_packages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/dev/provider_packages/prepare_provider_packages.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dev/provider_packages/prepare_provider_packages.py:1354:12 Incompatible return type [7]: Expected `Tuple[bool, Optional[List[List[Change]]], str]` but got `Tuple[bool, Change, str]`.",
    "message": " Expected `Tuple[bool, Optional[List[List[Change]]], str]` but got `Tuple[bool, Change, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1354,
    "warning_line": "            return False, array_of_changes[0], changes_table",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from shutil import copyfile\nfrom typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type\n\n",
        "source_code_len": 114,
        "target_code": "from shutil import copyfile\nfrom typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type, Union\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -42,3 +42,3 @@\n from shutil import copyfile\n-from typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type\n+from typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type, Union\n \n",
        "source_code_with_indent": "from shutil import copyfile\nfrom typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from shutil import copyfile\nfrom typing import Any, Dict, Iterable, List, NamedTuple, Optional, Set, Tuple, Type, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    verbose: bool,\n) -> Tuple[bool, Optional[List[List[Change]]], str]:\n    \"\"\"\n",
        "source_code_len": 80,
        "target_code": "    verbose: bool,\n) -> Tuple[bool, Optional[Union[List[List[Change]], Change]], str]:\n    \"\"\"\n",
        "target_code_len": 95,
        "diff_format": "@@ -1288,3 +1288,3 @@\n     verbose: bool,\n-) -> Tuple[bool, Optional[List[List[Change]]], str]:\n+) -> Tuple[bool, Optional[Union[List[List[Change]], Change]], str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    verbose: bool,\n) -> Tuple[bool, Optional[List[List[Change]]], str]:\n    <IND>",
        "target_code_with_indent": "    verbose: bool,\n) -> Tuple[bool, Optional[Union[List[List[Change]], Change]], str]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if interactive and confirm(\"Are those changes documentation-only?\"):\n                mark_latest_changes_as_documentation_only(provider_details, latest_change)\n            return False\n",
        "source_code_len": 197,
        "target_code": "            if interactive and confirm(\"Are those changes documentation-only?\"):\n                if isinstance(latest_change, Change):\n                    mark_latest_changes_as_documentation_only(provider_details, latest_change)\n                else:\n                    raise ValueError(\n                        \"Expected only one change to be present to mark changes \"\n                        f\"in provider {provider_package_id} as docs-only. \"\n                        f\"Received {len(latest_change)}.\"\n                    )\n            return False\n",
        "target_code_len": 553,
        "diff_format": "@@ -1578,3 +1578,10 @@\n             if interactive and confirm(\"Are those changes documentation-only?\"):\n-                mark_latest_changes_as_documentation_only(provider_details, latest_change)\n+                if isinstance(latest_change, Change):\n+                    mark_latest_changes_as_documentation_only(provider_details, latest_change)\n+                else:\n+                    raise ValueError(\n+                        \"Expected only one change to be present to mark changes \"\n+                        f\"in provider {provider_package_id} as docs-only. \"\n+                        f\"Received {len(latest_change)}.\"\n+                    )\n             return False\n",
        "source_code_with_indent": "            <IND>if interactive and confirm(\"Are those changes documentation-only?\"):\n                <IND>mark_latest_changes_as_documentation_only(provider_details, latest_change)\n            <DED>return False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>if interactive and confirm(\"Are those changes documentation-only?\"):\n                <IND>if isinstance(latest_change, Change):\n                    <IND>mark_latest_changes_as_documentation_only(provider_details, latest_change)\n                <DED>else:\n                    <IND>raise ValueError(\n                        \"Expected only one change to be present to mark changes \"\n                        f\"in provider {provider_package_id} as docs-only. \"\n                        f\"Received {len(latest_change)}.\"\n                    )\n            <DED><DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "08e835729b50cac2a68fab24bf2b52a587112776",
    "filename": "dev/provider_packages/prepare_provider_packages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/dev/provider_packages/prepare_provider_packages.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dev/provider_packages/prepare_provider_packages.py:1579:76 Incompatible parameter type [6]: Expected `Change` for 2nd positional only parameter to call `mark_latest_changes_as_documentation_only` but got `List[List[Change]]`.",
    "message": " Expected `Change` for 2nd positional only parameter to call `mark_latest_changes_as_documentation_only` but got `List[List[Change]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1579,
    "warning_line": "                mark_latest_changes_as_documentation_only(provider_details, latest_change)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if interactive and confirm(\"Are those changes documentation-only?\"):\n                mark_latest_changes_as_documentation_only(provider_details, latest_change)\n            return False\n",
        "source_code_len": 197,
        "target_code": "            if interactive and confirm(\"Are those changes documentation-only?\"):\n                if isinstance(latest_change, Change):\n                    mark_latest_changes_as_documentation_only(provider_details, latest_change)\n                else:\n                    raise ValueError(\n                        \"Expected only one change to be present to mark changes \"\n                        f\"in provider {provider_package_id} as docs-only. \"\n                        f\"Received {len(latest_change)}.\"\n                    )\n            return False\n",
        "target_code_len": 553,
        "diff_format": "@@ -1578,3 +1578,10 @@\n             if interactive and confirm(\"Are those changes documentation-only?\"):\n-                mark_latest_changes_as_documentation_only(provider_details, latest_change)\n+                if isinstance(latest_change, Change):\n+                    mark_latest_changes_as_documentation_only(provider_details, latest_change)\n+                else:\n+                    raise ValueError(\n+                        \"Expected only one change to be present to mark changes \"\n+                        f\"in provider {provider_package_id} as docs-only. \"\n+                        f\"Received {len(latest_change)}.\"\n+                    )\n             return False\n",
        "source_code_with_indent": "            <IND>if interactive and confirm(\"Are those changes documentation-only?\"):\n                <IND>mark_latest_changes_as_documentation_only(provider_details, latest_change)\n            <DED>return False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>if interactive and confirm(\"Are those changes documentation-only?\"):\n                <IND>if isinstance(latest_change, Change):\n                    <IND>mark_latest_changes_as_documentation_only(provider_details, latest_change)\n                <DED>else:\n                    <IND>raise ValueError(\n                        \"Expected only one change to be present to mark changes \"\n                        f\"in provider {provider_package_id} as docs-only. \"\n                        f\"Received {len(latest_change)}.\"\n                    )\n            <DED><DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "08e835729b50cac2a68fab24bf2b52a587112776",
    "filename": "dev/provider_packages/prepare_provider_packages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/dev/provider_packages/prepare_provider_packages.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dev/provider_packages/prepare_provider_packages.py:1786:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1786,
    "warning_line": "        raise Exception(f\"The package {provider_package_id} is not a provider package.\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef verify_provider_package(provider_package_id: str) -> str:\n    \"\"\"\n",
        "source_code_len": 71,
        "target_code": "\ndef verify_provider_package(provider_package_id: str) -> None:\n    \"\"\"\n",
        "target_code_len": 72,
        "diff_format": "@@ -1775,3 +1782,3 @@\n \n-def verify_provider_package(provider_package_id: str) -> str:\n+def verify_provider_package(provider_package_id: str) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def verify_provider_package(provider_package_id: str) -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def verify_provider_package(provider_package_id: str) -> None:\n    <IND>"
      }
    ]
  }
]