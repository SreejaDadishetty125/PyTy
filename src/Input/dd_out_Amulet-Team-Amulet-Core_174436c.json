[
  {
    "project": "Amulet-Team/Amulet-Core",
    "commit": "174436c681c1d90f9c5fbca209c312ca12681560",
    "filename": "amulet/api/level/immutable_structure/immutable_structure.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Amulet-Team-Amulet-Core/amulet/api/level/immutable_structure/immutable_structure.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "amulet/api/level/immutable_structure/immutable_structure.py:23:8 Incompatible variable type [9]: temp_dir is declared to have type `str` but is used as type `None`.",
    "message": " temp_dir is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 23,
    "warning_line": "        temp_dir: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        temp_dir: str = None,\n    ):\n        super().__init__(\"\", VoidFormatWrapper(\"\"), temp_dir)\n        self._selection = SelectionGroup(\n",
        "source_code_len": 155,
        "target_code": "        self,\n    ):\n        super().__init__(\"\", VoidFormatWrapper(\"\"))\n        self._selection = SelectionGroup(\n",
        "target_code_len": 115,
        "diff_format": "@@ -22,5 +22,4 @@\n         self,\n-        temp_dir: str = None,\n     ):\n-        super().__init__(\"\", VoidFormatWrapper(\"\"), temp_dir)\n+        super().__init__(\"\", VoidFormatWrapper(\"\"))\n         self._selection = SelectionGroup(\n",
        "source_code_with_indent": "        self,\n        temp_dir: str = None,\n    ):\n        <IND>super().__init__(\"\", VoidFormatWrapper(\"\"), temp_dir)\n        self._selection = SelectionGroup(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n    ):\n        <IND>super().__init__(\"\", VoidFormatWrapper(\"\"))\n        self._selection = SelectionGroup(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Amulet-Team/Amulet-Core",
    "commit": "174436c681c1d90f9c5fbca209c312ca12681560",
    "filename": "amulet/api/level/structure.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Amulet-Team-Amulet-Core/amulet/api/level/structure.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "amulet/api/level/structure.py:20:8 Incompatible variable type [9]: temp_dir is declared to have type `str` but is used as type `None`.",
    "message": " temp_dir is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 20,
    "warning_line": "        temp_dir: str = None,"
  },
  {
    "project": "Amulet-Team/Amulet-Core",
    "commit": "174436c681c1d90f9c5fbca209c312ca12681560",
    "filename": "amulet/api/level/structure.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Amulet-Team-Amulet-Core/amulet/api/level/structure.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "amulet/api/level/structure.py:27:8 Incompatible return type [7]: Expected `amulet.api.wrapper.structure_format_wrapper.StructureFormatWrapper` but got `amulet.api.wrapper.format_wrapper.FormatWrapper`.",
    "message": " Expected `amulet.api.wrapper.structure_format_wrapper.StructureFormatWrapper` but got `amulet.api.wrapper.format_wrapper.FormatWrapper`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 27,
    "warning_line": "        return self._level_wrapper"
  },
  {
    "project": "Amulet-Team/Amulet-Core",
    "commit": "174436c681c1d90f9c5fbca209c312ca12681560",
    "filename": "amulet/api/level/world.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Amulet-Team-Amulet-Core/amulet/api/level/world.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "amulet/api/level/world.py:14:65 Incompatible variable type [9]: temp_dir is declared to have type `str` but is used as type `None`.",
    "message": " temp_dir is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 14,
    "warning_line": "        self, directory: str, world_wrapper: WorldFormatWrapper, temp_dir: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(\n        self, directory: str, world_wrapper: WorldFormatWrapper, temp_dir: str = None\n    ):\n        assert isinstance(world_wrapper, WorldFormatWrapper)\n        super().__init__(directory, world_wrapper, temp_dir)\n\n",
        "source_code_len": 235,
        "target_code": "\n    def __init__(self, directory: str, world_wrapper: WorldFormatWrapper):\n        assert isinstance(world_wrapper, WorldFormatWrapper)\n        super().__init__(directory, world_wrapper)\n\n",
        "target_code_len": 189,
        "diff_format": "@@ -12,7 +11,5 @@\n \n-    def __init__(\n-        self, directory: str, world_wrapper: WorldFormatWrapper, temp_dir: str = None\n-    ):\n+    def __init__(self, directory: str, world_wrapper: WorldFormatWrapper):\n         assert isinstance(world_wrapper, WorldFormatWrapper)\n-        super().__init__(directory, world_wrapper, temp_dir)\n+        super().__init__(directory, world_wrapper)\n \n",
        "source_code_with_indent": "\n    def __init__(\n        self, directory: str, world_wrapper: WorldFormatWrapper, temp_dir: str = None\n    ):\n        <IND>assert isinstance(world_wrapper, WorldFormatWrapper)\n        super().__init__(directory, world_wrapper, temp_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, directory: str, world_wrapper: WorldFormatWrapper):\n        <IND>assert isinstance(world_wrapper, WorldFormatWrapper)\n        super().__init__(directory, world_wrapper)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Amulet-Team/Amulet-Core",
    "commit": "174436c681c1d90f9c5fbca209c312ca12681560",
    "filename": "amulet/api/level/world.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Amulet-Team-Amulet-Core/amulet/api/level/world.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "amulet/api/level/world.py:30:8 Incompatible return type [7]: Expected `amulet.api.wrapper.world_format_wrapper.WorldFormatWrapper` but got `amulet.api.wrapper.format_wrapper.FormatWrapper`.",
    "message": " Expected `amulet.api.wrapper.world_format_wrapper.WorldFormatWrapper` but got `amulet.api.wrapper.format_wrapper.FormatWrapper`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 30,
    "warning_line": "        return self._level_wrapper"
  }
]