[
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1258:8 Incompatible parameter type [6]: Expected `typing.Address` for 5th positional only parameter to call `LockedTransferUnsignedState.__init__` but got `typing.InitiatorAddress`.",
    "message": " Expected `typing.Address` for 5th positional only parameter to call `LockedTransferUnsignedState.__init__` but got `typing.InitiatorAddress`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1258,
    "warning_line": "        initiator,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        lock,\n        initiator,\n        target,\n    )\n",
        "source_code_len": 55,
        "target_code": "        lock,\n        typing.Address(initiator),\n        typing.Address(target),\n    )\n",
        "target_code_len": 87,
        "diff_format": "@@ -1257,4 +1257,4 @@\n         lock,\n-        initiator,\n-        target,\n+        typing.Address(initiator),\n+        typing.Address(target),\n     )\n",
        "source_code_with_indent": "        lock,\n        initiator,\n        target,\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        lock,\n        typing.Address(initiator),\n        typing.Address(target),\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1259:8 Incompatible parameter type [6]: Expected `typing.Address` for 6th positional only parameter to call `LockedTransferUnsignedState.__init__` but got `typing.TargetAddress`.",
    "message": " Expected `typing.Address` for 6th positional only parameter to call `LockedTransferUnsignedState.__init__` but got `typing.TargetAddress`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1259,
    "warning_line": "        target,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        lock,\n        initiator,\n        target,\n    )\n",
        "source_code_len": 55,
        "target_code": "        lock,\n        typing.Address(initiator),\n        typing.Address(target),\n    )\n",
        "target_code_len": 87,
        "diff_format": "@@ -1257,4 +1257,4 @@\n         lock,\n-        initiator,\n-        target,\n+        typing.Address(initiator),\n+        typing.Address(target),\n     )\n",
        "source_code_with_indent": "        lock,\n        initiator,\n        target,\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        lock,\n        typing.Address(initiator),\n        typing.Address(target),\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1673:16 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1673,
    "warning_line": "                target=target_address,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_len": 207,
        "target_code": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_len": 229,
        "diff_format": "@@ -1634,3 +1634,3 @@\n     payment_identifier = state_change.payment_identifier\n-    target_address = state_change.receiver_address\n+    target_address = typing.TargetAddress(state_change.receiver_address)\n     distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1684:16 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1684,
    "warning_line": "                target=target_address,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_len": 207,
        "target_code": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_len": 229,
        "diff_format": "@@ -1634,3 +1634,3 @@\n     payment_identifier = state_change.payment_identifier\n-    target_address = state_change.receiver_address\n+    target_address = typing.TargetAddress(state_change.receiver_address)\n     distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1702:16 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1702,
    "warning_line": "                target=target_address,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_len": 207,
        "target_code": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_len": 229,
        "diff_format": "@@ -1634,3 +1634,3 @@\n     payment_identifier = state_change.payment_identifier\n-    target_address = state_change.receiver_address\n+    target_address = typing.TargetAddress(state_change.receiver_address)\n     distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = state_change.receiver_address\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    payment_identifier = state_change.payment_identifier\n    target_address = typing.TargetAddress(state_change.receiver_address)\n    distributable_amount = get_distributable(channel_state.our_state, channel_state.partner_state)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1750:12 Incompatible parameter type [6]: Expected `typing.InitiatorAddress` for 5th parameter `initiator` to call `EventPaymentReceivedSuccess.__init__` but got `typing.Address`.",
    "message": " Expected `typing.InitiatorAddress` for 5th parameter `initiator` to call `EventPaymentReceivedSuccess.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1750,
    "warning_line": "            initiator=channel_state.partner_state.address,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            amount=transfer_amount,\n            initiator=channel_state.partner_state.address,\n        )\n",
        "source_code_len": 105,
        "target_code": "            amount=transfer_amount,\n            initiator=typing.InitiatorAddress(channel_state.partner_state.address),\n        )\n",
        "target_code_len": 130,
        "diff_format": "@@ -1749,3 +1749,3 @@\n             amount=transfer_amount,\n-            initiator=channel_state.partner_state.address,\n+            initiator=typing.InitiatorAddress(channel_state.partner_state.address),\n         )\n",
        "source_code_with_indent": "            amount=transfer_amount,\n            initiator=channel_state.partner_state.address,\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            amount=transfer_amount,\n            initiator=typing.InitiatorAddress(channel_state.partner_state.address),\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/channel.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/channel.py:1939:16 Incompatible parameter type [6]: Expected `typing.TokenNetworkAddress` for 2nd positional only parameter to call `ContractSendChannelSettle.__init__` but got `typing.TokenNetworkID`.",
    "message": " Expected `typing.TokenNetworkAddress` for 2nd positional only parameter to call `ContractSendChannelSettle.__init__` but got `typing.TokenNetworkID`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1939,
    "warning_line": "                channel_state.token_network_identifier,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                channel_state.identifier,\n                channel_state.token_network_identifier,\n            )\n",
        "source_code_len": 112,
        "target_code": "                channel_state.identifier,\n                typing.TokenNetworkAddress(channel_state.token_network_identifier),\n            )\n",
        "target_code_len": 140,
        "diff_format": "@@ -1938,3 +1938,3 @@\n                 channel_state.identifier,\n-                channel_state.token_network_identifier,\n+                typing.TokenNetworkAddress(channel_state.token_network_identifier),\n             )\n",
        "source_code_with_indent": "                channel_state.identifier,\n                channel_state.token_network_identifier,\n            )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                channel_state.identifier,\n                typing.TokenNetworkAddress(channel_state.token_network_identifier),\n            )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/transfer/mediated_transfer/target.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/target.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/target.py:102:16 Incompatible parameter type [6]: Expected `typing.Address` for 1st parameter `recipient` to call `SendSecretRequest.__init__` but got `typing.InitiatorAddress`.",
    "message": " Expected `typing.Address` for 1st parameter `recipient` to call `SendSecretRequest.__init__` but got `typing.InitiatorAddress`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 102,
    "warning_line": "                recipient=recipient,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            secret_request = SendSecretRequest(\n                recipient=recipient,\n                channel_identifier=CHANNEL_IDENTIFIER_GLOBAL_QUEUE,\n",
        "source_code_len": 153,
        "target_code": "            secret_request = SendSecretRequest(\n                recipient=typing.Address(recipient),\n                channel_identifier=CHANNEL_IDENTIFIER_GLOBAL_QUEUE,\n",
        "target_code_len": 169,
        "diff_format": "@@ -101,3 +101,3 @@\n             secret_request = SendSecretRequest(\n-                recipient=recipient,\n+                recipient=typing.Address(recipient),\n                 channel_identifier=CHANNEL_IDENTIFIER_GLOBAL_QUEUE,\n",
        "source_code_with_indent": "            secret_request = SendSecretRequest(\n                recipient=recipient,\n                channel_identifier=CHANNEL_IDENTIFIER_GLOBAL_QUEUE,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            secret_request = SendSecretRequest(\n                recipient=typing.Address(recipient),\n                channel_identifier=CHANNEL_IDENTIFIER_GLOBAL_QUEUE,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "ab234f1ac262b0bdbf5455892a822aaeaa237374",
    "filename": "raiden/utils/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/utils/__init__.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/utils/__init__.py:141:4 Incompatible return type [7]: Expected `typing.Address` but got `bytes`.",
    "message": " Expected `typing.Address` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 141,
    "warning_line": "    return publickey_to_address(privatekey_to_publickey(private_key_bin))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef publickey_to_address(publickey: bytes) -> bytes:\n    return sha3(publickey[1:])[12:]\n\n",
        "source_code_len": 91,
        "target_code": "\ndef publickey_to_address(publickey: bytes) -> typing.Address:\n    return typing.Address(sha3(publickey[1:])[12:])\n\n",
        "target_code_len": 116,
        "diff_format": "@@ -135,4 +135,4 @@\n \n-def publickey_to_address(publickey: bytes) -> bytes:\n-    return sha3(publickey[1:])[12:]\n+def publickey_to_address(publickey: bytes) -> typing.Address:\n+    return typing.Address(sha3(publickey[1:])[12:])\n \n",
        "source_code_with_indent": "\n<DED>def publickey_to_address(publickey: bytes) -> bytes:\n    <IND>return sha3(publickey[1:])[12:]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def publickey_to_address(publickey: bytes) -> typing.Address:\n    <IND>return typing.Address(sha3(publickey[1:])[12:])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]