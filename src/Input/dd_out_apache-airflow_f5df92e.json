[
  {
    "project": "apache/airflow",
    "commit": "f5df92e156cf933f34dc34239297184fb2d0c5b2",
    "filename": "airflow/providers/airbyte/hooks/airbyte.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/airbyte/hooks/airbyte.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/airbyte/hooks/airbyte.py:51:8 Incompatible attribute type [8]: Attribute `api_version` declared in class `AirbyteHook` has type `str` but is used as type `Optional[str]`.",
    "message": " Attribute `api_version` declared in class `AirbyteHook` has type `str` but is used as type `Optional[str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 51,
    "warning_line": "        self.api_version: str = api_version",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: Optional[str] = \"v1\") -> None:\n        super().__init__(http_conn_id=airbyte_conn_id)\n",
        "source_code_len": 165,
        "target_code": "\n    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: str = \"v1\") -> None:\n        super().__init__(http_conn_id=airbyte_conn_id)\n",
        "target_code_len": 155,
        "diff_format": "@@ -48,3 +48,3 @@\n \n-    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: Optional[str] = \"v1\") -> None:\n+    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: str = \"v1\") -> None:\n         super().__init__(http_conn_id=airbyte_conn_id)\n",
        "source_code_with_indent": "\n    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: Optional[str] = \"v1\") -> None:\n        <IND>super().__init__(http_conn_id=airbyte_conn_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, airbyte_conn_id: str = \"airbyte_default\", api_version: str = \"v1\") -> None:\n        <IND>super().__init__(http_conn_id=airbyte_conn_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "f5df92e156cf933f34dc34239297184fb2d0c5b2",
    "filename": "airflow/providers/airbyte/hooks/airbyte.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/airbyte/hooks/airbyte.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/airbyte/hooks/airbyte.py:72:23 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `time.sleep` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `time.sleep` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "            time.sleep(wait_seconds)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import time\nfrom typing import Any, Optional\n\n",
        "source_code_len": 46,
        "target_code": "import time\nfrom typing import Any, Optional, Union\n\n",
        "target_code_len": 53,
        "diff_format": "@@ -18,3 +18,3 @@\n import time\n-from typing import Any, Optional\n+from typing import Any, Optional, Union\n \n",
        "source_code_with_indent": "import time\nfrom typing import Any, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import time\nfrom typing import Any, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def wait_for_job(\n        self, job_id: str, wait_seconds: Optional[float] = 3, timeout: Optional[float] = 3600\n    ) -> None:\n",
        "source_code_len": 131,
        "target_code": "    def wait_for_job(\n        self, job_id: Union[str, int], wait_seconds: float = 3, timeout: Optional[float] = 3600\n    ) -> None:\n",
        "target_code_len": 133,
        "diff_format": "@@ -53,3 +53,3 @@\n     def wait_for_job(\n-        self, job_id: str, wait_seconds: Optional[float] = 3, timeout: Optional[float] = 3600\n+        self, job_id: Union[str, int], wait_seconds: float = 3, timeout: Optional[float] = 3600\n     ) -> None:\n",
        "source_code_with_indent": "    <DED>def wait_for_job(\n        self, job_id: str, wait_seconds: Optional[float] = 3, timeout: Optional[float] = 3600\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def wait_for_job(\n        self, job_id: Union[str, int], wait_seconds: float = 3, timeout: Optional[float] = 3600\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            try:\n                job = self.get_job(job_id=job_id)\n                state = job.json()[\"job\"][\"status\"]\n",
        "source_code_len": 119,
        "target_code": "            try:\n                job = self.get_job(job_id=(int(job_id)))\n                state = job.json()[\"job\"][\"status\"]\n",
        "target_code_len": 126,
        "diff_format": "@@ -73,3 +73,3 @@\n             try:\n-                job = self.get_job(job_id=job_id)\n+                job = self.get_job(job_id=(int(job_id)))\n                 state = job.json()[\"job\"][\"status\"]\n",
        "source_code_with_indent": "            try:\n                <IND>job = self.get_job(job_id=job_id)\n                state = job.json()[\"job\"][\"status\"]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            try:\n                <IND>job = self.get_job(job_id=(int(job_id)))\n                state = job.json()[\"job\"][\"status\"]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "f5df92e156cf933f34dc34239297184fb2d0c5b2",
    "filename": "airflow/providers/airbyte/hooks/airbyte.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/airbyte/hooks/airbyte.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/airbyte/hooks/airbyte.py:74:35 Incompatible parameter type [6]: Expected `int` for 1st parameter `job_id` to call `AirbyteHook.get_job` but got `str`.",
    "message": " Expected `int` for 1st parameter `job_id` to call `AirbyteHook.get_job` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 74,
    "warning_line": "                job = self.get_job(job_id=job_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            try:\n                job = self.get_job(job_id=job_id)\n                state = job.json()[\"job\"][\"status\"]\n",
        "source_code_len": 119,
        "target_code": "            try:\n                job = self.get_job(job_id=(int(job_id)))\n                state = job.json()[\"job\"][\"status\"]\n",
        "target_code_len": 126,
        "diff_format": "@@ -73,3 +73,3 @@\n             try:\n-                job = self.get_job(job_id=job_id)\n+                job = self.get_job(job_id=(int(job_id)))\n                 state = job.json()[\"job\"][\"status\"]\n",
        "source_code_with_indent": "            try:\n                <IND>job = self.get_job(job_id=job_id)\n                state = job.json()[\"job\"][\"status\"]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            try:\n                <IND>job = self.get_job(job_id=(int(job_id)))\n                state = job.json()[\"job\"][\"status\"]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "f5df92e156cf933f34dc34239297184fb2d0c5b2",
    "filename": "airflow/providers/airbyte/sensors/airbyte.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/airbyte/sensors/airbyte.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/airbyte/sensors/airbyte.py:57:27 Incompatible parameter type [6]: Expected `int` for 1st parameter `job_id` to call `AirbyteHook.get_job` but got `str`.",
    "message": " Expected `int` for 1st parameter `job_id` to call `AirbyteHook.get_job` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "        job = hook.get_job(job_id=self.airbyte_job_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        airbyte_job_id: str,\n        airbyte_conn_id: str = 'airbyte_default',\n        api_version: Optional[str] = \"v1\",\n        **kwargs,\n",
        "source_code_len": 151,
        "target_code": "        *,\n        airbyte_job_id: int,\n        airbyte_conn_id: str = 'airbyte_default',\n        api_version: str = \"v1\",\n        **kwargs,\n",
        "target_code_len": 141,
        "diff_format": "@@ -44,5 +43,5 @@\n         *,\n-        airbyte_job_id: str,\n+        airbyte_job_id: int,\n         airbyte_conn_id: str = 'airbyte_default',\n-        api_version: Optional[str] = \"v1\",\n+        api_version: str = \"v1\",\n         **kwargs,\n",
        "source_code_with_indent": "        *,\n        airbyte_job_id: str,\n        airbyte_conn_id: str = 'airbyte_default',\n        api_version: Optional[str] = \"v1\",\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        airbyte_job_id: int,\n        airbyte_conn_id: str = 'airbyte_default',\n        api_version: str = \"v1\",\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]