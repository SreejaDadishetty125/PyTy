[
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:64:8 Unbound name [10]: Name `_state` is used but not defined in the current scope.",
    "message": " Name `_state` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 64,
    "warning_line": "        _state._runtime_vars['_debug_mode'] = True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from ._state import current_actor\nfrom ._exceptions import RemoteActorError, ModuleNotExposed\n",
        "source_code_len": 94,
        "target_code": "from ._state import current_actor\nfrom . import _state\nfrom ._exceptions import RemoteActorError, ModuleNotExposed\n",
        "target_code_len": 115,
        "diff_format": "@@ -19,2 +19,3 @@\n from ._state import current_actor\n+from . import _state\n from ._exceptions import RemoteActorError, ModuleNotExposed\n",
        "source_code_with_indent": "from ._state import current_actor\nfrom ._exceptions import RemoteActorError, ModuleNotExposed\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from ._state import current_actor\nfrom . import _state\nfrom ._exceptions import RemoteActorError, ModuleNotExposed\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:67:46 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Any]` for 2nd positional only parameter to call `dict.setdefault` but got `List[Variable[_T]]`.",
    "message": " Expected `typing.Dict[str, typing.Any]` for 2nd positional only parameter to call `dict.setdefault` but got `List[Variable[_T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 67,
    "warning_line": "        kwargs.setdefault('rpc_module_paths', []).append('tractor._debug')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_len": 91,
        "target_code": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_len": 61,
        "diff_format": "@@ -53,3 +56,3 @@\n     debug_mode: bool = False,\n-    **kwargs: typing.Dict[str, typing.Any],\n+    **kwargs,\n ) -> typing.Any:\n",
        "source_code_with_indent": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:79:28 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `log.get_console_log` but got `typing.Union[typing.Dict[str, typing.Any], str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `log.get_console_log` but got `typing.Union[typing.Dict[str, typing.Any], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 79,
    "warning_line": "        log.get_console_log(loglevel)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_len": 91,
        "target_code": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_len": 61,
        "diff_format": "@@ -53,3 +56,3 @@\n     debug_mode: bool = False,\n-    **kwargs: typing.Dict[str, typing.Any],\n+    **kwargs,\n ) -> typing.Any:\n",
        "source_code_with_indent": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:95:14 Incompatible parameter type [6]: Expected `List[str]` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "message": " Expected `List[str]` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 95,
    "warning_line": "            **kwargs",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_len": 91,
        "target_code": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_len": 61,
        "diff_format": "@@ -53,3 +56,3 @@\n     debug_mode: bool = False,\n-    **kwargs: typing.Dict[str, typing.Any],\n+    **kwargs,\n ) -> typing.Any:\n",
        "source_code_with_indent": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:95:14 Incompatible parameter type [6]: Expected `Optional[str]` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "message": " Expected `Optional[str]` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 95,
    "warning_line": "            **kwargs",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_len": 91,
        "target_code": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_len": 61,
        "diff_format": "@@ -53,3 +56,3 @@\n     debug_mode: bool = False,\n-    **kwargs: typing.Dict[str, typing.Any],\n+    **kwargs,\n ) -> typing.Any:\n",
        "source_code_with_indent": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/__init__.py:95:14 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Actor.__init__` but got `typing.Dict[str, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 95,
    "warning_line": "            **kwargs",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_len": 91,
        "target_code": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_len": 61,
        "diff_format": "@@ -53,3 +56,3 @@\n     debug_mode: bool = False,\n-    **kwargs: typing.Dict[str, typing.Any],\n+    **kwargs,\n ) -> typing.Any:\n",
        "source_code_with_indent": "    debug_mode: bool = False,\n    **kwargs: typing.Dict[str, typing.Any],\n) -> typing.Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    debug_mode: bool = False,\n    **kwargs,\n) -> typing.Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/_debug.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/_debug.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/_debug.py:129:8 Incompatible return type [7]: Expected `None` but got `typing.AsyncGenerator[None, None]`.",
    "message": " Expected `None` but got `typing.AsyncGenerator[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 129,
    "warning_line": "        yield",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable\n# import signal\n",
        "source_code_len": 115,
        "target_code": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n# import signal\n",
        "target_code_len": 130,
        "diff_format": "@@ -7,3 +7,3 @@\n from contextlib import asynccontextmanager\n-from typing import Awaitable, Tuple, Optional, Callable\n+from typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n # import signal\n",
        "source_code_with_indent": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable\n# import signal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n# import signal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@asynccontextmanager\nasync def _acquire_debug_lock(uid: Tuple[str, str]) -> None:\n    \"\"\"Acquire a actor local FIFO lock meant to mutex entry to a local\n",
        "source_code_len": 153,
        "target_code": "@asynccontextmanager\nasync def _acquire_debug_lock(uid: Tuple[str, str]) -> AsyncIterator[None]:\n    \"\"\"Acquire a actor local FIFO lock meant to mutex entry to a local\n",
        "target_code_len": 168,
        "diff_format": "@@ -119,3 +119,3 @@\n @asynccontextmanager\n-async def _acquire_debug_lock(uid: Tuple[str, str]) -> None:\n+async def _acquire_debug_lock(uid: Tuple[str, str]) -> AsyncIterator[None]:\n     \"\"\"Acquire a actor local FIFO lock meant to mutex entry to a local\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED><DED><DED>@asynccontextmanager\nasync def _acquire_debug_lock(uid: Tuple[str, str]) -> None:\n    <IND>",
        "target_code_with_indent": "<DED><DED><DED>@asynccontextmanager\nasync def _acquire_debug_lock(uid: Tuple[str, str]) -> AsyncIterator[None]:\n    <IND>"
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "c375a2d028e727b41d45cd65ebb2af836e541682",
    "filename": "tractor/_debug.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/_debug.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/_debug.py:171:8 Incompatible return type [7]: Expected `None` but got `typing.AsyncGenerator[str, None]`.",
    "message": " Expected `None` but got `typing.AsyncGenerator[str, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 171,
    "warning_line": "        yield 'Locked'",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable\n# import signal\n",
        "source_code_len": 115,
        "target_code": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n# import signal\n",
        "target_code_len": 130,
        "diff_format": "@@ -7,3 +7,3 @@\n from contextlib import asynccontextmanager\n-from typing import Awaitable, Tuple, Optional, Callable\n+from typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n # import signal\n",
        "source_code_with_indent": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable\n# import signal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import asynccontextmanager\nfrom typing import Awaitable, Tuple, Optional, Callable, AsyncIterator\n# import signal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    subactor_uid: Tuple[str, str]\n) -> None:\n    # TODO: when we get to true remote debugging\n",
        "source_code_len": 94,
        "target_code": "    subactor_uid: Tuple[str, str]\n) -> AsyncIterator[str]:\n    # TODO: when we get to true remote debugging\n",
        "target_code_len": 108,
        "diff_format": "@@ -160,3 +160,3 @@\n     subactor_uid: Tuple[str, str]\n-) -> None:\n+) -> AsyncIterator[str]:\n     # TODO: when we get to true remote debugging\n",
        "source_code_with_indent": "    subactor_uid: Tuple[str, str]\n) -> None:\n    # TODO: when we get to true remote debugging\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    subactor_uid: Tuple[str, str]\n) -> AsyncIterator[str]:\n    # TODO: when we get to true remote debugging\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]