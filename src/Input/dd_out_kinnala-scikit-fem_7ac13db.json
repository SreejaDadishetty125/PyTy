[
  {
    "project": "kinnala/scikit-fem",
    "commit": "7ac13db54bcbfaff9483e54e517685422cfb02ca",
    "filename": "skfem/assembly/basis/basis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kinnala-scikit-fem/skfem/assembly/basis/basis.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "skfem/assembly/basis/basis.py:268:12 Incompatible return type [7]: Expected `List[Variable[BasisType (bound to Basis)]]` but got `List[Basis]`.",
    "message": " Expected `List[Variable[BasisType (bound to Basis)]]` but got `List[Basis]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 268,
    "warning_line": "            return [type(self)(self.mesh, e, self.mapping,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def split_bases(self) -> List[BasisType]:\n        \"\"\"Return Basis objects for the solution components.\"\"\"\n",
        "source_code_len": 111,
        "target_code": "\n    def split_bases(self) -> List['Basis']:\n        \"\"\"Return Basis objects for the solution components.\"\"\"\n",
        "target_code_len": 109,
        "diff_format": "@@ -264,3 +260,3 @@\n \n-    def split_bases(self) -> List[BasisType]:\n+    def split_bases(self) -> List['Basis']:\n         \"\"\"Return Basis objects for the solution components.\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def split_bases(self) -> List[BasisType]:\n        <IND>\"\"\"Return Basis objects for the solution components.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def split_bases(self) -> List['Basis']:\n        <IND>\"\"\"Return Basis objects for the solution components.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]