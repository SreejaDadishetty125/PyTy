[
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/kind/file.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/kind/file.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/kind/file.py:115:12 Incompatible return type [7]: Expected `typing.List[str]` but got implicit return value of `None`.",
    "message": " Expected `typing.List[str]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 115,
    "warning_line": "            self.vim.command('lopen')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _qfloc(self, context: UserContext, listtype: str) -> typing.List[str]:\n        qfloclist = []\n",
        "source_code_len": 103,
        "target_code": "\n    def _qfloc(self, context: UserContext, listtype: str) -> None:\n        qfloclist = []\n",
        "target_code_len": 91,
        "diff_format": "@@ -94,3 +94,3 @@\n \n-    def _qfloc(self, context: UserContext, listtype: str) -> typing.List[str]:\n+    def _qfloc(self, context: UserContext, listtype: str) -> None:\n         qfloclist = []\n",
        "source_code_with_indent": "\n    <DED>def _qfloc(self, context: UserContext, listtype: str) -> typing.List[str]:\n        <IND>qfloclist = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _qfloc(self, context: UserContext, listtype: str) -> None:\n        <IND>qfloclist = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/kind/file.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/kind/file.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/kind/file.py:161:12 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 161,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # Needed for openable actions\n    def _winid(self, target: Candidate) -> int:\n        if 'action__bufnr' in target:\n",
        "source_code_len": 120,
        "target_code": "    # Needed for openable actions\n    def _winid(self, target: Candidate) -> typing.Optional[int]:\n        if 'action__bufnr' in target:\n",
        "target_code_len": 137,
        "diff_format": "@@ -153,3 +153,3 @@\n     # Needed for openable actions\n-    def _winid(self, target: Candidate) -> int:\n+    def _winid(self, target: Candidate) -> typing.Optional[int]:\n         if 'action__bufnr' in target:\n",
        "source_code_with_indent": "    # Needed for openable actions\n    <DED>def _winid(self, target: Candidate) -> int:\n        <IND>if 'action__bufnr' in target:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # Needed for openable actions\n    <DED>def _winid(self, target: Candidate) -> typing.Optional[int]:\n        <IND>if 'action__bufnr' in target:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/parent.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/parent.py:161:8 Incompatible return type [7]: Expected `typing.Optional[int]` but got `str`.",
    "message": " Expected `typing.Optional[int]` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 161,
    "warning_line": "        return queue_id",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        pass\n",
        "source_code_len": 132,
        "target_code": "    @abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        pass\n",
        "target_code_len": 102,
        "diff_format": "@@ -34,4 +34,3 @@\n     @abstractmethod\n-    def _put(self, name: str,\n-             args: typing.List[typing.Any]) -> typing.Optional[int]:\n+    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n         pass\n",
        "source_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        <IND>pass\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        <IND>pass\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        return self._child.main(name, args, queue_id=None)  # type: ignore\n",
        "source_code_len": 175,
        "target_code": "\n    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        return self._child.main(name, args, queue_id=None)  # type: ignore\n",
        "target_code_len": 145,
        "diff_format": "@@ -79,4 +78,3 @@\n \n-    def _put(self, name: str,\n-             args: typing.List[typing.Any]) -> typing.Optional[int]:\n+    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n         return self._child.main(name, args, queue_id=None)  # type: ignore\n",
        "source_code_with_indent": "\n    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        <IND>return self._child.main(name, args, queue_id=None)  # type: ignore\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        <IND>return self._child.main(name, args, queue_id=None)  # type: ignore\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        if not self._hnd:\n            return None\n\n",
        "source_code_len": 151,
        "target_code": "\n    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        if not self._hnd:\n            return ''\n\n",
        "target_code_len": 119,
        "diff_format": "@@ -141,6 +139,5 @@\n \n-    def _put(self, name: str,\n-             args: typing.List[typing.Any]) -> typing.Optional[int]:\n+    def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n         if not self._hnd:\n-            return None\n+            return ''\n \n",
        "source_code_with_indent": "\n    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        <IND>if not self._hnd:\n            <IND>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _put(self, name: str, args: typing.List[typing.Any]) -> str:\n        <IND>if not self._hnd:\n            <IND>return ''\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/socket.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/socket.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/socket.py:48:8 Incompatible attribute type [8]: Attribute `_thread` declared in class `Socket` has type `Thread` but is used as type `None`.",
    "message": " Attribute `_thread` declared in class `Socket` has type `Thread` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 48,
    "warning_line": "        self._thread = None"
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/socket.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/socket.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/socket.py:76:20 Incompatible return type [7]: Expected `socket.socket` but got implicit return value of `None`.",
    "message": " Expected `socket.socket` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 76,
    "warning_line": "                    raise OSError('Socket: getaddrinfo returns an empty list')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def receive(self, num: int = 1024) -> str:\n        return self._sock.recv(num).decode(self._enc, errors='replace')\n\n    def connect(self, host: str, port: int, timeout: int) -> socket.socket:\n        for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC,\n",
        "source_code_len": 264,
        "target_code": "    def receive(self, num: int = 1024) -> str:\n        if self._sock is None:\n            return ''\n        return self._sock.recv(num).decode(self._enc, errors='replace')\n\n    def connect(self, host: str, port: int,\n                timeout: int) -> typing.Optional[socket.socket]:\n        for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC,\n",
        "target_code_len": 350,
        "diff_format": "@@ -54,5 +58,8 @@\n     def receive(self, num: int = 1024) -> str:\n+        if self._sock is None:\n+            return ''\n         return self._sock.recv(num).decode(self._enc, errors='replace')\n \n-    def connect(self, host: str, port: int, timeout: int) -> socket.socket:\n+    def connect(self, host: str, port: int,\n+                timeout: int) -> typing.Optional[socket.socket]:\n         for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC,\n",
        "source_code_with_indent": "    <DED><DED>def receive(self, num: int = 1024) -> str:\n        <IND>return self._sock.recv(num).decode(self._enc, errors='replace')\n\n    <DED>def connect(self, host: str, port: int, timeout: int) -> socket.socket:\n        <IND>for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def receive(self, num: int = 1024) -> str:\n        <IND>if self._sock is None:\n            <IND>return ''\n        <DED>return self._sock.recv(num).decode(self._enc, errors='replace')\n\n    <DED>def connect(self, host: str, port: int,\n                timeout: int) -> typing.Optional[socket.socket]:\n        <IND>for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "9fcc9b0b1ec76f2516a9182f3b35848e50f7a941",
    "filename": "rplugin/python3/denite/socket.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/socket.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/socket.py:111:8 Incompatible attribute type [8]: Attribute `_thread` declared in class `Socket` has type `Thread` but is used as type `None`.",
    "message": " Attribute `_thread` declared in class `Socket` has type `Thread` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 111,
    "warning_line": "        self._thread = None"
  }
]