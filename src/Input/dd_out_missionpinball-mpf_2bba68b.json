[
  {
    "project": "missionpinball/mpf",
    "commit": "2bba68bc3d50fd839399b90d8115bbade0a49f27",
    "filename": "mpf/tests/test_BcpServer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/tests/test_BcpServer.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/tests/test_BcpServer.py:24:42 Invalid type [31]: Expression `(str, dict)` is not a valid type.",
    "message": " Expression `(str, dict)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "    def _get_and_decode(self, client) -> (str, dict):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from unittest.mock import MagicMock\n",
        "source_code_len": 36,
        "target_code": "from typing import Tuple\nfrom unittest.mock import MagicMock\n",
        "target_code_len": 61,
        "diff_format": "@@ -1,1 +1,2 @@\n+from typing import Tuple\n from unittest.mock import MagicMock\n",
        "source_code_with_indent": "from unittest.mock import MagicMock\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Tuple\nfrom unittest.mock import MagicMock\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _get_and_decode(self, client) -> (str, dict):\n        data = client.send_queue.get_nowait()\n",
        "source_code_len": 101,
        "target_code": "\n    def _get_and_decode(self, client) -> Tuple[str, dict]:\n        data = client.send_queue.get_nowait()\n",
        "target_code_len": 106,
        "diff_format": "@@ -23,3 +24,3 @@\n \n-    def _get_and_decode(self, client) -> (str, dict):\n+    def _get_and_decode(self, client) -> Tuple[str, dict]:\n         data = client.send_queue.get_nowait()\n",
        "source_code_with_indent": "\n    <DED>def _get_and_decode(self, client) -> (str, dict):\n        <IND>data = client.send_queue.get_nowait()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _get_and_decode(self, client) -> Tuple[str, dict]:\n        <IND>data = client.send_queue.get_nowait()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "2bba68bc3d50fd839399b90d8115bbade0a49f27",
    "filename": "mpf/tests/test_VirtualPinball.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/tests/test_VirtualPinball.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/tests/test_VirtualPinball.py:34:42 Invalid type [31]: Expression `(str, dict)` is not a valid type.",
    "message": " Expression `(str, dict)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 34,
    "warning_line": "    def _get_and_decode(self, client) -> (str, dict):"
  }
]