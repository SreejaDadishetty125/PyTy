[
  {
    "project": "python/mypy",
    "commit": "802401f0be51d0e2fdfe8eb54682431375cde1d2",
    "filename": "stubs/3.2/codecs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/stubs/3.2/codecs.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stubs/3.2/codecs.py:1:29 Unbound name [10]: Name `Any` is used but not defined in the current scope.",
    "message": " Name `Any` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1,
    "warning_line": "def lookup(encoding: str) -> Any: pass",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def lookup(encoding: str) -> Any: pass\n",
        "source_code_len": 39,
        "target_code": "from typing import Any\ndef lookup(encoding: str) -> Any: pass\n",
        "target_code_len": 62,
        "diff_format": "@@ -1,1 +1,2 @@\n+from typing import Any\n def lookup(encoding: str) -> Any: pass\n",
        "source_code_with_indent": "def lookup(encoding: str) -> Any: pass\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Any\ndef lookup(encoding: str) -> Any: pass\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "802401f0be51d0e2fdfe8eb54682431375cde1d2",
    "filename": "stubs/3.2/unittest.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/stubs/3.2/unittest.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stubs/3.2/unittest.py:64:41 Unbound name [10]: Name `Sequence` is used but not defined in the current scope.",
    "message": " Name `Sequence` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 64,
    "warning_line": "    def assertSequenceEqual(self, first: Sequence[Any], second: Sequence[Any],",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n)\n",
        "source_code_len": 92,
        "target_code": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n    overload, typevar\n)\n",
        "target_code_len": 116,
        "diff_format": "@@ -10,3 +10,4 @@\n from typing import (\n-    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n+    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n+    overload, typevar\n )\n",
        "source_code_with_indent": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n    overload, typevar\n)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "802401f0be51d0e2fdfe8eb54682431375cde1d2",
    "filename": "stubs/3.2/unittest.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/stubs/3.2/unittest.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stubs/3.2/unittest.py:86:5 Unbound name [10]: Name `overload` is used but not defined in the current scope.",
    "message": " Name `overload` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 86,
    "warning_line": "    @overload",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n)\n",
        "source_code_len": 92,
        "target_code": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n    overload, typevar\n)\n",
        "target_code_len": 116,
        "diff_format": "@@ -10,3 +10,4 @@\n from typing import (\n-    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n+    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n+    overload, typevar\n )\n",
        "source_code_with_indent": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, typevar\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import (\n    Any, Function, Iterable, Undefined, Tuple, List, TextIO, Sequence,\n    overload, typevar\n)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]