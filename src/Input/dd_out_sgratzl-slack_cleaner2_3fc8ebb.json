[
  {
    "project": "sgratzl/slack_cleaner2",
    "commit": "3fc8ebbccd2359b40d85d44a4d2dab0e36fe9cf2",
    "filename": "slack_cleaner2/model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sgratzl-slack_cleaner2/slack_cleaner2/model.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_cleaner2/model.py:215:34 Incompatible parameter type [6]: Expected `SlackUser` for 2nd positional only parameter to call `SlackMessage.__init__` but got `Optional[SlackUser]`.",
    "message": " Expected `SlackUser` for 2nd positional only parameter to call `SlackMessage.__init__` but got `Optional[SlackUser]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 215,
    "warning_line": "          yield SlackMessage(msg, user, self, self._slack)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from requests import Response\nfrom typing import Any, Dict, Iterable, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_len": 142,
        "target_code": "from requests import Response\nfrom typing import Any, Dict, Iterator, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "target_code_len": 142,
        "diff_format": "@@ -6,3 +6,3 @@\n from requests import Response\n-from typing import Any, Dict, Iterable, Optional, List, Union\n+from typing import Any, Dict, Iterator, Optional, List, Union\n from .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_with_indent": "from requests import Response\nfrom typing import Any, Dict, Iterable, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from requests import Response\nfrom typing import Any, Dict, Iterator, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 138,
        "target_code": "  def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 140,
        "diff_format": "@@ -87,3 +87,3 @@\n   def files(self, after: TimeIsh = None,\n-            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n+            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "  <DED>def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "  <DED>def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 100,
        "target_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 102,
        "diff_format": "@@ -102,3 +102,3 @@\n \n-  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n+  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 111,
        "target_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 113,
        "diff_format": "@@ -174,3 +174,3 @@\n \n-  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n+  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 83,
        "target_code": "\n  def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 87,
        "diff_format": "@@ -216,3 +216,3 @@\n \n-  def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n+  def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED><DED><DED><DED>def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED><DED><DED><DED>def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 138,
        "target_code": "  def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 140,
        "diff_format": "@@ -235,3 +235,3 @@\n   def files(self, after: TimeIsh = None, before: TimeIsh = None,\n-            types: Optional[str] = None) -> Iterable[SlackFile]:\n+            types: Optional[str] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "  <DED><DED><DED>def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "  <DED><DED><DED>def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  user: SlackUser\n  \"\"\"\n",
        "source_code_len": 25,
        "target_code": "\n  user: Optional[SlackUser]\n  \"\"\"\n",
        "target_code_len": 35,
        "diff_format": "@@ -297,3 +297,3 @@\n \n-  user: SlackUser\n+  user: Optional[SlackUser]\n   \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  user: SlackUser\n",
        "target_code_with_indent": "\n  user: Optional[SlackUser]\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n    \"\"\"\n",
        "source_code_len": 109,
        "target_code": "\n  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n    \"\"\"\n",
        "target_code_len": 119,
        "diff_format": "@@ -317,3 +317,3 @@\n \n-  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n+  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def replies(self) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 56,
        "target_code": "\n  def replies(self) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 58,
        "diff_format": "@@ -356,3 +356,3 @@\n \n-  def replies(self) -> Iterable[SlackMessage]:\n+  def replies(self) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED><DED>def replies(self) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED><DED>def replies(self) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 131,
        "target_code": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 133,
        "diff_format": "@@ -452,3 +452,3 @@\n            types: Optional[str] = None,\n-           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n+           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n    \"\"\"\n",
        "source_code_len": 74,
        "target_code": "\n  def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n    \"\"\"\n",
        "target_code_len": 74,
        "diff_format": "@@ -551,3 +551,3 @@\n \n-  def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n+  def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n    <IND>"
      }
    ]
  },
  {
    "project": "sgratzl/slack_cleaner2",
    "commit": "3fc8ebbccd2359b40d85d44a4d2dab0e36fe9cf2",
    "filename": "slack_cleaner2/model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sgratzl-slack_cleaner2/slack_cleaner2/model.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_cleaner2/model.py:233:32 Incompatible parameter type [6]: Expected `SlackUser` for 2nd positional only parameter to call `SlackMessage.__init__` but got `Optional[SlackUser]`.",
    "message": " Expected `SlackUser` for 2nd positional only parameter to call `SlackMessage.__init__` but got `Optional[SlackUser]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 233,
    "warning_line": "        yield SlackMessage(msg, user, self, self._slack)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from requests import Response\nfrom typing import Any, Dict, Iterable, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_len": 142,
        "target_code": "from requests import Response\nfrom typing import Any, Dict, Iterator, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "target_code_len": 142,
        "diff_format": "@@ -6,3 +6,3 @@\n from requests import Response\n-from typing import Any, Dict, Iterable, Optional, List, Union\n+from typing import Any, Dict, Iterator, Optional, List, Union\n from .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_with_indent": "from requests import Response\nfrom typing import Any, Dict, Iterable, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from requests import Response\nfrom typing import Any, Dict, Iterator, Optional, List, Union\nfrom .slack_cleaner2 import SlackCleaner, TimeIsh\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 138,
        "target_code": "  def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 140,
        "diff_format": "@@ -87,3 +87,3 @@\n   def files(self, after: TimeIsh = None,\n-            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n+            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "  <DED>def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "  <DED>def files(self, after: TimeIsh = None,\n            before: TimeIsh = None, types: Optional[str] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 100,
        "target_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 102,
        "diff_format": "@@ -102,3 +102,3 @@\n \n-  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n+  def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 111,
        "target_code": "\n  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 113,
        "diff_format": "@@ -174,3 +174,3 @@\n \n-  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n+  def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def msgs(self, after: TimeIsh = None, before: TimeIsh = None, asc=False) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 83,
        "target_code": "\n  def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 87,
        "diff_format": "@@ -216,3 +216,3 @@\n \n-  def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n+  def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED><DED><DED><DED>def replies_to(self, base_msg: SlackMessage) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED><DED><DED><DED>def replies_to(self, base_msg: 'SlackMessage') -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 138,
        "target_code": "  def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 140,
        "diff_format": "@@ -235,3 +235,3 @@\n   def files(self, after: TimeIsh = None, before: TimeIsh = None,\n-            types: Optional[str] = None) -> Iterable[SlackFile]:\n+            types: Optional[str] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "  <DED><DED><DED>def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "  <DED><DED><DED>def files(self, after: TimeIsh = None, before: TimeIsh = None,\n            types: Optional[str] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  user: SlackUser\n  \"\"\"\n",
        "source_code_len": 25,
        "target_code": "\n  user: Optional[SlackUser]\n  \"\"\"\n",
        "target_code_len": 35,
        "diff_format": "@@ -297,3 +297,3 @@\n \n-  user: SlackUser\n+  user: Optional[SlackUser]\n   \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  user: SlackUser\n",
        "target_code_with_indent": "\n  user: Optional[SlackUser]\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n    \"\"\"\n",
        "source_code_len": 109,
        "target_code": "\n  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n    \"\"\"\n",
        "target_code_len": 119,
        "diff_format": "@@ -317,3 +317,3 @@\n \n-  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n+  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self, entry: JSONDict, user: SlackUser, channel: SlackChannel, slack: SlackCleaner):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(self, entry: JSONDict, user: Optional[SlackUser], channel: SlackChannel, slack: SlackCleaner):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def replies(self) -> Iterable[SlackMessage]:\n    \"\"\"\n",
        "source_code_len": 56,
        "target_code": "\n  def replies(self) -> Iterator['SlackMessage']:\n    \"\"\"\n",
        "target_code_len": 58,
        "diff_format": "@@ -356,3 +356,3 @@\n \n-  def replies(self) -> Iterable[SlackMessage]:\n+  def replies(self) -> Iterator['SlackMessage']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED><DED>def replies(self) -> Iterable[SlackMessage]:\n    <IND>",
        "target_code_with_indent": "\n  <DED><DED>def replies(self) -> Iterator['SlackMessage']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n    \"\"\"\n",
        "source_code_len": 131,
        "target_code": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n    \"\"\"\n",
        "target_code_len": 133,
        "diff_format": "@@ -452,3 +452,3 @@\n            types: Optional[str] = None,\n-           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n+           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterable[SlackFile]:\n    <IND>",
        "target_code_with_indent": "           types: Optional[str] = None,\n           channel: Union[str, SlackChannel, None] = None) -> Iterator['SlackFile']:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n    \"\"\"\n",
        "source_code_len": 74,
        "target_code": "\n  def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n    \"\"\"\n",
        "target_code_len": 74,
        "diff_format": "@@ -551,3 +551,3 @@\n \n-  def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n+  def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def download_stream(self, chunk_size=1024) -> Iterable[bytes]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def download_stream(self, chunk_size=1024) -> Iterator[bytes]:\n    <IND>"
      }
    ]
  },
  {
    "project": "sgratzl/slack_cleaner2",
    "commit": "3fc8ebbccd2359b40d85d44a4d2dab0e36fe9cf2",
    "filename": "slack_cleaner2/predicates.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sgratzl-slack_cleaner2/slack_cleaner2/predicates.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_cleaner2/predicates.py:202:20 Unbound name [10]: Name `Iterable` is used but not defined in the current scope.",
    "message": " Name `Iterable` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 202,
    "warning_line": "def by_users(users: Iterable[SlackUser]) -> Predicate:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\nfrom typing import Optional, List, Any, Callable\n\n",
        "source_code_len": 54,
        "target_code": "\"\"\"\nfrom typing import Optional, Iterable, List, Any, Callable\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -5,3 +5,3 @@\n \"\"\"\n-from typing import Optional, List, Any, Callable\n+from typing import Optional, Iterable, List, Any, Callable\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nfrom typing import Optional, List, Any, Callable\n\n",
        "target_code_with_indent": "\nfrom typing import Optional, Iterable, List, Any, Callable\n\n"
      }
    ]
  },
  {
    "project": "sgratzl/slack_cleaner2",
    "commit": "3fc8ebbccd2359b40d85d44a4d2dab0e36fe9cf2",
    "filename": "slack_cleaner2/slack_cleaner2.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sgratzl-slack_cleaner2/slack_cleaner2/slack_cleaner2.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_cleaner2/slack_cleaner2.py:122:67 Unsupported operand [58]: `+` is not supported for operand types `List[SlackChannel]` and `List[SlackDirectMessage]`.",
    "message": " `+` is not supported for operand types `List[SlackChannel]` and `List[SlackDirectMessage]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 122,
    "warning_line": "    self.conversations = self.channels + self.groups + self.mpim + self.ims",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # all different types with a similar interface\n    self.conversations = self.channels + self.groups + self.mpim + self.ims\n\n",
        "source_code_len": 128,
        "target_code": "    # all different types with a similar interface\n    self.conversations = self.channels + self.groups + self.mpim\n    self.conversations.extend(self.ims)\n\n",
        "target_code_len": 157,
        "diff_format": "@@ -121,3 +121,4 @@\n     # all different types with a similar interface\n-    self.conversations = self.channels + self.groups + self.mpim + self.ims\n+    self.conversations = self.channels + self.groups + self.mpim\n+    self.conversations.extend(self.ims)\n \n",
        "source_code_with_indent": "    # all different types with a similar interface\n    self.conversations = self.channels + self.groups + self.mpim + self.ims\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # all different types with a similar interface\n    self.conversations = self.channels + self.groups + self.mpim\n    self.conversations.extend(self.ims)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]