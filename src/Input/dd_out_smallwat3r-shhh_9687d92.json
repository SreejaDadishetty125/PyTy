[
  {
    "project": "smallwat3r/shhh",
    "commit": "9687d92934b4256ef5dd0489c1b0b714466fa05a",
    "filename": "shhh/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/smallwat3r-shhh/shhh/config.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "shhh/config.py:49:37 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 49,
    "warning_line": "        SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\"))\n    except (ValueError, TypeError):\n",
        "source_code_len": 124,
        "target_code": "    try:\n        SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\", 250))\n    except (ValueError, TypeError):\n",
        "target_code_len": 129,
        "diff_format": "@@ -48,3 +48,3 @@\n     try:\n-        SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\"))\n+        SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\", 250))\n     except (ValueError, TypeError):\n",
        "source_code_with_indent": "    try:\n        <IND>SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\"))\n    <DED>except (ValueError, TypeError):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    try:\n        <IND>SHHH_SECRET_MAX_LENGTH = int(os.environ.get(\"SHHH_SECRET_MAX_LENGTH\", 250))\n    <DED>except (ValueError, TypeError):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "smallwat3r/shhh",
    "commit": "9687d92934b4256ef5dd0489c1b0b714466fa05a",
    "filename": "shhh/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/smallwat3r-shhh/shhh/config.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "shhh/config.py:57:43 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "        SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\"))\n    except (ValueError, TypeError):\n",
        "source_code_len": 136,
        "target_code": "    try:\n        SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\", 5))\n    except (ValueError, TypeError):\n",
        "target_code_len": 139,
        "diff_format": "@@ -56,3 +56,3 @@\n     try:\n-        SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\"))\n+        SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\", 5))\n     except (ValueError, TypeError):\n",
        "source_code_with_indent": "    <DED>try:\n        <IND>SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\"))\n    <DED>except (ValueError, TypeError):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>try:\n        <IND>SHHH_DB_LIVENESS_RETRY_COUNT = int(os.environ.get(\"SHHH_DB_LIVENESS_RETRY_COUNT\", 5))\n    <DED>except (ValueError, TypeError):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "smallwat3r/shhh",
    "commit": "9687d92934b4256ef5dd0489c1b0b714466fa05a",
    "filename": "shhh/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/smallwat3r-shhh/shhh/config.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "shhh/config.py:63:48 Incompatible parameter type [6]: Expected `typing.Union[bytearray, bytes, str, typing.SupportsFloat, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `float.__new__` but got `Optional[str]`.",
    "message": " Expected `typing.Union[bytearray, bytes, str, typing.SupportsFloat, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `float.__new__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 63,
    "warning_line": "        SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\"))\n    except (ValueError, TypeError):\n",
        "source_code_len": 144,
        "target_code": "    try:\n        SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(\n            os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\", 1)\n        )\n    except (ValueError, TypeError):\n",
        "target_code_len": 169,
        "diff_format": "@@ -62,3 +62,5 @@\n     try:\n-        SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\"))\n+        SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(\n+            os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\", 1)\n+        )\n     except (ValueError, TypeError):\n",
        "source_code_with_indent": "    <DED>try:\n        <IND>SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\"))\n    <DED>except (ValueError, TypeError):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>try:\n        <IND>SHHH_DB_LIVENESS_SLEEP_INTERVAL = float(\n            os.environ.get(\"SHHH_DB_LIVENESS_SLEEP_INTERVAL\", 1)\n        )\n    <DED>except (ValueError, TypeError):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]