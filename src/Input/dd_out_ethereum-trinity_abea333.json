[
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/base.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/base.py:700:8 Incompatible return type [7]: Expected `BaseState` but got `BaseTransaction`.",
    "message": " Expected `BaseState` but got `BaseTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 700,
    "warning_line": "        return self.get_transaction_class()(*args, **kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    #\n    def create_transaction(self, *args: Any, **kwargs: Any) -> BaseState:\n        \"\"\"\n",
        "source_code_len": 92,
        "target_code": "    #\n    def create_transaction(self, *args: Any, **kwargs: Any) -> BaseTransaction:\n        \"\"\"\n",
        "target_code_len": 98,
        "diff_format": "@@ -695,3 +705,3 @@\n     #\n-    def create_transaction(self, *args: Any, **kwargs: Any) -> BaseState:\n+    def create_transaction(self, *args: Any, **kwargs: Any) -> BaseTransaction:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    #\n    <DED>def create_transaction(self, *args: Any, **kwargs: Any) -> BaseState:\n        <IND>",
        "target_code_with_indent": "    #\n    <DED>def create_transaction(self, *args: Any, **kwargs: Any) -> BaseTransaction:\n        <IND>"
      }
    ]
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/byzantium/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/byzantium/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/byzantium/transactions.py:29:8 Incompatible return type [7]: Expected `BaseTransaction` but got `ByzantiumUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` but got `ByzantiumUnsignedTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 29,
    "warning_line": "        return ByzantiumUnsignedTransaction(nonce, gas_price, gas, to, value, data)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/byzantium/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/byzantium/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/byzantium/transactions.py:36:47 Incompatible parameter type [6]: Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `ByzantiumUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `ByzantiumUnsignedTransaction`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 36,
    "warning_line": "        v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/byzantium/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/byzantium/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/byzantium/transactions.py:37:8 Incompatible return type [7]: Expected `BaseUnsignedTransaction` but got `ByzantiumTransaction`.",
    "message": " Expected `BaseUnsignedTransaction` but got `ByzantiumTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 37,
    "warning_line": "        return ByzantiumTransaction("
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/constantinople/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/constantinople/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/constantinople/transactions.py:29:8 Incompatible return type [7]: Expected `BaseTransaction` but got `ConstantinopleUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` but got `ConstantinopleUnsignedTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 29,
    "warning_line": "        return ConstantinopleUnsignedTransaction(nonce, gas_price, gas, to, value, data)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/constantinople/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/constantinople/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/constantinople/transactions.py:36:47 Incompatible parameter type [6]: Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `ConstantinopleUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `ConstantinopleUnsignedTransaction`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 36,
    "warning_line": "        v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/constantinople/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/constantinople/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/constantinople/transactions.py:37:8 Incompatible return type [7]: Expected `BaseUnsignedTransaction` but got `ConstantinopleTransaction`.",
    "message": " Expected `BaseUnsignedTransaction` but got `ConstantinopleTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 37,
    "warning_line": "        return ConstantinopleTransaction("
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/spurious_dragon/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/spurious_dragon/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/spurious_dragon/transactions.py:57:8 Incompatible return type [7]: Expected `BaseTransaction` but got `SpuriousDragonUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` but got `SpuriousDragonUnsignedTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 57,
    "warning_line": "        return SpuriousDragonUnsignedTransaction(nonce, gas_price, gas, to, value, data)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/spurious_dragon/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/spurious_dragon/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/spurious_dragon/transactions.py:85:47 Incompatible parameter type [6]: Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `SpuriousDragonUnsignedTransaction`.",
    "message": " Expected `BaseTransaction` for 1st positional only parameter to call `create_transaction_signature` but got `SpuriousDragonUnsignedTransaction`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 85,
    "warning_line": "        v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)"
  },
  {
    "project": "ethereum/trinity",
    "commit": "abea3333246d98fc2fec825ca83655207c88ef0c",
    "filename": "eth/vm/forks/spurious_dragon/transactions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/forks/spurious_dragon/transactions.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/forks/spurious_dragon/transactions.py:86:8 Incompatible return type [7]: Expected `BaseUnsignedTransaction` but got `SpuriousDragonTransaction`.",
    "message": " Expected `BaseUnsignedTransaction` but got `SpuriousDragonTransaction`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 86,
    "warning_line": "        return SpuriousDragonTransaction(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class SpuriousDragonUnsignedTransaction(HomesteadUnsignedTransaction):\n    def as_signed_transaction(self,                     # type: ignore\n                              private_key: PrivateKey,\n                              chain_id: int=None) -> BaseUnsignedTransaction:\n        v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)\n",
        "source_code_len": 360,
        "target_code": "class SpuriousDragonUnsignedTransaction(HomesteadUnsignedTransaction):\n    def as_signed_transaction(self,\n                              private_key: PrivateKey,\n                              chain_id: int=None) -> SpuriousDragonTransaction:\n        v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)\n",
        "target_code_len": 327,
        "diff_format": "@@ -81,5 +76,5 @@\n class SpuriousDragonUnsignedTransaction(HomesteadUnsignedTransaction):\n-    def as_signed_transaction(self,                     # type: ignore\n+    def as_signed_transaction(self,\n                               private_key: PrivateKey,\n-                              chain_id: int=None) -> BaseUnsignedTransaction:\n+                              chain_id: int=None) -> SpuriousDragonTransaction:\n         v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)\n",
        "source_code_with_indent": "<DED><DED><DED>class SpuriousDragonUnsignedTransaction(HomesteadUnsignedTransaction):\n    <IND>def as_signed_transaction(self,                     # type: ignore\n                              private_key: PrivateKey,\n                              chain_id: int=None) -> BaseUnsignedTransaction:\n        <IND>v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED><DED>class SpuriousDragonUnsignedTransaction(HomesteadUnsignedTransaction):\n    <IND>def as_signed_transaction(self,\n                              private_key: PrivateKey,\n                              chain_id: int=None) -> SpuriousDragonTransaction:\n        <IND>v, r, s = create_transaction_signature(self, private_key, chain_id=chain_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]