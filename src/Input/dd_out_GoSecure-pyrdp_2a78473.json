[
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/PCAPConverter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/PCAPConverter.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/PCAPConverter.py:24:81 Unbound name [10]: Name `Dict` is used but not defined in the current scope.",
    "message": " Name `Dict` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 24,
    "warning_line": "    def __init__(self, inputFile: Path, outputPrefix: str, format: str, secrets: Dict = None, srcFilter = None, dstFilter = None, listOnly = False):"
  },
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/PCAPConverter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/PCAPConverter.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/PCAPConverter.py:49:30 Unbound name [10]: Name `List` is used but not defined in the current scope.",
    "message": " Name `List` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 49,
    "warning_line": "    def listSessions(self) -> List[Tuple[int, PCAPStream]]:"
  },
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/PCAPConverter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/PCAPConverter.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/PCAPConverter.py:49:35 Unbound name [10]: Name `Tuple` is used but not defined in the current scope.",
    "message": " Name `Tuple` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 49,
    "warning_line": "    def listSessions(self) -> List[Tuple[int, PCAPStream]]:"
  },
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/utils.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/utils.py:25:23 Incompatible parameter type [6]: Expected `typing.Tuple[typing.Optional[typing.Type[JSONEventHandler]], str]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Tuple[typing.Type[MP4EventHandler], str]`.",
    "message": " Expected `typing.Tuple[typing.Optional[typing.Type[JSONEventHandler]], str]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Tuple[typing.Type[MP4EventHandler], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "    HANDLERS[\"mp4\"] = (MP4EventHandler, \"mp4\")"
  },
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/utils.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/utils.py:47:71 Invalid type [31]: Expression `(str, str)` is not a valid type.",
    "message": " Expression `(str, str)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 47,
    "warning_line": "def createHandler(format: str, outputFileBase: str, progress=None) -> (str, str):"
  },
  {
    "project": "GoSecure/pyrdp",
    "commit": "2a78473f5468f5a5a976939697f189d42d4e4bd7",
    "filename": "pyrdp/convert/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoSecure-pyrdp/pyrdp/convert/utils.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyrdp/convert/utils.py:114:44 Invalid type [31]: Expression `(str, str, float, bool)` is not a valid type.",
    "message": " Expression `(str, str, float, bool)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 114,
    "warning_line": "def getSessionInfo(session: PacketList) -> (str, str, float, bool):"
  }
]