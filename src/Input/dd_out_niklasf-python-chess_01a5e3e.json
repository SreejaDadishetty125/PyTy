[
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3586:4 Inconsistent override [14]: `chess.SquareSet.__contains__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `x` in overriding signature.",
    "message": " `chess.SquareSet.__contains__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `x` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3586,
    "warning_line": "    def __contains__(self, square: Square) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3600:4 Inconsistent override [14]: `chess.SquareSet.add` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "message": " `chess.SquareSet.add` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3600,
    "warning_line": "    def add(self, square: Square) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3604:4 Inconsistent override [14]: `chess.SquareSet.discard` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "message": " `chess.SquareSet.discard` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3604,
    "warning_line": "    def discard(self, square: Square) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3625:4 Inconsistent override [14]: `chess.SquareSet.__or__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__or__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3625,
    "warning_line": "    def __or__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3633:4 Inconsistent override [14]: `chess.SquareSet.__and__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__and__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3633,
    "warning_line": "    def __and__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3641:4 Inconsistent override [14]: `chess.SquareSet.__sub__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__sub__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3641,
    "warning_line": "    def __sub__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3649:4 Inconsistent override [14]: `chess.SquareSet.__xor__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__xor__` overrides method defined in `typing.AbstractSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3649,
    "warning_line": "    def __xor__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3663:4 Inconsistent override [14]: `chess.SquareSet.__ior__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__ior__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3663,
    "warning_line": "    def __ior__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3671:4 Inconsistent override [14]: `chess.SquareSet.__iand__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__iand__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3671,
    "warning_line": "    def __iand__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3678:4 Inconsistent override [14]: `chess.SquareSet.__isub__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__isub__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3678,
    "warning_line": "    def __isub__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3685:4 Inconsistent override [14]: `chess.SquareSet.__ixor__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "message": " `chess.SquareSet.__ixor__` overrides method defined in `MutableSet` inconsistently. Could not find parameter `s` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3685,
    "warning_line": "    def __ixor__(self, other: IntoSquareSet) -> \"SquareSet\":",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/__init__.py:3689:4 Inconsistent override [14]: `chess.SquareSet.remove` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "message": " `chess.SquareSet.remove` overrides method defined in `MutableSet` inconsistently. Could not find parameter `value` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 3689,
    "warning_line": "    def remove(self, square: Square) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SquareSet(MutableSet[Square]):\n    \"\"\"\n",
        "source_code_len": 46,
        "target_code": "\nclass SquareSet:\n    \"\"\"\n",
        "target_code_len": 26,
        "diff_format": "@@ -3493,3 +3493,3 @@\n \n-class SquareSet(MutableSet[Square]):\n+class SquareSet:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass SquareSet(MutableSet[Square]):\n    <IND>",
        "target_code_with_indent": "\nclass SquareSet:\n    <IND>"
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "01a5e3e17c2ef960265b6308f2b2d1c6cbcc7ed8",
    "filename": "chess/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "chess/__init__.py:3740:42 Incompatible parameter type [6]: Expected `Union[Iterable[int], SupportsInt]` for 1st positional only parameter to call `SquareSet.__init__` but got `object`.",
    "message": " Expected `Union[Iterable[int], SupportsInt]` for 1st positional only parameter to call `SquareSet.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 3740,
    "warning_line": "            return self.mask == SquareSet(other).mask",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        try:\n            return self.mask == SquareSet(other).mask\n        except (TypeError, ValueError):\n",
        "source_code_len": 107,
        "target_code": "        try:\n            return self.mask == SquareSet(other).mask  # type: ignore\n        except (TypeError, ValueError):\n",
        "target_code_len": 123,
        "diff_format": "@@ -3739,3 +3739,3 @@\n         try:\n-            return self.mask == SquareSet(other).mask\n+            return self.mask == SquareSet(other).mask  # type: ignore\n         except (TypeError, ValueError):\n",
        "source_code_with_indent": "        <IND>try:\n            <IND>return self.mask == SquareSet(other).mask\n        <DED>except (TypeError, ValueError):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>try:\n            <IND>return self.mask == SquareSet(other).mask  # type: ignore\n        <DED>except (TypeError, ValueError):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]