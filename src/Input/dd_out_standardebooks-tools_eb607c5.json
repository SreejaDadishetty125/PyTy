[
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/__init__.py:162:51 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `str.replace` but got `Union[typing.List[typing.Any], str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `str.replace` but got `Union[typing.List[typing.Any], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 162,
    "warning_line": "\t\t\tprocessed_data = processed_data.replace(search, replace)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\t\telse:\n\t\t\tprocessed_data = processed_data.replace(search, replace)\n\n",
        "source_code_len": 69,
        "target_code": "\t\telse:\n\t\t\tprocessed_data = processed_data.replace(search, str(replace))\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -161,3 +161,3 @@\n \t\telse:\n-\t\t\tprocessed_data = processed_data.replace(search, replace)\n+\t\t\tprocessed_data = processed_data.replace(search, str(replace))\n \n",
        "source_code_with_indent": "  <DED><DED><DED>else:\n\t\t\t<IND>processed_data = processed_data.replace(search, replace)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  <DED><DED><DED>else:\n\t\t\t<IND>processed_data = processed_data.replace(search, str(replace))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/__init__.py:309:22 Incompatible parameter type [6]: Expected `Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `typing.Optional[str]`.",
    "message": " Expected `Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 309,
    "warning_line": "\t\tfirefox_path = Path(shutil.which(\"firefox\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\ttry:\n\t\tfirefox_path = Path(shutil.which(\"firefox\"))\n\texcept Exception:\n\t\t# Look for default mac Firefox.app path if none found in path\n",
        "source_code_len": 137,
        "target_code": "\n\twhich_firefox = shutil.which(\"firefox\")\n\tif which_firefox:\n\t\tfirefox_path = Path(which_firefox)\n\telse:\n\t\t# Look for default mac Firefox.app path if none found in path\n",
        "target_code_len": 169,
        "diff_format": "@@ -307,5 +307,6 @@\n \n-\ttry:\n-\t\tfirefox_path = Path(shutil.which(\"firefox\"))\n-\texcept Exception:\n+\twhich_firefox = shutil.which(\"firefox\")\n+\tif which_firefox:\n+\t\tfirefox_path = Path(which_firefox)\n+\telse:\n \t\t# Look for default mac Firefox.app path if none found in path\n",
        "source_code_with_indent": "\n try:\n\t\t<IND>firefox_path = Path(shutil.which(\"firefox\"))\n <DED>except Exception:\n  # Look for default mac Firefox.app path if none found in path\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n which_firefox = shutil.which(\"firefox\")\n if which_firefox:\n\t\t<IND>firefox_path = Path(which_firefox)\n <DED>else:\n  # Look for default mac Firefox.app path if none found in path\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/__init__.py:316:1 Incompatible return type [7]: Expected `str` but got `Path`.",
    "message": " Expected `str` but got `Path`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 316,
    "warning_line": "\treturn firefox_path",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_firefox_path() -> str:\n\t\"\"\"\n",
        "source_code_len": 37,
        "target_code": "\ndef get_firefox_path() -> Path:\n\t\"\"\"\n",
        "target_code_len": 38,
        "diff_format": "@@ -302,3 +302,3 @@\n \n-def get_firefox_path() -> str:\n+def get_firefox_path() -> Path:\n \t\"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_firefox_path() -> str:\n\t<IND>",
        "target_code_with_indent": "\n<DED>def get_firefox_path() -> Path:\n\t<IND>"
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/formatting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/formatting.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/formatting.py:365:22 Incompatible parameter type [6]: Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `typing.Optional[str]`.",
    "message": " Expected `typing.Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 365,
    "warning_line": "\t\txmllint_path = Path(shutil.which(\"xmllint\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\ttry:\n\t\txmllint_path = Path(shutil.which(\"xmllint\"))\n\texcept Exception:\n\t\traise se.MissingDependencyException(\"Couldn\u2019t locate xmllint. Is it installed?\")\n",
        "source_code_len": 156,
        "target_code": "\n\twhich_xmllint = shutil.which(\"xmllint\")\n\tif which_xmllint:\n\t\txmllint_path = Path(which_xmllint)\n\telse:\n\t\traise se.MissingDependencyException(\"Couldn\u2019t locate xmllint. Is it installed?\")\n",
        "target_code_len": 188,
        "diff_format": "@@ -363,5 +363,6 @@\n \n-\ttry:\n-\t\txmllint_path = Path(shutil.which(\"xmllint\"))\n-\texcept Exception:\n+\twhich_xmllint = shutil.which(\"xmllint\")\n+\tif which_xmllint:\n+\t\txmllint_path = Path(which_xmllint)\n+\telse:\n \t\traise se.MissingDependencyException(\"Couldn\u2019t locate xmllint. Is it installed?\")\n",
        "source_code_with_indent": "\n try:\n\t\t<IND>xmllint_path = Path(shutil.which(\"xmllint\"))\n <DED>except Exception:\n\t\t<IND>raise se.MissingDependencyException(\"Couldn\u2019t locate xmllint. Is it installed?\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n which_xmllint = shutil.which(\"xmllint\")\n if which_xmllint:\n\t\t<IND>xmllint_path = Path(which_xmllint)\n <DED>else:\n\t\t<IND>raise se.MissingDependencyException(\"Couldn\u2019t locate xmllint. Is it installed?\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/formatting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/formatting.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/formatting.py:719:1 Incompatible variable type [9]: number is declared to have type `str` but is used as type `int`.",
    "message": " number is declared to have type `str` but is used as type `int`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 719,
    "warning_line": "\tnumber = int(number)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\tnumber = int(number)\n\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_len": 136,
        "target_code": "\n\tvalue = int(number)\n\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_len": 131,
        "diff_format": "@@ -718,4 +719,4 @@\n \n-\tnumber = int(number)\n-\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n+\tvalue = int(number)\n+\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n \n",
        "source_code_with_indent": "\n number = int(number)\n return \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n value = int(number)\n return \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/formatting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/formatting.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/formatting.py:720:49 Unsupported operand [58]: `/` is not supported for operand types `str` and `int`.",
    "message": " `/` is not supported for operand types `str` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 720,
    "warning_line": "\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\tnumber = int(number)\n\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_len": 136,
        "target_code": "\n\tvalue = int(number)\n\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_len": 131,
        "diff_format": "@@ -718,4 +719,4 @@\n \n-\tnumber = int(number)\n-\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n+\tvalue = int(number)\n+\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n \n",
        "source_code_with_indent": "\n number = int(number)\n return \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n value = int(number)\n return \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "standardebooks/tools",
    "commit": "eb607c5540f4c2cf139a33c20e2c1cd1938713d3",
    "filename": "se/formatting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/standardebooks-tools/se/formatting.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "se/formatting.py:720:76 Unsupported operand [58]: `<` is not supported for operand types `str` and `int`.",
    "message": " `<` is not supported for operand types `str` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 720,
    "warning_line": "\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\tnumber = int(number)\n\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_len": 136,
        "target_code": "\n\tvalue = int(number)\n\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_len": 131,
        "diff_format": "@@ -718,4 +719,4 @@\n \n-\tnumber = int(number)\n-\treturn \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n+\tvalue = int(number)\n+\treturn \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n \n",
        "source_code_with_indent": "\n number = int(number)\n return \"%d%s\" % (number, \"tsnrhtdd\"[(math.floor(number / 10) % 10 != 1) * (number % 10 < 4) * number % 10::4])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n value = int(number)\n return \"%d%s\" % (value, \"tsnrhtdd\"[(math.floor(value / 10) % 10 != 1) * (value % 10 < 4) * value % 10::4])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]