[
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/cli/volshell/generic.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/cli/volshell/generic.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/cli/volshell/generic.py:302:33 Incompatible parameter type [6]: Expected `interfaces.renderers.TreeGrid` for 1st positional only parameter to call `Volshell.render_treegrid` but got `Optional[interfaces.renderers.TreeGrid]`.",
    "message": " Expected `interfaces.renderers.TreeGrid` for 1st positional only parameter to call `Volshell.render_treegrid` but got `Optional[interfaces.renderers.TreeGrid]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 302,
    "warning_line": "            self.render_treegrid(self.generate_treegrid(plugin, **kwargs))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if treegrid is not None:\n            self.render_treegrid(self.generate_treegrid(plugin, **kwargs))\n\n",
        "source_code_len": 109,
        "target_code": "        if treegrid is not None:\n            self.render_treegrid(treegrid)\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -301,3 +301,3 @@\n         if treegrid is not None:\n-            self.render_treegrid(self.generate_treegrid(plugin, **kwargs))\n+            self.render_treegrid(treegrid)\n \n",
        "source_code_with_indent": "        if treegrid is not None:\n            <IND>self.render_treegrid(self.generate_treegrid(plugin, **kwargs))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if treegrid is not None:\n            <IND>self.render_treegrid(treegrid)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/layers/qemu.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/layers/qemu.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/layers/qemu.py:102:20 Incompatible attribute type [8]: Attribute `_current_segment_name` declared in class `QemuSuspendLayer` has type `str` but is used as type `bytes`.",
    "message": " Attribute `_current_segment_name` declared in class `QemuSuspendLayer` has type `str` but is used as type `bytes`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 102,
    "warning_line": "                    self._current_segment_name = base_layer.read(index + 1, namelen)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#\n\nimport json\nimport math\nfrom typing import Optional, Dict, Any, Tuple, List\n\n",
        "source_code_len": 80,
        "target_code": "#\nimport functools\nimport json\nimport math\nfrom typing import Optional, Dict, Any, Tuple, List, Set\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -3,6 +3,6 @@\n #\n-\n+import functools\n import json\n import math\n-from typing import Optional, Dict, Any, Tuple, List\n+from typing import Optional, Dict, Any, Tuple, List, Set\n \n",
        "source_code_with_indent": "#\n\nimport json\nimport math\nfrom typing import Optional, Dict, Any, Tuple, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#\nimport functools\nimport json\nimport math\nfrom typing import Optional, Dict, Any, Tuple, List, Set\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._configuration = None\n        self._compressed = set()\n        self._current_segment_name = ''\n        super().__init__(context = context, config_path = config_path, name = name, metadata = metadata)\n",
        "source_code_len": 213,
        "target_code": "        self._configuration = None\n        self._compressed = set()  # type: Set[int]\n        self._current_segment_name = b''\n        super().__init__(context = context, config_path = config_path, name = name, metadata = metadata)\n",
        "target_code_len": 232,
        "diff_format": "@@ -42,4 +42,4 @@\n         self._configuration = None\n-        self._compressed = set()\n-        self._current_segment_name = ''\n+        self._compressed = set()  # type: Set[int]\n+        self._current_segment_name = b''\n         super().__init__(context = context, config_path = config_path, name = name, metadata = metadata)\n",
        "source_code_with_indent": "        self._configuration = None\n        self._compressed = set()\n        self._current_segment_name = ''\n        super().__init__(context = context, config_path = config_path, name = name, metadata = metadata)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._configuration = None\n        self._compressed = set()  # type: Set[int]\n        self._current_segment_name = b''\n        super().__init__(context = context, config_path = config_path, name = name, metadata = metadata)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/plugins/windows/registry/printkey.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/plugins/windows/registry/printkey.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/plugins/windows/registry/printkey.py:141:68 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "                            value_data = format_hints.MultiTypeData(value_data, show_hex = True)"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/plugins/windows/registry/printkey.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/plugins/windows/registry/printkey.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/plugins/windows/registry/printkey.py:143:68 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 143,
    "warning_line": "                            value_data = format_hints.MultiTypeData(value_data,"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/plugins/windows/registry/printkey.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/plugins/windows/registry/printkey.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/plugins/windows/registry/printkey.py:147:68 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `format_hints.MultiTypeData.__init__` but got `Union[bytes, interfaces.renderers.BaseAbsentValue]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 147,
    "warning_line": "                            value_data = format_hints.MultiTypeData(value_data, encoding = 'utf-16-le')"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/renderers/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/renderers/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/renderers/__init__.py:185:4 Inconsistent override [15]: `volatility.framework.renderers.TreeGrid.populate` overrides method defined in `renderers.TreeGrid` inconsistently. Returned type `Optional[Exception]` is not a subtype of the overridden return `None`.",
    "message": " `volatility.framework.renderers.TreeGrid.populate` overrides method defined in `renderers.TreeGrid` inconsistently. Returned type `Optional[Exception]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 185,
    "warning_line": "    def populate(self,"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/symbols/mac/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/mac/__init__.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/mac/__init__.py:42:8 Incompatible return type [7]: Expected `Iterator[typing.Any]` but got `typing.List[typing.Tuple[interfaces.objects.ObjectInterface, int, int]]`.",
    "message": " Expected `Iterator[typing.Any]` but got `typing.List[typing.Tuple[interfaces.objects.ObjectInterface, int, int]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 42,
    "warning_line": "        return [(objects.utility.array_to_string(mod.name), mod.address & mask, (mod.address & mask) + mod.size)"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/symbols/mac/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/mac/__init__.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/mac/__init__.py:69:15 Unsupported operand [58]: `+` is not supported for operand types `typing.List[typing.Tuple[str, typing.Any, typing.Any]]` and `Iterator[typing.Any]`.",
    "message": " `+` is not supported for operand types `typing.List[typing.Tuple[str, typing.Any, typing.Any]]` and `Iterator[typing.Any]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 69,
    "warning_line": "               MacUtilities.mask_mods_list(context, layer_name, mods_list)"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/symbols/windows/extensions/pool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/windows/extensions/pool.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/windows/extensions/pool.py:108:70 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `Optional[int]`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "                        padding_length -= lengths_of_optional_headers[padding_available]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                            \"<I\", infomask_data[addr - optional_headers_length:addr - optional_headers_length + 4])[0]\n                        padding_length -= lengths_of_optional_headers[padding_available]\n\n",
        "source_code_len": 209,
        "target_code": "                            \"<I\", infomask_data[addr - optional_headers_length:addr - optional_headers_length + 4])[0]\n                        padding_length -= lengths_of_optional_headers[padding_available or 0]\n\n",
        "target_code_len": 214,
        "diff_format": "@@ -107,3 +107,3 @@\n                             \"<I\", infomask_data[addr - optional_headers_length:addr - optional_headers_length + 4])[0]\n-                        padding_length -= lengths_of_optional_headers[padding_available]\n+                        padding_length -= lengths_of_optional_headers[padding_available or 0]\n \n",
        "source_code_with_indent": "                            \"<I\", infomask_data[addr - optional_headers_length:addr - optional_headers_length + 4])[0]\n                        padding_length -= lengths_of_optional_headers[padding_available]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                            \"<I\", infomask_data[addr - optional_headers_length:addr - optional_headers_length + 4])[0]\n                        padding_length -= lengths_of_optional_headers[padding_available or 0]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/symbols/windows/pdbconv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/windows/pdbconv.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/windows/pdbconv.py:372:28 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 372,
    "warning_line": "            type_references[name] = len(self.types)"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "8e420cbe62b70d8b9ee2a2cad26399e0df24018e",
    "filename": "volatility/framework/symbols/windows/pdbconv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/windows/pdbconv.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/windows/pdbconv.py:373:31 Incompatible parameter type [6]: Expected `Tuple[interfaces.objects.ObjectInterface, str, interfaces.objects.ObjectInterface]` for 1st positional only parameter to call `list.append` but got `Tuple[Optional[interfaces.objects.ObjectInterface], Optional[str], Union[None, List[typing.Any], interfaces.objects.ObjectInterface]]`.",
    "message": " Expected `Tuple[interfaces.objects.ObjectInterface, str, interfaces.objects.ObjectInterface]` for 1st positional only parameter to call `list.append` but got `Tuple[Optional[interfaces.objects.ObjectInterface], Optional[str], Union[None, List[typing.Any], interfaces.objects.ObjectInterface]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 373,
    "warning_line": "            self.types.append((leaf_type, name, value))"
  }
]