[
  {
    "project": "rigetti/pyquil",
    "commit": "28156ae2b71c697213dce8b122b23b43ae9a1786",
    "filename": "pyquil/api/_compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rigetti-pyquil/pyquil/api/_compiler.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyquil/api/_compiler.py:104:8 Incompatible return type [7]: Expected `List[Optional[Tuple[int, int]]]` but got `List[Optional[int]]`.",
    "message": " Expected `List[Optional[Tuple[int, int]]]` but got `List[Optional[int]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 104,
    "warning_line": "        return [ro_sources.get(i) for i in range(ro_size)]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    measures_by_qubit = Counter()\n    ro_sources: Dict[int, int] = {}\n\n",
        "source_code_len": 72,
        "target_code": "\n    measures_by_qubit: Dict[int, int] = Counter()\n    ro_sources: Dict[int, Tuple[int, int]] = {}\n\n",
        "target_code_len": 100,
        "diff_format": "@@ -85,4 +85,4 @@\n \n-    measures_by_qubit = Counter()\n-    ro_sources: Dict[int, int] = {}\n+    measures_by_qubit: Dict[int, int] = Counter()\n+    ro_sources: Dict[int, Tuple[int, int]] = {}\n \n",
        "source_code_with_indent": "\n    <DED><DED>measures_by_qubit = Counter()\n    ro_sources: Dict[int, int] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>measures_by_qubit: Dict[int, int] = Counter()\n    ro_sources: Dict[int, Tuple[int, int]] = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]