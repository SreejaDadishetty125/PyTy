[
  {
    "project": "encode/httpcore",
    "commit": "40f9663b3b745a45dc61877522ca4efc2bfefbf2",
    "filename": "tests/async_tests/test_interfaces.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpcore/tests/async_tests/test_interfaces.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/async_tests/test_interfaces.py:192:8 Incompatible parameter type [6]: Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._async.http_proxy.AsyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "message": " Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._async.http_proxy.AsyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 192,
    "warning_line": "        proxy_server,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import httpcore\n\n",
        "source_code_len": 17,
        "target_code": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -6,2 +5,3 @@\n import httpcore\n+from httpcore._types import URL\n \n",
        "source_code_with_indent": "import httpcore\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@pytest.mark.usefixtures(\"async_environment\")\nasync def test_http_proxy(\n    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n) -> None:\n    method = b\"GET\"\n",
        "source_code_len": 171,
        "target_code": "@pytest.mark.usefixtures(\"async_environment\")\nasync def test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n    method = b\"GET\"\n",
        "target_code_len": 137,
        "diff_format": "@@ -182,5 +182,3 @@\n @pytest.mark.usefixtures(\"async_environment\")\n-async def test_http_proxy(\n-    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n-) -> None:\n+async def test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n     method = b\"GET\"\n",
        "source_code_with_indent": "@pytest.mark.usefixtures(\"async_environment\")\nasync def test_http_proxy(\n    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n) -> None:\n    <IND>method = b\"GET\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "@pytest.mark.usefixtures(\"async_environment\")\nasync def test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n    <IND>method = b\"GET\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "encode/httpcore",
    "commit": "40f9663b3b745a45dc61877522ca4efc2bfefbf2",
    "filename": "tests/async_tests/test_interfaces.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpcore/tests/async_tests/test_interfaces.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/async_tests/test_interfaces.py:223:8 Incompatible parameter type [6]: Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._async.http_proxy.AsyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "message": " Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._async.http_proxy.AsyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 223,
    "warning_line": "        proxy_server,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import httpcore\n\n",
        "source_code_len": 17,
        "target_code": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -6,2 +5,3 @@\n import httpcore\n+from httpcore._types import URL\n \n",
        "source_code_with_indent": "import httpcore\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "async def test_proxy_https_requests(\n    proxy_server: typing.Tuple[bytes, bytes, int],\n    ca_ssl_context: ssl.SSLContext,\n    proxy_mode: str,\n    http2: bool,\n) -> None:\n",
        "source_code_len": 173,
        "target_code": "async def test_proxy_https_requests(\n    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n) -> None:\n",
        "target_code_len": 133,
        "diff_format": "@@ -211,6 +209,3 @@\n async def test_proxy_https_requests(\n-    proxy_server: typing.Tuple[bytes, bytes, int],\n-    ca_ssl_context: ssl.SSLContext,\n-    proxy_mode: str,\n-    http2: bool,\n+    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n ) -> None:\n",
        "source_code_with_indent": "async def test_proxy_https_requests(\n    proxy_server: typing.Tuple[bytes, bytes, int],\n    ca_ssl_context: ssl.SSLContext,\n    proxy_mode: str,\n    http2: bool,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "async def test_proxy_https_requests(\n    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "encode/httpcore",
    "commit": "40f9663b3b745a45dc61877522ca4efc2bfefbf2",
    "filename": "tests/sync_tests/test_interfaces.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpcore/tests/sync_tests/test_interfaces.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/sync_tests/test_interfaces.py:192:8 Incompatible parameter type [6]: Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._sync.http_proxy.SyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "message": " Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._sync.http_proxy.SyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 192,
    "warning_line": "        proxy_server,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import httpcore\n\n",
        "source_code_len": 17,
        "target_code": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -6,2 +5,3 @@\n import httpcore\n+from httpcore._types import URL\n \n",
        "source_code_with_indent": "import httpcore\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef test_http_proxy(\n    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n) -> None:\n    method = b\"GET\"\n",
        "source_code_len": 120,
        "target_code": "\ndef test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n    method = b\"GET\"\n",
        "target_code_len": 86,
        "diff_format": "@@ -182,5 +182,3 @@\n \n-def test_http_proxy(\n-    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n-) -> None:\n+def test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n     method = b\"GET\"\n",
        "source_code_with_indent": "\ndef test_http_proxy(\n    proxy_server: typing.Tuple[bytes, bytes, int], proxy_mode: str\n) -> None:\n    <IND>method = b\"GET\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef test_http_proxy(proxy_server: URL, proxy_mode: str) -> None:\n    <IND>method = b\"GET\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "encode/httpcore",
    "commit": "40f9663b3b745a45dc61877522ca4efc2bfefbf2",
    "filename": "tests/sync_tests/test_interfaces.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpcore/tests/sync_tests/test_interfaces.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/sync_tests/test_interfaces.py:223:8 Incompatible parameter type [6]: Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._sync.http_proxy.SyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "message": " Expected `typing.Tuple[bytes, bytes, typing.Optional[int], bytes]` for 1st positional only parameter to call `httpcore._sync.http_proxy.SyncHTTPProxy.__init__` but got `typing.Tuple[bytes, bytes, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 223,
    "warning_line": "        proxy_server,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import httpcore\n\n",
        "source_code_len": 17,
        "target_code": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -6,2 +5,3 @@\n import httpcore\n+from httpcore._types import URL\n \n",
        "source_code_with_indent": "import httpcore\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import httpcore\nfrom httpcore._types import URL\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def test_proxy_https_requests(\n    proxy_server: typing.Tuple[bytes, bytes, int],\n    ca_ssl_context: ssl.SSLContext,\n    proxy_mode: str,\n    http2: bool,\n) -> None:\n",
        "source_code_len": 167,
        "target_code": "def test_proxy_https_requests(\n    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n) -> None:\n",
        "target_code_len": 127,
        "diff_format": "@@ -211,6 +209,3 @@\n def test_proxy_https_requests(\n-    proxy_server: typing.Tuple[bytes, bytes, int],\n-    ca_ssl_context: ssl.SSLContext,\n-    proxy_mode: str,\n-    http2: bool,\n+    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n ) -> None:\n",
        "source_code_with_indent": "def test_proxy_https_requests(\n    proxy_server: typing.Tuple[bytes, bytes, int],\n    ca_ssl_context: ssl.SSLContext,\n    proxy_mode: str,\n    http2: bool,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def test_proxy_https_requests(\n    proxy_server: URL, ca_ssl_context: ssl.SSLContext, proxy_mode: str, http2: bool,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]