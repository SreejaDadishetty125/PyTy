[
  {
    "project": "slackapi/bolt-python",
    "commit": "7f446b2b632d71310184cde7cde32e55034fe145",
    "filename": "slack_bolt/adapter/aws_lambda/local_lambda_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/adapter/aws_lambda/local_lambda_client.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/adapter/aws_lambda/local_lambda_client.py:17:8 Incompatible variable type [9]: FunctionName is declared to have type `str` but is used as type `None`.",
    "message": " FunctionName is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 17,
    "warning_line": "        FunctionName: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        FunctionName: str = None,\n        InvocationType: str = \"Event\",\n",
        "source_code_len": 87,
        "target_code": "        self,\n        FunctionName: str,\n        InvocationType: str = \"Event\",\n",
        "target_code_len": 80,
        "diff_format": "@@ -16,3 +16,3 @@\n         self,\n-        FunctionName: str = None,\n+        FunctionName: str,\n         InvocationType: str = \"Event\",\n",
        "source_code_with_indent": "        self,\n        FunctionName: str = None,\n        InvocationType: str = \"Event\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        FunctionName: str,\n        InvocationType: str = \"Event\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "7f446b2b632d71310184cde7cde32e55034fe145",
    "filename": "slack_bolt/app/app.py",
    "min_patch_found": false,
    "full_warning_msg": "slack_bolt/app/app.py:344:25 Incompatible parameter type [6]: Expected `str` for 1st parameter `verification_token` to call `slack_bolt.middleware.ssl_check.ssl_check.SslCheck.__init__` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "7f446b2b632d71310184cde7cde32e55034fe145",
    "filename": "slack_bolt/app/async_app.py",
    "min_patch_found": false,
    "full_warning_msg": "slack_bolt/app/async_app.py:369:30 Incompatible parameter type [6]: Expected `str` for 1st parameter `verification_token` to call `slack_bolt.middleware.ssl_check.ssl_check.SslCheck.__init__` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "7f446b2b632d71310184cde7cde32e55034fe145",
    "filename": "slack_bolt/middleware/ssl_check/ssl_check.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/middleware/ssl_check/ssl_check.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/middleware/ssl_check/ssl_check.py:10:23 Incompatible variable type [9]: verification_token is declared to have type `str` but is used as type `None`.",
    "message": " verification_token is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 10,
    "warning_line": "    def __init__(self, verification_token: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Callable\n\n",
        "source_code_len": 29,
        "target_code": "from logging import Logger\nfrom typing import Callable, Optional\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -1,2 +1,3 @@\n-from typing import Callable\n+from logging import Logger\n+from typing import Callable, Optional\n \n",
        "source_code_with_indent": "from typing import Callable\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from logging import Logger\nfrom typing import Callable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class SslCheck(Middleware):  # type: ignore\n    def __init__(self, verification_token: str = None):\n        \"\"\"Handles `ssl_check` requests.\n",
        "source_code_len": 141,
        "target_code": "class SslCheck(Middleware):  # type: ignore\n    verification_token: Optional[str]\n    logger: Logger\n\n    def __init__(self, verification_token: Optional[str] = None):\n        \"\"\"Handles `ssl_check` requests.\n",
        "target_code_len": 209,
        "diff_format": "@@ -9,3 +10,6 @@\n class SslCheck(Middleware):  # type: ignore\n-    def __init__(self, verification_token: str = None):\n+    verification_token: Optional[str]\n+    logger: Logger\n+\n+    def __init__(self, verification_token: Optional[str] = None):\n         \"\"\"Handles `ssl_check` requests.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "class SslCheck(Middleware):  # type: ignore\n    <IND>def __init__(self, verification_token: str = None):\n        <IND>",
        "target_code_with_indent": "class SslCheck(Middleware):  # type: ignore\n    <IND>verification_token: Optional[str]\n    logger: Logger\n\n    def __init__(self, verification_token: Optional[str] = None):\n        <IND>"
      }
    ]
  }
]