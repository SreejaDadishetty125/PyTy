[
  {
    "project": "ebellocchia/bip_utils",
    "commit": "73f03e9e271df6e04b389349956651291e7121e0",
    "filename": "bip_utils/ecc/sr25519.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ebellocchia-bip_utils/bip_utils/ecc/sr25519.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bip_utils/ecc/sr25519.py:35:4 Incompatible attribute type [8]: Attribute `GENERATOR` declared in class `Sr25519Const` has type `Sr25519Point` but is used as type `bip_utils.ecc.ikeys.IPoint`.",
    "message": " Attribute `GENERATOR` declared in class `Sr25519Const` has type `Sr25519Point` but is used as type `bip_utils.ecc.ikeys.IPoint`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 35,
    "warning_line": "    GENERATOR: Sr25519Point = Sr25519Point.FromCoordinates(0, 0)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from bip_utils.ecc.elliptic_curve import EllipticCurve\nfrom bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey\n\n",
        "source_code_len": 145,
        "target_code": "from bip_utils.ecc.elliptic_curve import EllipticCurve\nfrom bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey, IPoint\n\n",
        "target_code_len": 153,
        "diff_format": "@@ -23,3 +23,3 @@\n from bip_utils.ecc.elliptic_curve import EllipticCurve\n-from bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey\n+from bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey, IPoint\n \n",
        "source_code_with_indent": "from bip_utils.ecc.elliptic_curve import EllipticCurve\nfrom bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from bip_utils.ecc.elliptic_curve import EllipticCurve\nfrom bip_utils.ecc.sr25519_keys import Sr25519Point, Sr25519PublicKey, Sr25519PrivateKey, IPoint\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # Curve generator point (not needed)\n    GENERATOR: Sr25519Point = Sr25519Point.FromCoordinates(0, 0)\n\n",
        "source_code_len": 107,
        "target_code": "    # Curve generator point (not needed)\n    GENERATOR: IPoint = Sr25519Point.FromCoordinates(0, 0)\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -34,3 +34,3 @@\n     # Curve generator point (not needed)\n-    GENERATOR: Sr25519Point = Sr25519Point.FromCoordinates(0, 0)\n+    GENERATOR: IPoint = Sr25519Point.FromCoordinates(0, 0)\n \n",
        "source_code_with_indent": "    # Curve generator point (not needed)\n    GENERATOR: Sr25519Point = Sr25519Point.FromCoordinates(0, 0)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # Curve generator point (not needed)\n    GENERATOR: IPoint = Sr25519Point.FromCoordinates(0, 0)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]