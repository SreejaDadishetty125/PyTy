[
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:101:33 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 101,
    "warning_line": "            \"task\", to_register, name, assert_type=EmbodiedTask",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:133:32 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 133,
    "warning_line": "            \"sim\", to_register, name, assert_type=Simulator",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:146:35 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 146,
    "warning_line": "            \"sensor\", to_register, name, assert_type=Sensor",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:159:36 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 159,
    "warning_line": "            \"measure\", to_register, name, assert_type=Measure",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:177:40 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 177,
    "warning_line": "            \"task_action\", to_register, name, assert_type=Action",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:190:36 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 190,
    "warning_line": "            \"dataset\", to_register, name, assert_type=Dataset",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat/core/registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat/core/registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat/core/registry.py:207:12 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 207,
    "warning_line": "            name,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_len": 99,
        "target_code": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_len": 109,
        "diff_format": "@@ -53,3 +46,3 @@\n         to_register: Optional[Any],\n-        name: str,\n+        name: Optional[str],\n         assert_type: Optional[Type] = None,\n",
        "source_code_with_indent": "        to_register: Optional[Any],\n        name: str,\n        assert_type: Optional[Type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        to_register: Optional[Any],\n        name: Optional[str],\n        assert_type: Optional[Type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/baseline_registry.py",
    "min_patch_found": false,
    "full_warning_msg": "habitat_baselines/common/baseline_registry.py:42:36 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/baseline_registry.py",
    "min_patch_found": false,
    "full_warning_msg": "habitat_baselines/common/baseline_registry.py:61:54 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/baseline_registry.py",
    "min_patch_found": false,
    "full_warning_msg": "habitat_baselines/common/baseline_registry.py:96:35 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/baseline_registry.py",
    "min_patch_found": false,
    "full_warning_msg": "habitat_baselines/common/baseline_registry.py:139:12 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Registry._register_impl` but got `Optional[str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/obs_transformers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat_baselines/common/obs_transformers.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat_baselines/common/obs_transformers.py:160:8 Incompatible attribute type [8]: Attribute `_size` declared in class `CenterCropper` has type `Union[Tuple[int], int]` but is used as type `Union[Tuple[int], Tuple[int, int]]`.",
    "message": " Attribute `_size` declared in class `CenterCropper` has type `Union[Tuple[int], int]` but is used as type `Union[Tuple[int], Tuple[int, int]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 160,
    "warning_line": "        self._size = size",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        size: Union[int, Tuple[int]],\n        channels_last: bool = True,\n",
        "source_code_len": 88,
        "target_code": "        self,\n        size: Union[int, Tuple[int, int]],\n        channels_last: bool = True,\n",
        "target_code_len": 93,
        "diff_format": "@@ -145,3 +145,3 @@\n         self,\n-        size: Union[int, Tuple[int]],\n+        size: Union[int, Tuple[int, int]],\n         channels_last: bool = True,\n",
        "source_code_with_indent": "        self,\n        size: Union[int, Tuple[int]],\n        channels_last: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        size: Union[int, Tuple[int, int]],\n        channels_last: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/obs_transformers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat_baselines/common/obs_transformers.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat_baselines/common/obs_transformers.py:192:12 Incompatible parameter type [6]: Expected `Union[Tuple[int, int], int]` for 2nd positional only parameter to call `center_crop` but got `Union[Tuple[int], int]`.",
    "message": " Expected `Union[Tuple[int, int], int]` for 2nd positional only parameter to call `center_crop` but got `Union[Tuple[int], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 192,
    "warning_line": "            self._size,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        size: Union[int, Tuple[int]],\n        channels_last: bool = True,\n",
        "source_code_len": 88,
        "target_code": "        self,\n        size: Union[int, Tuple[int, int]],\n        channels_last: bool = True,\n",
        "target_code_len": 93,
        "diff_format": "@@ -145,3 +145,3 @@\n         self,\n-        size: Union[int, Tuple[int]],\n+        size: Union[int, Tuple[int, int]],\n         channels_last: bool = True,\n",
        "source_code_with_indent": "        self,\n        size: Union[int, Tuple[int]],\n        channels_last: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        size: Union[int, Tuple[int, int]],\n        channels_last: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/habitat-lab",
    "commit": "f89d53ea47e784fdf6e78fadccded645bb5913a7",
    "filename": "habitat_baselines/common/obs_transformers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-habitat-lab/habitat_baselines/common/obs_transformers.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "habitat_baselines/common/obs_transformers.py:1167:12 Incompatible parameter type [6]: Expected `Tuple[int]` for 3rd positional only parameter to call `ProjectionTransformer.__init__` but got `Tuple[int, int]`.",
    "message": " Expected `Tuple[int]` for 3rd positional only parameter to call `ProjectionTransformer.__init__` but got `Tuple[int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1167,
    "warning_line": "            img_shape,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        sensor_uuids: List[str],\n        image_shape: Tuple[int],\n        channels_last: bool = False,\n",
        "source_code_len": 103,
        "target_code": "        sensor_uuids: List[str],\n        image_shape: Tuple[int, int],\n        channels_last: bool = False,\n",
        "target_code_len": 108,
        "diff_format": "@@ -859,3 +861,3 @@\n         sensor_uuids: List[str],\n-        image_shape: Tuple[int],\n+        image_shape: Tuple[int, int],\n         channels_last: bool = False,\n",
        "source_code_with_indent": "        sensor_uuids: List[str],\n        image_shape: Tuple[int],\n        channels_last: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        sensor_uuids: List[str],\n        image_shape: Tuple[int, int],\n        channels_last: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.sensor_uuids: List[str] = sensor_uuids\n        self.img_shape: Tuple[int] = image_shape\n        self.channels_last: bool = channels_last\n",
        "source_code_len": 150,
        "target_code": "        self.sensor_uuids: List[str] = sensor_uuids\n        self.img_shape: Tuple[int, int] = image_shape\n        self.channels_last: bool = channels_last\n",
        "target_code_len": 155,
        "diff_format": "@@ -881,3 +883,3 @@\n         self.sensor_uuids: List[str] = sensor_uuids\n-        self.img_shape: Tuple[int] = image_shape\n+        self.img_shape: Tuple[int, int] = image_shape\n         self.channels_last: bool = channels_last\n",
        "source_code_with_indent": "        self.sensor_uuids: List[str] = sensor_uuids\n        self.img_shape: Tuple[int] = image_shape\n        self.channels_last: bool = channels_last\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.sensor_uuids: List[str] = sensor_uuids\n        self.img_shape: Tuple[int, int] = image_shape\n        self.channels_last: bool = channels_last\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        sensor_uuids: List[str],\n        eq_shape: Tuple[int],\n        channels_last: bool = False,\n",
        "source_code_len": 100,
        "target_code": "        sensor_uuids: List[str],\n        eq_shape: Tuple[int, int],\n        channels_last: bool = False,\n",
        "target_code_len": 105,
        "diff_format": "@@ -966,3 +968,3 @@\n         sensor_uuids: List[str],\n-        eq_shape: Tuple[int],\n+        eq_shape: Tuple[int, int],\n         channels_last: bool = False,\n",
        "source_code_with_indent": "        sensor_uuids: List[str],\n        eq_shape: Tuple[int],\n        channels_last: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        sensor_uuids: List[str],\n        eq_shape: Tuple[int, int],\n        channels_last: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        sensor_uuids: List[str],\n        fish_shape: Tuple[int],\n        fish_fov: float,\n",
        "source_code_len": 90,
        "target_code": "        sensor_uuids: List[str],\n        fish_shape: Tuple[int, int],\n        fish_fov: float,\n",
        "target_code_len": 95,
        "diff_format": "@@ -1060,3 +1062,3 @@\n         sensor_uuids: List[str],\n-        fish_shape: Tuple[int],\n+        fish_shape: Tuple[int, int],\n         fish_fov: float,\n",
        "source_code_with_indent": "        sensor_uuids: List[str],\n        fish_shape: Tuple[int],\n        fish_fov: float,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        sensor_uuids: List[str],\n        fish_shape: Tuple[int, int],\n        fish_fov: float,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]