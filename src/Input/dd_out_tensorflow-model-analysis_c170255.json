[
  {
    "project": "tensorflow/model-analysis",
    "commit": "c170255953a08623d4e8899191274da11d9b7a7f",
    "filename": "tensorflow_model_analysis/model_util.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/model_util.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/model_util.py:448:6 Incompatible return type [7]: Expected `Dict[str, typing.Any]` but got `List[typing.Any]`.",
    "message": " Expected `Dict[str, typing.Any]` but got `List[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 448,
    "warning_line": "      return result",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def _batch_reducible_process(\n      self, batched_extract: types.Extracts) -> types.Extracts:\n    raise NotImplementedError('Subclasses are expected to override this.')\n\n  def process(self, element: types.Extracts) -> types.Extracts:\n    batch_size = element[constants.ARROW_RECORD_BATCH_KEY].num_rows\n",
        "source_code_len": 304,
        "target_code": "  def _batch_reducible_process(\n      self, batched_extract: types.Extracts) -> Sequence[types.Extracts]:\n    raise NotImplementedError('Subclasses are expected to override this.')\n\n  def process(self, element: types.Extracts) -> Sequence[types.Extracts]:\n    batch_size = element[constants.ARROW_RECORD_BATCH_KEY].num_rows\n",
        "target_code_len": 324,
        "diff_format": "@@ -419,6 +419,6 @@\n   def _batch_reducible_process(\n-      self, batched_extract: types.Extracts) -> types.Extracts:\n+      self, batched_extract: types.Extracts) -> Sequence[types.Extracts]:\n     raise NotImplementedError('Subclasses are expected to override this.')\n \n-  def process(self, element: types.Extracts) -> types.Extracts:\n+  def process(self, element: types.Extracts) -> Sequence[types.Extracts]:\n     batch_size = element[constants.ARROW_RECORD_BATCH_KEY].num_rows\n",
        "source_code_with_indent": "  <DED>def _batch_reducible_process(\n      self, batched_extract: types.Extracts) -> types.Extracts:\n    <IND>raise NotImplementedError('Subclasses are expected to override this.')\n\n  <DED>def process(self, element: types.Extracts) -> types.Extracts:\n    <IND>batch_size = element[constants.ARROW_RECORD_BATCH_KEY].num_rows\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  <DED>def _batch_reducible_process(\n      self, batched_extract: types.Extracts) -> Sequence[types.Extracts]:\n    <IND>raise NotImplementedError('Subclasses are expected to override this.')\n\n  <DED>def process(self, element: types.Extracts) -> Sequence[types.Extracts]:\n    <IND>batch_size = element[constants.ARROW_RECORD_BATCH_KEY].num_rows\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]