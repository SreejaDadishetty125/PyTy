[
  {
    "project": "nextcloud/appstore",
    "commit": "bb114f8db802f8f54df1906288924d737224a6db",
    "filename": "nextcloudappstore/core/scaffolding/forms.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nextcloud-appstore/nextcloudappstore/core/scaffolding/forms.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nextcloudappstore/core/scaffolding/forms.py:27:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 27,
    "warning_line": "        raise ValidationError(_('The app name must be camel case e.g. MyApp'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    tpls = listdir(resolve_file_relative_path(__file__, 'app-templates'))\n    return [(v, v) for v in tpls]\n\n\ndef validate_id(input: str) -> str:\n    regex = r'^([A-Z][a-z]*)+$'\n",
        "source_code_len": 178,
        "target_code": "    tpls = listdir(resolve_file_relative_path(__file__, 'app-templates'))\n    return sorted(((v, v) for v in tpls))\n\n\ndef validate_id(input: str) -> None:\n    regex = r'^([A-Z][a-z]*)+$'\n",
        "target_code_len": 187,
        "diff_format": "@@ -20,6 +19,6 @@\n     tpls = listdir(resolve_file_relative_path(__file__, 'app-templates'))\n-    return [(v, v) for v in tpls]\n+    return sorted(((v, v) for v in tpls))\n \n \n-def validate_id(input: str) -> str:\n+def validate_id(input: str) -> None:\n     regex = r'^([A-Z][a-z]*)+$'\n",
        "source_code_with_indent": "    <IND>tpls = listdir(resolve_file_relative_path(__file__, 'app-templates'))\n    return [(v, v) for v in tpls]\n\n\n<DED>def validate_id(input: str) -> str:\n    <IND>regex = r'^([A-Z][a-z]*)+$'\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>tpls = listdir(resolve_file_relative_path(__file__, 'app-templates'))\n    return sorted(((v, v) for v in tpls))\n\n\n<DED>def validate_id(input: str) -> None:\n    <IND>regex = r'^([A-Z][a-z]*)+$'\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]