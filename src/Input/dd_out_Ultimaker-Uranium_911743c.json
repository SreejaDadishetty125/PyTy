[
  {
    "project": "Ultimaker/Uranium",
    "commit": "911743ca87a5ecbbd94092322b13ee23cb1d6b29",
    "filename": "UM/Scene/Camera.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Uranium/UM/Scene/Camera.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "UM/Scene/Camera.py:94:8 Incompatible attribute type [8]: Attribute `_perspective` declared in class `Camera` has type `bool` but is used as type `Matrix`.",
    "message": " Attribute `_perspective` declared in class `Camera` has type `bool` but is used as type `Matrix`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 94,
    "warning_line": "        self._perspective = perspective",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def setPerspective(self, perspective: Matrix):\n        self._perspective = perspective\n",
        "source_code_len": 92,
        "target_code": "\n    def setPerspective(self, perspective: bool):\n        self._perspective = perspective\n",
        "target_code_len": 90,
        "diff_format": "@@ -92,3 +92,3 @@\n \n-    def setPerspective(self, perspective: Matrix):\n+    def setPerspective(self, perspective: bool):\n         self._perspective = perspective\n",
        "source_code_with_indent": "\n    <DED>def setPerspective(self, perspective: Matrix):\n        <IND>self._perspective = perspective\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def setPerspective(self, perspective: bool):\n        <IND>self._perspective = perspective\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]