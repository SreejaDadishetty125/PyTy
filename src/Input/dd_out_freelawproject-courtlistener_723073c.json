[
  {
    "project": "freelawproject/courtlistener",
    "commit": "723073c82843d2387f37d1aaadffa0e50943a7a0",
    "filename": "cl/corpus_importer/management/commands/dump_anon_docket_html.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/freelawproject-courtlistener/cl/corpus_importer/management/commands/dump_anon_docket_html.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cl/corpus_importer/management/commands/dump_anon_docket_html.py:11:23 Invalid type [31]: Expression `typing.Dict[slice(str, str, None)]` is not a valid type.",
    "message": " Expression `typing.Dict[slice(str, str, None)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 11,
    "warning_line": "def make_html(options: Dict[str:str]) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef make_html(options: Dict[str:str]) -> None:\n    pacer_files = (\n",
        "source_code_len": 68,
        "target_code": "\ndef make_html(options: Dict[str, str]) -> None:\n    pacer_files = (\n",
        "target_code_len": 69,
        "diff_format": "@@ -10,3 +10,3 @@\n \n-def make_html(options: Dict[str:str]) -> None:\n+def make_html(options: Dict[str, str]) -> None:\n     pacer_files = (\n",
        "source_code_with_indent": "\ndef make_html(options: Dict[str:str]) -> None:\n    <IND>pacer_files = (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef make_html(options: Dict[str, str]) -> None:\n    <IND>pacer_files = (\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]