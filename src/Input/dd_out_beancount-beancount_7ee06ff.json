[
  {
    "project": "beancount/beancount",
    "commit": "7ee06ff7f922950cd36a067c2fad54370efeeaf5",
    "filename": "beancount/core/data.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beancount-beancount/beancount/core/data.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beancount/core/data.py:69:52 Unsupported operand [58]: `+` is not supported for operand types `List[Tuple[str, typing.Type[Union[Dict[str, typing.Any], datetime.date]]]]` and `List[typing.Tuple[typing.Any, ...]]`.",
    "message": " `+` is not supported for operand types `List[Tuple[str, typing.Type[Union[Dict[str, typing.Any], datetime.date]]]]` and `List[typing.Tuple[typing.Any, ...]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 69,
    "warning_line": "        [('meta', Meta), ('date', datetime.date)] + fields)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    LIFO = 'LIFO'\n\n\ndef new_directive(clsname, fields: List[Tuple]) -> NamedTuple:\n    \"\"\"Create a directive class. Do not include default fields.\n    This should probably be carried out through inheritance.\n\n    Args:\n      name: A string, the capitalized name of the directive.\n      fields: A string or the list of strings, names for the fields\n        to add to the base tuple.\n    Returns:\n      A type object for the new directive type.\n    \"\"\"\n    return NamedTuple(\n        clsname,\n        [('meta', Meta), ('date', datetime.date)] + fields)\n\n",
        "source_code_len": 552,
        "target_code": "    LIFO = 'LIFO'\n\n",
        "target_code_len": 19,
        "diff_format": "@@ -53,18 +53,2 @@\n     LIFO = 'LIFO'\n-\n-\n-def new_directive(clsname, fields: List[Tuple]) -> NamedTuple:\n-    \"\"\"Create a directive class. Do not include default fields.\n-    This should probably be carried out through inheritance.\n-\n-    Args:\n-      name: A string, the capitalized name of the directive.\n-      fields: A string or the list of strings, names for the fields\n-        to add to the base tuple.\n-    Returns:\n-      A type object for the new directive type.\n-    \"\"\"\n-    return NamedTuple(\n-        clsname,\n-        [('meta', Meta), ('date', datetime.date)] + fields)\n \n",
        "source_code_with_indent": "    LIFO = 'LIFO'\n\n\n<DED>def new_directive(clsname, fields: List[Tuple]) -> NamedTuple:\n    <IND>\"\"\"Create a directive class. Do not include default fields.\n    This should probably be carried out through inheritance.\n\n    Args:\n      name: A string, the capitalized name of the directive.\n      fields: A string or the list of strings, names for the fields\n        to add to the base tuple.\n    Returns:\n      A type object for the new directive type.\n    \"\"\"\n    return NamedTuple(\n        clsname,\n        [('meta', Meta), ('date', datetime.date)] + fields)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    LIFO = 'LIFO'\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     Booking below for a selection of valid methods.\nOpen = new_directive('Open', [\n    ('account', Account),\n    ('currencies', List[Currency]),\n    ('booking', Booking)])\n\n",
        "source_code_len": 175,
        "target_code": "#     Booking below for a selection of valid methods.\nclass Open(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n    currencies: List[Currency]\n    booking: Booking\n\n",
        "target_code_len": 191,
        "diff_format": "@@ -98,6 +82,8 @@\n #     Booking below for a selection of valid methods.\n-Open = new_directive('Open', [\n-    ('account', Account),\n-    ('currencies', List[Currency]),\n-    ('booking', Booking)])\n+class Open(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n+    currencies: List[Currency]\n+    booking: Booking\n \n",
        "source_code_with_indent": "#     Booking below for a selection of valid methods.\n<DED>Open = new_directive('Open', [\n    ('account', Account),\n    ('currencies', List[Currency]),\n    ('booking', Booking)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     Booking below for a selection of valid methods.\n<DED>class Open(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n    currencies: List[Currency]\n    booking: Booking\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# Attributes:\n#   account: A string, the name of the account that is being closed.\nClose = new_directive('Close', [\n    ('account', Account)])\n\n",
        "source_code_len": 144,
        "target_code": "# Attributes:\n#   meta: See above.\n#   date: See above.\n#   account: A string, the name of the account that is being closed.\nclass Close(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n\n",
        "target_code_len": 211,
        "diff_format": "@@ -107,5 +93,9 @@\n # Attributes:\n+#   meta: See above.\n+#   date: See above.\n #   account: A string, the name of the account that is being closed.\n-Close = new_directive('Close', [\n-    ('account', Account)])\n+class Close(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n \n",
        "source_code_with_indent": "# Attributes:\n#   account: A string, the name of the account that is being closed.\nClose = new_directive('Close', [\n    ('account', Account)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# Attributes:\n#   meta: See above.\n#   date: See above.\n#   account: A string, the name of the account that is being closed.\n<DED>class Close(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#   currency: A string, the commodity under consideration.\nCommodity = new_directive('Commodity', [\n    ('currency', Currency)])\n\n",
        "source_code_len": 130,
        "target_code": "#   currency: A string, the commodity under consideration.\nclass Commodity(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    currency: Currency\n\n",
        "target_code_len": 151,
        "diff_format": "@@ -124,4 +114,6 @@\n #   currency: A string, the commodity under consideration.\n-Commodity = new_directive('Commodity', [\n-    ('currency', Currency)])\n+class Commodity(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    currency: Currency\n \n",
        "source_code_with_indent": "#   currency: A string, the commodity under consideration.\nCommodity = new_directive('Commodity', [\n    ('currency', Currency)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#   currency: A string, the commodity under consideration.\n<DED>class Commodity(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    currency: Currency\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     in order to fill 'account'.\nPad = new_directive('Pad', [\n    ('account', Account),\n    ('source_account', Account)])\n\n",
        "source_code_len": 124,
        "target_code": "#     in order to fill 'account'.\nclass Pad(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n    source_account: Account\n\n",
        "target_code_len": 146,
        "diff_format": "@@ -139,5 +131,7 @@\n #     in order to fill 'account'.\n-Pad = new_directive('Pad', [\n-    ('account', Account),\n-    ('source_account', Account)])\n+class Pad(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n+    source_account: Account\n \n",
        "source_code_with_indent": "#     in order to fill 'account'.\nPad = new_directive('Pad', [\n    ('account', Account),\n    ('source_account', Account)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     in order to fill 'account'.\n<DED>class Pad(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n    source_account: Account\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     verification.\nBalance = new_directive('Balance', [\n    ('account', Account),\n    ('amount', Amount),\n    ('tolerance', Optional[Decimal]),\n    ('diff_amount', Optional[Amount])])\n\n",
        "source_code_len": 186,
        "target_code": "#     verification.\nclass Balance(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n    amount: Amount\n    tolerance: Optional[Decimal]\n    diff_amount: Optional[Amount]\n\n",
        "target_code_len": 194,
        "diff_format": "@@ -160,7 +154,9 @@\n #     verification.\n-Balance = new_directive('Balance', [\n-    ('account', Account),\n-    ('amount', Amount),\n-    ('tolerance', Optional[Decimal]),\n-    ('diff_amount', Optional[Amount])])\n+class Balance(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n+    amount: Amount\n+    tolerance: Optional[Decimal]\n+    diff_amount: Optional[Amount]\n \n",
        "source_code_with_indent": "#     verification.\nBalance = new_directive('Balance', [\n    ('account', Account),\n    ('amount', Amount),\n    ('tolerance', Optional[Decimal]),\n    ('diff_amount', Optional[Amount])])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     verification.\n<DED>class Balance(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n    amount: Amount\n    tolerance: Optional[Decimal]\n    diff_amount: Optional[Amount]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     doc under Posting above.\nTransaction = new_directive('Transaction', [\n    ('flag', Flag),\n    ('payee', Optional[str]),\n    ('narration', str),\n    ('tags', Set),\n    ('links', Set),\n    ('postings', List[Posting])])\n\n",
        "source_code_len": 224,
        "target_code": "#     doc under Posting above.\nclass Transaction(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    flag: Flag\n    payee: Optional[str]\n    narration: str\n    tags: Set\n    links: Set\n    postings: List[Posting]\n\n",
        "target_code_len": 218,
        "diff_format": "@@ -214,9 +210,11 @@\n #     doc under Posting above.\n-Transaction = new_directive('Transaction', [\n-    ('flag', Flag),\n-    ('payee', Optional[str]),\n-    ('narration', str),\n-    ('tags', Set),\n-    ('links', Set),\n-    ('postings', List[Posting])])\n+class Transaction(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    flag: Flag\n+    payee: Optional[str]\n+    narration: str\n+    tags: Set\n+    links: Set\n+    postings: List[Posting]\n \n",
        "source_code_with_indent": "#     doc under Posting above.\nTransaction = new_directive('Transaction', [\n    ('flag', Flag),\n    ('payee', Optional[str]),\n    ('narration', str),\n    ('tags', Set),\n    ('links', Set),\n    ('postings', List[Posting])])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     doc under Posting above.\nclass Transaction(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    flag: Flag\n    payee: Optional[str]\n    narration: str\n    tags: Set\n    links: Set\n    postings: List[Posting]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     want it to.\nNote = new_directive('Note', [\n    ('account', Account),\n    ('comment', str)])\n\n",
        "source_code_len": 99,
        "target_code": "#     want it to.\nclass Note(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n    comment: str\n\n",
        "target_code_len": 120,
        "diff_format": "@@ -248,5 +246,7 @@\n #     want it to.\n-Note = new_directive('Note', [\n-    ('account', Account),\n-    ('comment', str)])\n+class Note(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n+    comment: str\n \n",
        "source_code_with_indent": "#     want it to.\nNote = new_directive('Note', [\n    ('account', Account),\n    ('comment', str)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     want it to.\nclass Note(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n    comment: str\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     of the transaction.\nEvent = new_directive('Event', [\n    ('type', str),\n    ('description', str)])\n\n",
        "source_code_len": 106,
        "target_code": "#     of the transaction.\nclass Event(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    type: str\n    description: str\n\n",
        "target_code_len": 126,
        "diff_format": "@@ -279,5 +279,7 @@\n #     of the transaction.\n-Event = new_directive('Event', [\n-    ('type', str),\n-    ('description', str)])\n+class Event(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    type: str\n+    description: str\n \n",
        "source_code_with_indent": "#     of the transaction.\nEvent = new_directive('Event', [\n    ('type', str),\n    ('description', str)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     of the transaction.\n<DED>class Event(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    type: str\n    description: str\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#   query_string: The SQL query string to be run or made available.\nQuery = new_directive('Query', [\n    ('name', str),\n    ('query_string', str)])\n\n",
        "source_code_len": 149,
        "target_code": "#   query_string: The SQL query string to be run or made available.\nclass Query(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    name: str\n    query_string: str\n\n",
        "target_code_len": 169,
        "diff_format": "@@ -295,5 +297,7 @@\n #   query_string: The SQL query string to be run or made available.\n-Query = new_directive('Query', [\n-    ('name', str),\n-    ('query_string', str)])\n+class Query(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    name: str\n+    query_string: str\n \n",
        "source_code_with_indent": "#   query_string: The SQL query string to be run or made available.\nQuery = new_directive('Query', [\n    ('name', str),\n    ('query_string', str)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#   query_string: The SQL query string to be run or made available.\n<DED>class Query(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    name: str\n    query_string: str\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#    'currency' is worth, for instance 1200.12 USD.\nPrice = new_directive('Price', [\n    ('currency', Currency),\n    ('amount', Amount)])\n\n",
        "source_code_len": 139,
        "target_code": "#    'currency' is worth, for instance 1200.12 USD.\nclass Price(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    currency: Currency\n    amount: Amount\n\n",
        "target_code_len": 159,
        "diff_format": "@@ -314,5 +318,7 @@\n #    'currency' is worth, for instance 1200.12 USD.\n-Price = new_directive('Price', [\n-    ('currency', Currency),\n-    ('amount', Amount)])\n+class Price(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    currency: Currency\n+    amount: Amount\n \n",
        "source_code_with_indent": "#    'currency' is worth, for instance 1200.12 USD.\nPrice = new_directive('Price', [\n    ('currency', Currency),\n    ('amount', Amount)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#    'currency' is worth, for instance 1200.12 USD.\n<DED>class Price(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    currency: Currency\n    amount: Amount\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#   links: A set of link strings (without the '^'), or None, if an empty set.\nDocument = new_directive('Document', [\n    ('account', Account),\n    ('filename', str),\n    ('tags', Optional[Set]),\n    ('links', Optional[Set])])\n\n",
        "source_code_len": 227,
        "target_code": "#   links: A set of link strings (without the '^'), or None, if an empty set.\nclass Document(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    account: Account\n    filename: str\n    tags: Optional[Set]\n    links: Optional[Set]\n\n",
        "target_code_len": 234,
        "diff_format": "@@ -336,7 +342,9 @@\n #   links: A set of link strings (without the '^'), or None, if an empty set.\n-Document = new_directive('Document', [\n-    ('account', Account),\n-    ('filename', str),\n-    ('tags', Optional[Set]),\n-    ('links', Optional[Set])])\n+class Document(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    account: Account\n+    filename: str\n+    tags: Optional[Set]\n+    links: Optional[Set]\n \n",
        "source_code_with_indent": "#   links: A set of link strings (without the '^'), or None, if an empty set.\nDocument = new_directive('Document', [\n    ('account', Account),\n    ('filename', str),\n    ('tags', Optional[Set]),\n    ('links', Optional[Set])])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#   links: A set of link strings (without the '^'), or None, if an empty set.\n<DED>class Document(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    account: Account\n    filename: str\n    tags: Optional[Set]\n    links: Optional[Set]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#     of the same type by the parser.)\nCustom = new_directive('Custom', [\n    ('type', str),\n    ('values', List)])\n\n",
        "source_code_len": 117,
        "target_code": "#     of the same type by the parser.)\nclass Custom(NamedTuple):\n    meta: Meta\n    date: datetime.date\n    type: str\n    values: List\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -360,5 +368,7 @@\n #     of the same type by the parser.)\n-Custom = new_directive('Custom', [\n-    ('type', str),\n-    ('values', List)])\n+class Custom(NamedTuple):\n+    meta: Meta\n+    date: datetime.date\n+    type: str\n+    values: List\n \n",
        "source_code_with_indent": "#     of the same type by the parser.)\nCustom = new_directive('Custom', [\n    ('type', str),\n    ('values', List)])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#     of the same type by the parser.)\n<DED>class Custom(NamedTuple):\n    <IND>meta: Meta\n    date: datetime.date\n    type: str\n    values: List\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]