[
  {
    "project": "lnbits/lnbits-legend",
    "commit": "9c2c04dad26cb96d24dfbf74ccb3fca74046ab6a",
    "filename": "lnbits/extensions/TwitchAlerts/crud.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lnbits-lnbits-legend/lnbits/extensions/TwitchAlerts/crud.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lnbits/extensions/TwitchAlerts/crud.py:65:8 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 65,
    "warning_line": "        return False",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nasync def post_donation(donation_id: str) -> None:\n    donation = await get_donation(donation_id)\n",
        "source_code_len": 99,
        "target_code": "\nasync def post_donation(donation_id: str) -> bool:\n    donation = await get_donation(donation_id)\n",
        "target_code_len": 99,
        "diff_format": "@@ -61,3 +61,3 @@\n \n-async def post_donation(donation_id: str) -> None:\n+async def post_donation(donation_id: str) -> bool:\n     donation = await get_donation(donation_id)\n",
        "source_code_with_indent": "\n<DED>async def post_donation(donation_id: str) -> None:\n    <IND>donation = await get_donation(donation_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>async def post_donation(donation_id: str) -> bool:\n    <IND>donation = await get_donation(donation_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lnbits/lnbits-legend",
    "commit": "9c2c04dad26cb96d24dfbf74ccb3fca74046ab6a",
    "filename": "lnbits/extensions/TwitchAlerts/crud.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lnbits-lnbits-legend/lnbits/extensions/TwitchAlerts/crud.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lnbits/extensions/TwitchAlerts/crud.py:74:4 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 74,
    "warning_line": "    return True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nasync def post_donation(donation_id: str) -> None:\n    donation = await get_donation(donation_id)\n",
        "source_code_len": 99,
        "target_code": "\nasync def post_donation(donation_id: str) -> bool:\n    donation = await get_donation(donation_id)\n",
        "target_code_len": 99,
        "diff_format": "@@ -61,3 +61,3 @@\n \n-async def post_donation(donation_id: str) -> None:\n+async def post_donation(donation_id: str) -> bool:\n     donation = await get_donation(donation_id)\n",
        "source_code_with_indent": "\n<DED>async def post_donation(donation_id: str) -> None:\n    <IND>donation = await get_donation(donation_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>async def post_donation(donation_id: str) -> bool:\n    <IND>donation = await get_donation(donation_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]