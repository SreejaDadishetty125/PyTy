[
  {
    "project": "Ultimaker/Uranium",
    "commit": "15303d92ac2f08bb690be112443b23c82f37da38",
    "filename": "UM/Qt/QtRenderer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Uranium/UM/Qt/QtRenderer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "UM/Qt/QtRenderer.py:114:31 Invalid type [31]: Expression `(int, int)` is not a valid type.",
    "message": " Expression `(int, int)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 114,
    "warning_line": "    def getWindowSize(self)-> (int, int):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom PyQt5.QtGui import QColor, QOpenGLBuffer, QOpenGLContext, QOpenGLFramebufferObject, QOpenGLFramebufferObjectFormat, QSurfaceFormat, QOpenGLVersionProfile, QImage, QOpenGLVertexArrayObject\n\n",
        "source_code_len": 195,
        "target_code": "\nimport numpy\nfrom PyQt5.QtGui import QColor, QOpenGLBuffer, QOpenGLContext, QOpenGLFramebufferObject, QOpenGLFramebufferObjectFormat, QSurfaceFormat, QOpenGLVersionProfile, QImage, QOpenGLVertexArrayObject\nfrom typing import List, Optional, Tuple\n\n",
        "target_code_len": 249,
        "diff_format": "@@ -3,3 +3,5 @@\n \n+import numpy\n from PyQt5.QtGui import QColor, QOpenGLBuffer, QOpenGLContext, QOpenGLFramebufferObject, QOpenGLFramebufferObjectFormat, QSurfaceFormat, QOpenGLVersionProfile, QImage, QOpenGLVertexArrayObject\n+from typing import List, Optional, Tuple\n \n",
        "source_code_with_indent": "\nfrom PyQt5.QtGui import QColor, QOpenGLBuffer, QOpenGLContext, QOpenGLFramebufferObject, QOpenGLFramebufferObjectFormat, QSurfaceFormat, QOpenGLVersionProfile, QImage, QOpenGLVertexArrayObject\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nimport numpy\nfrom PyQt5.QtGui import QColor, QOpenGLBuffer, QOpenGLContext, QOpenGLFramebufferObject, QOpenGLFramebufferObjectFormat, QSurfaceFormat, QOpenGLVersionProfile, QImage, QOpenGLVertexArrayObject\nfrom typing import List, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    #   \\return A tuple of (window_width, window_height)\n    def getWindowSize(self)-> (int, int):\n        return self._window_width, self._window_height\n",
        "source_code_len": 154,
        "target_code": "    #   \\return A tuple of (window_width, window_height)\n    def getWindowSize(self) -> Tuple[int, int]:\n        return self._window_width, self._window_height\n",
        "target_code_len": 160,
        "diff_format": "@@ -113,3 +112,3 @@\n     #   \\return A tuple of (window_width, window_height)\n-    def getWindowSize(self)-> (int, int):\n+    def getWindowSize(self) -> Tuple[int, int]:\n         return self._window_width, self._window_height\n",
        "source_code_with_indent": "    #   \\return A tuple of (window_width, window_height)\n    <DED>def getWindowSize(self)-> (int, int):\n        <IND>return self._window_width, self._window_height\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    #   \\return A tuple of (window_width, window_height)\n    <DED>def getWindowSize(self) -> Tuple[int, int]:\n        <IND>return self._window_width, self._window_height\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]