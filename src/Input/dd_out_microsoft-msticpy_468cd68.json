[
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tilookup.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tilookup.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tilookup.py:230:8 Incompatible return type [7]: Expected `Tuple[bool, List[LookupResult]]` but got `Tuple[bool, List[Tuple[str, LookupResult]]]`.",
    "message": " Expected `Tuple[bool, List[LookupResult]]` but got `Tuple[bool, List[Tuple[str, LookupResult]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 230,
    "warning_line": "        return overall_result, result_list",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        prov_scope: str = \"primary\",\n    ) -> Tuple[bool, List[LookupResult]]:\n        \"\"\"\n",
        "source_code_len": 91,
        "target_code": "        prov_scope: str = \"primary\",\n    ) -> Tuple[bool, List[Tuple[str, LookupResult]]]:\n        \"\"\"\n",
        "target_code_len": 103,
        "diff_format": "@@ -194,3 +194,3 @@\n         prov_scope: str = \"primary\",\n-    ) -> Tuple[bool, List[LookupResult]]:\n+    ) -> Tuple[bool, List[Tuple[str, LookupResult]]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        prov_scope: str = \"primary\",\n    ) -> Tuple[bool, List[LookupResult]]:\n        <IND>",
        "target_code_with_indent": "        prov_scope: str = \"primary\",\n    ) -> Tuple[bool, List[Tuple[str, LookupResult]]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/http_base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/http_base.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/http_base.py:159:16 Unsupported operand [58]: `+` is not supported for operand types `typing.Type[typing.Union[ConnectionError, LookupError, NotImplementedError, json.decoder.JSONDecodeError]]` and `str`.",
    "message": " `+` is not supported for operand types `typing.Type[typing.Union[ConnectionError, LookupError, NotImplementedError, json.decoder.JSONDecodeError]]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 159,
    "warning_line": "                type(err) + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            err_result.raw_result = (\n                type(err) + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n            )\n",
        "source_code_len": 128,
        "target_code": "            err_result.raw_result = (\n                type(err).__name__ + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n            )\n",
        "target_code_len": 137,
        "diff_format": "@@ -158,3 +164,3 @@\n             err_result.raw_result = (\n-                type(err) + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n+                type(err).__name__ + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n             )\n",
        "source_code_with_indent": "            err_result.raw_result = (\n                type(err) + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n            )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            err_result.raw_result = (\n                type(err).__name__ + \"\\n\" + str(err) + \"\\n\" + traceback.format_exc()\n            )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/ibm_xforce.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/ibm_xforce.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/ibm_xforce.py:87:12 Incompatible return type [7]: Expected `Tuple[bool, typing.Any]` but got `typing.Dict[Variable[_KT], Variable[_VT]]`.",
    "message": " Expected `Tuple[bool, typing.Any]` but got `typing.Dict[Variable[_KT], Variable[_VT]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 87,
    "warning_line": "            return {}"
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/ti_provider_base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/ti_provider_base.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/ti_provider_base.py:50:4 Incompatible attribute type [8]: Attribute `query_subtype` declared in class `LookupResult` has type `str` but is used as type `None`.",
    "message": " Attribute `query_subtype` declared in class `LookupResult` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 50,
    "warning_line": "    query_subtype: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ioc: str\n    ioc_type: str\n    query_subtype: str = None\n    result: bool = False\n",
        "source_code_len": 86,
        "target_code": "    ioc: str\n    ioc_type: Optional[str]\n    query_subtype: Optional[str] = None\n    result: bool = False\n",
        "target_code_len": 106,
        "diff_format": "@@ -48,4 +48,4 @@\n     ioc: str\n-    ioc_type: str\n-    query_subtype: str = None\n+    ioc_type: Optional[str]\n+    query_subtype: Optional[str] = None\n     result: bool = False\n",
        "source_code_with_indent": "    ioc: str\n    ioc_type: str\n    query_subtype: str = None\n    result: bool = False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ioc: str\n    ioc_type: Optional[str]\n    query_subtype: Optional[str] = None\n    result: bool = False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/ti_provider_base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/ti_provider_base.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/ti_provider_base.py:481:12 Incompatible return type [7]: Expected `Tuple[str, str]` but got `typing.Generator[Tuple[typing.Any, None], None, None]`.",
    "message": " Expected `Tuple[str, str]` but got `typing.Generator[Tuple[typing.Any, None], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 481,
    "warning_line": "            yield item, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\nimport socket\n",
        "source_code_len": 147,
        "target_code": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\nimport socket\n",
        "target_code_len": 158,
        "diff_format": "@@ -22,3 +22,3 @@\n from ipaddress import IPv4Address, IPv6Address, ip_address\n-from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\n+from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\n import socket\n",
        "source_code_with_indent": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\nimport socket\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\nimport socket\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Tuple[str, str]:\n    \"\"\"\n",
        "source_code_len": 111,
        "target_code": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Generator:\n    \"\"\"\n",
        "target_code_len": 105,
        "diff_format": "@@ -459,3 +471,3 @@\n     data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n-) -> Tuple[str, str]:\n+) -> Generator:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Tuple[str, str]:\n    <IND>",
        "target_code_with_indent": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Generator:\n    <IND>"
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/ti_provider_base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/ti_provider_base.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/ti_provider_base.py:482:4 Incompatible return type [7]: Expected `Tuple[str, str]` but got `typing.Generator[Tuple[None, None], None, None]`.",
    "message": " Expected `Tuple[str, str]` but got `typing.Generator[Tuple[None, None], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 482,
    "warning_line": "    yield None, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\nimport socket\n",
        "source_code_len": 147,
        "target_code": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\nimport socket\n",
        "target_code_len": 158,
        "diff_format": "@@ -22,3 +22,3 @@\n from ipaddress import IPv4Address, IPv6Address, ip_address\n-from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\n+from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\n import socket\n",
        "source_code_with_indent": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union\nimport socket\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from ipaddress import IPv4Address, IPv6Address, ip_address\nfrom typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union, Generator\nimport socket\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Tuple[str, str]:\n    \"\"\"\n",
        "source_code_len": 111,
        "target_code": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Generator:\n    \"\"\"\n",
        "target_code_len": 105,
        "diff_format": "@@ -459,3 +471,3 @@\n     data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n-) -> Tuple[str, str]:\n+) -> Generator:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Tuple[str, str]:\n    <IND>",
        "target_code_with_indent": "    data: Any, obs_col: Optional[str] = None, ioc_type_col: Optional[str] = None\n) -> Generator:\n    <IND>"
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "468cd68323e98ca71b125217ee14518a9b9bd69a",
    "filename": "msticpy/sectools/tiproviders/ti_provider_settings.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/sectools/tiproviders/ti_provider_settings.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/sectools/tiproviders/ti_provider_settings.py:92:16 Incompatible parameter type [6]: Expected `Optional[typing.Type[Warning]]` for 2nd positional only parameter to call `_warnings.warn` but got `str`.",
    "message": " Expected `Optional[typing.Type[Warning]]` for 2nd positional only parameter to call `_warnings.warn` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 92,
    "warning_line": "                \"was not set\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            warnings.warn(\n                f\"Environment variable {item_settings['EnvironmentVar']} \",\n                \"was not set\",\n            )\n",
        "source_code_len": 148,
        "target_code": "            warnings.warn(\n                f\"Environment variable {item_settings['EnvironmentVar']} \"\n                + \" was not set\"\n            )\n",
        "target_code_len": 149,
        "diff_format": "@@ -90,4 +90,4 @@\n             warnings.warn(\n-                f\"Environment variable {item_settings['EnvironmentVar']} \",\n-                \"was not set\",\n+                f\"Environment variable {item_settings['EnvironmentVar']} \"\n+                + \" was not set\"\n             )\n",
        "source_code_with_indent": "            <IND>warnings.warn(\n                f\"Environment variable {item_settings['EnvironmentVar']} \",\n                \"was not set\",\n            )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>warnings.warn(\n                f\"Environment variable {item_settings['EnvironmentVar']} \"\n                + \" was not set\"\n            )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]