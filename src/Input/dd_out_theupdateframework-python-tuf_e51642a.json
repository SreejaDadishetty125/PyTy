[
  {
    "project": "theupdateframework/python-tuf",
    "commit": "e51642a290b29474d136b24f65b6ae4819f2b32c",
    "filename": "tests/test_updater_top_level_update.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theupdateframework-python-tuf/tests/test_updater_top_level_update.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_updater_top_level_update.py:97:33 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 97,
    "warning_line": "        self._assert_files_exist(TOP_LEVEL_ROLE_NAMES)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_len": 108,
        "target_code": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -10,5 +10,5 @@\n import tempfile\n-from typing import List, Optional\n import unittest\n from datetime import datetime, timedelta\n+from typing import Iterable, Optional\n \n",
        "source_code_with_indent": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _assert_files_exist(self, roles: List[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\n    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_len": 131,
        "diff_format": "@@ -72,3 +73,3 @@\n \n-    def _assert_files_exist(self, roles: List[str]) -> None:\n+    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n         \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: List[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "theupdateframework/python-tuf",
    "commit": "e51642a290b29474d136b24f65b6ae4819f2b32c",
    "filename": "tests/test_updater_top_level_update.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theupdateframework-python-tuf/tests/test_updater_top_level_update.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_updater_top_level_update.py:135:33 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 135,
    "warning_line": "        self._assert_files_exist(TOP_LEVEL_ROLE_NAMES)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_len": 108,
        "target_code": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -10,5 +10,5 @@\n import tempfile\n-from typing import List, Optional\n import unittest\n from datetime import datetime, timedelta\n+from typing import Iterable, Optional\n \n",
        "source_code_with_indent": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _assert_files_exist(self, roles: List[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\n    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_len": 131,
        "diff_format": "@@ -72,3 +73,3 @@\n \n-    def _assert_files_exist(self, roles: List[str]) -> None:\n+    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n         \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: List[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "theupdateframework/python-tuf",
    "commit": "e51642a290b29474d136b24f65b6ae4819f2b32c",
    "filename": "tests/test_updater_top_level_update.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theupdateframework-python-tuf/tests/test_updater_top_level_update.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/test_updater_top_level_update.py:217:33 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `TestRefresh._assert_files_exist` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 217,
    "warning_line": "        self._assert_files_exist(TOP_LEVEL_ROLE_NAMES)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_len": 108,
        "target_code": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -10,5 +10,5 @@\n import tempfile\n-from typing import List, Optional\n import unittest\n from datetime import datetime, timedelta\n+from typing import Iterable, Optional\n \n",
        "source_code_with_indent": "import tempfile\nfrom typing import List, Optional\nimport unittest\nfrom datetime import datetime, timedelta\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tempfile\nimport unittest\nfrom datetime import datetime, timedelta\nfrom typing import Iterable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _assert_files_exist(self, roles: List[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\n    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_len": 131,
        "diff_format": "@@ -72,3 +73,3 @@\n \n-    def _assert_files_exist(self, roles: List[str]) -> None:\n+    def _assert_files_exist(self, roles: Iterable[str]) -> None:\n         \"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: List[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _assert_files_exist(self, roles: Iterable[str]) -> None:\n        <IND>\"\"\"Assert that local metadata files exist for 'roles'\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]