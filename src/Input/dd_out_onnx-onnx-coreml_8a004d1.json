[
  {
    "project": "onnx/onnx-coreml",
    "commit": "8a004d1f865bd10d2dddd9d69f134a493ab64fda",
    "filename": "onnx_coreml/_operators_nd.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/onnx-onnx-coreml/onnx_coreml/_operators_nd.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "onnx_coreml/_operators_nd.py:789:61 Unbound name [10]: Name `channels` is used but not defined in the current scope.",
    "message": " Name `channels` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 789,
    "warning_line": "        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "source_code_len": 263,
        "target_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "target_code_len": 278,
        "diff_format": "@@ -123,4 +125,4 @@\n \n-def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n-                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n+def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n+                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n     real_input_name = input_name\n",
        "source_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_len": 303,
        "target_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_len": 303,
        "diff_format": "@@ -788,4 +790,4 @@\n         # 1D Batch Norm\n-        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n-                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n+        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n+                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                               instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "onnx/onnx-coreml",
    "commit": "8a004d1f865bd10d2dddd9d69f134a493ab64fda",
    "filename": "onnx_coreml/_operators_nd.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/onnx-onnx-coreml/onnx_coreml/_operators_nd.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "onnx_coreml/_operators_nd.py:789:87 Unbound name [10]: Name `mean` is used but not defined in the current scope.",
    "message": " Name `mean` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 789,
    "warning_line": "        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "source_code_len": 263,
        "target_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "target_code_len": 278,
        "diff_format": "@@ -123,4 +125,4 @@\n \n-def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n-                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n+def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n+                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n     real_input_name = input_name\n",
        "source_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_len": 303,
        "target_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_len": 303,
        "diff_format": "@@ -788,4 +790,4 @@\n         # 1D Batch Norm\n-        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n-                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n+        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n+                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                               instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "onnx/onnx-coreml",
    "commit": "8a004d1f865bd10d2dddd9d69f134a493ab64fda",
    "filename": "onnx_coreml/_operators_nd.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/onnx-onnx-coreml/onnx_coreml/_operators_nd.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "onnx_coreml/_operators_nd.py:789:93 Unbound name [10]: Name `var` is used but not defined in the current scope.",
    "message": " Name `var` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 789,
    "warning_line": "        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "source_code_len": 263,
        "target_code": "\ndef add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    real_input_name = input_name\n",
        "target_code_len": 278,
        "diff_format": "@@ -123,4 +125,4 @@\n \n-def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n-                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n+def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n+                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n     real_input_name = input_name\n",
        "source_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, channels, scale, bias, mean, var, input_name, output_name,\n                          epsilon, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def add_bn_with_expansion(builder, node, err, node_name, input_name, output_name, channels, scale, bias, mean=None, var=None,\n                          epsilon=None, compute_mean_var=False, instance_normalization=False, axes_for_expansion=[]):\n    <IND>real_input_name = input_name\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_len": 303,
        "target_code": "        # 1D Batch Norm\n        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_len": 303,
        "diff_format": "@@ -788,4 +790,4 @@\n         # 1D Batch Norm\n-        add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n-                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n+        add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n+                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                               instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, channels[0], scale, bias, mean, var,\n                              node.inputs[0], node.outputs[0], epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # 1D Batch Norm\n        <IND>add_bn_with_expansion(builder, node, err, node.name, node.inputs[0], node.outputs[0], scale.shape[0],\n                              scale, bias, epsilon=epsilon, compute_mean_var=True,\n                              instance_normalization=True, axes_for_expansion=[0, 3])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]