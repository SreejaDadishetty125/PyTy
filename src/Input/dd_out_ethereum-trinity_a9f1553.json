[
  {
    "project": "ethereum/trinity",
    "commit": "a9f1553684b30dd8de185c8a04b3004cf591830b",
    "filename": "eth/vm/computation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/eth/vm/computation.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "eth/vm/computation.py:118:4 Incompatible attribute type [8]: Attribute `_precompiles` declared in class `BaseComputation` has type `Dict[bytes, typing.Callable[[BaseComputation], typing.Any]]` but is used as type `None`.",
    "message": " Attribute `_precompiles` declared in class `BaseComputation` has type `Dict[bytes, typing.Callable[[BaseComputation], typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 118,
    "warning_line": "    _precompiles = None  # type: Dict[bytes, Callable[['BaseComputation'], Any]]"
  },
  {
    "project": "ethereum/trinity",
    "commit": "a9f1553684b30dd8de185c8a04b3004cf591830b",
    "filename": "trinity/protocol/les/exchanges.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ethereum-trinity/trinity/protocol/les/exchanges.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "trinity/protocol/les/exchanges.py:55:38 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `GetBlockHeadersRequest.__init__` but got `int`.",
    "message": " Expected `bool` for 1st positional only parameter to call `GetBlockHeadersRequest.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 55,
    "warning_line": "        request = self.request_class(*command_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        command_args = original_request_args + (gen_request_id(),)\n        request = self.request_class(*command_args)\n\n",
        "source_code_len": 120,
        "target_code": "        command_args = original_request_args + (gen_request_id(),)\n        request = self.request_class(*command_args)  # type: ignore\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -54,3 +54,3 @@\n         command_args = original_request_args + (gen_request_id(),)\n-        request = self.request_class(*command_args)\n+        request = self.request_class(*command_args)  # type: ignore\n \n",
        "source_code_with_indent": "        command_args = original_request_args + (gen_request_id(),)\n        request = self.request_class(*command_args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        command_args = original_request_args + (gen_request_id(),)\n        request = self.request_class(*command_args)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]