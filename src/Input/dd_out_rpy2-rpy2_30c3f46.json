[
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/rinterface_lib/embedded.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/embedded.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/rinterface_lib/embedded.py:30:4 Incompatible variable type [9]: _options is declared to have type `typing.Tuple[str, str, str]` but is used as type `typing.Tuple[str, ...]`.",
    "message": " _options is declared to have type `typing.Tuple[str, str, str]` but is used as type `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 30,
    "warning_line": "    _options = tuple(options)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_options = ('rpy2', '--quiet', '--no-save')\nrpy2_embeddedR_isinitialized = 0x00\n",
        "source_code_len": 81,
        "target_code": "\n_options: typing.Tuple[str, ...] = ('rpy2', '--quiet', '--no-save')\nrpy2_embeddedR_isinitialized = 0x00\n",
        "target_code_len": 105,
        "diff_format": "@@ -10,3 +10,3 @@\n \n-_options = ('rpy2', '--quiet', '--no-save')\n+_options: typing.Tuple[str, ...] = ('rpy2', '--quiet', '--no-save')\n rpy2_embeddedR_isinitialized = 0x00\n",
        "source_code_with_indent": "\n_options = ('rpy2', '--quiet', '--no-save')\nrpy2_embeddedR_isinitialized = 0x00\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_options: typing.Tuple[str, ...] = ('rpy2', '--quiet', '--no-save')\nrpy2_embeddedR_isinitialized = 0x00\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_initoptions() -> typing.Tuple[str]:\n    return _options\n",
        "source_code_len": 65,
        "target_code": "\ndef get_initoptions() -> typing.Tuple[str, ...]:\n    return _options\n",
        "target_code_len": 70,
        "diff_format": "@@ -32,3 +32,3 @@\n \n-def get_initoptions() -> typing.Tuple[str]:\n+def get_initoptions() -> typing.Tuple[str, ...]:\n     return _options\n",
        "source_code_with_indent": "\n<DED>def get_initoptions() -> typing.Tuple[str]:\n    <IND>return _options\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_initoptions() -> typing.Tuple[str, ...]:\n    <IND>return _options\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/rinterface_lib/embedded.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/embedded.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/rinterface_lib/embedded.py:34:4 Incompatible return type [7]: Expected `typing.Tuple[str]` but got `typing.Tuple[str, str, str]`.",
    "message": " Expected `typing.Tuple[str]` but got `typing.Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 34,
    "warning_line": "    return _options",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_initoptions() -> typing.Tuple[str]:\n    return _options\n",
        "source_code_len": 65,
        "target_code": "\ndef get_initoptions() -> typing.Tuple[str, ...]:\n    return _options\n",
        "target_code_len": 70,
        "diff_format": "@@ -32,3 +32,3 @@\n \n-def get_initoptions() -> typing.Tuple[str]:\n+def get_initoptions() -> typing.Tuple[str, ...]:\n     return _options\n",
        "source_code_with_indent": "\n<DED>def get_initoptions() -> typing.Tuple[str]:\n    <IND>return _options\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_initoptions() -> typing.Tuple[str, ...]:\n    <IND>return _options\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/rinterface_lib/embedded.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/embedded.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/rinterface_lib/embedded.py:112:12 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 112,
    "warning_line": "            return",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO: can init_once() be used here ?\ndef _initr(interactive: bool = True, _want_setcallbacks: bool = True) -> int:\n\n",
        "source_code_len": 118,
        "target_code": "# TODO: can init_once() be used here ?\ndef _initr(interactive: bool = True,\n           _want_setcallbacks: bool = True) -> typing.Optional[int]:\n\n",
        "target_code_len": 146,
        "diff_format": "@@ -96,3 +96,4 @@\n # TODO: can init_once() be used here ?\n-def _initr(interactive: bool = True, _want_setcallbacks: bool = True) -> int:\n+def _initr(interactive: bool = True,\n+           _want_setcallbacks: bool = True) -> typing.Optional[int]:\n \n",
        "source_code_with_indent": "# TODO: can init_once() be used here ?\ndef _initr(interactive: bool = True, _want_setcallbacks: bool = True) -> int:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO: can init_once() be used here ?\ndef _initr(interactive: bool = True,\n           _want_setcallbacks: bool = True) -> typing.Optional[int]:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/rinterface_lib/sexp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/sexp.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/rinterface_lib/sexp.py:485:67 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `_rinterface._python_index_to_c` but got `typing.Union[int, slice]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `_rinterface._python_index_to_c` but got `typing.Union[int, slice]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 485,
    "warning_line": "        i_c = _rinterface._python_index_to_c(self.__sexp__._cdata, i)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_charsxp(self, i: typing.Union[int, slice]) -> CharSexp:\n        \"\"\"Get the R CharSexp objects for the index i.\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\n    def get_charsxp(self, i: int) -> CharSexp:\n        \"\"\"Get the R CharSexp objects for the index i.\"\"\"\n",
        "target_code_len": 106,
        "diff_format": "@@ -482,3 +482,3 @@\n \n-    def get_charsxp(self, i: typing.Union[int, slice]) -> CharSexp:\n+    def get_charsxp(self, i: int) -> CharSexp:\n         \"\"\"Get the R CharSexp objects for the index i.\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def get_charsxp(self, i: typing.Union[int, slice]) -> CharSexp:\n        <IND>\"\"\"Get the R CharSexp objects for the index i.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def get_charsxp(self, i: int) -> CharSexp:\n        <IND>\"\"\"Get the R CharSexp objects for the index i.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/situation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/situation.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/situation.py:62:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 62,
    "warning_line": "        return",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sys\nimport warnings\n",
        "source_code_len": 27,
        "target_code": "import sys\nfrom typing import Optional\nimport warnings\n",
        "target_code_len": 55,
        "diff_format": "@@ -12,2 +12,3 @@\n import sys\n+from typing import Optional\n import warnings\n",
        "source_code_with_indent": "import sys\nimport warnings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sys\nfrom typing import Optional\nimport warnings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef r_home_from_subprocess() -> str:\n    \"\"\"Return the R home directory from calling 'R RHOME'.\"\"\"\n",
        "source_code_len": 100,
        "target_code": "\ndef r_home_from_subprocess() -> Optional[str]:\n    \"\"\"Return the R home directory from calling 'R RHOME'.\"\"\"\n",
        "target_code_len": 110,
        "diff_format": "@@ -56,3 +57,3 @@\n \n-def r_home_from_subprocess() -> str:\n+def r_home_from_subprocess() -> Optional[str]:\n     \"\"\"Return the R home directory from calling 'R RHOME'.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def r_home_from_subprocess() -> str:\n    <IND>\"\"\"Return the R home directory from calling 'R RHOME'.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def r_home_from_subprocess() -> Optional[str]:\n    <IND>\"\"\"Return the R home directory from calling 'R RHOME'.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_r_home() -> str:\n    \"\"\"Get R's home directory (aka R_HOME).\n",
        "source_code_len": 70,
        "target_code": "\ndef get_r_home() -> Optional[str]:\n    \"\"\"Get R's home directory (aka R_HOME).\n",
        "target_code_len": 80,
        "diff_format": "@@ -100,3 +101,3 @@\n \n-def get_r_home() -> str:\n+def get_r_home() -> Optional[str]:\n     \"\"\"Get R's home directory (aka R_HOME).\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_r_home() -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_r_home() -> Optional[str]:\n    <IND>"
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "30c3f462b8368980ea29e2516c8a2c2db7568e85",
    "filename": "rpy2/situation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/situation.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/situation.py:84:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 84,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sys\nimport warnings\n",
        "source_code_len": 27,
        "target_code": "import sys\nfrom typing import Optional\nimport warnings\n",
        "target_code_len": 55,
        "diff_format": "@@ -12,2 +12,3 @@\n import sys\n+from typing import Optional\n import warnings\n",
        "source_code_with_indent": "import sys\nimport warnings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sys\nfrom typing import Optional\nimport warnings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    except Exception:  # FileNotFoundError, WindowsError, etc\n        return\n    r_home = tmp.split(os.linesep)\n    if r_home[0].startswith('WARNING'):\n        r_home = r_home[1]\n    else:\n        r_home = r_home[0].strip()\n    return r_home\n\n\ndef r_home_from_registry() -> str:\n    \"\"\"Return the R home directory from the Windows Registry.\"\"\"\n",
        "source_code_len": 344,
        "target_code": "    except Exception:  # FileNotFoundError, WindowsError, etc\n        return None\n    r_home = tmp.split(os.linesep)\n    if r_home[0].startswith('WARNING'):\n        res = r_home[1]\n    else:\n        res = r_home[0].strip()\n    return res\n\n\ndef r_home_from_registry() -> Optional[str]:\n    \"\"\"Return the R home directory from the Windows Registry.\"\"\"\n",
        "target_code_len": 350,
        "diff_format": "@@ -61,12 +62,12 @@\n     except Exception:  # FileNotFoundError, WindowsError, etc\n-        return\n+        return None\n     r_home = tmp.split(os.linesep)\n     if r_home[0].startswith('WARNING'):\n-        r_home = r_home[1]\n-    else:\n-        r_home = r_home[0].strip()\n-    return r_home\n-\n-\n-def r_home_from_registry() -> str:\n+        res = r_home[1]\n+    else:\n+        res = r_home[0].strip()\n+    return res\n+\n+\n+def r_home_from_registry() -> Optional[str]:\n     \"\"\"Return the R home directory from the Windows Registry.\"\"\"\n",
        "source_code_with_indent": "    <DED>except Exception:  # FileNotFoundError, WindowsError, etc\n        <IND>return\n    <DED>r_home = tmp.split(os.linesep)\n    if r_home[0].startswith('WARNING'):\n        <IND>r_home = r_home[1]\n    <DED>else:\n        <IND>r_home = r_home[0].strip()\n    <DED>return r_home\n\n\n<DED>def r_home_from_registry() -> str:\n    <IND>\"\"\"Return the R home directory from the Windows Registry.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>except Exception:  # FileNotFoundError, WindowsError, etc\n        <IND>return None\n    <DED>r_home = tmp.split(os.linesep)\n    if r_home[0].startswith('WARNING'):\n        <IND>res = r_home[1]\n    <DED>else:\n        <IND>res = r_home[0].strip()\n    <DED>return res\n\n\n<DED>def r_home_from_registry() -> Optional[str]:\n    <IND>\"\"\"Return the R home directory from the Windows Registry.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_r_home() -> str:\n    \"\"\"Get R's home directory (aka R_HOME).\n",
        "source_code_len": 70,
        "target_code": "\ndef get_r_home() -> Optional[str]:\n    \"\"\"Get R's home directory (aka R_HOME).\n",
        "target_code_len": 80,
        "diff_format": "@@ -100,3 +101,3 @@\n \n-def get_r_home() -> str:\n+def get_r_home() -> Optional[str]:\n     \"\"\"Get R's home directory (aka R_HOME).\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_r_home() -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_r_home() -> Optional[str]:\n    <IND>"
      }
    ]
  }
]