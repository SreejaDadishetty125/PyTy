[
  {
    "project": "reddit/baseplate.py",
    "commit": "93f1dd6326357e9c9b2be9869adee728b21daca1",
    "filename": "baseplate/server/runtime_monitor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/reddit-baseplate.py/baseplate/server/runtime_monitor.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "baseplate/server/runtime_monitor.py:51:28 Invalid type [31]: Expression `typing.Dict[slice(int, float, None)]` is not a valid type.",
    "message": " Expression `typing.Dict[slice(int, float, None)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 51,
    "warning_line": "        self.live_requests: Dict[int:float] = {}",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self) -> None:\n        self.live_requests: Dict[int:float] = {}\n\n",
        "source_code_len": 82,
        "target_code": "    def __init__(self) -> None:\n        self.live_requests: Dict[int, float] = {}\n\n",
        "target_code_len": 83,
        "diff_format": "@@ -50,3 +50,3 @@\n     def __init__(self) -> None:\n-        self.live_requests: Dict[int:float] = {}\n+        self.live_requests: Dict[int, float] = {}\n \n",
        "source_code_with_indent": "    <IND>def __init__(self) -> None:\n        <IND>self.live_requests: Dict[int:float] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>def __init__(self) -> None:\n        <IND>self.live_requests: Dict[int, float] = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]