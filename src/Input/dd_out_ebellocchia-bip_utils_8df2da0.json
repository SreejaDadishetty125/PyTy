[
  {
    "project": "ebellocchia/bip_utils",
    "commit": "8df2da061d1447a5ea68b24ae2db692a894270ff",
    "filename": "bip_utils/utils/conversion.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ebellocchia-bip_utils/bip_utils/utils/conversion.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bip_utils/utils/conversion.py:164:16 Incompatible return type [7]: Expected `List[int]` but got `None`.",
    "message": " Expected `List[int]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 164,
    "warning_line": "                return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import binascii\nfrom typing import List, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "source_code_len": 90,
        "target_code": "import binascii\nfrom typing import List, Optional, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "target_code_len": 100,
        "diff_format": "@@ -23,3 +23,3 @@\n import binascii\n-from typing import List, Union\n+from typing import List, Optional, Union\n from bip_utils.utils.algo import AlgoUtils\n",
        "source_code_with_indent": "import binascii\nfrom typing import List, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import binascii\nfrom typing import List, Optional, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                      to_bits: int,\n                      pad: bool = True) -> List[int]:\n        \"\"\" Perform generic bits conversion.\n",
        "source_code_len": 135,
        "target_code": "                      to_bits: int,\n                      pad: bool = True) -> Optional[List[int]]:\n        \"\"\" Perform generic bits conversion.\n",
        "target_code_len": 145,
        "diff_format": "@@ -142,3 +142,3 @@\n                       to_bits: int,\n-                      pad: bool = True) -> List[int]:\n+                      pad: bool = True) -> Optional[List[int]]:\n         \"\"\" Perform generic bits conversion.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                      to_bits: int,\n                      pad: bool = True) -> List[int]:\n        <IND>",
        "target_code_with_indent": "                      to_bits: int,\n                      pad: bool = True) -> Optional[List[int]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "ebellocchia/bip_utils",
    "commit": "8df2da061d1447a5ea68b24ae2db692a894270ff",
    "filename": "bip_utils/utils/conversion.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ebellocchia-bip_utils/bip_utils/utils/conversion.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bip_utils/utils/conversion.py:174:12 Incompatible return type [7]: Expected `List[int]` but got `None`.",
    "message": " Expected `List[int]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 174,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import binascii\nfrom typing import List, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "source_code_len": 90,
        "target_code": "import binascii\nfrom typing import List, Optional, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "target_code_len": 100,
        "diff_format": "@@ -23,3 +23,3 @@\n import binascii\n-from typing import List, Union\n+from typing import List, Optional, Union\n from bip_utils.utils.algo import AlgoUtils\n",
        "source_code_with_indent": "import binascii\nfrom typing import List, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import binascii\nfrom typing import List, Optional, Union\nfrom bip_utils.utils.algo import AlgoUtils\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                      to_bits: int,\n                      pad: bool = True) -> List[int]:\n        \"\"\" Perform generic bits conversion.\n",
        "source_code_len": 135,
        "target_code": "                      to_bits: int,\n                      pad: bool = True) -> Optional[List[int]]:\n        \"\"\" Perform generic bits conversion.\n",
        "target_code_len": 145,
        "diff_format": "@@ -142,3 +142,3 @@\n                       to_bits: int,\n-                      pad: bool = True) -> List[int]:\n+                      pad: bool = True) -> Optional[List[int]]:\n         \"\"\" Perform generic bits conversion.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                      to_bits: int,\n                      pad: bool = True) -> List[int]:\n        <IND>",
        "target_code_with_indent": "                      to_bits: int,\n                      pad: bool = True) -> Optional[List[int]]:\n        <IND>"
      }
    ]
  }
]