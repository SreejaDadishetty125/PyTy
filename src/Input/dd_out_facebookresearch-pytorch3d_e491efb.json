[
  {
    "project": "facebookresearch/pytorch3d",
    "commit": "e491efb81f89f60ab98a9c8a343c55c327527900",
    "filename": "pytorch3d/io/obj_io.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-pytorch3d/pytorch3d/io/obj_io.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch3d/io/obj_io.py:522:30 Incompatible variable type [9]: decimal_places is declared to have type `int` but is used as type `None`.",
    "message": " decimal_places is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 522,
    "warning_line": "def save_obj(f, verts, faces, decimal_places: int = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nfrom typing import List\nimport torch\n",
        "source_code_len": 72,
        "target_code": "from collections import namedtuple\nfrom typing import List, Optional\nimport torch\n",
        "target_code_len": 82,
        "diff_format": "@@ -10,3 +10,3 @@\n from collections import namedtuple\n-from typing import List\n+from typing import List, Optional\n import torch\n",
        "source_code_with_indent": "from collections import namedtuple\nfrom typing import List\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import namedtuple\nfrom typing import List, Optional\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef save_obj(f, verts, faces, decimal_places: int = None):\n    \"\"\"\n",
        "source_code_len": 68,
        "target_code": "\ndef save_obj(f, verts, faces, decimal_places: Optional[int] = None):\n    \"\"\"\n",
        "target_code_len": 78,
        "diff_format": "@@ -521,3 +521,3 @@\n \n-def save_obj(f, verts, faces, decimal_places: int = None):\n+def save_obj(f, verts, faces, decimal_places: Optional[int] = None):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def save_obj(f, verts, faces, decimal_places: int = None):\n    <IND>",
        "target_code_with_indent": "\n<DED>def save_obj(f, verts, faces, decimal_places: Optional[int] = None):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO (nikhilar) Speed up this function.\ndef _save(f, verts, faces, decimal_places: int = None):\n    if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_len": 145,
        "target_code": "# TODO (nikhilar) Speed up this function.\ndef _save(f, verts, faces, decimal_places: Optional[int] = None):\n    if verts.dim() != 2 or verts.size(1) != 3:\n",
        "target_code_len": 155,
        "diff_format": "@@ -546,3 +546,3 @@\n # TODO (nikhilar) Speed up this function.\n-def _save(f, verts, faces, decimal_places: int = None):\n+def _save(f, verts, faces, decimal_places: Optional[int] = None):\n     if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_with_indent": "# TODO (nikhilar) Speed up this function.\n<DED><DED><DED>def _save(f, verts, faces, decimal_places: int = None):\n    <IND>if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO (nikhilar) Speed up this function.\n<DED><DED><DED>def _save(f, verts, faces, decimal_places: Optional[int] = None):\n    <IND>if verts.dim() != 2 or verts.size(1) != 3:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/pytorch3d",
    "commit": "e491efb81f89f60ab98a9c8a343c55c327527900",
    "filename": "pytorch3d/io/obj_io.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-pytorch3d/pytorch3d/io/obj_io.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch3d/io/obj_io.py:547:27 Incompatible variable type [9]: decimal_places is declared to have type `int` but is used as type `None`.",
    "message": " decimal_places is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 547,
    "warning_line": "def _save(f, verts, faces, decimal_places: int = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\nfrom typing import List\nimport torch\n",
        "source_code_len": 72,
        "target_code": "from collections import namedtuple\nfrom typing import List, Optional\nimport torch\n",
        "target_code_len": 82,
        "diff_format": "@@ -10,3 +10,3 @@\n from collections import namedtuple\n-from typing import List\n+from typing import List, Optional\n import torch\n",
        "source_code_with_indent": "from collections import namedtuple\nfrom typing import List\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import namedtuple\nfrom typing import List, Optional\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO (nikhilar) Speed up this function.\ndef _save(f, verts, faces, decimal_places: int = None):\n    if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_len": 145,
        "target_code": "# TODO (nikhilar) Speed up this function.\ndef _save(f, verts, faces, decimal_places: Optional[int] = None):\n    if verts.dim() != 2 or verts.size(1) != 3:\n",
        "target_code_len": 155,
        "diff_format": "@@ -546,3 +546,3 @@\n # TODO (nikhilar) Speed up this function.\n-def _save(f, verts, faces, decimal_places: int = None):\n+def _save(f, verts, faces, decimal_places: Optional[int] = None):\n     if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_with_indent": "# TODO (nikhilar) Speed up this function.\n<DED><DED><DED>def _save(f, verts, faces, decimal_places: int = None):\n    <IND>if verts.dim() != 2 or verts.size(1) != 3:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO (nikhilar) Speed up this function.\n<DED><DED><DED>def _save(f, verts, faces, decimal_places: Optional[int] = None):\n    <IND>if verts.dim() != 2 or verts.size(1) != 3:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "facebookresearch/pytorch3d",
    "commit": "e491efb81f89f60ab98a9c8a343c55c327527900",
    "filename": "pytorch3d/transforms/transform3d.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/facebookresearch-pytorch3d/pytorch3d/transforms/transform3d.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch3d/transforms/transform3d.py:253:39 Incompatible variable type [9]: eps is declared to have type `float` but is used as type `None`.",
    "message": " eps is declared to have type `float` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 253,
    "warning_line": "    def transform_points(self, points, eps: float = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import warnings\nimport torch\n",
        "source_code_len": 29,
        "target_code": "import warnings\nfrom typing import Optional\nimport torch\n",
        "target_code_len": 57,
        "diff_format": "@@ -5,2 +5,3 @@\n import warnings\n+from typing import Optional\n import torch\n",
        "source_code_with_indent": "import warnings\nimport torch\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import warnings\nfrom typing import Optional\nimport torch\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def transform_points(self, points, eps: float = None):\n        \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\n    def transform_points(self, points, eps: Optional[float] = None):\n        \"\"\"\n",
        "target_code_len": 82,
        "diff_format": "@@ -252,3 +253,3 @@\n \n-    def transform_points(self, points, eps: float = None):\n+    def transform_points(self, points, eps: Optional[float] = None):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def transform_points(self, points, eps: float = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def transform_points(self, points, eps: Optional[float] = None):\n        <IND>"
      }
    ]
  }
]