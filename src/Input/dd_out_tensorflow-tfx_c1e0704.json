[
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/base_example_gen_executor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/example_gen/base_example_gen_executor.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/example_gen/base_example_gen_executor.py:134:4 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.dsl.components.base.base_beam_executor.BaseBeamExecutor)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.dsl.components.base.base_beam_executor.BaseBeamExecutor)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 134,
    "warning_line": "    with_metaclass(abc.ABCMeta, base_beam_executor.BaseBeamExecutor)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseExampleGenExecutor(\n    with_metaclass(abc.ABCMeta, base_beam_executor.BaseBeamExecutor)):\n  \"\"\"Generic TFX example gen base executor.\n",
        "source_code_len": 146,
        "target_code": "\nclass BaseExampleGenExecutor(base_beam_executor.BaseBeamExecutor, abc.ABC):\n  \"\"\"Generic TFX example gen base executor.\n",
        "target_code_len": 121,
        "diff_format": "@@ -132,4 +131,3 @@\n \n-class BaseExampleGenExecutor(\n-    with_metaclass(abc.ABCMeta, base_beam_executor.BaseBeamExecutor)):\n+class BaseExampleGenExecutor(base_beam_executor.BaseBeamExecutor, abc.ABC):\n   \"\"\"Generic TFX example gen base executor.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>class BaseExampleGenExecutor(\n    with_metaclass(abc.ABCMeta, base_beam_executor.BaseBeamExecutor)):\n  <IND>",
        "target_code_with_indent": "\n<DED>class BaseExampleGenExecutor(base_beam_executor.BaseBeamExecutor, abc.ABC):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/component_test.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/components/example_gen/component_test.py:43:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[TestExampleGenExecutor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/component_test.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/components/example_gen/component_test.py:57:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[TestExampleGenExecutor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/csv_example_gen/component.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/components/example_gen/csv_example_gen/component.py:66:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[executor.Executor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/import_example_gen/component.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/components/example_gen/import_example_gen/component.py:43:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[executor.Executor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/example_gen/input_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/example_gen/input_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/example_gen/input_processor.py:26:21 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "class InputProcessor(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass InputProcessor(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base InputProcessor class.\"\"\"\n",
        "source_code_len": 99,
        "target_code": "\nclass InputProcessor(abc.ABC):\n  \"\"\"Base InputProcessor class.\"\"\"\n",
        "target_code_len": 67,
        "diff_format": "@@ -25,3 +24,3 @@\n \n-class InputProcessor(six.with_metaclass(abc.ABCMeta, object)):\n+class InputProcessor(abc.ABC):\n   \"\"\"Base InputProcessor class.\"\"\"\n",
        "source_code_with_indent": "\nclass InputProcessor(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Base InputProcessor class.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass InputProcessor(abc.ABC):\n  <IND>\"\"\"Base InputProcessor class.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/infra_validator/model_server_clients/base_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/infra_validator/model_server_clients/base_client.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/infra_validator/model_server_clients/base_client.py:30:28 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "class BaseModelServerClient(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseModelServerClient(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Common interface for all model server clients.\"\"\"\n",
        "source_code_len": 126,
        "target_code": "\nclass BaseModelServerClient(abc.ABC):\n  \"\"\"Common interface for all model server clients.\"\"\"\n",
        "target_code_len": 94,
        "diff_format": "@@ -29,3 +28,3 @@\n \n-class BaseModelServerClient(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseModelServerClient(abc.ABC):\n   \"\"\"Common interface for all model server clients.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseModelServerClient(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Common interface for all model server clients.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseModelServerClient(abc.ABC):\n  <IND>\"\"\"Common interface for all model server clients.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/infra_validator/model_server_runners/base_runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/infra_validator/model_server_runners/base_runner.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/infra_validator/model_server_runners/base_runner.py:26:28 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 26,
    "warning_line": "class BaseModelServerRunner(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport six\n\n\nclass BaseModelServerRunner(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Shared interface of all model server runners.\n",
        "source_code_len": 135,
        "target_code": "\n\nclass BaseModelServerRunner(abc.ABC):\n  \"\"\"Shared interface of all model server runners.\n",
        "target_code_len": 91,
        "diff_format": "@@ -22,6 +22,4 @@\n \n-import six\n \n-\n-class BaseModelServerRunner(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseModelServerRunner(abc.ABC):\n   \"\"\"Shared interface of all model server runners.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nimport six\n\n\nclass BaseModelServerRunner(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>",
        "target_code_with_indent": "\n\nclass BaseModelServerRunner(abc.ABC):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/infra_validator/request_builder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/infra_validator/request_builder.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/infra_validator/request_builder.py:141:26 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 141,
    "warning_line": "class _BaseRequestBuilder(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass _BaseRequestBuilder(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base class for all RequestBuilders.\"\"\"\n",
        "source_code_len": 113,
        "target_code": "\nclass _BaseRequestBuilder(abc.ABC):\n  \"\"\"Base class for all RequestBuilders.\"\"\"\n",
        "target_code_len": 81,
        "diff_format": "@@ -140,3 +139,3 @@\n \n-class _BaseRequestBuilder(six.with_metaclass(abc.ABCMeta, object)):\n+class _BaseRequestBuilder(abc.ABC):\n   \"\"\"Base class for all RequestBuilders.\"\"\"\n",
        "source_code_with_indent": "\n<DED>class _BaseRequestBuilder(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Base class for all RequestBuilders.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>class _BaseRequestBuilder(abc.ABC):\n  <IND>\"\"\"Base class for all RequestBuilders.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/infra_validator/serving_bins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/infra_validator/serving_bins.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/infra_validator/serving_bins.py:55:20 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 55,
    "warning_line": "class ServingBinary(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ServingBinary(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base class for serving binaries.\"\"\"\n",
        "source_code_len": 104,
        "target_code": "\nclass ServingBinary(abc.ABC):\n  \"\"\"Base class for serving binaries.\"\"\"\n",
        "target_code_len": 72,
        "diff_format": "@@ -54,3 +53,3 @@\n \n-class ServingBinary(six.with_metaclass(abc.ABCMeta, object)):\n+class ServingBinary(abc.ABC):\n   \"\"\"Base class for serving binaries.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>class ServingBinary(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Base class for serving binaries.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class ServingBinary(abc.ABC):\n  <IND>\"\"\"Base class for serving binaries.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/components/trainer/rewriting/rewriter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/components/trainer/rewriting/rewriter.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/components/trainer/rewriting/rewriter.py:41:19 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 41,
    "warning_line": "class BaseRewriter(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseRewriter(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base class from which all rewriters should inherit.\"\"\"\n",
        "source_code_len": 122,
        "target_code": "\nclass BaseRewriter(abc.ABC):\n  \"\"\"Base class from which all rewriters should inherit.\"\"\"\n",
        "target_code_len": 90,
        "diff_format": "@@ -40,3 +38,3 @@\n \n-class BaseRewriter(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseRewriter(abc.ABC):\n   \"\"\"Base class from which all rewriters should inherit.\"\"\"\n",
        "source_code_with_indent": "\n<DED>class BaseRewriter(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Base class from which all rewriters should inherit.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>class BaseRewriter(abc.ABC):\n  <IND>\"\"\"Base class from which all rewriters should inherit.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/component/experimental/annotations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/component/experimental/annotations.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/component/experimental/annotations.py:40:23 Invalid type [31]: Expression `six.with_metaclass(tfx.dsl.component.experimental.annotations._ArtifactGenericMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(tfx.dsl.component.experimental.annotations._ArtifactGenericMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 40,
    "warning_line": "class _ArtifactGeneric(with_metaclass(_ArtifactGenericMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass _ArtifactGeneric(with_metaclass(_ArtifactGenericMeta, object)):\n  \"\"\"A generic that takes a Type[tfx.types.Artifact] as its single argument.\"\"\"\n",
        "source_code_len": 151,
        "target_code": "\nclass _ArtifactGeneric(metaclass=_ArtifactGenericMeta):\n  \"\"\"A generic that takes a Type[tfx.types.Artifact] as its single argument.\"\"\"\n",
        "target_code_len": 137,
        "diff_format": "@@ -39,3 +38,3 @@\n \n-class _ArtifactGeneric(with_metaclass(_ArtifactGenericMeta, object)):\n+class _ArtifactGeneric(metaclass=_ArtifactGenericMeta):\n   \"\"\"A generic that takes a Type[tfx.types.Artifact] as its single argument.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>class _ArtifactGeneric(with_metaclass(_ArtifactGenericMeta, object)):\n  <IND>\"\"\"A generic that takes a Type[tfx.types.Artifact] as its single argument.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class _ArtifactGeneric(metaclass=_ArtifactGenericMeta):\n  <IND>\"\"\"A generic that takes a Type[tfx.types.Artifact] as its single argument.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/component/experimental/annotations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/component/experimental/annotations.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/component/experimental/annotations.py:82:28 Invalid type [31]: Expression `six.with_metaclass(tfx.dsl.component.experimental.annotations._PrimitiveTypeGenericMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(tfx.dsl.component.experimental.annotations._PrimitiveTypeGenericMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 82,
    "warning_line": "class _PrimitiveTypeGeneric(with_metaclass(_PrimitiveTypeGenericMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass _PrimitiveTypeGeneric(with_metaclass(_PrimitiveTypeGenericMeta, object)):\n  \"\"\"A generic that takes a primitive type as its single argument.\"\"\"\n",
        "source_code_len": 151,
        "target_code": "\nclass _PrimitiveTypeGeneric(metaclass=_PrimitiveTypeGenericMeta):\n  \"\"\"A generic that takes a primitive type as its single argument.\"\"\"\n",
        "target_code_len": 137,
        "diff_format": "@@ -81,3 +80,3 @@\n \n-class _PrimitiveTypeGeneric(with_metaclass(_PrimitiveTypeGenericMeta, object)):\n+class _PrimitiveTypeGeneric(metaclass=_PrimitiveTypeGenericMeta):\n   \"\"\"A generic that takes a primitive type as its single argument.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>class _PrimitiveTypeGeneric(with_metaclass(_PrimitiveTypeGenericMeta, object)):\n  <IND>\"\"\"A generic that takes a primitive type as its single argument.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class _PrimitiveTypeGeneric(metaclass=_PrimitiveTypeGenericMeta):\n  <IND>\"\"\"A generic that takes a primitive type as its single argument.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/components/base/base_component.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/components/base/base_component.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/components/base/base_component.py:38:20 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.dsl.components.base.base_node.BaseNode)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.dsl.components.base.base_node.BaseNode)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 38,
    "warning_line": "class BaseComponent(with_metaclass(abc.ABCMeta, base_node.BaseNode)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseComponent(with_metaclass(abc.ABCMeta, base_node.BaseNode)):\n  \"\"\"Base class for a TFX pipeline component.\n",
        "source_code_len": 117,
        "target_code": "\nclass BaseComponent(base_node.BaseNode, abc.ABC):\n  \"\"\"Base class for a TFX pipeline component.\n",
        "target_code_len": 97,
        "diff_format": "@@ -37,3 +35,3 @@\n \n-class BaseComponent(with_metaclass(abc.ABCMeta, base_node.BaseNode)):\n+class BaseComponent(base_node.BaseNode, abc.ABC):\n   \"\"\"Base class for a TFX pipeline component.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass BaseComponent(with_metaclass(abc.ABCMeta, base_node.BaseNode)):\n  <IND>",
        "target_code_with_indent": "\nclass BaseComponent(base_node.BaseNode, abc.ABC):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/components/base/base_executor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/components/base/base_executor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/components/base/base_executor.py:46:19 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 46,
    "warning_line": "class BaseExecutor(with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseExecutor(with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Abstract TFX executor class.\"\"\"\n",
        "source_code_len": 95,
        "target_code": "\nclass BaseExecutor(abc.ABC):\n  \"\"\"Abstract TFX executor class.\"\"\"\n",
        "target_code_len": 67,
        "diff_format": "@@ -45,3 +44,3 @@\n \n-class BaseExecutor(with_metaclass(abc.ABCMeta, object)):\n+class BaseExecutor(abc.ABC):\n   \"\"\"Abstract TFX executor class.\"\"\"\n",
        "source_code_with_indent": "\n<DED>class BaseExecutor(with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Abstract TFX executor class.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>class BaseExecutor(abc.ABC):\n  <IND>\"\"\"Abstract TFX executor class.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/components/base/base_node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/components/base/base_node.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/components/base/base_node.py:39:15 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 39,
    "warning_line": "class BaseNode(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseNode(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  \"\"\"Base class for a node in TFX pipeline.\"\"\"\n",
        "source_code_len": 114,
        "target_code": "\nclass BaseNode(json_utils.Jsonable, abc.ABC):\n  \"\"\"Base class for a node in TFX pipeline.\"\"\"\n",
        "target_code_len": 94,
        "diff_format": "@@ -38,3 +37,3 @@\n \n-class BaseNode(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n+class BaseNode(json_utils.Jsonable, abc.ABC):\n   \"\"\"Base class for a node in TFX pipeline.\"\"\"\n",
        "source_code_with_indent": "\n<DED>class BaseNode(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  <IND>\"\"\"Base class for a node in TFX pipeline.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>class BaseNode(json_utils.Jsonable, abc.ABC):\n  <IND>\"\"\"Base class for a node in TFX pipeline.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/dsl/components/base/executor_spec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/dsl/components/base/executor_spec.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/dsl/components/base/executor_spec.py:35:19 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 35,
    "warning_line": "class ExecutorSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ExecutorSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  \"\"\"A specification for a component executor.\n",
        "source_code_len": 118,
        "target_code": "\nclass ExecutorSpec(json_utils.Jsonable):\n  \"\"\"A specification for a component executor.\n",
        "target_code_len": 89,
        "diff_format": "@@ -34,3 +32,3 @@\n \n-class ExecutorSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n+class ExecutorSpec(json_utils.Jsonable):\n   \"\"\"A specification for a component executor.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass ExecutorSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  <IND>",
        "target_code_with_indent": "\nclass ExecutorSpec(json_utils.Jsonable):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/examples/airflow_workshop/setup/dags/taxi_pipeline.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/examples/airflow_workshop/setup/dags/taxi_pipeline.py:177:6 Incompatible parameter type [6]: Expected `typing.Optional[List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `List[tfx.components.example_gen.csv_example_gen.component.CsvExampleGen]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/examples/custom_components/hello_world/example/taxi_pipeline_hello.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/examples/custom_components/hello_world/example/taxi_pipeline_hello.py:60:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[component.HelloComponent, tfx.components.example_gen.csv_example_gen.component.CsvExampleGen, tfx.components.statistics_gen.component.StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/examples/custom_components/presto_example_gen/presto_component/component.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/examples/custom_components/presto_example_gen/presto_component/component.py:38:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[executor.Executor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/examples/ranking/ranking_pipeline.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/examples/ranking/ranking_pipeline.py:156:6 Incompatible parameter type [6]: Expected `typing.Optional[List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `List[typing.Union[binder_component.DataViewBinder, provider_component.TfGraphDataViewProvider, tfx.components.evaluator.component.Evaluator, tfx.components.example_gen.import_example_gen.component.ImportExampleGen, tfx.components.pusher.component.Pusher, tfx.components.schema_gen.component.SchemaGen, tfx.components.statistics_gen.component.StatisticsGen, tfx.components.trainer.component.Trainer, tfx.components.transform.component.Transform]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/extensions/google_cloud_big_query/example_gen/component.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/extensions/google_cloud_big_query/example_gen/component.py:41:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[executor.Executor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/extensions/google_cloud_big_query/experimental/elwc_example_gen/component/component.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/extensions/google_cloud_big_query/experimental/elwc_example_gen/component/component.py:34:49 Incompatible parameter type [6]: Expected `typing.Type[tfx.dsl.components.base.base_executor.BaseExecutor]` for 1st positional only parameter to call `executor_spec.BeamExecutorSpec.__init__` but got `typing.Type[executor.Executor]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/config/base_component_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/config/base_component_config.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/config/base_component_config.py:27:26 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "class BaseComponentConfig(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseComponentConfig(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  \"\"\"Base class for TFX component configs.\"\"\"\n",
        "source_code_len": 124,
        "target_code": "\nclass BaseComponentConfig(json_utils.Jsonable):\n  \"\"\"Base class for TFX component configs.\"\"\"\n",
        "target_code_len": 95,
        "diff_format": "@@ -26,3 +23,3 @@\n \n-class BaseComponentConfig(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n+class BaseComponentConfig(json_utils.Jsonable):\n   \"\"\"Base class for TFX component configs.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseComponentConfig(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  <IND>\"\"\"Base class for TFX component configs.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseComponentConfig(json_utils.Jsonable):\n  <IND>\"\"\"Base class for TFX component configs.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/experimental/interactive/visualizations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/experimental/interactive/visualizations.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/experimental/interactive/visualizations.py:32:28 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "class ArtifactVisualization(with_metaclass(abc.ABCMeta)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ArtifactVisualization(with_metaclass(abc.ABCMeta)):\n  \"\"\"Visualization for a certain type of Artifact.\"\"\"\n",
        "source_code_len": 113,
        "target_code": "\nclass ArtifactVisualization(abc.ABC):\n  \"\"\"Visualization for a certain type of Artifact.\"\"\"\n",
        "target_code_len": 93,
        "diff_format": "@@ -31,3 +29,3 @@\n \n-class ArtifactVisualization(with_metaclass(abc.ABCMeta)):\n+class ArtifactVisualization(abc.ABC):\n   \"\"\"Visualization for a certain type of Artifact.\"\"\"\n",
        "source_code_with_indent": "\nclass ArtifactVisualization(with_metaclass(abc.ABCMeta)):\n  <IND>\"\"\"Visualization for a certain type of Artifact.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass ArtifactVisualization(abc.ABC):\n  <IND>\"\"\"Visualization for a certain type of Artifact.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/kubeflow_dag_runner_test.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/kubeflow_dag_runner_test.py:50:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 4th parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `typing.List[typing.Union[big_query_example_gen_component.BigQueryExampleGen, statistics_gen_component.StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/kubeflow_dag_runner_test.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/kubeflow_dag_runner_test.py:74:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 4th parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `typing.List[_DummyComponent]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/v2/test_utils.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/v2/test_utils.py:91:6 Incompatible parameter type [6]: Expected `typing.Optional[List[base_node.BaseNode]]` for 3rd parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `List[typing.Union[big_query_example_gen_component.BigQueryExampleGen, components.statistics_gen.component.StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/v2/test_utils.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/v2/test_utils.py:385:6 Incompatible parameter type [6]: Expected `typing.Optional[List[base_node.BaseNode]]` for 3rd parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `List[typing.Union[DummyContainerSpecComponent, DummyProducerComponent]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/v2/test_utils.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/v2/test_utils.py:495:6 Incompatible parameter type [6]: Expected `typing.Optional[List[base_node.BaseNode]]` for 3rd parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `List[typing.Union[ConsumerComponent, ProducerComponent]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/kubeflow/v2/test_utils.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/orchestration/kubeflow/v2/test_utils.py:524:6 Incompatible parameter type [6]: Expected `typing.Optional[List[base_node.BaseNode]]` for 3rd parameter `components` to call `tfx_pipeline.Pipeline.__init__` but got `List[base_component.BaseComponent]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/launcher/base_component_launcher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/launcher/base_component_launcher.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/launcher/base_component_launcher.py:37:28 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 37,
    "warning_line": "class BaseComponentLauncher(with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseComponentLauncher(with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Responsible for launching driver, executor and publisher of component.\"\"\"\n",
        "source_code_len": 146,
        "target_code": "\nclass BaseComponentLauncher(abc.ABC):\n  \"\"\"Responsible for launching driver, executor and publisher of component.\"\"\"\n",
        "target_code_len": 118,
        "diff_format": "@@ -36,3 +35,3 @@\n \n-class BaseComponentLauncher(with_metaclass(abc.ABCMeta, object)):\n+class BaseComponentLauncher(abc.ABC):\n   \"\"\"Responsible for launching driver, executor and publisher of component.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseComponentLauncher(with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"Responsible for launching driver, executor and publisher of component.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseComponentLauncher(abc.ABC):\n  <IND>\"\"\"Responsible for launching driver, executor and publisher of component.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/portable/base_driver.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/portable/base_driver.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/portable/base_driver.py:24:17 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 24,
    "warning_line": "class BaseDriver(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseDriver(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"The base class of all drivers.\"\"\"\n",
        "source_code_len": 99,
        "target_code": "\nclass BaseDriver(abc.ABC):\n  \"\"\"The base class of all drivers.\"\"\"\n",
        "target_code_len": 67,
        "diff_format": "@@ -23,3 +22,3 @@\n \n-class BaseDriver(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseDriver(abc.ABC):\n   \"\"\"The base class of all drivers.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseDriver(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"The base class of all drivers.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseDriver(abc.ABC):\n  <IND>\"\"\"The base class of all drivers.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/portable/base_driver_operator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/portable/base_driver_operator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/portable/base_driver_operator.py:27:25 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "class BaseDriverOperator(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseDriverOperator(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_len": 118,
        "target_code": "\nclass BaseDriverOperator(abc.ABC):\n  \"\"\"The base class of all executor operators.\"\"\"\n",
        "target_code_len": 86,
        "diff_format": "@@ -26,3 +25,3 @@\n \n-class BaseDriverOperator(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseDriverOperator(abc.ABC):\n   \"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseDriverOperator(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseDriverOperator(abc.ABC):\n  <IND>\"\"\"The base class of all executor operators.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/portable/base_executor_operator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/portable/base_executor_operator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/portable/base_executor_operator.py:27:27 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "class BaseExecutorOperator(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseExecutorOperator(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_len": 120,
        "target_code": "\nclass BaseExecutorOperator(abc.ABC):\n  \"\"\"The base class of all executor operators.\"\"\"\n",
        "target_code_len": 88,
        "diff_format": "@@ -26,3 +25,3 @@\n \n-class BaseExecutorOperator(six.with_metaclass(abc.ABCMeta, object)):\n+class BaseExecutorOperator(abc.ABC):\n   \"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_with_indent": "\nclass BaseExecutorOperator(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"The base class of all executor operators.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass BaseExecutorOperator(abc.ABC):\n  <IND>\"\"\"The base class of all executor operators.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/portable/system_node_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/portable/system_node_handler.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/portable/system_node_handler.py:25:24 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "class SystemNodeHandler(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass SystemNodeHandler(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"SystemNodeHandler is the base class of all system nodes' handler.\"\"\"\n",
        "source_code_len": 141,
        "target_code": "\nclass SystemNodeHandler(abc.ABC):\n  \"\"\"SystemNodeHandler is the base class of all system nodes' handler.\"\"\"\n",
        "target_code_len": 109,
        "diff_format": "@@ -24,3 +23,3 @@\n \n-class SystemNodeHandler(six.with_metaclass(abc.ABCMeta, object)):\n+class SystemNodeHandler(abc.ABC):\n   \"\"\"SystemNodeHandler is the base class of all system nodes' handler.\"\"\"\n",
        "source_code_with_indent": "\nclass SystemNodeHandler(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>\"\"\"SystemNodeHandler is the base class of all system nodes' handler.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass SystemNodeHandler(abc.ABC):\n  <IND>\"\"\"SystemNodeHandler is the base class of all system nodes' handler.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/orchestration/tfx_runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/orchestration/tfx_runner.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/orchestration/tfx_runner.py:25:16 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "class TfxRunner(six.with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TfxRunner(six.with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base runner class for TFX.\n",
        "source_code_len": 91,
        "target_code": "\nclass TfxRunner(abc.ABC):\n  \"\"\"Base runner class for TFX.\n",
        "target_code_len": 59,
        "diff_format": "@@ -24,3 +22,3 @@\n \n-class TfxRunner(six.with_metaclass(abc.ABCMeta, object)):\n+class TfxRunner(abc.ABC):\n   \"\"\"Base runner class for TFX.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass TfxRunner(six.with_metaclass(abc.ABCMeta, object)):\n  <IND>",
        "target_code_with_indent": "\nclass TfxRunner(abc.ABC):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/handler/base_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/tools/cli/handler/base_handler.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/tools/cli/handler/base_handler.py:36:18 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 36,
    "warning_line": "class BaseHandler(with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BaseHandler(with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base Handler for CLI.\n",
        "source_code_len": 84,
        "target_code": "\nclass BaseHandler(abc.ABC):\n  \"\"\"Base Handler for CLI.\n",
        "target_code_len": 56,
        "diff_format": "@@ -35,3 +34,3 @@\n \n-class BaseHandler(with_metaclass(abc.ABCMeta, object)):\n+class BaseHandler(abc.ABC):\n   \"\"\"Base Handler for CLI.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nclass BaseHandler(with_metaclass(abc.ABCMeta, object)):\n  <IND>",
        "target_code_with_indent": "\nclass BaseHandler(abc.ABC):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/kubeflow_v2/testdata/test_pipeline_1.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/kubeflow_v2/testdata/test_pipeline_1.py:51:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[CsvExampleGen, SchemaGen, StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/kubeflow_v2/testdata/test_pipeline_2.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/kubeflow_v2/testdata/test_pipeline_2.py:43:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[CsvExampleGen]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_beam_1.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_beam_1.py:59:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[CsvExampleGen, SchemaGen, StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_beam_2.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_beam_2.py:52:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[CsvExampleGen]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_beam_3.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_beam_3.py:78:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[CsvExampleGen, ExampleValidator, SchemaGen, StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_local_1.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_local_1.py:54:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[CsvExampleGen, SchemaGen, StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_local_2.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_local_2.py:47:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[CsvExampleGen]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/tools/cli/testdata/test_pipeline_local_3.py",
    "min_patch_found": false,
    "full_warning_msg": "tfx/tools/cli/testdata/test_pipeline_local_3.py:73:6 Incompatible parameter type [6]: Expected `typing.Optional[typing.List[tfx.dsl.components.base.base_node.BaseNode]]` for 3rd parameter `components` to call `pipeline.Pipeline.__init__` but got `typing.List[typing.Union[CsvExampleGen, ExampleValidator, SchemaGen, StatisticsGen]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/types/component_spec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/types/component_spec.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/types/component_spec.py:90:20 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, tfx.utils.json_utils.Jsonable)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 90,
    "warning_line": "class ComponentSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ComponentSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  \"\"\"A specification of the inputs, outputs and parameters for a component.\n",
        "source_code_len": 148,
        "target_code": "\nclass ComponentSpec(json_utils.Jsonable):\n  \"\"\"A specification of the inputs, outputs and parameters for a component.\n",
        "target_code_len": 119,
        "diff_format": "@@ -89,3 +86,3 @@\n \n-class ComponentSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n+class ComponentSpec(json_utils.Jsonable):\n   \"\"\"A specification of the inputs, outputs and parameters for a component.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>class ComponentSpec(with_metaclass(abc.ABCMeta, json_utils.Jsonable)):\n  <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>class ComponentSpec(json_utils.Jsonable):\n  <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/tfx",
    "commit": "c1e0704b2a83232469f55598efcdb7808b6c909f",
    "filename": "tfx/utils/json_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-tfx/tfx/utils/json_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tfx/utils/json_utils.py:63:15 Invalid type [31]: Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `six.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 63,
    "warning_line": "class Jsonable(with_metaclass(abc.ABCMeta, object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass Jsonable(with_metaclass(abc.ABCMeta, object)):\n  \"\"\"Base class for serializing and deserializing objects to/from JSON.\n",
        "source_code_len": 126,
        "target_code": "\nclass Jsonable(abc.ABC):\n  \"\"\"Base class for serializing and deserializing objects to/from JSON.\n",
        "target_code_len": 98,
        "diff_format": "@@ -62,3 +61,3 @@\n \n-class Jsonable(with_metaclass(abc.ABCMeta, object)):\n+class Jsonable(abc.ABC):\n   \"\"\"Base class for serializing and deserializing objects to/from JSON.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>class Jsonable(with_metaclass(abc.ABCMeta, object)):\n  <IND>",
        "target_code_with_indent": "\n<DED>class Jsonable(abc.ABC):\n  <IND>"
      }
    ]
  }
]