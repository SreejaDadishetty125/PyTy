[
  {
    "project": "pyvisa/pyvisa",
    "commit": "678333df369e4168de72cae198fdf4a91ff06936",
    "filename": "pyvisa/util.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyvisa-pyvisa/pyvisa/util.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyvisa/util.py:350:11 Call error [29]: `Union[typing.Callable[[Iterable[typing.Any]], Sequence[typing.Any]], Type[typing.Any]]` is not a function.",
    "message": " `Union[typing.Callable[[Iterable[typing.Any]], Sequence[typing.Any]], Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 350,
    "warning_line": "    return container([converter(raw_value) for raw_value in data])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    separator: Union[str, Callable[[str], Iterable[str]]] = \",\",\n    container: Union[Type, Callable[[Iterable], Sequence]] = list,\n) -> Sequence:\n",
        "source_code_len": 147,
        "target_code": "    separator: Union[str, Callable[[str], Iterable[str]]] = \",\",\n    container: Callable[\n        [Iterable[Union[int, float]]], Sequence[Union[int, float]]\n    ] = list,\n) -> Sequence:\n",
        "target_code_len": 186,
        "diff_format": "@@ -303,3 +303,5 @@\n     separator: Union[str, Callable[[str], Iterable[str]]] = \",\",\n-    container: Union[Type, Callable[[Iterable], Sequence]] = list,\n+    container: Callable[\n+        [Iterable[Union[int, float]]], Sequence[Union[int, float]]\n+    ] = list,\n ) -> Sequence:\n",
        "source_code_with_indent": "    separator: Union[str, Callable[[str], Iterable[str]]] = \",\",\n    container: Union[Type, Callable[[Iterable], Sequence]] = list,\n) -> Sequence:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    separator: Union[str, Callable[[str], Iterable[str]]] = \",\",\n    container: Callable[\n        [Iterable[Union[int, float]]], Sequence[Union[int, float]]\n    ] = list,\n) -> Sequence:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]