[
  {
    "project": "cisagov/Malcolm",
    "commit": "99276ee579e587bdd47bb7c31c88e5a296e24e41",
    "filename": "scripts/install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cisagov-Malcolm/scripts/install.py",
    "file_hunks_size": 59,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/install.py:47:40 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 47,
    "warning_line": "DOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n# URLS for figuring things out if something goes wrong\nDOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\nDOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n                                           'https://docs.docker.com/docker-for-windows/install/']\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\nDOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n                                        'https://docs.docker.com/docker-for-mac/install/']\nDOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\nHOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n\n",
        "source_code_len": 1126,
        "target_code": "\n###################################################################################################\nScriptName = os.path.basename(__file__)\norigPath = os.getcwd()\n\n",
        "target_code_len": 165,
        "diff_format": "@@ -44,14 +40,5 @@\n \n-# URLS for figuring things out if something goes wrong\n-DOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\n-DOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n-                                           'https://docs.docker.com/docker-for-windows/install/']\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\n-DOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n-                                        'https://docs.docker.com/docker-for-mac/install/']\n-DOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\n-HOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n+###################################################################################################\n+ScriptName = os.path.basename(__file__)\n+origPath = os.getcwd()\n \n",
        "source_code_with_indent": "\n# URLS for figuring things out if something goes wrong\nDOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\nDOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n                                           'https://docs.docker.com/docker-for-windows/install/']\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\nDOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n                                        'https://docs.docker.com/docker-for-mac/install/']\nDOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\nHOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n###################################################################################################\nScriptName = os.path.basename(__file__)\norigPath = os.getcwd()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "cisagov/Malcolm",
    "commit": "99276ee579e587bdd47bb7c31c88e5a296e24e41",
    "filename": "scripts/install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cisagov-Malcolm/scripts/install.py",
    "file_hunks_size": 59,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/install.py:53:37 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 53,
    "warning_line": "DOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n# URLS for figuring things out if something goes wrong\nDOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\nDOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n                                           'https://docs.docker.com/docker-for-windows/install/']\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\nDOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n                                        'https://docs.docker.com/docker-for-mac/install/']\nDOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\nHOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n\n",
        "source_code_len": 1126,
        "target_code": "\n###################################################################################################\nScriptName = os.path.basename(__file__)\norigPath = os.getcwd()\n\n",
        "target_code_len": 165,
        "diff_format": "@@ -44,14 +40,5 @@\n \n-# URLS for figuring things out if something goes wrong\n-DOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\n-DOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n-                                           'https://docs.docker.com/docker-for-windows/install/']\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\n-DOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\n-DOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n-                                        'https://docs.docker.com/docker-for-mac/install/']\n-DOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\n-HOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n+###################################################################################################\n+ScriptName = os.path.basename(__file__)\n+origPath = os.getcwd()\n \n",
        "source_code_with_indent": "\n# URLS for figuring things out if something goes wrong\nDOCKER_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/install/')\nDOCKER_INSTALL_URLS[PLATFORM_WINDOWS] = ['https://stefanscherer.github.io/how-to-install-docker-the-chocolatey-way/',\n                                           'https://docs.docker.com/docker-for-windows/install/']\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_UBUNTU] = 'https://docs.docker.com/install/linux/docker-ce/ubuntu/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_DEBIAN] = 'https://docs.docker.com/install/linux/docker-ce/debian/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_CENTOS] = 'https://docs.docker.com/install/linux/docker-ce/centos/'\nDOCKER_INSTALL_URLS[PLATFORM_LINUX_FEDORA] = 'https://docs.docker.com/install/linux/docker-ce/fedora/'\nDOCKER_INSTALL_URLS[PLATFORM_MAC] =  ['https://www.code2bits.com/how-to-install-docker-on-macos-using-homebrew/',\n                                        'https://docs.docker.com/docker-for-mac/install/']\nDOCKER_COMPOSE_INSTALL_URLS = defaultdict(lambda: 'https://docs.docker.com/compose/install/')\nHOMEBREW_INSTALL_URLS = defaultdict(lambda: 'https://brew.sh/')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n###################################################################################################\nScriptName = os.path.basename(__file__)\norigPath = os.getcwd()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "cisagov/Malcolm",
    "commit": "99276ee579e587bdd47bb7c31c88e5a296e24e41",
    "filename": "scripts/install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cisagov-Malcolm/scripts/install.py",
    "file_hunks_size": 59,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/install.py:72:49 Unbound name [10]: Name `raw_input` is used but not defined in the current scope.",
    "message": " Name `raw_input` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 72,
    "warning_line": "  if hasattr(__builtins__, 'raw_input'): input = raw_input",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "PY3 = (sys.version_info.major >= 3)\nscriptName = os.path.basename(__file__)\nscriptPath = os.path.dirname(os.path.realpath(__file__))\norigPath = os.getcwd()\n\n###################################################################################################\n# print to stderr\ndef eprint(*args, **kwargs):\n  print(*args, file=sys.stderr, **kwargs)\n\n###################################################################################################\nif not PY3:\n  if hasattr(__builtins__, 'raw_input'): input = raw_input\n\n# attempt to import requests, will cover failure later\ntry:\n  import requests\n  requestsImported = True\nexcept ImportError:\n  requestsImported = False\n\ntry:\n",
        "source_code_len": 676,
        "target_code": "PY3 = (sys.version_info.major >= 3)\n\n###################################################################################################\ntry:\n",
        "target_code_len": 142,
        "diff_format": "@@ -60,22 +47,4 @@\n PY3 = (sys.version_info.major >= 3)\n-scriptName = os.path.basename(__file__)\n-scriptPath = os.path.dirname(os.path.realpath(__file__))\n-origPath = os.getcwd()\n \n ###################################################################################################\n-# print to stderr\n-def eprint(*args, **kwargs):\n-  print(*args, file=sys.stderr, **kwargs)\n-\n-###################################################################################################\n-if not PY3:\n-  if hasattr(__builtins__, 'raw_input'): input = raw_input\n-\n-# attempt to import requests, will cover failure later\n-try:\n-  import requests\n-  requestsImported = True\n-except ImportError:\n-  requestsImported = False\n-\n try:\n",
        "source_code_with_indent": "PY3 = (sys.version_info.major >= 3)\nscriptName = os.path.basename(__file__)\nscriptPath = os.path.dirname(os.path.realpath(__file__))\norigPath = os.getcwd()\n\n###################################################################################################\n# print to stderr\ndef eprint(*args, **kwargs):\n  <IND>print(*args, file=sys.stderr, **kwargs)\n\n###################################################################################################\n<DED>if not PY3:\n  <IND>if hasattr(__builtins__, 'raw_input'): input = raw_input\n\n# attempt to import requests, will cover failure later\n<DED>try:\n  <IND>import requests\n  requestsImported = True\n<DED>except ImportError:\n  <IND>requestsImported = False\n\n<DED>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "PY3 = (sys.version_info.major >= 3)\n\n###################################################################################################\ntry:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]