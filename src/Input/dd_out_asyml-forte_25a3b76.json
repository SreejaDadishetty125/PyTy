[
  {
    "project": "asyml/forte",
    "commit": "25a3b76ca2b054462f555f3fd830d864bd79bae9",
    "filename": "forte/data/ontology/ontology_code_generator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/ontology/ontology_code_generator.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "forte/data/ontology/ontology_code_generator.py:381:48 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `OntologyCodeGenerator.parse_ontology_spec` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `OntologyCodeGenerator.parse_ontology_spec` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 381,
    "warning_line": "            self.parse_ontology_spec(spec_path, destination_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def generate(self, spec_path: str,\n                 destination_dir: Optional[str] = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_len": 163,
        "target_code": "    def generate(self, spec_path: str,\n                 destination_dir: str = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "target_code_len": 153,
        "diff_format": "@@ -339,3 +340,3 @@\n     def generate(self, spec_path: str,\n-                 destination_dir: Optional[str] = os.getcwd(),\n+                 destination_dir: str = os.getcwd(),\n                  is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_with_indent": "    <DED><DED><DED><DED>def generate(self, spec_path: str,\n                 destination_dir: Optional[str] = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED><DED><DED>def generate(self, spec_path: str,\n                 destination_dir: str = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "25a3b76ca2b054462f555f3fd830d864bd79bae9",
    "filename": "forte/data/ontology/ontology_code_generator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/ontology/ontology_code_generator.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "forte/data/ontology/ontology_code_generator.py:414:40 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `dir_util.copy_tree` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `dir_util.copy_tree` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 414,
    "warning_line": "            dir_util.copy_tree(tempdir, destination_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def generate(self, spec_path: str,\n                 destination_dir: Optional[str] = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_len": 163,
        "target_code": "    def generate(self, spec_path: str,\n                 destination_dir: str = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "target_code_len": 153,
        "diff_format": "@@ -339,3 +340,3 @@\n     def generate(self, spec_path: str,\n-                 destination_dir: Optional[str] = os.getcwd(),\n+                 destination_dir: str = os.getcwd(),\n                  is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_with_indent": "    <DED><DED><DED><DED>def generate(self, spec_path: str,\n                 destination_dir: Optional[str] = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED><DED><DED>def generate(self, spec_path: str,\n                 destination_dir: str = os.getcwd(),\n                 is_dry_run: bool = False) -> Optional[str]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "25a3b76ca2b054462f555f3fd830d864bd79bae9",
    "filename": "forte/data/ontology/ontology_code_generator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/ontology/ontology_code_generator.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "forte/data/ontology/ontology_code_generator.py:910:8 Incompatible return type [7]: Expected `str` but got `Optional[str]`.",
    "message": " Expected `str` but got `Optional[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 910,
    "warning_line": "        return base_entry",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        base_entry: str = self.find_base_entry(entry_name.class_name,\n                                               parent_entry)\n\n",
        "source_code_len": 133,
        "target_code": "\n        base_entry: Optional[str] = self.find_base_entry(\n            entry_name.class_name, parent_entry)\n\n",
        "target_code_len": 109,
        "diff_format": "@@ -685,4 +692,4 @@\n \n-        base_entry: str = self.find_base_entry(entry_name.class_name,\n-                                               parent_entry)\n+        base_entry: Optional[str] = self.find_base_entry(\n+            entry_name.class_name, parent_entry)\n \n",
        "source_code_with_indent": "\n        <DED>base_entry: str = self.find_base_entry(entry_name.class_name,\n                                               parent_entry)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>base_entry: Optional[str] = self.find_base_entry(\n            entry_name.class_name, parent_entry)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def find_base_entry(self, this_entry: str, parent_entry: str) -> str:\n        \"\"\" Find the `base_entry`. As a side effect, it will populate the\n",
        "source_code_len": 149,
        "target_code": "\n    def find_base_entry(\n            self, this_entry: str, parent_entry: str) -> Optional[str]:\n        \"\"\" Find the `base_entry`. As a side effect, it will populate the\n",
        "target_code_len": 172,
        "diff_format": "@@ -878,3 +885,4 @@\n \n-    def find_base_entry(self, this_entry: str, parent_entry: str) -> str:\n+    def find_base_entry(\n+            self, this_entry: str, parent_entry: str) -> Optional[str]:\n         \"\"\" Find the `base_entry`. As a side effect, it will populate the\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def find_base_entry(self, this_entry: str, parent_entry: str) -> str:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def find_base_entry(\n            self, this_entry: str, parent_entry: str) -> Optional[str]:\n        <IND>"
      }
    ]
  }
]