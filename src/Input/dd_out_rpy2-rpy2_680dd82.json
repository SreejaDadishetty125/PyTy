[
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/rinterface_lib/sexp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/sexp.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/rinterface_lib/sexp.py:747:60 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T2]]` for 2nd positional only parameter to call `zip.__new__` but got `typing.Union[typing.Sequence[typing.Optional[str]], NACharacterType, StrSexpVector, str]`.",
    "message": " Expected `typing.Iterable[Variable[_T2]]` for 2nd positional only parameter to call `zip.__new__` but got `typing.Union[typing.Sequence[typing.Optional[str]], NACharacterType, StrSexpVector, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 747,
    "warning_line": "            for i_c, _ in zip(range(*i.indices(len(self))), value):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import enum\nimport typing\n",
        "source_code_len": 26,
        "target_code": "import enum\nimport itertools\nimport typing\n",
        "target_code_len": 43,
        "diff_format": "@@ -6,2 +6,3 @@\n import enum\n+import itertools\n import typing\n",
        "source_code_with_indent": "import enum\nimport typing\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import enum\nimport itertools\nimport typing\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\nVT = typing.TypeVar('VT', bound='SexpVector')\n\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -481,2 +487,4 @@\n \n+VT = typing.TypeVar('VT', bound='SexpVector')\n+\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nVT = typing.TypeVar('VT', bound='SexpVector')\n\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nVT = typing.TypeVar('VT', bound='SexpVector')\n\n\nclass SexpVector(Sexp, metaclass=abc.ABCMeta):\n    \"\"\"Base abstract class for R vector objects.\n\n    R vector objects are, at the C level, essentially C arrays wrapped in\n    the general structure for R objects.\"\"\"\n\n",
        "source_code_len": 265,
        "target_code": "\nclass SexpVectorAbstract(SupportsSEXP, metaclass=abc.ABCMeta):\n\n",
        "target_code_len": 65,
        "diff_format": "@@ -489,10 +497,3 @@\n \n-VT = typing.TypeVar('VT', bound='SexpVector')\n-\n-\n-class SexpVector(Sexp, metaclass=abc.ABCMeta):\n-    \"\"\"Base abstract class for R vector objects.\n-\n-    R vector objects are, at the C level, essentially C arrays wrapped in\n-    the general structure for R objects.\"\"\"\n+class SexpVectorAbstract(SupportsSEXP, metaclass=abc.ABCMeta):\n \n",
        "source_code_with_indent": "\n<DED><DED>VT = typing.TypeVar('VT', bound='SexpVector')\n\n\nclass SexpVector(Sexp, metaclass=abc.ABCMeta):\n    <IND>\"\"\"Base abstract class for R vector objects.\n\n    R vector objects are, at the C level, essentially C arrays wrapped in\n    the general structure for R objects.\"\"\"\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class SexpVectorAbstract(SupportsSEXP, metaclass=abc.ABCMeta):\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        pass\n\n    def __init__(self,\n                 obj: typing.Union[_rinterface.SexpCapsule,\n                                   collections.abc.Sized]):\n        if isinstance(obj, Sexp) or isinstance(obj,\n                                               _rinterface.SexpCapsule):\n            super().__init__(obj)\n        elif isinstance(obj, collections.abc.Sized):\n            super().__init__(self.from_object(obj).__sexp__)\n        else:\n            raise TypeError('The constructor must be called '\n                            'with an instance of '\n                            'rpy2.rinterface.Sexp '\n                            'or an instance of '\n                            'rpy2.rinterface._rinterface.SexpCapsule')\n\n",
        "source_code_len": 730,
        "target_code": "        pass\n\n",
        "target_code_len": 14,
        "diff_format": "@@ -527,17 +528,2 @@\n         pass\n-\n-    def __init__(self,\n-                 obj: typing.Union[_rinterface.SexpCapsule,\n-                                   collections.abc.Sized]):\n-        if isinstance(obj, Sexp) or isinstance(obj,\n-                                               _rinterface.SexpCapsule):\n-            super().__init__(obj)\n-        elif isinstance(obj, collections.abc.Sized):\n-            super().__init__(self.from_object(obj).__sexp__)\n-        else:\n-            raise TypeError('The constructor must be called '\n-                            'with an instance of '\n-                            'rpy2.rinterface.Sexp '\n-                            'or an instance of '\n-                            'rpy2.rinterface._rinterface.SexpCapsule')\n \n",
        "source_code_with_indent": "        <IND>pass\n\n    <DED>def __init__(self,\n                 obj: typing.Union[_rinterface.SexpCapsule,\n                                   collections.abc.Sized]):\n        <IND>if isinstance(obj, Sexp) or isinstance(obj,\n                                               _rinterface.SexpCapsule):\n            <IND>super().__init__(obj)\n        <DED>elif isinstance(obj, collections.abc.Sized):\n            <IND>super().__init__(self.from_object(obj).__sexp__)\n        <DED>else:\n            <IND>raise TypeError('The constructor must be called '\n                            'with an instance of '\n                            'rpy2.rinterface.Sexp '\n                            'or an instance of '\n                            'rpy2.rinterface._rinterface.SexpCapsule')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>pass\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        raise ValueError(\"'%s' is not in R vector\" % item)\n\n",
        "source_code_len": 60,
        "target_code": "        raise ValueError(\"'%s' is not in R vector\" % item)\n\n\nclass SexpVector(Sexp, SexpVectorAbstract):\n    \"\"\"Base abstract class for R vector objects.\n\n    R vector objects are, at the C level, essentially C arrays wrapped in\n    the general structure for R objects.\"\"\"\n\n    def __init__(self,\n                 obj: typing.Union[_rinterface.SexpCapsule,\n                                   collections.abc.Sized]):\n        if (isinstance(obj, Sexp)\n            or\n            isinstance(obj, _rinterface.SexpCapsule)):\n            super().__init__(obj)\n        elif isinstance(obj, collections.abc.Sized):\n            robj: Sexp = type(self).from_object(obj)\n            super().__init__(robj)\n        else:\n            raise TypeError('The constructor must be called '\n                            'with an instance of '\n                            'rpy2.rinterface.Sexp '\n                            'or an instance of '\n                            'rpy2.rinterface._rinterface.SexpCapsule')\n\n",
        "target_code_len": 996,
        "diff_format": "@@ -684,2 +670,26 @@\n         raise ValueError(\"'%s' is not in R vector\" % item)\n+\n+\n+class SexpVector(Sexp, SexpVectorAbstract):\n+    \"\"\"Base abstract class for R vector objects.\n+\n+    R vector objects are, at the C level, essentially C arrays wrapped in\n+    the general structure for R objects.\"\"\"\n+\n+    def __init__(self,\n+                 obj: typing.Union[_rinterface.SexpCapsule,\n+                                   collections.abc.Sized]):\n+        if (isinstance(obj, Sexp)\n+            or\n+            isinstance(obj, _rinterface.SexpCapsule)):\n+            super().__init__(obj)\n+        elif isinstance(obj, collections.abc.Sized):\n+            robj: Sexp = type(self).from_object(obj)\n+            super().__init__(robj)\n+        else:\n+            raise TypeError('The constructor must be called '\n+                            'with an instance of '\n+                            'rpy2.rinterface.Sexp '\n+                            'or an instance of '\n+                            'rpy2.rinterface._rinterface.SexpCapsule')\n \n",
        "source_code_with_indent": "        <DED><DED>raise ValueError(\"'%s' is not in R vector\" % item)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>raise ValueError(\"'%s' is not in R vector\" % item)\n\n\n<DED><DED>class SexpVector(Sexp, SexpVectorAbstract):\n    <IND>\"\"\"Base abstract class for R vector objects.\n\n    R vector objects are, at the C level, essentially C arrays wrapped in\n    the general structure for R objects.\"\"\"\n\n    def __init__(self,\n                 obj: typing.Union[_rinterface.SexpCapsule,\n                                   collections.abc.Sized]):\n        <IND>if (isinstance(obj, Sexp)\n            or\n            isinstance(obj, _rinterface.SexpCapsule)):\n            <IND>super().__init__(obj)\n        <DED>elif isinstance(obj, collections.abc.Sized):\n            <IND>robj: Sexp = type(self).from_object(obj)\n            super().__init__(robj)\n        <DED>else:\n            <IND>raise TypeError('The constructor must be called '\n                            'with an instance of '\n                            'rpy2.rinterface.Sexp '\n                            'or an instance of '\n                            'rpy2.rinterface._rinterface.SexpCapsule')\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif isinstance(i, slice):\n            for i_c, _ in zip(range(*i.indices(len(self))), value):\n                if _ is None:\n",
        "source_code_len": 133,
        "target_code": "        elif isinstance(i, slice):\n            value_slice: typing.Iterable\n            if (\n            isinstance(value, NACharacterType)\n                    or\n                    isinstance(value, str)\n                or\n                len(value) == 1\n            ):\n                value_slice = itertools.cycle((value, ))\n            else:\n                value_slice = value\n            for i_c, _ in zip(range(*i.indices(len(self))), value_slice):\n                if _ is None:\n",
        "target_code_len": 487,
        "diff_format": "@@ -746,3 +756,14 @@\n         elif isinstance(i, slice):\n-            for i_c, _ in zip(range(*i.indices(len(self))), value):\n+            value_slice: typing.Iterable\n+            if (\n+            isinstance(value, NACharacterType)\n+                    or\n+                    isinstance(value, str)\n+                or\n+                len(value) == 1\n+            ):\n+                value_slice = itertools.cycle((value, ))\n+            else:\n+                value_slice = value\n+            for i_c, _ in zip(range(*i.indices(len(self))), value_slice):\n                 if _ is None:\n",
        "source_code_with_indent": "        <DED>elif isinstance(i, slice):\n            <IND>for i_c, _ in zip(range(*i.indices(len(self))), value):\n                <IND>if _ is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif isinstance(i, slice):\n            <IND>value_slice: typing.Iterable\n            if (\n            isinstance(value, NACharacterType)\n                    or\n                    isinstance(value, str)\n                or\n                len(value) == 1\n            ):\n                <IND>value_slice = itertools.cycle((value, ))\n            <DED>else:\n                <IND>value_slice = value\n            <DED>for i_c, _ in zip(range(*i.indices(len(self))), value_slice):\n                <IND>if _ is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:336:4 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Type[typing.Any]]` for 1st positional only parameter to call `conversion.NameClassMap.update` but got `typing.Dict[typing.Type[typing.Union[SexpS4, rinterface.BoolSexpVector, rinterface.ByteSexpVector, rinterface.ComplexSexpVector, rinterface.FloatSexpVector, rinterface.IntSexpVector, rinterface.ListSexpVector, rpy2.rinterface_lib.sexp.SexpEnvironment, rpy2.rinterface_lib.sexp.StrSexpVector]], conversion.NameClassMap]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:339:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.IntVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:344:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.FloatVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:350:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.BoolVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:355:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.ByteVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:360:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.StrVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/__init__.py:365:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], vectors.ComplexVector]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/environments.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/robjects/environments.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/robjects/environments.py:83:27 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 83,
    "warning_line": "            yield (k, self[k])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_len": 84,
        "target_code": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_len": 124,
        "diff_format": "@@ -4,2 +4,3 @@\n import rpy2.rinterface as rinterface\n+import rpy2.rinterface_lib.sexp as sexp\n from rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_len": 131,
        "target_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_len": 108,
        "diff_format": "@@ -77,3 +78,3 @@\n     def items(self) -> typing.Generator[\n-            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n+            typing.Tuple[str, sexp.Sexp],\n             None, None]:\n",
        "source_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            this R environment.\"\"\"\n        for k in self:\n            yield (k, self[k])\n\n    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "source_code_len": 204,
        "target_code": "            this R environment.\"\"\"\n        for k, v in zip(self.keys(), self.values()):\n            yield (k, v)\n\n    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "target_code_len": 222,
        "diff_format": "@@ -81,6 +82,6 @@\n             this R environment.\"\"\"\n-        for k in self:\n-            yield (k, self[k])\n+        for k, v in zip(self.keys(), self.values()):\n+            yield (k, v)\n \n-    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n+    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n         \"\"\" Iterate through the objects in\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        for k in self:\n            <IND>yield (k, self[k])\n\n    <DED><DED>def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        <IND>",
        "target_code_with_indent": "\n        for k, v in zip(self.keys(), self.values()):\n            <IND>yield (k, v)\n\n    <DED><DED>def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/environments.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/robjects/environments.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/robjects/environments.py:89:23 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "            yield self[k]"
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/environments.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/robjects/environments.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/robjects/environments.py:112:17 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 112,
    "warning_line": "        del(self[kv[0]])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_len": 84,
        "target_code": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_len": 124,
        "diff_format": "@@ -4,2 +4,3 @@\n import rpy2.rinterface as rinterface\n+import rpy2.rinterface_lib.sexp as sexp\n from rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_len": 131,
        "target_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_len": 108,
        "diff_format": "@@ -77,3 +78,3 @@\n     def items(self) -> typing.Generator[\n-            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n+            typing.Tuple[str, sexp.Sexp],\n             None, None]:\n",
        "source_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            this R environment.\"\"\"\n        for k in self:\n            yield (k, self[k])\n\n    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "source_code_len": 204,
        "target_code": "            this R environment.\"\"\"\n        for k, v in zip(self.keys(), self.values()):\n            yield (k, v)\n\n    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "target_code_len": 222,
        "diff_format": "@@ -81,6 +82,6 @@\n             this R environment.\"\"\"\n-        for k in self:\n-            yield (k, self[k])\n+        for k, v in zip(self.keys(), self.values()):\n+            yield (k, v)\n \n-    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n+    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n         \"\"\" Iterate through the objects in\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        for k in self:\n            <IND>yield (k, self[k])\n\n    <DED><DED>def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        <IND>",
        "target_code_with_indent": "\n        for k, v in zip(self.keys(), self.values()):\n            <IND>yield (k, v)\n\n    <DED><DED>def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/environments.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/robjects/environments.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/robjects/environments.py:113:8 Incompatible return type [7]: Expected `typing.Tuple[str, rpy2.rinterface_lib.sexp.Sexp]` but got `typing.Tuple[typing.Optional[str], rpy2.rinterface_lib.sexp.Sexp]`.",
    "message": " Expected `typing.Tuple[str, rpy2.rinterface_lib.sexp.Sexp]` but got `typing.Tuple[typing.Optional[str], rpy2.rinterface_lib.sexp.Sexp]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 113,
    "warning_line": "        return kv",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_len": 84,
        "target_code": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_len": 124,
        "diff_format": "@@ -4,2 +4,3 @@\n import rpy2.rinterface as rinterface\n+import rpy2.rinterface_lib.sexp as sexp\n from rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent": "import rpy2.rinterface as rinterface\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import rpy2.rinterface as rinterface\nimport rpy2.rinterface_lib.sexp as sexp\nfrom rpy2.robjects.robject import RObjectMixin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_len": 131,
        "target_code": "    def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_len": 108,
        "diff_format": "@@ -77,3 +78,3 @@\n     def items(self) -> typing.Generator[\n-            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n+            typing.Tuple[str, sexp.Sexp],\n             None, None]:\n",
        "source_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[typing.Optional[str], rinterface.Sexp],\n            None, None]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def items(self) -> typing.Generator[\n            typing.Tuple[str, sexp.Sexp],\n            None, None]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            this R environment.\"\"\"\n        for k in self:\n            yield (k, self[k])\n\n    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "source_code_len": 204,
        "target_code": "            this R environment.\"\"\"\n        for k, v in zip(self.keys(), self.values()):\n            yield (k, v)\n\n    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        \"\"\" Iterate through the objects in\n",
        "target_code_len": 222,
        "diff_format": "@@ -81,6 +82,6 @@\n             this R environment.\"\"\"\n-        for k in self:\n-            yield (k, self[k])\n+        for k, v in zip(self.keys(), self.values()):\n+            yield (k, v)\n \n-    def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n+    def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n         \"\"\" Iterate through the objects in\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        for k in self:\n            <IND>yield (k, self[k])\n\n    <DED><DED>def values(self) -> typing.Generator[rinterface.Sexp, None, None]:\n        <IND>",
        "target_code_with_indent": "\n        for k, v in zip(self.keys(), self.values()):\n            <IND>yield (k, v)\n\n    <DED><DED>def values(self) -> typing.Generator[sexp.Sexp, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/environments.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/robjects/environments.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rpy2/robjects/environments.py:120:21 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Environment.__getitem__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 120,
    "warning_line": "            del(self[k])"
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/lib/grid.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/lib/grid.py:271:4 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Type[typing.Any]]` for 1st positional only parameter to call `conversion.NameClassMap.update` but got `typing.Dict[typing.Type[typing.Union[rinterface.FloatSexpVector, rinterface.ListSexpVector]], conversion.NameClassMap]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/lib/grid.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/lib/grid.py:273:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/lib/grid.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/lib/grid.py:277:12 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `conversion.NameClassMap.__init__` but got `typing.Callable[[Named(obj, typing.Any)], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/numpy2ri.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/numpy2ri.py:195:4 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Type[typing.Any]]` for 1st positional only parameter to call `conversion.NameClassMap.update` but got `typing.Dict[typing.Type[rinterface.ListSexpVector], conversion.NameClassMap]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rpy2/rpy2",
    "commit": "680dd82d27d62aac9345cc9501c5ab961a95081e",
    "filename": "rpy2/robjects/pandas2ri.py",
    "min_patch_found": false,
    "full_warning_msg": "rpy2/robjects/pandas2ri.py:246:4 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Type[typing.Any]]` for 1st positional only parameter to call `conversion.NameClassMap.update` but got `typing.Dict[typing.Type[typing.Union[IntSexpVector, rinterface.ListSexpVector]], conversion.NameClassMap]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]