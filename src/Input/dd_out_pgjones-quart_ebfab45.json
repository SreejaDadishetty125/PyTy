[
  {
    "project": "pgjones/quart",
    "commit": "ebfab4562b29bfcb1d488e0677705d931cfe7c4b",
    "filename": "src/quart/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-quart/src/quart/app.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/quart/app.py:1055:12 Incompatible return type [7]: Expected `src.quart.wrappers.response.Response` but got `None`.",
    "message": " Expected `src.quart.wrappers.response.Response` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1055,
    "warning_line": "            return await handler(error)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        if _request_ctx_stack.top is not None:\n",
        "source_code_len": 137,
        "target_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        if _request_ctx_stack.top is not None:\n",
        "target_code_len": 141,
        "diff_format": "@@ -1030,3 +1030,3 @@\n         self, error: Exception\n-    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n+    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n         if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/quart",
    "commit": "ebfab4562b29bfcb1d488e0677705d931cfe7c4b",
    "filename": "src/quart/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-quart/src/quart/app.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/quart/app.py:1080:8 Incompatible return type [7]: Expected `src.quart.wrappers.response.Response` but got `None`.",
    "message": " Expected `src.quart.wrappers.response.Response` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1080,
    "warning_line": "        return await handler(error)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        if _request_ctx_stack.top is not None:\n",
        "source_code_len": 137,
        "target_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        if _request_ctx_stack.top is not None:\n",
        "target_code_len": 141,
        "diff_format": "@@ -1030,3 +1030,3 @@\n         self, error: Exception\n-    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n+    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n         if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/quart",
    "commit": "ebfab4562b29bfcb1d488e0677705d931cfe7c4b",
    "filename": "src/quart/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-quart/src/quart/app.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/quart/app.py:1101:47 Incompatible parameter type [6]: Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_request` but got `None`.",
    "message": " Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_request` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1101,
    "warning_line": "            return await self.finalize_request(await handler(error), from_error_handler=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        if _request_ctx_stack.top is not None:\n",
        "source_code_len": 137,
        "target_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        if _request_ctx_stack.top is not None:\n",
        "target_code_len": 141,
        "diff_format": "@@ -1030,3 +1030,3 @@\n         self, error: Exception\n-    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n+    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n         if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/quart",
    "commit": "ebfab4562b29bfcb1d488e0677705d931cfe7c4b",
    "filename": "src/quart/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-quart/src/quart/app.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/quart/app.py:1118:49 Incompatible parameter type [6]: Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_websocket` but got `None`.",
    "message": " Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_websocket` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1118,
    "warning_line": "            return await self.finalize_websocket(await handler(error), from_error_handler=True)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        if _request_ctx_stack.top is not None:\n",
        "source_code_len": 137,
        "target_code": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        if _request_ctx_stack.top is not None:\n",
        "target_code_len": 141,
        "diff_format": "@@ -1030,3 +1030,3 @@\n         self, error: Exception\n-    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n+    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n         if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[None]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self, error: Exception\n    ) -> Optional[Callable[[Exception], Awaitable[Response]]]:\n        <IND>if _request_ctx_stack.top is not None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/quart",
    "commit": "ebfab4562b29bfcb1d488e0677705d931cfe7c4b",
    "filename": "src/quart/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-quart/src/quart/app.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/quart/app.py:1963:45 Incompatible parameter type [6]: Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_websocket` but got `Union[None, Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]`.",
    "message": " Expected `Union[Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]` for 1st positional only parameter to call `Quart.finalize_websocket` but got `Union[None, Dict[str, typing.Any], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], Dict[typing.Any, typing.Any]], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int], Tuple[Union[Dict[str, typing.Any], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str], int, Dict[typing.Any, typing.Any]], typing.AsyncGenerator[bytes, None], typing.Generator[bytes, None, None], src.quart.wrappers.response.Response, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1963,
    "warning_line": "        return await self.finalize_websocket(result, websocket_context)"
  }
]