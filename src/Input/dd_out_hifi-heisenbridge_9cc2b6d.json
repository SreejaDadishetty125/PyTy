[
  {
    "project": "hifi/heisenbridge",
    "commit": "9cc2b6da8be647f02e129374d496439a913607ee",
    "filename": "heisenbridge/channel_room.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hifi-heisenbridge/heisenbridge/channel_room.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "heisenbridge/channel_room.py:22:8 Incompatible attribute type [8]: Attribute `key` declared in class `ChannelRoom` has type `str` but is used as type `None`.",
    "message": " Attribute `key` declared in class `ChannelRoom` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 22,
    "warning_line": "        self.key = None"
  },
  {
    "project": "hifi/heisenbridge",
    "commit": "9cc2b6da8be647f02e129374d496439a913607ee",
    "filename": "heisenbridge/channel_room.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hifi-heisenbridge/heisenbridge/channel_room.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "heisenbridge/channel_room.py:75:8 Incompatible attribute type [8]: Attribute `network` declared in class `PrivateRoom` has type `typing.Optional[heisenbridge.private_room.NetworkRoom]` but is used as type `NetworkRoom`.",
    "message": " Attribute `network` declared in class `PrivateRoom` has type `typing.Optional[heisenbridge.private_room.NetworkRoom]` but is used as type `NetworkRoom`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 75,
    "warning_line": "        room.network = network"
  },
  {
    "project": "hifi/heisenbridge",
    "commit": "9cc2b6da8be647f02e129374d496439a913607ee",
    "filename": "heisenbridge/network_room.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hifi-heisenbridge/heisenbridge/network_room.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "heisenbridge/network_room.py:791:16 Incompatible return type [7]: Expected `bool` but got implicit return value of `None`.",
    "message": " Expected `bool` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 791,
    "warning_line": "                asyncio.ensure_future(self.serv.api.post_room_invite(self.rooms[target].id, self.user_id))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @ircroom_event()\n    def on_privmsg(self, conn, event) -> bool:\n        # slightly backwards\n",
        "source_code_len": 97,
        "target_code": "    @ircroom_event()\n    def on_privmsg(self, conn, event) -> None:\n        # slightly backwards\n",
        "target_code_len": 97,
        "diff_format": "@@ -772,3 +772,3 @@\n     @ircroom_event()\n-    def on_privmsg(self, conn, event) -> bool:\n+    def on_privmsg(self, conn, event) -> None:\n         # slightly backwards\n",
        "source_code_with_indent": "    <DED>@ircroom_event()\n    def on_privmsg(self, conn, event) -> bool:\n        # slightly backwards\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@ircroom_event()\n    def on_privmsg(self, conn, event) -> None:\n        # slightly backwards\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hifi/heisenbridge",
    "commit": "9cc2b6da8be647f02e129374d496439a913607ee",
    "filename": "heisenbridge/private_room.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hifi-heisenbridge/heisenbridge/private_room.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "heisenbridge/private_room.py:17:41 Invalid type [31]: Expression `(str, str)` is not a valid type.",
    "message": " Expression `(str, str)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 17,
    "warning_line": "def parse_irc_formatting(input: str) -> (str, str):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Optional\n\n",
        "source_code_len": 29,
        "target_code": "from typing import Optional\nfrom typing import Tuple\n\n",
        "target_code_len": 54,
        "diff_format": "@@ -5,2 +5,3 @@\n from typing import Optional\n+from typing import Tuple\n \n",
        "source_code_with_indent": "from typing import Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Optional\nfrom typing import Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# this is very naive and will break html tag close/open order right now\ndef parse_irc_formatting(input: str) -> (str, str):\n    plain = []\n",
        "source_code_len": 139,
        "target_code": "# this is very naive and will break html tag close/open order right now\ndef parse_irc_formatting(input: str) -> Tuple[str, Optional[str]]:\n    plain = []\n",
        "target_code_len": 154,
        "diff_format": "@@ -16,3 +17,3 @@\n # this is very naive and will break html tag close/open order right now\n-def parse_irc_formatting(input: str) -> (str, str):\n+def parse_irc_formatting(input: str) -> Tuple[str, Optional[str]]:\n     plain = []\n",
        "source_code_with_indent": "# this is very naive and will break html tag close/open order right now\n<DED>def parse_irc_formatting(input: str) -> (str, str):\n    <IND>plain = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# this is very naive and will break html tag close/open order right now\n<DED>def parse_irc_formatting(input: str) -> Tuple[str, Optional[str]]:\n    <IND>plain = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]