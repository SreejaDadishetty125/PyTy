[
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:547:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 547,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -546,3 +546,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:648:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 648,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -647,3 +647,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:698:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 698,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -697,3 +697,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:767:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 767,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -766,3 +766,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:827:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 827,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        wait_time: int = 10,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 97,
        "target_code": "        wait_time: int = 10,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 107,
        "diff_format": "@@ -826,3 +826,3 @@\n         wait_time: int = 10,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        wait_time: int = 10,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        wait_time: int = 10,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:880:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 880,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -879,3 +879,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:931:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 931,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -930,3 +930,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/hooks/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/hooks/dataproc.py",
    "file_hunks_size": 25,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/hooks/dataproc.py:1075:8 Incompatible variable type [9]: metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "message": " metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1075,
    "warning_line": "        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n    ):\n",
        "source_code_len": 108,
        "target_code": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ):\n",
        "target_code_len": 98,
        "diff_format": "@@ -1074,3 +1074,3 @@\n         timeout: Optional[float] = None,\n-        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n+        metadata: Sequence[Tuple[str, str]] = (),\n     ):\n",
        "source_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:1659:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1659,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 93,
        "target_code": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 103,
        "diff_format": "@@ -1658,3 +1658,3 @@\n         project_id: str,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        project_id: str,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        project_id: str,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:1956:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1956,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        job: Dict,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 87,
        "target_code": "        job: Dict,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 97,
        "diff_format": "@@ -1955,3 +1955,3 @@\n         job: Dict,\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        job: Dict,\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        job: Dict,\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2100:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2100,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        graceful_decommission_timeout: Union[Dict, Duration],\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_len": 130,
        "target_code": "        graceful_decommission_timeout: Union[Dict, Duration],\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_len": 140,
        "diff_format": "@@ -2099,3 +2099,3 @@\n         graceful_decommission_timeout: Union[Dict, Duration],\n-        region: str = None,\n+        region: Optional[str] = None,\n         location: Optional[str] = None,\n",
        "source_code_with_indent": "        graceful_decommission_timeout: Union[Dict, Duration],\n        region: str = None,\n        location: Optional[str] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        graceful_decommission_timeout: Union[Dict, Duration],\n        region: Optional[str] = None,\n        location: Optional[str] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2214:8 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2214,
    "warning_line": "        region: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        region: str = None,\n        project_id: str,\n",
        "source_code_len": 64,
        "target_code": "        *,\n        region: Optional[str] = None,\n        project_id: str,\n",
        "target_code_len": 74,
        "diff_format": "@@ -2213,3 +2213,3 @@\n         *,\n-        region: str = None,\n+        region: Optional[str] = None,\n         project_id: str,\n",
        "source_code_with_indent": "        *,\n        region: str = None,\n        project_id: str,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        region: Optional[str] = None,\n        project_id: str,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2221:8 Incompatible variable type [9]: metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "message": " metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2221,
    "warning_line": "        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_len": 152,
        "target_code": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_len": 142,
        "diff_format": "@@ -2220,3 +2220,3 @@\n         timeout: Optional[float] = None,\n-        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n+        metadata: Sequence[Tuple[str, str]] = (),\n         gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2315:8 Incompatible variable type [9]: metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "message": " metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2315,
    "warning_line": "        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_len": 152,
        "target_code": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_len": 142,
        "diff_format": "@@ -2314,3 +2314,3 @@\n         timeout: Optional[float] = None,\n-        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n+        metadata: Sequence[Tuple[str, str]] = (),\n         gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2387:8 Incompatible variable type [9]: metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "message": " metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2387,
    "warning_line": "        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_len": 152,
        "target_code": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_len": 142,
        "diff_format": "@@ -2386,3 +2386,3 @@\n         timeout: Optional[float] = None,\n-        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n+        metadata: Sequence[Tuple[str, str]] = (),\n         gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc.py:2464:8 Incompatible variable type [9]: metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "message": " metadata is declared to have type `Optional[Sequence[Tuple[str, str]]]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2464,
    "warning_line": "        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_len": 152,
        "target_code": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_len": 142,
        "diff_format": "@@ -2463,3 +2463,3 @@\n         timeout: Optional[float] = None,\n-        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n+        metadata: Sequence[Tuple[str, str]] = (),\n         gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Optional[Sequence[Tuple[str, str]]] = \"\",\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        timeout: Optional[float] = None,\n        metadata: Sequence[Tuple[str, str]] = (),\n        gcp_conn_id: str = \"google_cloud_default\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:140:45 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 140,
    "warning_line": "            backup = hook.wait_for_operation(self.timeout, operation)"
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:260:50 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 260,
    "warning_line": "        metadata_import = hook.wait_for_operation(self.timeout, operation)"
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:358:46 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 358,
    "warning_line": "            service = hook.wait_for_operation(self.timeout, operation)"
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:466:32 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 466,
    "warning_line": "        hook.wait_for_operation(self.timeout, operation)"
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:530:32 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 530,
    "warning_line": "        hook.wait_for_operation(self.timeout, operation)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def execute(self, context) -> dict:\n        hook = DataprocMetastoreHook(\n",
        "source_code_len": 79,
        "target_code": "\n    def execute(self, context):\n        hook = DataprocMetastoreHook(\n",
        "target_code_len": 71,
        "diff_format": "@@ -516,3 +516,3 @@\n \n-    def execute(self, context) -> dict:\n+    def execute(self, context):\n         hook = DataprocMetastoreHook(\n",
        "source_code_with_indent": "\n    <DED>def execute(self, context) -> dict:\n        <IND>hook = DataprocMetastoreHook(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def execute(self, context):\n        <IND>hook = DataprocMetastoreHook(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:531:8 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got implicit return value of `None`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 531,
    "warning_line": "        self.log.info(\"Service %s deleted successfully\", self.project_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def execute(self, context) -> dict:\n        hook = DataprocMetastoreHook(\n",
        "source_code_len": 79,
        "target_code": "\n    def execute(self, context):\n        hook = DataprocMetastoreHook(\n",
        "target_code_len": 71,
        "diff_format": "@@ -516,3 +516,3 @@\n \n-    def execute(self, context) -> dict:\n+    def execute(self, context):\n         hook = DataprocMetastoreHook(\n",
        "source_code_with_indent": "\n    <DED>def execute(self, context) -> dict:\n        <IND>hook = DataprocMetastoreHook(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def execute(self, context):\n        <IND>hook = DataprocMetastoreHook(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:821:8 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got `typing.List[typing.Any]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got `typing.List[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 821,
    "warning_line": "        return [Backup.to_dict(backup) for backup in backups]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from time import sleep\nfrom typing import Collection, Dict, Optional, Sequence, Tuple, Union\n\n",
        "source_code_len": 94,
        "target_code": "from time import sleep\nfrom typing import Dict, List, Optional, Sequence, Tuple, Union\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -21,3 +21,3 @@\n from time import sleep\n-from typing import Collection, Dict, Optional, Sequence, Tuple, Union\n+from typing import Dict, List, Optional, Sequence, Tuple, Union\n \n",
        "source_code_with_indent": "from time import sleep\nfrom typing import Collection, Dict, Optional, Sequence, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from time import sleep\nfrom typing import Dict, List, Optional, Sequence, Tuple, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        service_id: str,\n        metadata_import: Union[MetadataImport, Dict[str, Collection[str]]],\n        metadata_import_id: str,\n",
        "source_code_len": 134,
        "target_code": "        service_id: str,\n        metadata_import: MetadataImport,\n        metadata_import_id: str,\n",
        "target_code_len": 99,
        "diff_format": "@@ -220,3 +220,3 @@\n         service_id: str,\n-        metadata_import: Union[MetadataImport, Dict[str, Collection[str]]],\n+        metadata_import: MetadataImport,\n         metadata_import_id: str,\n",
        "source_code_with_indent": "        service_id: str,\n        metadata_import: Union[MetadataImport, Dict[str, Collection[str]]],\n        metadata_import_id: str,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        service_id: str,\n        metadata_import: MetadataImport,\n        metadata_import_id: str,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def execute(self, context: dict) -> dict:\n        hook = DataprocMetastoreHook(\n",
        "source_code_len": 85,
        "target_code": "\n    def execute(self, context: dict) -> List[dict]:\n        hook = DataprocMetastoreHook(\n",
        "target_code_len": 91,
        "diff_format": "@@ -803,3 +803,3 @@\n \n-    def execute(self, context: dict) -> dict:\n+    def execute(self, context: dict) -> List[dict]:\n         hook = DataprocMetastoreHook(\n",
        "source_code_with_indent": "\n    <DED>def execute(self, context: dict) -> dict:\n        <IND>hook = DataprocMetastoreHook(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def execute(self, context: dict) -> List[dict]:\n        <IND>hook = DataprocMetastoreHook(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:939:8 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got implicit return value of `None`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 939,
    "warning_line": "        self.log.info(\"Service %s restored from backup %s\", self.service_id, self.backup_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def execute(self, context) -> dict:\n        hook = DataprocMetastoreHook(\n",
        "source_code_len": 79,
        "target_code": "\n    def execute(self, context):\n        hook = DataprocMetastoreHook(\n",
        "target_code_len": 71,
        "diff_format": "@@ -916,3 +916,3 @@\n \n-    def execute(self, context) -> dict:\n+    def execute(self, context):\n         hook = DataprocMetastoreHook(\n",
        "source_code_with_indent": "\n    <DED>def execute(self, context) -> dict:\n        <IND>hook = DataprocMetastoreHook(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def execute(self, context):\n        <IND>hook = DataprocMetastoreHook(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "174681911f96f17d41a4f560ca08d5e200944f7f",
    "filename": "airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/cloud/operators/dataproc_metastore.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/cloud/operators/dataproc_metastore.py:1067:32 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `DataprocMetastoreHook.wait_for_operation` but got `Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1067,
    "warning_line": "        hook.wait_for_operation(self.timeout, operation)"
  }
]