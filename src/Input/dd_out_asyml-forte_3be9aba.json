[
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "examples/wiki_parser/wiki_dump_parse.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/examples/wiki_parser/wiki_dump_parse.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/wiki_parser/wiki_dump_parse.py:54:4 Inconsistent override [14]: `examples.wiki_parser.wiki_dump_parse.WikiArticleWriter.initialize` overrides method defined in `JsonPackWriter` inconsistently. Could not find parameter `_` in overriding signature.",
    "message": " `examples.wiki_parser.wiki_dump_parse.WikiArticleWriter.initialize` overrides method defined in `JsonPackWriter` inconsistently. Could not find parameter `_` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 54,
    "warning_line": "    def initialize(self, resources: Resources, configs: HParams):"
  },
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "forte/data/readers/deserialize_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/readers/deserialize_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "forte/data/readers/deserialize_reader.py:36:4 Inconsistent override [14]: `forte.data.readers.deserialize_reader.RawDataDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Variable(typing.Any)` in overriding signature.",
    "message": " `forte.data.readers.deserialize_reader.RawDataDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Variable(typing.Any)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 36,
    "warning_line": "    def _collect(self, data_list: List[str]) -> Iterator[str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:\n        yield from data_list\n",
        "source_code_len": 93,
        "target_code": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n        yield from data_list\n",
        "target_code_len": 109,
        "diff_format": "@@ -35,3 +35,3 @@\n \n-    def _collect(self, data_list: List[str]) -> Iterator[str]:\n+    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n         yield from data_list\n",
        "source_code_with_indent": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:\n        <IND>yield from data_list\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n        <IND>yield from data_list\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "forte/data/readers/deserialize_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/readers/deserialize_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "forte/data/readers/deserialize_reader.py:36:4 Inconsistent override [14]: `forte.data.readers.deserialize_reader.RawDataDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Keywords(typing.Any)` in overriding signature.",
    "message": " `forte.data.readers.deserialize_reader.RawDataDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Keywords(typing.Any)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 36,
    "warning_line": "    def _collect(self, data_list: List[str]) -> Iterator[str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:\n        yield from data_list\n",
        "source_code_len": 93,
        "target_code": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n        yield from data_list\n",
        "target_code_len": 109,
        "diff_format": "@@ -35,3 +35,3 @@\n \n-    def _collect(self, data_list: List[str]) -> Iterator[str]:\n+    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n         yield from data_list\n",
        "source_code_with_indent": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:\n        <IND>yield from data_list\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def _collect(self, data_list: List[str]) -> Iterator[str]:  # type: ignore\n        <IND>yield from data_list\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "forte/data/readers/deserialize_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/readers/deserialize_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "forte/data/readers/deserialize_reader.py:46:4 Inconsistent override [14]: `forte.data.readers.deserialize_reader.RecursiveDirectoryDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Variable(typing.Any)` in overriding signature.",
    "message": " `forte.data.readers.deserialize_reader.RecursiveDirectoryDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Variable(typing.Any)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 46,
    "warning_line": "    def _collect(self, data_dir: str) -> Iterator[str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def _collect(self, data_dir: str) -> Iterator[str]:\n        \"\"\"\n",
        "source_code_len": 69,
        "target_code": "\n    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n        \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -45,3 +45,3 @@\n \n-    def _collect(self, data_dir: str) -> Iterator[str]:\n+    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def _collect(self, data_dir: str) -> Iterator[str]:\n        <IND>",
        "target_code_with_indent": "\n    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "forte/data/readers/deserialize_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/data/readers/deserialize_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "forte/data/readers/deserialize_reader.py:46:4 Inconsistent override [14]: `forte.data.readers.deserialize_reader.RecursiveDirectoryDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Keywords(typing.Any)` in overriding signature.",
    "message": " `forte.data.readers.deserialize_reader.RecursiveDirectoryDeserializeReader._collect` overrides method defined in `forte.data.readers.base_reader.BaseReader` inconsistently. Could not find parameter `Keywords(typing.Any)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 46,
    "warning_line": "    def _collect(self, data_dir: str) -> Iterator[str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def _collect(self, data_dir: str) -> Iterator[str]:\n        \"\"\"\n",
        "source_code_len": 69,
        "target_code": "\n    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n        \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -45,3 +45,3 @@\n \n-    def _collect(self, data_dir: str) -> Iterator[str]:\n+    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def _collect(self, data_dir: str) -> Iterator[str]:\n        <IND>",
        "target_code_with_indent": "\n    def _collect(self, data_dir: str) -> Iterator[str]:  # type: ignore\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "3be9aba6bd7448faa21b3d16c4ee63f9e6205bb3",
    "filename": "forte/processors/nltk_processors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/processors/nltk_processors.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "forte/processors/nltk_processors.py:141:20 Unbound name [10]: Name `pharse` is used but not defined in the current scope.",
    "message": " Name `pharse` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 141,
    "warning_line": "                    pharse.phrase_type = chunk.label()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    phrase = Phrase(input_pack, begin_pos, end_pos)\n                    pharse.phrase_type = chunk.label()\n                    input_pack.add_or_get_entry(phrase)\n                    index += len(chunk)\n",
        "source_code_len": 219,
        "target_code": "                    phrase = Phrase(input_pack, begin_pos, end_pos)\n                    phrase.phrase_type = chunk.label()\n                    input_pack.add_or_get_entry(phrase)\n\n                    index += len(chunk)\n",
        "target_code_len": 220,
        "diff_format": "@@ -140,4 +143,5 @@\n                     phrase = Phrase(input_pack, begin_pos, end_pos)\n-                    pharse.phrase_type = chunk.label()\n+                    phrase.phrase_type = chunk.label()\n                     input_pack.add_or_get_entry(phrase)\n+\n                     index += len(chunk)\n",
        "source_code_with_indent": "                    phrase = Phrase(input_pack, begin_pos, end_pos)\n                    pharse.phrase_type = chunk.label()\n                    input_pack.add_or_get_entry(phrase)\n                    index += len(chunk)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    phrase = Phrase(input_pack, begin_pos, end_pos)\n                    phrase.phrase_type = chunk.label()\n                    input_pack.add_or_get_entry(phrase)\n\n                    index += len(chunk)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]