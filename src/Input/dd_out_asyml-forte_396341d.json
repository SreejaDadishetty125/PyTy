[
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:52:39 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 52,
    "warning_line": "    def __init__(self, component: str, tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, component: str, tid: str = None):\n        self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n        self.component = component\n",
        "source_code_len": 161,
        "target_code": "\n    def __init__(self, component: str, tid: Optional[str] = None):\n        self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n        self.component = component\n",
        "target_code_len": 183,
        "diff_format": "@@ -51,4 +51,4 @@\n \n-    def __init__(self, component: str, tid: str = None):\n-        self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n+    def __init__(self, component: str, tid: Optional[str] = None):\n+        self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n         self.component = component\n",
        "source_code_with_indent": "\n    def __init__(self, component: str, tid: str = None):\n        <IND>self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n        self.component = component\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, component: str, tid: Optional[str] = None):\n        <IND>self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n        self.component = component\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:107:36 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `Entry.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `Entry.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 107,
    "warning_line": "        super().__init__(component, tid)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, component: str, tid: str = None):\n        self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n        self.component = component\n",
        "source_code_len": 161,
        "target_code": "\n    def __init__(self, component: str, tid: Optional[str] = None):\n        self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n        self.component = component\n",
        "target_code_len": 183,
        "diff_format": "@@ -51,4 +51,4 @@\n \n-    def __init__(self, component: str, tid: str = None):\n-        self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n+    def __init__(self, component: str, tid: Optional[str] = None):\n+        self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n         self.component = component\n",
        "source_code_with_indent": "\n    def __init__(self, component: str, tid: str = None):\n        <IND>self.tid = f\"{get_class_name(self)}.{tid}\" if tid else None\n        self.component = component\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, component: str, tid: Optional[str] = None):\n        <IND>self.tid = f\"{get_class_name(self)}.{tid}\" if tid is not None else None\n        self.component = component\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:140:39 Incompatible variable type [9]: parent_id is declared to have type `str` but is used as type `None`.",
    "message": " parent_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 140,
    "warning_line": "    def __init__(self, component: str, parent_id: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:141:17 Incompatible variable type [9]: child_id is declared to have type `str` but is used as type `None`.",
    "message": " child_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 141,
    "warning_line": "                 child_id: str = None, tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:141:39 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 141,
    "warning_line": "                 child_id: str = None, tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:224:39 Incompatible variable type [9]: members is declared to have type `Set[str]` but is used as type `None`.",
    "message": " members is declared to have type `Set[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 224,
    "warning_line": "    def __init__(self, component: str, members: Set[str] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:225:17 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 225,
    "warning_line": "                 tid: str = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:289:40 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 289,
    "warning_line": "            super().__init__(component, parent_id, child_id, tid)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:289:51 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 289,
    "warning_line": "            super().__init__(component, parent_id, child_id, tid)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:289:61 Incompatible parameter type [6]: Expected `str` for 4th positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 4th positional only parameter to call `Link.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 289,
    "warning_line": "            super().__init__(component, parent_id, child_id, tid)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        super().__init__(component, tid)\n",
        "source_code_len": 214,
        "target_code": "    \"\"\"\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        super().__init__(component, tid)\n",
        "target_code_len": 274,
        "diff_format": "@@ -136,7 +136,7 @@\n     \"\"\"\n-    parent_type = None\n-    child_type = None\n-\n-    def __init__(self, component: str, parent_id: str = None,\n-                 child_id: str = None, tid: str = None):\n+    parent_type: Optional[str] = None\n+    child_type: Optional[str] = None\n+\n+    def __init__(self, component: str, parent_id: Optional[str] = None,\n+                 child_id: Optional[str] = None, tid: Optional[str] = None):\n         super().__init__(component, tid)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    parent_type = None\n    child_type = None\n\n    def __init__(self, component: str, parent_id: str = None,\n                 child_id: str = None, tid: str = None):\n        <IND>super().__init__(component, tid)\n",
        "target_code_with_indent": "\n    parent_type: Optional[str] = None\n    child_type: Optional[str] = None\n\n    def __init__(self, component: str, parent_id: Optional[str] = None,\n                 child_id: Optional[str] = None, tid: Optional[str] = None):\n        <IND>super().__init__(component, tid)\n"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/base_ontology.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/base_ontology.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/base_ontology.py:299:40 Incompatible parameter type [6]: Expected `Set[str]` for 2nd positional only parameter to call `Group.__init__` but got `Optional[str]`.",
    "message": " Expected `Set[str]` for 2nd positional only parameter to call `Group.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 299,
    "warning_line": "            super().__init__(component, tid)"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:33:23 Incompatible variable type [9]: doc_id is declared to have type `str` but is used as type `None`.",
    "message": " doc_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 33,
    "warning_line": "    def __init__(self, doc_id: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, doc_id: str = None):\n        self.doc_id = doc_id\n",
        "source_code_len": 74,
        "target_code": "\n    def __init__(self, doc_id: Optional[str] = None):\n        self.doc_id = doc_id\n",
        "target_code_len": 84,
        "diff_format": "@@ -32,3 +32,3 @@\n \n-    def __init__(self, doc_id: str = None):\n+    def __init__(self, doc_id: Optional[str] = None):\n         self.doc_id = doc_id\n",
        "source_code_with_indent": "\n    def __init__(self, doc_id: str = None):\n        <IND>self.doc_id = doc_id\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, doc_id: Optional[str] = None):\n        <IND>self.doc_id = doc_id\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:201:29 Incompatible variable type [9]: links is declared to have type `List[Link]` but is used as type `None`.",
    "message": " links is declared to have type `List[Link]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 201,
    "warning_line": "                             links: List[Link] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                             annotations: SortedSet,\n                             links: List[Link] = None,\n                             groups: List[Group] = None,\n                             outer_type: Optional[type] = None,\n",
        "source_code_len": 229,
        "target_code": "                             annotations: SortedSet,\n                             links: Optional[List[Link]] = None,\n                             groups: Optional[List[Group]] = None,\n                             outer_type: Optional[type] = None,\n",
        "target_code_len": 249,
        "diff_format": "@@ -200,4 +200,4 @@\n                              annotations: SortedSet,\n-                             links: List[Link] = None,\n-                             groups: List[Group] = None,\n+                             links: Optional[List[Link]] = None,\n+                             groups: Optional[List[Group]] = None,\n                              outer_type: Optional[type] = None,\n",
        "source_code_with_indent": "                             annotations: SortedSet,\n                             links: List[Link] = None,\n                             groups: List[Group] = None,\n                             outer_type: Optional[type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                             annotations: SortedSet,\n                             links: Optional[List[Link]] = None,\n                             groups: Optional[List[Group]] = None,\n                             outer_type: Optional[type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:202:29 Incompatible variable type [9]: groups is declared to have type `List[Group]` but is used as type `None`.",
    "message": " groups is declared to have type `List[Group]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 202,
    "warning_line": "                             groups: List[Group] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                             annotations: SortedSet,\n                             links: List[Link] = None,\n                             groups: List[Group] = None,\n                             outer_type: Optional[type] = None,\n",
        "source_code_len": 229,
        "target_code": "                             annotations: SortedSet,\n                             links: Optional[List[Link]] = None,\n                             groups: Optional[List[Group]] = None,\n                             outer_type: Optional[type] = None,\n",
        "target_code_len": 249,
        "diff_format": "@@ -200,4 +200,4 @@\n                              annotations: SortedSet,\n-                             links: List[Link] = None,\n-                             groups: List[Group] = None,\n+                             links: Optional[List[Link]] = None,\n+                             groups: Optional[List[Group]] = None,\n                              outer_type: Optional[type] = None,\n",
        "source_code_with_indent": "                             annotations: SortedSet,\n                             links: List[Link] = None,\n                             groups: List[Group] = None,\n                             outer_type: Optional[type] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                             annotations: SortedSet,\n                             links: Optional[List[Link]] = None,\n                             groups: Optional[List[Group]] = None,\n                             outer_type: Optional[type] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:369:23 Incompatible variable type [9]: text is declared to have type `str` but is used as type `None`.",
    "message": " text is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 369,
    "warning_line": "    def __init__(self, text: str = None, doc_id: str = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:369:41 Incompatible variable type [9]: doc_id is declared to have type `str` but is used as type `None`.",
    "message": " doc_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 369,
    "warning_line": "    def __init__(self, text: str = None, doc_id: str = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:428:22 Incompatible variable type [9]: component is declared to have type `str` but is used as type `None`.",
    "message": " component is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 428,
    "warning_line": "                      component: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def record_fields(self, fields: list, entry_type: str,\n                      component: str = None):\n        \"\"\"Record in the internal meta that ``component`` has generated\n",
        "source_code_len": 177,
        "target_code": "    def record_fields(self, fields: list, entry_type: str,\n                      component: Optional[str] = None):\n        \"\"\"Record in the internal meta that ``component`` has generated\n",
        "target_code_len": 187,
        "diff_format": "@@ -427,3 +428,3 @@\n     def record_fields(self, fields: list, entry_type: str,\n-                      component: str = None):\n+                      component: Optional[str] = None):\n         \"\"\"Record in the internal meta that ``component`` has generated\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>def record_fields(self, fields: list, entry_type: str,\n                      component: str = None):\n        <IND>",
        "target_code_with_indent": "    <DED>def record_fields(self, fields: list, entry_type: str,\n                      component: Optional[str] = None):\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:455:12 Incompatible variable type [9]: annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 455,
    "warning_line": "            annotation_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:456:12 Incompatible variable type [9]: link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 456,
    "warning_line": "            link_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:457:12 Incompatible variable type [9]: group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 457,
    "warning_line": "            group_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:738:12 Incompatible variable type [9]: annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 738,
    "warning_line": "            annotation_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_len": 281,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_len": 311,
        "diff_format": "@@ -737,5 +740,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:739:12 Incompatible variable type [9]: link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 739,
    "warning_line": "            link_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_len": 281,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_len": 311,
        "diff_format": "@@ -737,5 +740,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:740:12 Incompatible variable type [9]: group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 740,
    "warning_line": "            group_types: Dict[str, Union[Dict, Iterable]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_len": 261,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_len": 291,
        "diff_format": "@@ -454,5 +455,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_len": 281,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_len": 311,
        "diff_format": "@@ -737,5 +740,5 @@\n             context_type: str,\n-            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n-            link_types: Dict[str, Union[Dict, Iterable]] = None,\n-            group_types: Dict[str, Union[Dict, Iterable]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n             offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Dict[str, Union[Dict, Iterable]] = None,\n            link_types: Dict[str, Union[Dict, Iterable]] = None,\n            group_types: Dict[str, Union[Dict, Iterable]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:802:20 Incompatible variable type [9]: range_annotation is declared to have type `Annotation` but is used as type `None`.",
    "message": " range_annotation is declared to have type `Annotation` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 802,
    "warning_line": "                    range_annotation: Annotation = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        \"\"\"\n",
        "source_code_len": 169,
        "target_code": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        \"\"\"\n",
        "target_code_len": 189,
        "diff_format": "@@ -801,4 +804,4 @@\n                     entry_type: Type[E],\n-                    range_annotation: Annotation = None,\n-                    component: str = None) -> Iterable[E]:\n+                    range_annotation: Optional[Annotation] = None,\n+                    component: Optional[str] = None) -> Iterable[E]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        <IND>",
        "target_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:803:20 Incompatible variable type [9]: component is declared to have type `str` but is used as type `None`.",
    "message": " component is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 803,
    "warning_line": "                    component: str = None) -> Iterable[E]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        \"\"\"\n",
        "source_code_len": 169,
        "target_code": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        \"\"\"\n",
        "target_code_len": 189,
        "diff_format": "@@ -801,4 +804,4 @@\n                     entry_type: Type[E],\n-                    range_annotation: Annotation = None,\n-                    component: str = None) -> Iterable[E]:\n+                    range_annotation: Optional[Annotation] = None,\n+                    component: Optional[str] = None) -> Iterable[E]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        <IND>",
        "target_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:847:12 Incompatible variable type [9]: range_annotation is declared to have type `Annotation` but is used as type `None`.",
    "message": " range_annotation is declared to have type `Annotation` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 847,
    "warning_line": "            range_annotation: Annotation = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        \"\"\"\n",
        "source_code_len": 169,
        "target_code": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        \"\"\"\n",
        "target_code_len": 189,
        "diff_format": "@@ -801,4 +804,4 @@\n                     entry_type: Type[E],\n-                    range_annotation: Annotation = None,\n-                    component: str = None) -> Iterable[E]:\n+                    range_annotation: Optional[Annotation] = None,\n+                    component: Optional[str] = None) -> Iterable[E]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        <IND>",
        "target_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            entry_type: Type[E],\n            range_annotation: Annotation = None,\n            component: str = None) -> Iterable[E]:\n        return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_len": 206,
        "target_code": "            entry_type: Type[E],\n            range_annotation: Optional[Annotation] = None,\n            component: Optional[str] = None) -> Iterable[E]:\n        return self.get_entries(entry_type, range_annotation, component)\n",
        "target_code_len": 226,
        "diff_format": "@@ -846,4 +849,4 @@\n             entry_type: Type[E],\n-            range_annotation: Annotation = None,\n-            component: str = None) -> Iterable[E]:\n+            range_annotation: Optional[Annotation] = None,\n+            component: Optional[str] = None) -> Iterable[E]:\n         return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_with_indent": "            entry_type: Type[E],\n            range_annotation: Annotation = None,\n            component: str = None) -> Iterable[E]:\n        <IND>return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            entry_type: Type[E],\n            range_annotation: Optional[Annotation] = None,\n            component: Optional[str] = None) -> Iterable[E]:\n        <IND>return self.get_entries(entry_type, range_annotation, component)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:848:12 Incompatible variable type [9]: component is declared to have type `str` but is used as type `None`.",
    "message": " component is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 848,
    "warning_line": "            component: str = None) -> Iterable[E]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        \"\"\"\n",
        "source_code_len": 169,
        "target_code": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        \"\"\"\n",
        "target_code_len": 189,
        "diff_format": "@@ -801,4 +804,4 @@\n                     entry_type: Type[E],\n-                    range_annotation: Annotation = None,\n-                    component: str = None) -> Iterable[E]:\n+                    range_annotation: Optional[Annotation] = None,\n+                    component: Optional[str] = None) -> Iterable[E]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Annotation = None,\n                    component: str = None) -> Iterable[E]:\n        <IND>",
        "target_code_with_indent": "                    entry_type: Type[E],\n                    range_annotation: Optional[Annotation] = None,\n                    component: Optional[str] = None) -> Iterable[E]:\n        <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            entry_type: Type[E],\n            range_annotation: Annotation = None,\n            component: str = None) -> Iterable[E]:\n        return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_len": 206,
        "target_code": "            entry_type: Type[E],\n            range_annotation: Optional[Annotation] = None,\n            component: Optional[str] = None) -> Iterable[E]:\n        return self.get_entries(entry_type, range_annotation, component)\n",
        "target_code_len": 226,
        "diff_format": "@@ -846,4 +849,4 @@\n             entry_type: Type[E],\n-            range_annotation: Annotation = None,\n-            component: str = None) -> Iterable[E]:\n+            range_annotation: Optional[Annotation] = None,\n+            component: Optional[str] = None) -> Iterable[E]:\n         return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_with_indent": "            entry_type: Type[E],\n            range_annotation: Annotation = None,\n            component: str = None) -> Iterable[E]:\n        <IND>return self.get_entries(entry_type, range_annotation, component)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            entry_type: Type[E],\n            range_annotation: Optional[Annotation] = None,\n            component: Optional[str] = None) -> Iterable[E]:\n        <IND>return self.get_entries(entry_type, range_annotation, component)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/conll03_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/conll03_reader.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/conll03_reader.py:21:21 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 21,
    "warning_line": "                     tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Iterator\n\n",
        "source_code_len": 39,
        "target_code": "import os\nfrom typing import Iterator, Optional\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -5,3 +5,3 @@\n import os\n-from typing import Iterator\n+from typing import Iterator, Optional\n \n",
        "source_code_with_indent": "import os\nfrom typing import Iterator\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Iterator, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            super().__init__(component, begin, end, tid)\n",
        "source_code_len": 161,
        "target_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            super().__init__(component, begin, end, tid)\n",
        "target_code_len": 171,
        "diff_format": "@@ -20,3 +20,3 @@\n         def __init__(self, component: str, begin: int, end: int,\n-                     tid: str = None):\n+                     tid: Optional[str] = None):\n             super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:52:57 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 52,
    "warning_line": "            return self._lazy_dataset_iterator(dir_path, cache_file, has_cache)"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:56:56 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `BaseReader._instances_from_cache_file` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `BaseReader._instances_from_cache_file` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 56,
    "warning_line": "            return list(self._instances_from_cache_file(cache_file))"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:64:20 Incompatible parameter type [6]: Expected `str` for 2nd parameter `cache_file` to call `MonoFileReader.read` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 2nd parameter `cache_file` to call `MonoFileReader.read` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 64,
    "warning_line": "                    cache_file=cache_file,"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:98:13 Incompatible variable type [9]: cache_file is declared to have type `str` but is used as type `None`.",
    "message": " cache_file is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 98,
    "warning_line": "             cache_file: str = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:25:21 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 25,
    "warning_line": "                     tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            super().__init__(component, begin, end, tid)\n",
        "source_code_len": 161,
        "target_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            super().__init__(component, begin, end, tid)\n",
        "target_code_len": 171,
        "diff_format": "@@ -24,3 +24,3 @@\n         def __init__(self, component: str, begin: int, end: int,\n-                     tid: str = None):\n+                     tid: Optional[str] = None):\n             super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:32:21 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 32,
    "warning_line": "                     tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            super().__init__(component, begin, end, tid)\n",
        "source_code_len": 161,
        "target_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            super().__init__(component, begin, end, tid)\n",
        "target_code_len": 171,
        "diff_format": "@@ -31,3 +31,3 @@\n         def __init__(self, component: str, begin: int, end: int,\n-                     tid: str = None):\n+                     tid: Optional[str] = None):\n             super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:39:21 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 39,
    "warning_line": "                     tid: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            super().__init__(component, begin, end, tid)\n",
        "source_code_len": 161,
        "target_code": "        def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            super().__init__(component, begin, end, tid)\n",
        "target_code_len": 171,
        "diff_format": "@@ -38,3 +38,3 @@\n         def __init__(self, component: str, begin: int, end: int,\n-                     tid: str = None):\n+                     tid: Optional[str] = None):\n             super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: str = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>def __init__(self, component: str, begin: int, end: int,\n                     tid: Optional[str] = None):\n            <IND>super().__init__(component, begin, end, tid)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/models/srl/model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/models/srl/model.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/models/srl/model.py:518:48 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `float`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 518,
    "warning_line": "                        cur_scores[new_state] = score",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # 2^0 + 2^2 + 2^5 = 37).\n        max_scores = [{0: 0}]\n        best_span_indices = [{}]  # only record selected spans\n\n",
        "source_code_len": 127,
        "target_code": "        # 2^0 + 2^2 + 2^5 = 37).\n        max_scores = [{0: 0.0}]\n        # only record selected spans\n        best_span_indices: List[Dict[int, int]] = [{}]\n\n",
        "target_code_len": 158,
        "diff_format": "@@ -501,4 +474,5 @@\n         # 2^0 + 2^2 + 2^5 = 37).\n-        max_scores = [{0: 0}]\n-        best_span_indices = [{}]  # only record selected spans\n+        max_scores = [{0: 0.0}]\n+        # only record selected spans\n+        best_span_indices: List[Dict[int, int]] = [{}]\n \n",
        "source_code_with_indent": "        # 2^0 + 2^2 + 2^5 = 37).\n        <DED>max_scores = [{0: 0}]\n        best_span_indices = [{}]  # only record selected spans\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # 2^0 + 2^2 + 2^5 = 37).\n        <DED>max_scores = [{0: 0.0}]\n        # only record selected spans\n        best_span_indices: List[Dict[int, int]] = [{}]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/models/srl/model_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/models/srl/model_utils.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/models/srl/model_utils.py:335:8 Incompatible return type [7]: Expected `ContextManager[None]` but got `typing.Generator[None, None, None]`.",
    "message": " Expected `ContextManager[None]` but got `typing.Generator[None, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 335,
    "warning_line": "        yield",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @contextmanager\n    def cache_results(self, inputs: List[torch.Tensor]) -> ContextManager[None]:\n        self._cached_inputs = inputs\n        yield\n        self._cached_inputs = None\n\n",
        "source_code_len": 188,
        "target_code": "    @contextmanager\n    def cache_results(self, inputs: List[torch.Tensor]):\n        self._cached_inputs = inputs\n        yield\n        del self._cached_inputs\n\n",
        "target_code_len": 161,
        "diff_format": "@@ -332,6 +329,6 @@\n     @contextmanager\n-    def cache_results(self, inputs: List[torch.Tensor]) -> ContextManager[None]:\n+    def cache_results(self, inputs: List[torch.Tensor]):\n         self._cached_inputs = inputs\n         yield\n-        self._cached_inputs = None\n+        del self._cached_inputs\n \n",
        "source_code_with_indent": "    <DED>@contextmanager\n    def cache_results(self, inputs: List[torch.Tensor]) -> ContextManager[None]:\n        <IND>self._cached_inputs = inputs\n        yield\n        self._cached_inputs = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@contextmanager\n    def cache_results(self, inputs: List[torch.Tensor]):\n        <IND>self._cached_inputs = inputs\n        yield\n        del self._cached_inputs\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/pipeline.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/pipeline.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/pipeline.py:57:24 Incompatible variable type [9]: dataset is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " dataset is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 57,
    "warning_line": "                        dataset: dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Iterator, List\n\n",
        "source_code_len": 35,
        "target_code": "from typing import Iterator, List, Optional\n\n",
        "target_code_len": 45,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Iterator, List\n+from typing import Iterator, List, Optional\n \n",
        "source_code_with_indent": "from typing import Iterator, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Iterator, List, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def process_dataset(self,\n                        dataset: dict = None,\n                        hard_batch: bool = True) -> Iterator[DataPack]:\n",
        "source_code_len": 148,
        "target_code": "    def process_dataset(self,\n                        dataset: Optional[dict] = None,\n                        hard_batch: bool = True) -> Iterator[DataPack]:\n",
        "target_code_len": 158,
        "diff_format": "@@ -56,3 +56,3 @@\n     def process_dataset(self,\n-                        dataset: dict = None,\n+                        dataset: Optional[dict] = None,\n                         hard_batch: bool = True) -> Iterator[DataPack]:\n",
        "source_code_with_indent": "    <DED>def process_dataset(self,\n                        dataset: dict = None,\n                        hard_batch: bool = True) -> Iterator[DataPack]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def process_dataset(self,\n                        dataset: Optional[dict] = None,\n                        hard_batch: bool = True) -> Iterator[DataPack]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/dummy_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/dummy_processor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/dummy_processor.py:21:43 Incompatible variable type [9]: tid is declared to have type `str` but is used as type `None`.",
    "message": " tid is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 21,
    "warning_line": "        def __init__(self, component: str, tid: str = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/dummy_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/dummy_processor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/dummy_processor.py:77:40 Incompatible variable type [9]: output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 77,
    "warning_line": "    def pack(self, data_pack: DataPack, output_dict: Dict = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/ner_predictor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/ner_predictor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/ner_predictor.py:100:40 Incompatible variable type [9]: output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 100,
    "warning_line": "    def pack(self, data_pack: DataPack, output_dict: Dict = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/postag_predictor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/postag_predictor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/postag_predictor.py:49:40 Incompatible variable type [9]: output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 49,
    "warning_line": "    def pack(self, data_pack: DataPack, output_dict: Dict = None) -> None:"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/sentence_predictor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/sentence_predictor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/sentence_predictor.py:53:40 Incompatible variable type [9]: output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 53,
    "warning_line": "    def pack(self, data_pack: DataPack, output_dict: Dict = None) -> None:"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/tokenization_predictor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/tokenization_predictor.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/tokenization_predictor.py:50:40 Incompatible variable type [9]: output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " output_dict is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 50,
    "warning_line": "    def pack(self, data_pack: DataPack, output_dict: Dict = None) -> None:"
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/vocabulary_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/vocabulary_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/vocabulary_processor.py:23:12 Incompatible variable type [9]: word_cnt is declared to have type `Counter[typing.Any]` but is used as type `None`.",
    "message": " word_cnt is declared to have type `Counter[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 23,
    "warning_line": "            word_cnt: Counter = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import Counter\nfrom typing import Dict, List, Any, Iterator\n\n",
        "source_code_len": 78,
        "target_code": "from collections import Counter\nfrom typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -4,3 +4,3 @@\n from collections import Counter\n-from typing import Dict, List, Any, Iterator\n+from typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n \n",
        "source_code_with_indent": "from collections import Counter\nfrom typing import Dict, List, Any, Iterator\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import Counter\nfrom typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            name,\n            word_cnt: Counter = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Dict = None,\n    ):\n",
        "source_code_len": 192,
        "target_code": "            name,\n            word_cnt: Optional[CounterType[str]] = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Optional[Dict] = None,\n    ):\n",
        "target_code_len": 221,
        "diff_format": "@@ -22,6 +22,6 @@\n             name,\n-            word_cnt: Counter = None,\n+            word_cnt: Optional[CounterType[str]] = None,\n             keep_growing: bool = True,\n             ignore_case_in_query: bool = True,\n-            other_embeddings: Dict = None,\n+            other_embeddings: Optional[Dict] = None,\n     ):\n",
        "source_code_with_indent": "            name,\n            word_cnt: Counter = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Dict = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            name,\n            word_cnt: Optional[CounterType[str]] = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Optional[Dict] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/vocabulary_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/vocabulary_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/vocabulary_processor.py:26:12 Incompatible variable type [9]: other_embeddings is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " other_embeddings is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 26,
    "warning_line": "            other_embeddings: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import Counter\nfrom typing import Dict, List, Any, Iterator\n\n",
        "source_code_len": 78,
        "target_code": "from collections import Counter\nfrom typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -4,3 +4,3 @@\n from collections import Counter\n-from typing import Dict, List, Any, Iterator\n+from typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n \n",
        "source_code_with_indent": "from collections import Counter\nfrom typing import Dict, List, Any, Iterator\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import Counter\nfrom typing import Any, Counter as CounterType, Dict, Iterator, List, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            name,\n            word_cnt: Counter = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Dict = None,\n    ):\n",
        "source_code_len": 192,
        "target_code": "            name,\n            word_cnt: Optional[CounterType[str]] = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Optional[Dict] = None,\n    ):\n",
        "target_code_len": 221,
        "diff_format": "@@ -22,6 +22,6 @@\n             name,\n-            word_cnt: Counter = None,\n+            word_cnt: Optional[CounterType[str]] = None,\n             keep_growing: bool = True,\n             ignore_case_in_query: bool = True,\n-            other_embeddings: Dict = None,\n+            other_embeddings: Optional[Dict] = None,\n     ):\n",
        "source_code_with_indent": "            name,\n            word_cnt: Counter = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Dict = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            name,\n            word_cnt: Optional[CounterType[str]] = None,\n            keep_growing: bool = True,\n            ignore_case_in_query: bool = True,\n            other_embeddings: Optional[Dict] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "396341db25766e8991f63bdf817bcecf7af53846",
    "filename": "nlp/pipeline/processors/impl/vocabulary_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/vocabulary_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/impl/vocabulary_processor.py:202:4 Inconsistent override [15]: `nlp.pipeline.processors.impl.vocabulary_processor.CoNLL03VocabularyProcessor.process` overrides method defined in `VocabularyProcessor` inconsistently. Returned type `List[Counter[typing.Any]]` is not a subtype of the overridden return `Dict[str, typing.Any]`.",
    "message": " `nlp.pipeline.processors.impl.vocabulary_processor.CoNLL03VocabularyProcessor.process` overrides method defined in `VocabularyProcessor` inconsistently. Returned type `List[Counter[typing.Any]]` is not a subtype of the overridden return `Dict[str, typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 202,
    "warning_line": "    def process(self, input_pack: Iterator[DataPack]) -> List[Counter]:"
  }
]