[
  {
    "project": "zzzeek/sqlalchemy",
    "commit": "0ce045bd853ec078943c14fc93b87897d2169882",
    "filename": "lib/sqlalchemy/dialects/sqlite/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/zzzeek-sqlalchemy/lib/sqlalchemy/dialects/sqlite/base.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/sqlalchemy/dialects/sqlite/base.py:516:0 Incompatible variable type [9]: colspecs is declared to have type `typing.Dict[typing.Type[typing.Union[sql.sqltypes.Date, sql.sqltypes.DateTime, sql.sqltypes.Time]], typing.Type[typing.Union[DATE, DATETIME, TIME]]]` but is used as type `typing.Dict[typing.Type[typing.Union[sql.sqltypes.Date, sql.sqltypes.DateTime, sql.sqltypes.Time]], typing.Type[typing.Union[DATETIME, TIME, sql.sqltypes.DATE]]]`.",
    "message": " colspecs is declared to have type `typing.Dict[typing.Type[typing.Union[sql.sqltypes.Date, sql.sqltypes.DateTime, sql.sqltypes.Time]], typing.Type[typing.Union[DATE, DATETIME, TIME]]]` but is used as type `typing.Dict[typing.Type[typing.Union[sql.sqltypes.Date, sql.sqltypes.DateTime, sql.sqltypes.Time]], typing.Type[typing.Union[DATETIME, TIME, sql.sqltypes.DATE]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 516,
    "warning_line": "colspecs = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom ...types import (BLOB, BOOLEAN, CHAR, DATE, DECIMAL, FLOAT,\n                      INTEGER, REAL, NUMERIC, SMALLINT, TEXT,\n",
        "source_code_len": 128,
        "target_code": "\nfrom ...types import (BLOB, BOOLEAN, CHAR, DECIMAL, FLOAT,\n                      INTEGER, REAL, NUMERIC, SMALLINT, TEXT,\n",
        "target_code_len": 122,
        "diff_format": "@@ -257,3 +272,3 @@\n \n-from ...types import (BLOB, BOOLEAN, CHAR, DATE, DECIMAL, FLOAT,\n+from ...types import (BLOB, BOOLEAN, CHAR, DECIMAL, FLOAT,\n                       INTEGER, REAL, NUMERIC, SMALLINT, TEXT,\n",
        "source_code_with_indent": "\nfrom ...types import (BLOB, BOOLEAN, CHAR, DATE, DECIMAL, FLOAT,\n                      INTEGER, REAL, NUMERIC, SMALLINT, TEXT,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom ...types import (BLOB, BOOLEAN, CHAR, DECIMAL, FLOAT,\n                      INTEGER, REAL, NUMERIC, SMALLINT, TEXT,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]