[
  {
    "project": "typeddjango/django-stubs",
    "commit": "cfd69c0acc4bb3c282cab4a411b014afe280d359",
    "filename": "django-stubs/db/models/query.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/typeddjango-django-stubs/django-stubs/db/models/query.pyi",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "django-stubs/db/models/query.pyi:128:4 Inconsistent override [15]: `django-stubs.db.models.query.QuerySet.__iter__` overrides method defined in `Iterable` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Iterator[_T]`.",
    "message": " `django-stubs.db.models.query.QuerySet.__iter__` overrides method defined in `Iterable` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Iterator[_T]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 128,
    "warning_line": "    def __iter__(self) -> Iterator[_T]: ..."
  },
  {
    "project": "typeddjango/django-stubs",
    "commit": "cfd69c0acc4bb3c282cab4a411b014afe280d359",
    "filename": "django-stubs/db/models/query.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/typeddjango-django-stubs/django-stubs/db/models/query.pyi",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "django-stubs/db/models/query.pyi:134:4 Inconsistent override [15]: `django-stubs.db.models.query.QuerySet.__reversed__` overrides method defined in `Reversible` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Iterator[_T]`.",
    "message": " `django-stubs.db.models.query.QuerySet.__reversed__` overrides method defined in `Reversible` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Iterator[_T]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 134,
    "warning_line": "    def __reversed__(self) -> Iterator[_T]: ..."
  },
  {
    "project": "typeddjango/django-stubs",
    "commit": "cfd69c0acc4bb3c282cab4a411b014afe280d359",
    "filename": "django-stubs/db/models/query.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/typeddjango-django-stubs/django-stubs/db/models/query.pyi",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "django-stubs/db/models/query.pyi:155:4 Inconsistent override [15]: `django-stubs.db.models.query._ValuesQuerySet.annotate` overrides method defined in `QuerySet` inconsistently. Returned type `unknown` is not a subtype of the overridden return `QuerySet[]`.",
    "message": " `django-stubs.db.models.query._ValuesQuerySet.annotate` overrides method defined in `QuerySet` inconsistently. Returned type `unknown` is not a subtype of the overridden return `QuerySet[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 155,
    "warning_line": "    def annotate(self, *args: Any, **kwargs: Any) -> _ValuesQuerySet[_T, Any]: ...",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def prefetch_related(self: _QS, *lookups: Any) -> _QS: ...\n    # TODO: return type\n    def annotate(self, *args: Any, **kwargs: Any) -> QuerySet[Any]: ...\n    def alias(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n",
        "source_code_len": 223,
        "target_code": "    def prefetch_related(self: _QS, *lookups: Any) -> _QS: ...\n    def annotate(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n    def alias(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n",
        "target_code_len": 194,
        "diff_format": "@@ -103,4 +106,3 @@\n     def prefetch_related(self: _QS, *lookups: Any) -> _QS: ...\n-    # TODO: return type\n-    def annotate(self, *args: Any, **kwargs: Any) -> QuerySet[Any]: ...\n+    def annotate(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n     def alias(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n",
        "source_code_with_indent": "    def prefetch_related(self: _QS, *lookups: Any) -> _QS: ...\n    # TODO: return type\n    def annotate(self, *args: Any, **kwargs: Any) -> QuerySet[Any]: ...\n    def alias(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def prefetch_related(self: _QS, *lookups: Any) -> _QS: ...\n    def annotate(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n    def alias(self: _QS, *args: Any, **kwargs: Any) -> _QS: ...\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]