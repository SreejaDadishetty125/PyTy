[
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:51:4 Incompatible variable type [9]: featurizer_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, str]`.",
    "message": " featurizer_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 51,
    "warning_line": "    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_len": 178,
        "target_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_len": 172,
        "diff_format": "@@ -50,4 +47,4 @@\n     save_dir: Optional[str] = None,\n-    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n-    splitter_kwargs: Dict[str, object] = {\n+    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n+    splitter_kwargs: Dict[str, Any] = {\n         'frac_train': 0.8,\n",
        "source_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:52:4 Incompatible variable type [9]: splitter_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, float]`.",
    "message": " splitter_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 52,
    "warning_line": "    splitter_kwargs: Dict[str, object] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_len": 178,
        "target_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_len": 172,
        "diff_format": "@@ -50,4 +47,4 @@\n     save_dir: Optional[str] = None,\n-    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n-    splitter_kwargs: Dict[str, object] = {\n+    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n+    splitter_kwargs: Dict[str, Any] = {\n         'frac_train': 0.8,\n",
        "source_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {'data_source': 'matminer'},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:57:4 Incompatible variable type [9]: transformer_kwargs is declared to have type `Dict[str, Dict[str, object]]` but is used as type `Dict[str, Dict[str, bool]]`.",
    "message": " transformer_kwargs is declared to have type `Dict[str, Dict[str, object]]` but is used as type `Dict[str, Dict[str, bool]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 57,
    "warning_line": "    transformer_kwargs: Dict[str, Dict[str, object]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    },\n    transformer_kwargs: Dict[str, Dict[str, object]] = {\n        'NormalizationTransformer': {\n",
        "source_code_len": 102,
        "target_code": "    },\n    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n        'NormalizationTransformer': {\n",
        "target_code_len": 99,
        "diff_format": "@@ -56,3 +53,3 @@\n     },\n-    transformer_kwargs: Dict[str, Dict[str, object]] = {\n+    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n         'NormalizationTransformer': {\n",
        "source_code_with_indent": "    },\n    transformer_kwargs: Dict[str, Dict[str, object]] = {\n        'NormalizationTransformer': {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    },\n    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n        'NormalizationTransformer': {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:137:16 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `deepchem.feat.base_classes.MaterialCompositionFeaturizer`.",
    "message": " Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `deepchem.feat.base_classes.MaterialCompositionFeaturizer`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 137,
    "warning_line": "  if issubclass(featurizer, MaterialCompositionFeaturizer):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:138:30 Incompatible parameter type [6]: Expected `typing.Iterable[str]` for 1st positional only parameter to call `deepchem.feat.base_classes.MaterialCompositionFeaturizer.__call__` but got `object`.",
    "message": " Expected `typing.Iterable[str]` for 1st positional only parameter to call `deepchem.feat.base_classes.MaterialCompositionFeaturizer.__call__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 138,
    "warning_line": "    featurizer = featurizer(**featurizer_kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:143:16 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `Splitter`.",
    "message": " Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `Splitter`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 143,
    "warning_line": "  if issubclass(splitter, Splitter):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:144:15 Call error [29]: `Splitter` is not a function.",
    "message": " `Splitter` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 144,
    "warning_line": "    splitter = splitter()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 317,
        "target_code": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 236,
        "diff_format": "@@ -41,8 +41,5 @@\n def load_bandgap(\n-    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n-        'ElementPropertyFingerprint'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_bandgap(\n    featurizer: MaterialCompositionFeaturizer = DEFAULT_FEATURIZERS[\n        'ElementPropertyFingerprint'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_bandgap(\n    featurizer=DEFAULT_FEATURIZERS['ElementPropertyFingerprint'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_bandgap.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_bandgap.py:161:2 Incompatible variable type [9]: supported_featurizers is declared to have type `List[deepchem.feat.base_classes.Featurizer]` but is used as type `List[str]`.",
    "message": " supported_featurizers is declared to have type `List[deepchem.feat.base_classes.Featurizer]` but is used as type `List[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 161,
    "warning_line": "  supported_featurizers = ['ElementPropertyFingerprint'",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  # First type of supported featurizers\n  supported_featurizers = ['ElementPropertyFingerprint'\n                          ]  # type: List[Featurizer]\n\n",
        "source_code_len": 151,
        "target_code": "  # First type of supported featurizers\n  supported_featurizers = ['ElementPropertyFingerprint']  # type: List[str]\n\n",
        "target_code_len": 117,
        "diff_format": "@@ -160,4 +157,3 @@\n   # First type of supported featurizers\n-  supported_featurizers = ['ElementPropertyFingerprint'\n-                          ]  # type: List[Featurizer]\n+  supported_featurizers = ['ElementPropertyFingerprint']  # type: List[str]\n \n",
        "source_code_with_indent": "  # First type of supported featurizers\n  <DED><DED>supported_featurizers = ['ElementPropertyFingerprint'\n                          ]  # type: List[Featurizer]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  # First type of supported featurizers\n  <DED><DED>supported_featurizers = ['ElementPropertyFingerprint']  # type: List[str]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:49:4 Incompatible variable type [9]: featurizer_kwargs is declared to have type `Dict[str, object]` but is used as type `None`.",
    "message": " featurizer_kwargs is declared to have type `Dict[str, object]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 49,
    "warning_line": "    featurizer_kwargs: Dict[str, object] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = None,\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_len": 155,
        "target_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_len": 147,
        "diff_format": "@@ -48,4 +45,4 @@\n     save_dir: Optional[str] = None,\n-    featurizer_kwargs: Dict[str, object] = None,\n-    splitter_kwargs: Dict[str, object] = {\n+    featurizer_kwargs: Dict[str, Any] = {},\n+    splitter_kwargs: Dict[str, Any] = {\n         'frac_train': 0.8,\n",
        "source_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = None,\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:50:4 Incompatible variable type [9]: splitter_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, float]`.",
    "message": " splitter_kwargs is declared to have type `Dict[str, object]` but is used as type `Dict[str, float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 50,
    "warning_line": "    splitter_kwargs: Dict[str, object] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = None,\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_len": 155,
        "target_code": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_len": 147,
        "diff_format": "@@ -48,4 +45,4 @@\n     save_dir: Optional[str] = None,\n-    featurizer_kwargs: Dict[str, object] = None,\n-    splitter_kwargs: Dict[str, object] = {\n+    featurizer_kwargs: Dict[str, Any] = {},\n+    splitter_kwargs: Dict[str, Any] = {\n         'frac_train': 0.8,\n",
        "source_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, object] = None,\n    splitter_kwargs: Dict[str, object] = {\n        'frac_train': 0.8,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    save_dir: Optional[str] = None,\n    featurizer_kwargs: Dict[str, Any] = {},\n    splitter_kwargs: Dict[str, Any] = {\n        'frac_train': 0.8,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:55:4 Incompatible variable type [9]: transformer_kwargs is declared to have type `Dict[str, Dict[str, object]]` but is used as type `Dict[str, Dict[str, bool]]`.",
    "message": " transformer_kwargs is declared to have type `Dict[str, Dict[str, object]]` but is used as type `Dict[str, Dict[str, bool]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 55,
    "warning_line": "    transformer_kwargs: Dict[str, Dict[str, object]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_len": 56,
        "target_code": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -11,3 +11,3 @@\n \n-from typing import List, Tuple, Dict, Optional, Union\n+from typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Dict, Optional, Union, Any, Type, Callable\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    },\n    transformer_kwargs: Dict[str, Dict[str, object]] = {\n        'NormalizationTransformer': {\n",
        "source_code_len": 102,
        "target_code": "    },\n    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n        'NormalizationTransformer': {\n",
        "target_code_len": 99,
        "diff_format": "@@ -54,3 +51,3 @@\n     },\n-    transformer_kwargs: Dict[str, Dict[str, object]] = {\n+    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n         'NormalizationTransformer': {\n",
        "source_code_with_indent": "    },\n    transformer_kwargs: Dict[str, Dict[str, object]] = {\n        'NormalizationTransformer': {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    },\n    transformer_kwargs: Dict[str, Dict[str, Any]] = {\n        'NormalizationTransformer': {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:135:16 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `deepchem.feat.base_classes.MaterialStructureFeaturizer`.",
    "message": " Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `deepchem.feat.base_classes.MaterialStructureFeaturizer`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 135,
    "warning_line": "  if issubclass(featurizer, MaterialStructureFeaturizer):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:136:30 Incompatible parameter type [6]: Expected `typing.Iterable[Dict[str, typing.Any]]` for 1st positional only parameter to call `deepchem.feat.base_classes.MaterialStructureFeaturizer.__call__` but got `object`.",
    "message": " Expected `typing.Iterable[Dict[str, typing.Any]]` for 1st positional only parameter to call `deepchem.feat.base_classes.MaterialStructureFeaturizer.__call__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 136,
    "warning_line": "    featurizer = featurizer(**featurizer_kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:141:16 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `Splitter`.",
    "message": " Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `issubclass` but got `Splitter`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "  if issubclass(splitter, Splitter):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:142:15 Call error [29]: `Splitter` is not a function.",
    "message": " `Splitter` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 142,
    "warning_line": "    splitter = splitter()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_len": 309,
        "target_code": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_len": 230,
        "diff_format": "@@ -39,8 +39,5 @@\n def load_perovskite(\n-    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n-        'SineCoulombMatrix'],\n-    transformers: List[Transformer] = [\n-        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n-    ],\n-    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n+    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n+    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n+    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n     reload: bool = True,\n",
        "source_code_with_indent": "def load_perovskite(\n    featurizer: MaterialStructureFeaturizer = DEFAULT_FEATURIZERS[\n        'SineCoulombMatrix'],\n    transformers: List[Transformer] = [\n        DEFAULT_TRANSFORMERS['NormalizationTransformer']\n    ],\n    splitter: Splitter = DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def load_perovskite(\n    featurizer=DEFAULT_FEATURIZERS['SineCoulombMatrix'],\n    transformers: List = [DEFAULT_TRANSFORMERS['NormalizationTransformer']],\n    splitter=DEFAULT_SPLITTERS['RandomSplitter'],\n    reload: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "ab558d41ffbe25b314314222924ddd5ca89e9e6b",
    "filename": "deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/molnet/load_function/material_datasets/load_perovskite.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/molnet/load_function/material_datasets/load_perovskite.py:159:2 Incompatible variable type [9]: supported_featurizers is declared to have type `List[deepchem.feat.base_classes.Featurizer]` but is used as type `List[str]`.",
    "message": " supported_featurizers is declared to have type `List[deepchem.feat.base_classes.Featurizer]` but is used as type `List[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 159,
    "warning_line": "  supported_featurizers = ['StructureGraphFeaturizer',",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  supported_featurizers = ['StructureGraphFeaturizer',\n                           'SineCoulombMatrix']  # type: List[Featurizer]\n\n",
        "source_code_len": 130,
        "target_code": "  supported_featurizers = ['StructureGraphFeaturizer',\n                           'SineCoulombMatrix']  # type: List[str]\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -159,3 +156,3 @@\n   supported_featurizers = ['StructureGraphFeaturizer',\n-                           'SineCoulombMatrix']  # type: List[Featurizer]\n+                           'SineCoulombMatrix']  # type: List[str]\n \n",
        "source_code_with_indent": "  <DED><DED>supported_featurizers = ['StructureGraphFeaturizer',\n                           'SineCoulombMatrix']  # type: List[Featurizer]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  <DED><DED>supported_featurizers = ['StructureGraphFeaturizer',\n                           'SineCoulombMatrix']  # type: List[str]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]