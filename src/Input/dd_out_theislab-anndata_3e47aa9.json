[
  {
    "project": "theislab/anndata",
    "commit": "3e47aa9369f86acffaf5951a16bb36cc4bc64983",
    "filename": "anndata/_core/merge.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theislab-anndata/anndata/_core/merge.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "anndata/_core/merge.py:583:4 Incompatible variable type [9]: fill_value is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " fill_value is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 583,
    "warning_line": "    fill_value: Optional = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from operator import and_, or_, sub\nfrom typing import Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\nfrom warnings import warn\n",
        "source_code_len": 145,
        "target_code": "from operator import and_, or_, sub\nfrom typing import Any, Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\nimport typing\nfrom warnings import warn\n",
        "target_code_len": 164,
        "diff_format": "@@ -8,3 +8,4 @@\n from operator import and_, or_, sub\n-from typing import Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\n+from typing import Any, Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\n+import typing\n from warnings import warn\n",
        "source_code_with_indent": "from operator import and_, or_, sub\nfrom typing import Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\nfrom warnings import warn\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from operator import and_, or_, sub\nfrom typing import Any, Callable, Collection, Iterable, Optional, Tuple, TypeVar, Union\nimport typing\nfrom warnings import warn\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    index_unique: Optional[str] = None,\n    fill_value: Optional = None,\n    pairwise: bool = False,\n",
        "source_code_len": 101,
        "target_code": "    index_unique: Optional[str] = None,\n    fill_value: Optional[Any] = None,\n    pairwise: bool = False,\n",
        "target_code_len": 106,
        "diff_format": "@@ -582,3 +583,3 @@\n     index_unique: Optional[str] = None,\n-    fill_value: Optional = None,\n+    fill_value: Optional[Any] = None,\n     pairwise: bool = False,\n",
        "source_code_with_indent": "    index_unique: Optional[str] = None,\n    fill_value: Optional = None,\n    pairwise: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    index_unique: Optional[str] = None,\n    fill_value: Optional[Any] = None,\n    pairwise: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]