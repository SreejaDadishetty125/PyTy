[
  {
    "project": "recognai/rubrix",
    "commit": "d5c8746d391ef6dee31d01acca9fe9ba7d7459b0",
    "filename": "src/rubrix/server/tasks/text_classification/api/model.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/recognai-rubrix/src/rubrix/server/tasks/text_classification/api/model.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/rubrix/server/tasks/text_classification/api/model.py:128:4 Incompatible attribute type [8]: Attribute `explanation` declared in class `CreationTextClassificationRecord` has type `Dict[str, List[TokenAttributions]]` but is used as type `None`.",
    "message": " Attribute `explanation` declared in class `CreationTextClassificationRecord` has type `Dict[str, List[TokenAttributions]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 128,
    "warning_line": "    explanation: Dict[str, List[TokenAttributions]] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    multi_label: bool = False\n    explanation: Dict[str, List[TokenAttributions]] = None\n\n",
        "source_code_len": 90,
        "target_code": "    multi_label: bool = False\n    explanation: Optional[Dict[str, List[TokenAttributions]]] = None\n\n",
        "target_code_len": 100,
        "diff_format": "@@ -127,3 +127,3 @@\n     multi_label: bool = False\n-    explanation: Dict[str, List[TokenAttributions]] = None\n+    explanation: Optional[Dict[str, List[TokenAttributions]]] = None\n \n",
        "source_code_with_indent": "    multi_label: bool = False\n    explanation: Dict[str, List[TokenAttributions]] = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    multi_label: bool = False\n    explanation: Optional[Dict[str, List[TokenAttributions]]] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]