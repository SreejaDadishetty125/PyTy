[
  {
    "project": "Parisson/TimeSide",
    "commit": "c7c740e8ee7d36ffca94422cc256879556a2cdd9",
    "filename": "timeside/core/analyzer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Parisson-TimeSide/timeside/core/analyzer.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "timeside/core/analyzer.py:72:0 Incompatible variable type [9]: numpy_data_types is declared to have type `typing.List[str]` but is used as type `map[typing.Any]`.",
    "message": " numpy_data_types is declared to have type `typing.List[str]` but is used as type `map[typing.Any]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 72,
    "warning_line": "numpy_data_types = map(lambda x: getattr(np, x), numpy_data_types)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "]\nnumpy_data_types = map(lambda x: getattr(np, x), numpy_data_types)\n# numpy_data_types += [np.ndarray]\n",
        "source_code_len": 104,
        "target_code": "]\nnumpy_data_types = list(map(lambda x: getattr(np, x), numpy_data_types))\n# numpy_data_types += [np.ndarray]\n",
        "target_code_len": 110,
        "diff_format": "@@ -71,3 +71,3 @@\n ]\n-numpy_data_types = map(lambda x: getattr(np, x), numpy_data_types)\n+numpy_data_types = list(map(lambda x: getattr(np, x), numpy_data_types))\n # numpy_data_types += [np.ndarray]\n",
        "source_code_with_indent": "]\nnumpy_data_types = map(lambda x: getattr(np, x), numpy_data_types)\n# numpy_data_types += [np.ndarray]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "]\nnumpy_data_types = list(map(lambda x: getattr(np, x), numpy_data_types))\n# numpy_data_types += [np.ndarray]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]