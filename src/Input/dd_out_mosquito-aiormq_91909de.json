[
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:108:8 Incompatible variable type [9]: arguments is declared to have type `Dict[str, Union[bool, int, str]]` but is used as type `None`.",
    "message": " arguments is declared to have type `Dict[str, Union[bool, int, str]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 108,
    "warning_line": "        arguments: ArgumentsType = None,"
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:123:8 Incompatible variable type [9]: delivery_tag is declared to have type `int` but is used as type `None`.",
    "message": " delivery_tag is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 123,
    "warning_line": "        delivery_tag: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        delivery_tag: int = None,\n        multiple: bool = False,\n",
        "source_code_len": 80,
        "target_code": "        self,\n        delivery_tag: int,\n        multiple: bool = False,\n",
        "target_code_len": 73,
        "diff_format": "@@ -122,3 +127,3 @@\n         self,\n-        delivery_tag: int = None,\n+        delivery_tag: int,\n         multiple: bool = False,\n",
        "source_code_with_indent": "        self,\n        delivery_tag: int = None,\n        multiple: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        delivery_tag: int,\n        multiple: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:168:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 168,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_len": 55,
        "target_code": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_len": 53,
        "diff_format": "@@ -167,3 +172,3 @@\n         self,\n-        exchange: str = None,\n+        exchange: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:184:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 184,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_len": 55,
        "target_code": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_len": 53,
        "diff_format": "@@ -183,3 +188,3 @@\n         self,\n-        exchange: str = None,\n+        exchange: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:195:8 Incompatible variable type [9]: destination is declared to have type `str` but is used as type `None`.",
    "message": " destination is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 195,
    "warning_line": "        destination: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_len": 106,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_len": 102,
        "diff_format": "@@ -194,4 +199,4 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n+        destination: str = '',\n+        source: str = '',\n         routing_key: str = \"\",\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:196:8 Incompatible variable type [9]: source is declared to have type `str` but is used as type `None`.",
    "message": " source is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 196,
    "warning_line": "        source: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_len": 106,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_len": 102,
        "diff_format": "@@ -194,4 +199,4 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n+        destination: str = '',\n+        source: str = '',\n         routing_key: str = \"\",\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:208:8 Incompatible variable type [9]: destination is declared to have type `str` but is used as type `None`.",
    "message": " destination is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 208,
    "warning_line": "        destination: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_len": 117,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_len": 113,
        "diff_format": "@@ -207,5 +212,5 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n-        routing_key: str = \"\",\n+        destination: str = '',\n+        source: str = '',\n+        routing_key: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:209:8 Incompatible variable type [9]: source is declared to have type `str` but is used as type `None`.",
    "message": " source is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 209,
    "warning_line": "        source: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_len": 117,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_len": 113,
        "diff_format": "@@ -207,5 +212,5 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n-        routing_key: str = \"\",\n+        destination: str = '',\n+        source: str = '',\n+        routing_key: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:274:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 274,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_len": 120,
        "target_code": "        queue: str = \"\",\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_len": 116,
        "diff_format": "@@ -273,4 +278,4 @@\n         queue: str = \"\",\n-        exchange: str = None,\n-        routing_key: str = None,\n+        exchange: str = '',\n+        routing_key: str = '',\n         arguments: dict = None,\n",
        "source_code_with_indent": "        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        queue: str = \"\",\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/abc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/abc.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/abc.py:275:8 Incompatible variable type [9]: routing_key is declared to have type `str` but is used as type `None`.",
    "message": " routing_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 275,
    "warning_line": "        routing_key: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_len": 120,
        "target_code": "        queue: str = \"\",\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_len": 116,
        "diff_format": "@@ -273,4 +278,4 @@\n         queue: str = \"\",\n-        exchange: str = None,\n-        routing_key: str = None,\n+        exchange: str = '',\n+        routing_key: str = '',\n         arguments: dict = None,\n",
        "source_code_with_indent": "        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        queue: str = \"\",\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:444:8 Incompatible variable type [9]: arguments is declared to have type `Dict[str, Union[bool, int, str]]` but is used as type `None`.",
    "message": " arguments is declared to have type `Dict[str, Union[bool, int, str]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 444,
    "warning_line": "        arguments: ArgumentsType = None,"
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:484:8 Incompatible variable type [9]: delivery_tag is declared to have type `int` but is used as type `None`.",
    "message": " delivery_tag is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 484,
    "warning_line": "        delivery_tag: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        delivery_tag: int = None,\n        multiple: bool = False,\n",
        "source_code_len": 80,
        "target_code": "        self,\n        delivery_tag: int,\n        multiple: bool = False,\n",
        "target_code_len": 73,
        "diff_format": "@@ -483,3 +492,3 @@\n         self,\n-        delivery_tag: int = None,\n+        delivery_tag: int,\n         multiple: bool = False,\n",
        "source_code_with_indent": "        self,\n        delivery_tag: int = None,\n        multiple: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        delivery_tag: int,\n        multiple: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:617:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 617,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_len": 55,
        "target_code": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_len": 53,
        "diff_format": "@@ -616,3 +628,3 @@\n         self,\n-        exchange: str = None,\n+        exchange: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:644:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 644,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_len": 55,
        "target_code": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_len": 53,
        "diff_format": "@@ -643,3 +655,3 @@\n         self,\n-        exchange: str = None,\n+        exchange: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        exchange: str = None,\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        exchange: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:659:8 Incompatible variable type [9]: destination is declared to have type `str` but is used as type `None`.",
    "message": " destination is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 659,
    "warning_line": "        destination: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_len": 117,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_len": 113,
        "diff_format": "@@ -658,5 +670,5 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n-        routing_key: str = \"\",\n+        destination: str = '',\n+        source: str = '',\n+        routing_key: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:660:8 Incompatible variable type [9]: source is declared to have type `str` but is used as type `None`.",
    "message": " source is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 660,
    "warning_line": "        source: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_len": 117,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_len": 113,
        "diff_format": "@@ -658,5 +670,5 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n-        routing_key: str = \"\",\n+        destination: str = '',\n+        source: str = '',\n+        routing_key: str = '',\n         *,\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n        *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = '',\n        *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:680:8 Incompatible variable type [9]: destination is declared to have type `str` but is used as type `None`.",
    "message": " destination is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 680,
    "warning_line": "        destination: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_len": 106,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_len": 102,
        "diff_format": "@@ -679,4 +691,4 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n+        destination: str = '',\n+        source: str = '',\n         routing_key: str = \"\",\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:681:8 Incompatible variable type [9]: source is declared to have type `str` but is used as type `None`.",
    "message": " source is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 681,
    "warning_line": "        source: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_len": 106,
        "target_code": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_len": 102,
        "diff_format": "@@ -679,4 +691,4 @@\n         self,\n-        destination: str = None,\n-        source: str = None,\n+        destination: str = '',\n+        source: str = '',\n         routing_key: str = \"\",\n",
        "source_code_with_indent": "        self,\n        destination: str = None,\n        source: str = None,\n        routing_key: str = \"\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        destination: str = '',\n        source: str = '',\n        routing_key: str = \"\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:783:8 Incompatible variable type [9]: exchange is declared to have type `str` but is used as type `None`.",
    "message": " exchange is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 783,
    "warning_line": "        exchange: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_len": 134,
        "target_code": "        self,\n        queue: str = '',\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_len": 130,
        "diff_format": "@@ -781,5 +793,5 @@\n         self,\n-        queue: str = \"\",\n-        exchange: str = None,\n-        routing_key: str = None,\n+        queue: str = '',\n+        exchange: str = '',\n+        routing_key: str = '',\n         arguments: dict = None,\n",
        "source_code_with_indent": "        self,\n        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        queue: str = '',\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/channel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/channel.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/channel.py:784:8 Incompatible variable type [9]: routing_key is declared to have type `str` but is used as type `None`.",
    "message": " routing_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 784,
    "warning_line": "        routing_key: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_len": 134,
        "target_code": "        self,\n        queue: str = '',\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_len": 130,
        "diff_format": "@@ -781,5 +793,5 @@\n         self,\n-        queue: str = \"\",\n-        exchange: str = None,\n-        routing_key: str = None,\n+        queue: str = '',\n+        exchange: str = '',\n+        routing_key: str = '',\n         arguments: dict = None,\n",
        "source_code_with_indent": "        self,\n        queue: str = \"\",\n        exchange: str = None,\n        routing_key: str = None,\n        arguments: dict = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        queue: str = '',\n        exchange: str = '',\n        routing_key: str = '',\n        arguments: dict = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:117:45 Unsupported operand [58]: `+` is not supported for operand types `float` and `typing.Union[None, float, int]`.",
    "message": " `+` is not supported for operand types `float` and `typing.Union[None, float, int]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 117,
    "warning_line": "        deadline: float = self.loop.time() + self.timeout",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self, reader: asyncio.StreamReader,\n                 receive_timeout: TimeoutType):\n        self.reader: asyncio.StreamReader = reader\n        self.timeout: TimeoutType = receive_timeout\n        self.started: bool = False\n",
        "source_code_len": 239,
        "target_code": "    def __init__(self, reader: asyncio.StreamReader,\n                 receive_timeout: TimeType):\n        self.reader: asyncio.StreamReader = reader\n        self.timeout: TimeType = receive_timeout\n        self.started: bool = False\n",
        "target_code_len": 233,
        "diff_format": "@@ -96,5 +100,5 @@\n     def __init__(self, reader: asyncio.StreamReader,\n-                 receive_timeout: TimeoutType):\n+                 receive_timeout: TimeType):\n         self.reader: asyncio.StreamReader = reader\n-        self.timeout: TimeoutType = receive_timeout\n+        self.timeout: TimeType = receive_timeout\n         self.started: bool = False\n",
        "source_code_with_indent": "    def __init__(self, reader: asyncio.StreamReader,\n                 receive_timeout: TimeoutType):\n        <IND>self.reader: asyncio.StreamReader = reader\n        self.timeout: TimeoutType = receive_timeout\n        self.started: bool = False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self, reader: asyncio.StreamReader,\n                 receive_timeout: TimeType):\n        <IND>self.reader: asyncio.StreamReader = reader\n        self.timeout: TimeType = receive_timeout\n        self.started: bool = False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:206:12 Incompatible parameter type [6]: Expected `bytes` for 3rd parameter `cadata` to call `SSLCerts.__init__` but got `typing.Optional[bytes]`.",
    "message": " Expected `bytes` for 3rd parameter `cadata` to call `SSLCerts.__init__` but got `typing.Optional[bytes]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 206,
    "warning_line": "            cadata=self._parse_ca_data(self.url.query.get(\"cadata\")),"
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:294:16 Incompatible return type [7]: Expected `typing.Type[AuthMechanism]` but got `AuthMechanism`.",
    "message": " Expected `typing.Type[AuthMechanism]` but got `AuthMechanism`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 294,
    "warning_line": "                return AuthMechanism[mechanism]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        start_frame: spec.Connection.Start\n    ) -> typing.Type[AuthMechanism]:\n        for mechanism in start_frame.mechanisms.split():\n",
        "source_code_len": 137,
        "target_code": "        start_frame: spec.Connection.Start\n    ) -> AuthMechanism:\n        for mechanism in start_frame.mechanisms.split():\n",
        "target_code_len": 124,
        "diff_format": "@@ -290,3 +297,3 @@\n         start_frame: spec.Connection.Start\n-    ) -> typing.Type[AuthMechanism]:\n+    ) -> AuthMechanism:\n         for mechanism in start_frame.mechanisms.split():\n",
        "source_code_with_indent": "        start_frame: spec.Connection.Start\n    ) -> typing.Type[AuthMechanism]:\n        <IND>for mechanism in start_frame.mechanisms.split():\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        start_frame: spec.Connection.Start\n    ) -> AuthMechanism:\n        <IND>for mechanism in start_frame.mechanisms.split():\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:394:12 Incompatible attribute type [8]: Attribute `_reader_task` declared in class `Connection` has type `asyncio.tasks.Task[typing.Any]` but is used as type `typing.Union[asyncio.tasks.Task[typing.Any], aiormq.base.TaskWrapper]`.",
    "message": " Attribute `_reader_task` declared in class `Connection` has type `asyncio.tasks.Task[typing.Any]` but is used as type `typing.Union[asyncio.tasks.Task[typing.Any], aiormq.base.TaskWrapper]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 394,
    "warning_line": "            self._reader_task = self.create_task(self.__reader(frame_receiver))"
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:513:8 Incompatible return type [7]: Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "message": " Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 513,
    "warning_line": "        return self.server_capabilities.get(\"basic.nack\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def basic_nack(self) -> bool:\n        return self.server_capabilities.get(\"basic.nack\")\n\n",
        "source_code_len": 93,
        "target_code": "    def basic_nack(self) -> bool:\n        return bool(self.server_capabilities.get(\"basic.nack\"))\n\n",
        "target_code_len": 99,
        "diff_format": "@@ -512,3 +531,3 @@\n     def basic_nack(self) -> bool:\n-        return self.server_capabilities.get(\"basic.nack\")\n+        return bool(self.server_capabilities.get(\"basic.nack\"))\n \n",
        "source_code_with_indent": "    def basic_nack(self) -> bool:\n        <IND>return self.server_capabilities.get(\"basic.nack\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def basic_nack(self) -> bool:\n        <IND>return bool(self.server_capabilities.get(\"basic.nack\"))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:517:8 Incompatible return type [7]: Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "message": " Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 517,
    "warning_line": "        return self.server_capabilities.get(\"consumer_cancel_notify\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def consumer_cancel_notify(self) -> bool:\n        return self.server_capabilities.get(\"consumer_cancel_notify\")\n\n",
        "source_code_len": 117,
        "target_code": "    def consumer_cancel_notify(self) -> bool:\n        return bool(self.server_capabilities.get(\"consumer_cancel_notify\"))\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -516,3 +535,3 @@\n     def consumer_cancel_notify(self) -> bool:\n-        return self.server_capabilities.get(\"consumer_cancel_notify\")\n+        return bool(self.server_capabilities.get(\"consumer_cancel_notify\"))\n \n",
        "source_code_with_indent": "    def consumer_cancel_notify(self) -> bool:\n        <IND>return self.server_capabilities.get(\"consumer_cancel_notify\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def consumer_cancel_notify(self) -> bool:\n        <IND>return bool(self.server_capabilities.get(\"consumer_cancel_notify\"))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "mosquito/aiormq",
    "commit": "91909de532777c494df33a4843410b1981ca8794",
    "filename": "aiormq/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/mosquito-aiormq/aiormq/connection.py",
    "file_hunks_size": 23,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiormq/connection.py:521:8 Incompatible return type [7]: Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "message": " Expected `bool` but got `typing.Union[None, bool, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 521,
    "warning_line": "        return self.server_capabilities.get(\"exchange_exchange_bindings\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def exchange_exchange_bindings(self) -> bool:\n        return self.server_capabilities.get(\"exchange_exchange_bindings\")\n\n",
        "source_code_len": 125,
        "target_code": "    def exchange_exchange_bindings(self) -> bool:\n        return bool(self.server_capabilities.get(\"exchange_exchange_bindings\"))\n\n",
        "target_code_len": 131,
        "diff_format": "@@ -520,3 +539,3 @@\n     def exchange_exchange_bindings(self) -> bool:\n-        return self.server_capabilities.get(\"exchange_exchange_bindings\")\n+        return bool(self.server_capabilities.get(\"exchange_exchange_bindings\"))\n \n",
        "source_code_with_indent": "    def exchange_exchange_bindings(self) -> bool:\n        <IND>return self.server_capabilities.get(\"exchange_exchange_bindings\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def exchange_exchange_bindings(self) -> bool:\n        <IND>return bool(self.server_capabilities.get(\"exchange_exchange_bindings\"))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]