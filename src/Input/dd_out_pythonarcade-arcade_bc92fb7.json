[
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:170:8 Incompatible attribute type [8]: Attribute `_time` declared in class `ShadertoyBase` has type `int` but is used as type `float`.",
    "message": " Attribute `_time` declared in class `ShadertoyBase` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 170,
    "warning_line": "        self._time = time if time is not None else self._time",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_len": 337,
        "target_code": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_len": 432,
        "diff_format": "@@ -35,13 +35,12 @@\n         # Uniforms\n-        self._mouse_pos = 0, 0\n-        self._time = 0\n-        self._time_delta = 0\n-        self._frame = 0\n+        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n+        self._time: float = 0.0\n+        self._time_delta: float = 0.0\n+        self._frame: int = 0\n         # Shader inputs\n-        self._channel_0 = None\n-        self._channel_1 = None\n-        self._channel_2 = None\n-        self._channel_3 = None\n-\n-        self._program = None\n+        self._channel_0: Optional[Texture] = None\n+        self._channel_1: Optional[Texture] = None\n+        self._channel_2: Optional[Texture] = None\n+        self._channel_3: Optional[Texture] = None\n+\n         self._set_source(source)\n",
        "source_code_with_indent": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:171:8 Incompatible attribute type [8]: Attribute `_time_delta` declared in class `ShadertoyBase` has type `int` but is used as type `float`.",
    "message": " Attribute `_time_delta` declared in class `ShadertoyBase` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 171,
    "warning_line": "        self._time_delta = time_delta if time_delta is not None else self._time_delta",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_len": 337,
        "target_code": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_len": 432,
        "diff_format": "@@ -35,13 +35,12 @@\n         # Uniforms\n-        self._mouse_pos = 0, 0\n-        self._time = 0\n-        self._time_delta = 0\n-        self._frame = 0\n+        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n+        self._time: float = 0.0\n+        self._time_delta: float = 0.0\n+        self._frame: int = 0\n         # Shader inputs\n-        self._channel_0 = None\n-        self._channel_1 = None\n-        self._channel_2 = None\n-        self._channel_3 = None\n-\n-        self._program = None\n+        self._channel_0: Optional[Texture] = None\n+        self._channel_1: Optional[Texture] = None\n+        self._channel_2: Optional[Texture] = None\n+        self._channel_3: Optional[Texture] = None\n+\n         self._set_source(source)\n",
        "source_code_with_indent": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:172:8 Incompatible attribute type [8]: Attribute `_mouse_pos` declared in class `ShadertoyBase` has type `Tuple[int, int]` but is used as type `Tuple[float, float]`.",
    "message": " Attribute `_mouse_pos` declared in class `ShadertoyBase` has type `Tuple[int, int]` but is used as type `Tuple[float, float]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 172,
    "warning_line": "        self._mouse_pos = mouse_position if mouse_position is not None else self._mouse_pos",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_len": 337,
        "target_code": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_len": 432,
        "diff_format": "@@ -35,13 +35,12 @@\n         # Uniforms\n-        self._mouse_pos = 0, 0\n-        self._time = 0\n-        self._time_delta = 0\n-        self._frame = 0\n+        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n+        self._time: float = 0.0\n+        self._time_delta: float = 0.0\n+        self._frame: int = 0\n         # Shader inputs\n-        self._channel_0 = None\n-        self._channel_1 = None\n-        self._channel_2 = None\n-        self._channel_3 = None\n-\n-        self._program = None\n+        self._channel_0: Optional[Texture] = None\n+        self._channel_1: Optional[Texture] = None\n+        self._channel_2: Optional[Texture] = None\n+        self._channel_3: Optional[Texture] = None\n+\n         self._set_source(source)\n",
        "source_code_with_indent": "        # Uniforms\n        self._mouse_pos = 0, 0\n        self._time = 0\n        self._time_delta = 0\n        self._frame = 0\n        # Shader inputs\n        self._channel_0 = None\n        self._channel_1 = None\n        self._channel_2 = None\n        self._channel_3 = None\n\n        self._program = None\n        self._set_source(source)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Uniforms\n        self._mouse_pos: Tuple[float, float] = 0.0, 0.0\n        self._time: float = 0.0\n        self._time_delta: float = 0.0\n        self._frame: int = 0\n        # Shader inputs\n        self._channel_0: Optional[Texture] = None\n        self._channel_1: Optional[Texture] = None\n        self._channel_2: Optional[Texture] = None\n        self._channel_3: Optional[Texture] = None\n\n        self._set_source(source)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:285:4 Inconsistent override [14]: `arcade.experimental.shadertoy.ShadertoyBuffer.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `height` in overriding signature.",
    "message": " `arcade.experimental.shadertoy.ShadertoyBuffer.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `height` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 285,
    "warning_line": "    def resize(self, size: Tuple[int, int]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def resize(self, width: int, height: int):\n        pass\n\n",
        "source_code_len": 62,
        "target_code": "\n    def resize(self, size: Tuple[int, int]):\n        raise NotImplementedError\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -156,4 +155,4 @@\n \n-    def resize(self, width: int, height: int):\n-        pass\n+    def resize(self, size: Tuple[int, int]):\n+        raise NotImplementedError\n \n",
        "source_code_with_indent": "\n    <DED>def resize(self, width: int, height: int):\n        <IND>pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def resize(self, size: Tuple[int, int]):\n        <IND>raise NotImplementedError\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:285:4 Inconsistent override [14]: `arcade.experimental.shadertoy.ShadertoyBuffer.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `width` in overriding signature.",
    "message": " `arcade.experimental.shadertoy.ShadertoyBuffer.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `width` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 285,
    "warning_line": "    def resize(self, size: Tuple[int, int]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def resize(self, width: int, height: int):\n        pass\n\n",
        "source_code_len": 62,
        "target_code": "\n    def resize(self, size: Tuple[int, int]):\n        raise NotImplementedError\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -156,4 +155,4 @@\n \n-    def resize(self, width: int, height: int):\n-        pass\n+    def resize(self, size: Tuple[int, int]):\n+        raise NotImplementedError\n \n",
        "source_code_with_indent": "\n    <DED>def resize(self, width: int, height: int):\n        <IND>pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def resize(self, size: Tuple[int, int]):\n        <IND>raise NotImplementedError\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:317:8 Incompatible return type [7]: Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "message": " Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 317,
    "warning_line": "        return self._buffer_a",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def buffer_a(self) -> ShadertoyBuffer:\n        \"\"\"Get or set buffer a\"\"\"\n",
        "source_code_len": 91,
        "target_code": "    @property\n    def buffer_a(self) -> Optional[ShadertoyBuffer]:\n        \"\"\"Get or set buffer a\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -314,3 +313,3 @@\n     @property\n-    def buffer_a(self) -> ShadertoyBuffer:\n+    def buffer_a(self) -> Optional[ShadertoyBuffer]:\n         \"\"\"Get or set buffer a\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def buffer_a(self) -> ShadertoyBuffer:\n        <IND>\"\"\"Get or set buffer a\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def buffer_a(self) -> Optional[ShadertoyBuffer]:\n        <IND>\"\"\"Get or set buffer a\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:326:8 Incompatible return type [7]: Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "message": " Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 326,
    "warning_line": "        return self._buffer_b",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def buffer_b(self) -> ShadertoyBuffer:\n        \"\"\"Get or set buffer b\"\"\"\n",
        "source_code_len": 91,
        "target_code": "    @property\n    def buffer_b(self) -> Optional[ShadertoyBuffer]:\n        \"\"\"Get or set buffer b\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -323,3 +322,3 @@\n     @property\n-    def buffer_b(self) -> ShadertoyBuffer:\n+    def buffer_b(self) -> Optional[ShadertoyBuffer]:\n         \"\"\"Get or set buffer b\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def buffer_b(self) -> ShadertoyBuffer:\n        <IND>\"\"\"Get or set buffer b\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def buffer_b(self) -> Optional[ShadertoyBuffer]:\n        <IND>\"\"\"Get or set buffer b\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:335:8 Incompatible return type [7]: Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "message": " Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 335,
    "warning_line": "        return self._buffer_c",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def buffer_c(self) -> ShadertoyBuffer:\n        \"\"\"Get or set buffer c\"\"\"\n",
        "source_code_len": 91,
        "target_code": "    @property\n    def buffer_c(self) -> Optional[ShadertoyBuffer]:\n        \"\"\"Get or set buffer c\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -332,3 +331,3 @@\n     @property\n-    def buffer_c(self) -> ShadertoyBuffer:\n+    def buffer_c(self) -> Optional[ShadertoyBuffer]:\n         \"\"\"Get or set buffer c\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def buffer_c(self) -> ShadertoyBuffer:\n        <IND>\"\"\"Get or set buffer c\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def buffer_c(self) -> Optional[ShadertoyBuffer]:\n        <IND>\"\"\"Get or set buffer c\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:344:8 Incompatible return type [7]: Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "message": " Expected `ShadertoyBuffer` but got `Optional[ShadertoyBuffer]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 344,
    "warning_line": "        return self._buffer_d",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def buffer_d(self) -> ShadertoyBuffer:\n        \"\"\"Get or set buffer d\"\"\"\n",
        "source_code_len": 91,
        "target_code": "    @property\n    def buffer_d(self) -> Optional[ShadertoyBuffer]:\n        \"\"\"Get or set buffer d\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -341,3 +340,3 @@\n     @property\n-    def buffer_d(self) -> ShadertoyBuffer:\n+    def buffer_d(self) -> Optional[ShadertoyBuffer]:\n         \"\"\"Get or set buffer d\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def buffer_d(self) -> ShadertoyBuffer:\n        <IND>\"\"\"Get or set buffer d\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def buffer_d(self) -> Optional[ShadertoyBuffer]:\n        <IND>\"\"\"Get or set buffer d\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:372:4 Inconsistent override [14]: `arcade.experimental.shadertoy.Shadertoy.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `height` in overriding signature.",
    "message": " `arcade.experimental.shadertoy.Shadertoy.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `height` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 372,
    "warning_line": "    def resize(self, size: Tuple[int, int]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def resize(self, width: int, height: int):\n        pass\n\n",
        "source_code_len": 62,
        "target_code": "\n    def resize(self, size: Tuple[int, int]):\n        raise NotImplementedError\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -156,4 +155,4 @@\n \n-    def resize(self, width: int, height: int):\n-        pass\n+    def resize(self, size: Tuple[int, int]):\n+        raise NotImplementedError\n \n",
        "source_code_with_indent": "\n    <DED>def resize(self, width: int, height: int):\n        <IND>pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def resize(self, size: Tuple[int, int]):\n        <IND>raise NotImplementedError\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "bc92fb791210270df0a00a0ea8ac358add4fd13c",
    "filename": "arcade/experimental/shadertoy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/experimental/shadertoy.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/experimental/shadertoy.py:372:4 Inconsistent override [14]: `arcade.experimental.shadertoy.Shadertoy.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `width` in overriding signature.",
    "message": " `arcade.experimental.shadertoy.Shadertoy.resize` overrides method defined in `ShadertoyBase` inconsistently. Could not find parameter `width` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 372,
    "warning_line": "    def resize(self, size: Tuple[int, int]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def resize(self, width: int, height: int):\n        pass\n\n",
        "source_code_len": 62,
        "target_code": "\n    def resize(self, size: Tuple[int, int]):\n        raise NotImplementedError\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -156,4 +155,4 @@\n \n-    def resize(self, width: int, height: int):\n-        pass\n+    def resize(self, size: Tuple[int, int]):\n+        raise NotImplementedError\n \n",
        "source_code_with_indent": "\n    <DED>def resize(self, width: int, height: int):\n        <IND>pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def resize(self, size: Tuple[int, int]):\n        <IND>raise NotImplementedError\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]