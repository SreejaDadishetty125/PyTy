[
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:72:17 Incompatible variable type [9]: batch_size is declared to have type `int` but is used as type `None`.",
    "message": " batch_size is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 72,
    "warning_line": "                 batch_size: int = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:83:4 Inconsistent override [14]: `nlp.pipeline.data.batchers.TexarBatcher.get_batch` overrides method defined in `Batcher` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `nlp.pipeline.data.batchers.TexarBatcher.get_batch` overrides method defined in `Batcher` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 83,
    "warning_line": "    def get_batch(self) -> Iterator[tx.data.Batch]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        data = DictData(dataset.get_data(\"sentence\"), hparams=hparams)\n        self.batch_size = data.batch_size\n        self.batch_iter = tx.data.DataIterator(data)\n\n    def get_batch(self) -> Iterator[tx.data.Batch]:\n        for batch in self.batch_iter:\n",
        "source_code_len": 257,
        "target_code": "        data = DictData(dataset.get_data(\"sentence\"), hparams=hparams)\n        super().__init__(data.batch_size)\n        self.batch_iter = tx.data.DataIterator(data)\n\n    def get_batch(self) -> Iterator[tx.data.Batch]:   # type: ignore\n        for batch in self.batch_iter:\n",
        "target_code_len": 274,
        "diff_format": "@@ -79,6 +79,6 @@\n         data = DictData(dataset.get_data(\"sentence\"), hparams=hparams)\n-        self.batch_size = data.batch_size\n+        super().__init__(data.batch_size)\n         self.batch_iter = tx.data.DataIterator(data)\n \n-    def get_batch(self) -> Iterator[tx.data.Batch]:\n+    def get_batch(self) -> Iterator[tx.data.Batch]:   # type: ignore\n         for batch in self.batch_iter:\n",
        "source_code_with_indent": "        data = DictData(dataset.get_data(\"sentence\"), hparams=hparams)\n        self.batch_size = data.batch_size\n        self.batch_iter = tx.data.DataIterator(data)\n\n    <DED>def get_batch(self) -> Iterator[tx.data.Batch]:\n        <IND>for batch in self.batch_iter:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        data = DictData(dataset.get_data(\"sentence\"), hparams=hparams)\n        super().__init__(data.batch_size)\n        self.batch_iter = tx.data.DataIterator(data)\n\n    <DED>def get_batch(self) -> Iterator[tx.data.Batch]:   # type: ignore\n        <IND>for batch in self.batch_iter:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:105:4 Inconsistent override [14]: `nlp.pipeline.data.batchers.ProcessingBatcher.get_batch` overrides method defined in `Batcher` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `nlp.pipeline.data.batchers.ProcessingBatcher.get_batch` overrides method defined in `Batcher` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 105,
    "warning_line": "    def get_batch(self,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:108:18 Incompatible variable type [9]: annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 108,
    "warning_line": "                  annotation_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:109:18 Incompatible variable type [9]: link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 109,
    "warning_line": "                  link_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:110:18 Incompatible variable type [9]: group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 110,
    "warning_line": "                  group_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:143:12 Incompatible variable type [9]: annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 143,
    "warning_line": "            annotation_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:144:12 Incompatible variable type [9]: link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 144,
    "warning_line": "            link_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:145:12 Incompatible variable type [9]: group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 145,
    "warning_line": "            group_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:166:16 Incompatible return type [7]: Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[typing.Any, int], None, None]`.",
    "message": " Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[typing.Any, int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 166,
    "warning_line": "                yield (batch, len(instances))"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/batchers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/batchers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/batchers.py:171:12 Incompatible return type [7]: Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[typing.Any, int], None, None]`.",
    "message": " Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[typing.Any, int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 171,
    "warning_line": "            yield (batch, len(instances))"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:512:32 Incompatible parameter type [6]: Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_annotation_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "message": " Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_annotation_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 512,
    "warning_line": "                        a_type, a_args, data, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_len": 88,
        "target_code": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_len": 92,
        "diff_format": "@@ -624,3 +623,3 @@\n             a_type: str,\n-            a_args: Union[Dict, List],\n+            a_args: Union[Dict, Iterable],\n             data: Dict,\n",
        "source_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:518:32 Incompatible parameter type [6]: Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_link_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "message": " Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_link_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 518,
    "warning_line": "                        a_type, a_args, data, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_len": 88,
        "target_code": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_len": 92,
        "diff_format": "@@ -705,3 +704,3 @@\n             a_type: str,\n-            a_args: Union[Dict, List],\n+            a_args: Union[Dict, Iterable],\n             data: Dict,\n",
        "source_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:569:36 Incompatible parameter type [6]: Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_annotation_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "message": " Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_annotation_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 569,
    "warning_line": "                            a_type, a_args, data, sent",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_len": 88,
        "target_code": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_len": 92,
        "diff_format": "@@ -624,3 +623,3 @@\n             a_type: str,\n-            a_args: Union[Dict, List],\n+            a_args: Union[Dict, Iterable],\n             data: Dict,\n",
        "source_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:574:36 Incompatible parameter type [6]: Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_link_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "message": " Expected `Union[Dict[typing.Any, typing.Any], List[typing.Any]]` for 2nd positional only parameter to call `DataPack._generate_link_entry_data` but got `Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 574,
    "warning_line": "                            a_type, a_args, data, sent",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_len": 88,
        "target_code": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_len": 92,
        "diff_format": "@@ -705,3 +704,3 @@\n             a_type: str,\n-            a_args: Union[Dict, List],\n+            a_args: Union[Dict, Iterable],\n             data: Dict,\n",
        "source_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, List],\n            data: Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            a_type: str,\n            a_args: Union[Dict, Iterable],\n            data: Dict,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:827:16 Incompatible return type [7]: Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[Dict[typing.Any, typing.Any], int], None, None]`.",
    "message": " Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[Dict[typing.Any, typing.Any], int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 827,
    "warning_line": "                yield (batch, cnt)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import defaultdict\nfrom typing import (\n    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n\n",
        "source_code_len": 129,
        "target_code": "from collections import defaultdict\nfrom typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n                    Type, TypeVar, Union, Any, Tuple)\n\n",
        "target_code_len": 166,
        "diff_format": "@@ -6,4 +6,4 @@\n from collections import defaultdict\n-from typing import (\n-    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n+from typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n+                    Type, TypeVar, Union, Any, Tuple)\n \n",
        "source_code_with_indent": "from collections import defaultdict\nfrom typing import (\n    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import defaultdict\nfrom typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n                    Type, TypeVar, Union, Any, Tuple)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n    ) -> Iterable[Dict]:\n        \"\"\"\n",
        "source_code_len": 328,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0\n    ) -> Iterator[Dict]:\n        \"\"\"\n",
        "target_code_len": 316,
        "diff_format": "@@ -452,7 +451,7 @@\n             context_type: str,\n-            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n             offset: int = 0\n-    ) -> Iterable[Dict]:\n+    ) -> Iterator[Dict]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n    ) -> Iterable[Dict]:\n        <IND>",
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0\n    ) -> Iterator[Dict]:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n        \"\"\"\n",
        "source_code_len": 323,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n        \"\"\"\n",
        "target_code_len": 323,
        "diff_format": "@@ -771,6 +770,6 @@\n             context_type: str,\n-            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            offset: int = 0) -> Iterable[Dict]:\n+            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n        <IND>",
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/data_pack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/data_pack.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/data_pack.py:832:12 Incompatible return type [7]: Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[Dict[typing.Any, typing.Any], int], None, None]`.",
    "message": " Expected `Iterable[Dict[typing.Any, typing.Any]]` but got `typing.Generator[typing.Tuple[Dict[typing.Any, typing.Any], int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 832,
    "warning_line": "            yield (batch, cnt)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import defaultdict\nfrom typing import (\n    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n\n",
        "source_code_len": 129,
        "target_code": "from collections import defaultdict\nfrom typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n                    Type, TypeVar, Union, Any, Tuple)\n\n",
        "target_code_len": 166,
        "diff_format": "@@ -6,4 +6,4 @@\n from collections import defaultdict\n-from typing import (\n-    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n+from typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n+                    Type, TypeVar, Union, Any, Tuple)\n \n",
        "source_code_with_indent": "from collections import defaultdict\nfrom typing import (\n    DefaultDict, Dict, Iterable, List, Optional, Type, TypeVar, Union)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import defaultdict\nfrom typing import (DefaultDict, Dict, Iterable, Iterator, List, Optional,\n                    Type, TypeVar, Union, Any, Tuple)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n    ) -> Iterable[Dict]:\n        \"\"\"\n",
        "source_code_len": 328,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0\n    ) -> Iterator[Dict]:\n        \"\"\"\n",
        "target_code_len": 316,
        "diff_format": "@@ -452,7 +451,7 @@\n             context_type: str,\n-            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n+            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n             offset: int = 0\n-    ) -> Iterable[Dict]:\n+    ) -> Iterator[Dict]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0\n    ) -> Iterable[Dict]:\n        <IND>",
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0\n    ) -> Iterator[Dict]:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n        \"\"\"\n",
        "source_code_len": 323,
        "target_code": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n        \"\"\"\n",
        "target_code_len": 323,
        "diff_format": "@@ -771,6 +770,6 @@\n             context_type: str,\n-            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n-            offset: int = 0) -> Iterable[Dict]:\n+            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n+            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, Iterable]]] = None,\n            offset: int = 0) -> Iterable[Dict]:\n        <IND>",
        "target_code_with_indent": "            context_type: str,\n            annotation_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            link_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            group_types: Optional[Dict[str, Union[Dict, List]]] = None,\n            offset: int = 0) -> Iterable[Tuple[Dict, int]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/dataset.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/dataset.py:18:17 Incompatible variable type [9]: annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " annotation_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 18,
    "warning_line": "                 annotation_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/dataset.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/dataset.py:19:17 Incompatible variable type [9]: link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " link_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 19,
    "warning_line": "                 link_types: Dict[str, Union[Dict, Iterable]] = None,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/dataset.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/dataset.py:20:17 Incompatible variable type [9]: group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "message": " group_types is declared to have type `Dict[str, Union[Dict[typing.Any, typing.Any], Iterable[typing.Any]]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 20,
    "warning_line": "                 group_types: Dict[str, Union[Dict, Iterable]] = None):"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:32:4 Inconsistent override [14]: `nlp.pipeline.data.readers.file_reader.MonoFileReader.dataset_iterator` overrides method defined in `BaseReader` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `nlp.pipeline.data.readers.file_reader.MonoFileReader.dataset_iterator` overrides method defined in `BaseReader` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 32,
    "warning_line": "    def dataset_iterator(self, dir_path: str) -> Iterator[DataPack]:"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:50:57 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "            return self._lazy_dataset_iterator(dir_path, cache_file, has_cache)"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:50:69 Incompatible parameter type [6]: Expected `bool` for 3rd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `typing.Union[bool, str]`.",
    "message": " Expected `bool` for 3rd positional only parameter to call `MonoFileReader._lazy_dataset_iterator` but got `typing.Union[bool, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "            return self._lazy_dataset_iterator(dir_path, cache_file, has_cache)"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:54:12 Incompatible return type [7]: Expected `Iterator[DataPack]` but got `List[DataPack]`.",
    "message": " Expected `Iterator[DataPack]` but got `List[DataPack]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 54,
    "warning_line": "            return list(self._instances_from_cache_file(cache_file))"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:54:56 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `BaseReader._instances_from_cache_file` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `BaseReader._instances_from_cache_file` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 54,
    "warning_line": "            return list(self._instances_from_cache_file(cache_file))"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:67:8 Incompatible return type [7]: Expected `Iterator[DataPack]` but got `List[DataPack]`.",
    "message": " Expected `Iterator[DataPack]` but got `List[DataPack]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 67,
    "warning_line": "        return datapacks"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/file_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/file_reader.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/file_reader.py:94:4 Inconsistent override [14]: `nlp.pipeline.data.readers.file_reader.MonoFileReader.read` overrides method defined in `BaseReader` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `nlp.pipeline.data.readers.file_reader.MonoFileReader.read` overrides method defined in `BaseReader` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 94,
    "warning_line": "    def read(self,"
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:100:56 Incompatible parameter type [6]: Expected `Tuple[int, str]` for 4th positional only parameter to call `OntonotesReader._process_entity_annotations` but got `Optional[Tuple[int, str]]`.",
    "message": " Expected `Tuple[int, str]` for 4th positional only parameter to call `OntonotesReader._process_entity_annotations` but got `Optional[Tuple[int, str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 100,
    "warning_line": "                    entity_label, word_begin, word_end, current_entity_mention",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _process_entity_annotations(self,\n                                    label: str,\n                                    word_begin: int,\n                                    word_end: int,\n                                    current_entity_mention: Tuple[int, str],\n                                    ) -> Tuple[int, str]:\n\n",
        "source_code_len": 331,
        "target_code": "\n    def _process_entity_annotations(\n            self,\n            label: str,\n            word_begin: int,\n            word_end: int,\n            current_entity_mention: Optional[Tuple[int, str]],\n    ) -> Optional[Tuple[int, str]]:\n\n",
        "target_code_len": 236,
        "diff_format": "@@ -199,8 +211,9 @@\n \n-    def _process_entity_annotations(self,\n-                                    label: str,\n-                                    word_begin: int,\n-                                    word_end: int,\n-                                    current_entity_mention: Tuple[int, str],\n-                                    ) -> Tuple[int, str]:\n+    def _process_entity_annotations(\n+            self,\n+            label: str,\n+            word_begin: int,\n+            word_end: int,\n+            current_entity_mention: Optional[Tuple[int, str]],\n+    ) -> Optional[Tuple[int, str]]:\n \n",
        "source_code_with_indent": "\n    <DED>def _process_entity_annotations(self,\n                                    label: str,\n                                    word_begin: int,\n                                    word_end: int,\n                                    current_entity_mention: Tuple[int, str],\n                                    ) -> Tuple[int, str]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _process_entity_annotations(\n            self,\n            label: str,\n            word_begin: int,\n            word_end: int,\n            current_entity_mention: Optional[Tuple[int, str]],\n    ) -> Optional[Tuple[int, str]]:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:134:20 Incompatible parameter type [6]: Expected `List[Optional[Tuple[int, str]]]` for 4th positional only parameter to call `OntonotesReader._process_pred_annotations` but got `List[Optional[Tuple[str, str]]]`.",
    "message": " Expected `List[Optional[Tuple[int, str]]]` for 4th positional only parameter to call `OntonotesReader._process_pred_annotations` but got `List[Optional[Tuple[str, str]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 134,
    "warning_line": "                    current_pred_arg,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        current_pred_arg: List[Optional[Tuple[str, str]]] = []\n        verbal_pred_args: List[List[Tuple[str, str]]] = []\n",
        "source_code_len": 123,
        "target_code": "\n        current_pred_arg: List[Optional[Tuple[int, str]]] = []\n        verbal_pred_args: List[List[Tuple[str, str]]] = []\n",
        "target_code_len": 123,
        "diff_format": "@@ -61,3 +69,3 @@\n \n-        current_pred_arg: List[Optional[Tuple[str, str]]] = []\n+        current_pred_arg: List[Optional[Tuple[int, str]]] = []\n         verbal_pred_args: List[List[Tuple[str, str]]] = []\n",
        "source_code_with_indent": "\n        current_pred_arg: List[Optional[Tuple[str, str]]] = []\n        verbal_pred_args: List[List[Tuple[str, str]]] = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        current_pred_arg: List[Optional[Tuple[int, str]]] = []\n        verbal_pred_args: List[List[Tuple[str, str]]] = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/data/readers/ontonotes_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/data/readers/ontonotes_reader.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/data/readers/ontonotes_reader.py:221:12 Incompatible variable type [9]: Unable to unpack `None`, expected a tuple.",
    "message": " Unable to unpack `None`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 221,
    "warning_line": "            current_entity_mention = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _process_entity_annotations(self,\n                                    label: str,\n                                    word_begin: int,\n                                    word_end: int,\n                                    current_entity_mention: Tuple[int, str],\n                                    ) -> Tuple[int, str]:\n\n",
        "source_code_len": 331,
        "target_code": "\n    def _process_entity_annotations(\n            self,\n            label: str,\n            word_begin: int,\n            word_end: int,\n            current_entity_mention: Optional[Tuple[int, str]],\n    ) -> Optional[Tuple[int, str]]:\n\n",
        "target_code_len": 236,
        "diff_format": "@@ -199,8 +211,9 @@\n \n-    def _process_entity_annotations(self,\n-                                    label: str,\n-                                    word_begin: int,\n-                                    word_end: int,\n-                                    current_entity_mention: Tuple[int, str],\n-                                    ) -> Tuple[int, str]:\n+    def _process_entity_annotations(\n+            self,\n+            label: str,\n+            word_begin: int,\n+            word_end: int,\n+            current_entity_mention: Optional[Tuple[int, str]],\n+    ) -> Optional[Tuple[int, str]]:\n \n",
        "source_code_with_indent": "\n    <DED>def _process_entity_annotations(self,\n                                    label: str,\n                                    word_begin: int,\n                                    word_end: int,\n                                    current_entity_mention: Tuple[int, str],\n                                    ) -> Tuple[int, str]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _process_entity_annotations(\n            self,\n            label: str,\n            word_begin: int,\n            word_end: int,\n            current_entity_mention: Optional[Tuple[int, str]],\n    ) -> Optional[Tuple[int, str]]:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/processors/base_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/base_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/processors/base_processor.py:45:21 Incompatible variable type [9]: input_pack is declared to have type `nlp.pipeline.data.data_pack.DataPack` but is used as type `None`.",
    "message": " input_pack is declared to have type `nlp.pipeline.data.data_pack.DataPack` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 45,
    "warning_line": "    def finish(self, input_pack: DataPack = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def finish(self, input_pack: DataPack = None):\n        \"\"\"\n",
        "source_code_len": 64,
        "target_code": "\n    def finish(self, input_pack: DataPack):\n        \"\"\"\n",
        "target_code_len": 57,
        "diff_format": "@@ -44,3 +48,3 @@\n \n-    def finish(self, input_pack: DataPack = None):\n+    def finish(self, input_pack: DataPack):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def finish(self, input_pack: DataPack = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def finish(self, input_pack: DataPack):\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/processors/batch_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/batch_processor.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nlp/pipeline/processors/batch_processor.py:39:12 Incompatible variable type [9]: input_pack is declared to have type `DataPack` but is used as type `None`.",
    "message": " input_pack is declared to have type `DataPack` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 39,
    "warning_line": "            input_pack = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def set_mode(self, overwrite: bool):\n        self._overwrite = overwrite\n\n    def process(self, input_pack: DataPack, tail_instances: bool = False):\n        if input_pack.meta.cache_state == self.component_name:\n            input_pack = None\n        else:\n",
        "source_code_len": 261,
        "target_code": "\n    def process(self, input_pack: DataPack, tail_instances: bool = False):\n        if input_pack.meta.cache_state == self.component_name:\n            input_pack = None  # type: ignore\n        else:\n",
        "target_code_len": 199,
        "diff_format": "@@ -33,8 +31,5 @@\n \n-    def set_mode(self, overwrite: bool):\n-        self._overwrite = overwrite\n-\n     def process(self, input_pack: DataPack, tail_instances: bool = False):\n         if input_pack.meta.cache_state == self.component_name:\n-            input_pack = None\n+            input_pack = None  # type: ignore\n         else:\n",
        "source_code_with_indent": "\n    <DED>def set_mode(self, overwrite: bool):\n        <IND>self._overwrite = overwrite\n\n    <DED>def process(self, input_pack: DataPack, tail_instances: bool = False):\n        <IND>if input_pack.meta.cache_state == self.component_name:\n            <IND>input_pack = None\n        <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process(self, input_pack: DataPack, tail_instances: bool = False):\n        <IND>if input_pack.meta.cache_state == self.component_name:\n            <IND>input_pack = None  # type: ignore\n        <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/processors/impl/vocabulary_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/vocabulary_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nlp/pipeline/processors/impl/vocabulary_processor.py:170:4 Inconsistent override [14]: `nlp.pipeline.processors.impl.vocabulary_processor.VocabularyProcessor.process` overrides method defined in `BaseProcessor` inconsistently. Parameter of type `Iterator[DataPack]` is not a supertype of the overridden parameter `DataPack`.",
    "message": " `nlp.pipeline.processors.impl.vocabulary_processor.VocabularyProcessor.process` overrides method defined in `BaseProcessor` inconsistently. Parameter of type `Iterator[DataPack]` is not a supertype of the overridden parameter `DataPack`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 170,
    "warning_line": "    def process(self, input_pack: Iterator[DataPack]) -> Dict[str, Any]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def process(self, input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n        \"\"\"\n",
        "source_code_len": 86,
        "target_code": "\n    def process(self,  # type: ignore\n                input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n        \"\"\"\n",
        "target_code_len": 118,
        "diff_format": "@@ -169,3 +169,4 @@\n \n-    def process(self, input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n+    def process(self,  # type: ignore\n+                input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def process(self, input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def process(self,  # type: ignore\n                input_pack: Iterator[DataPack]) -> Dict[str, Any]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/processors/impl/vocabulary_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/processors/impl/vocabulary_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nlp/pipeline/processors/impl/vocabulary_processor.py:202:4 Inconsistent override [15]: `nlp.pipeline.processors.impl.vocabulary_processor.CoNLL03VocabularyProcessor.process` overrides method defined in `VocabularyProcessor` inconsistently. Returned type `List[Counter[str]]` is not a subtype of the overridden return `Dict[str, typing.Any]`.",
    "message": " `nlp.pipeline.processors.impl.vocabulary_processor.CoNLL03VocabularyProcessor.process` overrides method defined in `VocabularyProcessor` inconsistently. Returned type `List[Counter[str]]` is not a subtype of the overridden return `Dict[str, typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 202,
    "warning_line": "    def process(self, input_pack: Iterator[DataPack]) -> List[CounterType[str]]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n    def process(self, input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n        \"\"\"\n",
        "source_code_len": 94,
        "target_code": "\n    def process(  # type: ignore\n            self,\n            input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n        \"\"\"\n",
        "target_code_len": 135,
        "diff_format": "@@ -201,3 +202,5 @@\n \n-    def process(self, input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n+    def process(  # type: ignore\n+            self,\n+            input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def process(self, input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def process(  # type: ignore\n            self,\n            input_pack: Iterator[DataPack]) -> List[CounterType[str]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/train_pipeline.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/train_pipeline.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/train_pipeline.py:28:27 Incompatible parameter type [6]: Expected `Resources` for 1st positional only parameter to call `BaseTrainer.initialize` but got `Optional[Resources]`.",
    "message": " Expected `Resources` for 1st positional only parameter to call `BaseTrainer.initialize` but got `Optional[Resources]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 28,
    "warning_line": "        trainer.initialize(resource)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # config,\n            resource: Optional[Resources] = None,\n            evaluator: Optional[Evaluator] = None,\n",
        "source_code_len": 123,
        "target_code": "            # config,\n            resource: Resources,\n            evaluator: Optional[Evaluator] = None,\n",
        "target_code_len": 106,
        "diff_format": "@@ -21,3 +20,3 @@\n             # config,\n-            resource: Optional[Resources] = None,\n+            resource: Resources,\n             evaluator: Optional[Evaluator] = None,\n",
        "source_code_with_indent": "            # config,\n            resource: Optional[Resources] = None,\n            evaluator: Optional[Evaluator] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            # config,\n            resource: Resources,\n            evaluator: Optional[Evaluator] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "asyml/forte",
    "commit": "b348d51d9b74edbe099e7074fcfd7857333b6b4a",
    "filename": "nlp/pipeline/train_pipeline.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/nlp/pipeline/train_pipeline.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nlp/pipeline/train_pipeline.py:34:33 Incompatible parameter type [6]: Expected `Resources` for 1st positional only parameter to call `nlp.pipeline.processors.base_processor.BaseProcessor.initialize` but got `Optional[Resources]`.",
    "message": " Expected `Resources` for 1st positional only parameter to call `nlp.pipeline.processors.base_processor.BaseProcessor.initialize` but got `Optional[Resources]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 34,
    "warning_line": "            predictor.initialize(resource)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # config,\n            resource: Optional[Resources] = None,\n            evaluator: Optional[Evaluator] = None,\n",
        "source_code_len": 123,
        "target_code": "            # config,\n            resource: Resources,\n            evaluator: Optional[Evaluator] = None,\n",
        "target_code_len": 106,
        "diff_format": "@@ -21,3 +20,3 @@\n             # config,\n-            resource: Optional[Resources] = None,\n+            resource: Resources,\n             evaluator: Optional[Evaluator] = None,\n",
        "source_code_with_indent": "            # config,\n            resource: Optional[Resources] = None,\n            evaluator: Optional[Evaluator] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            # config,\n            resource: Resources,\n            evaluator: Optional[Evaluator] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]