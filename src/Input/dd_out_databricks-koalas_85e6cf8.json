[
  {
    "project": "databricks/koalas",
    "commit": "85e6cf87d3284a496bec104b4844decc6c7a78ab",
    "filename": "databricks/koalas/namespace.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/databricks-koalas/databricks/koalas/namespace.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "databricks/koalas/namespace.py:2306:4 Incompatible variable type [9]: on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "message": " on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2306,
    "warning_line": "    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "source_code_len": 88,
        "target_code": "\"\"\"\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +19,3 @@\n \"\"\"\n-from typing import Optional, Union, List, Tuple\n+from typing import Any, Optional, Union, List, Tuple\n from collections import OrderedDict\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_with_indent": "\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_len": 299,
        "target_code": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_len": 239,
        "diff_format": "@@ -2305,5 +2305,5 @@\n     how: str = \"inner\",\n-    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n+    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n     left_index: bool = False,\n",
        "source_code_with_indent": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "databricks/koalas",
    "commit": "85e6cf87d3284a496bec104b4844decc6c7a78ab",
    "filename": "databricks/koalas/namespace.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/databricks-koalas/databricks/koalas/namespace.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "databricks/koalas/namespace.py:2307:4 Incompatible variable type [9]: left_on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "message": " left_on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2307,
    "warning_line": "    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "source_code_len": 88,
        "target_code": "\"\"\"\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +19,3 @@\n \"\"\"\n-from typing import Optional, Union, List, Tuple\n+from typing import Any, Optional, Union, List, Tuple\n from collections import OrderedDict\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_with_indent": "\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_len": 299,
        "target_code": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_len": 239,
        "diff_format": "@@ -2305,5 +2305,5 @@\n     how: str = \"inner\",\n-    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n+    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n     left_index: bool = False,\n",
        "source_code_with_indent": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "databricks/koalas",
    "commit": "85e6cf87d3284a496bec104b4844decc6c7a78ab",
    "filename": "databricks/koalas/namespace.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/databricks-koalas/databricks/koalas/namespace.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "databricks/koalas/namespace.py:2308:4 Incompatible variable type [9]: right_on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "message": " right_on is declared to have type `Union[List[str], List[typing.Tuple[str, ...]], str, typing.Tuple[str, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2308,
    "warning_line": "    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "source_code_len": 88,
        "target_code": "\"\"\"\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +19,3 @@\n \"\"\"\n-from typing import Optional, Union, List, Tuple\n+from typing import Any, Optional, Union, List, Tuple\n from collections import OrderedDict\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nfrom typing import Optional, Union, List, Tuple\nfrom collections import OrderedDict\n",
        "target_code_with_indent": "\nfrom typing import Any, Optional, Union, List, Tuple\nfrom collections import OrderedDict\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_len": 299,
        "target_code": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_len": 239,
        "diff_format": "@@ -2305,5 +2305,5 @@\n     how: str = \"inner\",\n-    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n-    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n+    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n+    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n     left_index: bool = False,\n",
        "source_code_with_indent": "    how: str = \"inner\",\n    on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    right_on: Union[str, List[str], Tuple[str, ...], List[Tuple[str, ...]]] = None,\n    left_index: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    how: str = \"inner\",\n    on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    right_on: Union[Any, List[Any], Tuple, List[Tuple]] = None,\n    left_index: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "databricks/koalas",
    "commit": "85e6cf87d3284a496bec104b4844decc6c7a78ab",
    "filename": "databricks/koalas/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/databricks-koalas/databricks/koalas/utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "databricks/koalas/utils.py:754:4 Incompatible return type [7]: Expected `Union[str, typing.Tuple[str, ...]]` but got `Union[tuple[str], str]`.",
    "message": " Expected `Union[str, typing.Tuple[str, ...]]` but got `Union[tuple[str], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 754,
    "warning_line": "    return column_name_or_label",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def verify_temp_column_name(\n    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[str, Tuple[str, ...]]\n) -> Union[str, Tuple[str, ...]]:\n    \"\"\"\n",
        "source_code_len": 166,
        "target_code": "def verify_temp_column_name(\n    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[Any, Tuple]\n) -> Union[Any, Tuple]:\n    \"\"\"\n",
        "target_code_len": 146,
        "diff_format": "@@ -649,4 +649,4 @@\n def verify_temp_column_name(\n-    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[str, Tuple[str, ...]]\n-) -> Union[str, Tuple[str, ...]]:\n+    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[Any, Tuple]\n+) -> Union[Any, Tuple]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def verify_temp_column_name(\n    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[str, Tuple[str, ...]]\n) -> Union[str, Tuple[str, ...]]:\n    <IND>",
        "target_code_with_indent": "<DED>def verify_temp_column_name(\n    df: Union[\"DataFrame\", spark.DataFrame], column_name_or_label: Union[Any, Tuple]\n) -> Union[Any, Tuple]:\n    <IND>"
      }
    ]
  }
]