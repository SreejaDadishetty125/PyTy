[
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/checks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/checks.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/checks.py:201:59 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 201,
    "warning_line": "            return self._format_groupby_input(groupby_obj, self.groups)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/checks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/checks.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/checks.py:205:59 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 205,
    "warning_line": "            return self._format_groupby_input(groupby_obj, self.groups)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/checks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/checks.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/checks.py:219:55 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 219,
    "warning_line": "        return self._format_groupby_input(groupby_obj, self.groups)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/checks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/checks.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/checks.py:224:12 Incompatible variable type [9]: column is declared to have type `str` but is used as type `None`.",
    "message": " column is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 224,
    "warning_line": "            column: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            df_or_series: Union[pd.DataFrame, pd.Series],\n            column: str = None,\n    ) -> CheckResult:\n",
        "source_code_len": 112,
        "target_code": "            df_or_series: Union[pd.DataFrame, pd.Series],\n            column: Optional[str] = None,\n    ) -> CheckResult:\n",
        "target_code_len": 122,
        "diff_format": "@@ -223,3 +224,3 @@\n             df_or_series: Union[pd.DataFrame, pd.Series],\n-            column: str = None,\n+            column: Optional[str] = None,\n     ) -> CheckResult:\n",
        "source_code_with_indent": "            df_or_series: Union[pd.DataFrame, pd.Series],\n            column: str = None,\n    ) -> CheckResult:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            df_or_series: Union[pd.DataFrame, pd.Series],\n            column: Optional[str] = None,\n    ) -> CheckResult:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:111:8 Incompatible variable type [9]: Unable to unpack `List[typing.Any]`, expected a tuple.",
    "message": " Unable to unpack `List[typing.Any]`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 111,
    "warning_line": "        args = list(args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            instance: Union[None, Any],\n            args: Tuple[Any],\n            kwargs: Dict[str, Any]):\n",
        "source_code_len": 107,
        "target_code": "            instance: Union[None, Any],\n            args: Union[List[Any], Tuple[Any]],\n            kwargs: Dict[str, Any]):\n",
        "target_code_len": 125,
        "diff_format": "@@ -97,3 +98,3 @@\n             instance: Union[None, Any],\n-            args: Tuple[Any],\n+            args: Union[List[Any], Tuple[Any]],\n             kwargs: Dict[str, Any]):\n",
        "source_code_with_indent": "            instance: Union[None, Any],\n            args: Tuple[Any],\n            kwargs: Dict[str, Any]):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            instance: Union[None, Any],\n            args: Union[List[Any], Tuple[Any]],\n            kwargs: Dict[str, Any]):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:136:16 Incompatible variable type [9]: Unable to unpack `List[typing.Any]`, expected a tuple.",
    "message": " Unable to unpack `List[typing.Any]`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 136,
    "warning_line": "                args = list(args_dict.values())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            instance: Union[None, Any],\n            args: Tuple[Any],\n            kwargs: Dict[str, Any]):\n",
        "source_code_len": 107,
        "target_code": "            instance: Union[None, Any],\n            args: Union[List[Any], Tuple[Any]],\n            kwargs: Dict[str, Any]):\n",
        "target_code_len": 125,
        "diff_format": "@@ -97,3 +98,3 @@\n             instance: Union[None, Any],\n-            args: Tuple[Any],\n+            args: Union[List[Any], Tuple[Any]],\n             kwargs: Dict[str, Any]):\n",
        "source_code_with_indent": "            instance: Union[None, Any],\n            args: Tuple[Any],\n            kwargs: Dict[str, Any]):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            instance: Union[None, Any],\n            args: Union[List[Any], Tuple[Any]],\n            kwargs: Dict[str, Any]):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:140:29 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 140,
    "warning_line": "                    args[0], head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:140:35 Incompatible parameter type [6]: Expected `int` for 3rd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 3rd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 140,
    "warning_line": "                    args[0], head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:140:41 Incompatible parameter type [6]: Expected `int` for 4th positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 4th positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 140,
    "warning_line": "                    args[0], head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:251:33 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 251,
    "warning_line": "            schema.validate(obj, head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:251:39 Incompatible parameter type [6]: Expected `int` for 3rd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 3rd positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 251,
    "warning_line": "            schema.validate(obj, head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/decorators.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/decorators.py:251:45 Incompatible parameter type [6]: Expected `int` for 4th positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "message": " Expected `int` for 4th positional only parameter to call `schemas.DataFrameSchema.validate` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 251,
    "warning_line": "            schema.validate(obj, head, tail, sample, random_state)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/error_formatters.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/error_formatters.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/error_formatters.py:45:48 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `format_failure_cases` but got `typing.Optional[int]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `format_failure_cases` but got `typing.Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 45,
    "warning_line": "            format_failure_cases(failure_cases, check.n_failure_cases)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import Union\n\n",
        "source_code_len": 27,
        "target_code": "\nfrom typing import Union, Optional\n\n",
        "target_code_len": 37,
        "diff_format": "@@ -2,3 +2,3 @@\n \n-from typing import Union\n+from typing import Union, Optional\n \n",
        "source_code_with_indent": "\nfrom typing import Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Union, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        failure_cases: Union[pd.DataFrame, pd.Series],\n        n_cases: int) -> pd.DataFrame:\n    \"\"\"Construct readable error messages for vectorized_error_message.\n",
        "source_code_len": 165,
        "target_code": "        failure_cases: Union[pd.DataFrame, pd.Series],\n        n_cases: Optional[int] = 5) -> pd.DataFrame:\n    \"\"\"Construct readable error messages for vectorized_error_message.\n",
        "target_code_len": 179,
        "diff_format": "@@ -51,3 +51,3 @@\n         failure_cases: Union[pd.DataFrame, pd.Series],\n-        n_cases: int) -> pd.DataFrame:\n+        n_cases: Optional[int] = 5) -> pd.DataFrame:\n     \"\"\"Construct readable error messages for vectorized_error_message.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        failure_cases: Union[pd.DataFrame, pd.Series],\n        n_cases: int) -> pd.DataFrame:\n    <IND>",
        "target_code_with_indent": "        failure_cases: Union[pd.DataFrame, pd.Series],\n        n_cases: Optional[int] = 5) -> pd.DataFrame:\n    <IND>"
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/hypotheses.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/hypotheses.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/hypotheses.py:164:53 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `Check._format_groupby_input` but got `Union[None, List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 164,
    "warning_line": "        return self._format_groupby_input(check_obj, self.samples)"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schema_components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schema_components.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schema_components.py:267:12 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Any]` for 1st parameter `columns` to call `DataFrameSchema.__init__` but got `typing.Dict[Union[int, str], Column]`.",
    "message": " Expected `typing.Dict[str, typing.Any]` for 1st parameter `columns` to call `DataFrameSchema.__init__` but got `typing.Dict[Union[int, str], Column]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 267,
    "warning_line": "            columns={"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schema_components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schema_components.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schema_components.py:307:4 Inconsistent override [14]: `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `head` in overriding signature.",
    "message": " `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `head` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 307,
    "warning_line": "    def validate("
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schema_components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schema_components.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schema_components.py:307:4 Inconsistent override [14]: `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `random_state` in overriding signature.",
    "message": " `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `random_state` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 307,
    "warning_line": "    def validate("
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schema_components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schema_components.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schema_components.py:307:4 Inconsistent override [14]: `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `sample` in overriding signature.",
    "message": " `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `sample` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 307,
    "warning_line": "    def validate("
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schema_components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schema_components.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schema_components.py:307:4 Inconsistent override [14]: `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `tail` in overriding signature.",
    "message": " `pandera.schema_components.MultiIndex.validate` overrides method defined in `DataFrameSchema` inconsistently. Could not find parameter `tail` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 307,
    "warning_line": "    def validate("
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schemas.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schemas.py",
    "file_hunks_size": 26,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schemas.py:22:12 Incompatible variable type [9]: columns is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " columns is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 22,
    "warning_line": "            columns: Dict[str, Any] = None,"
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schemas.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schemas.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schemas.py:170:12 Incompatible variable type [9]: head is declared to have type `int` but is used as type `None`.",
    "message": " head is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 170,
    "warning_line": "            head: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_len": 166,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_len": 196,
        "diff_format": "@@ -136,5 +136,5 @@\n             dataframe: pd.DataFrame,\n-            head: int,\n-            tail: int,\n-            sample: int,\n+            head: Optional[int],\n+            tail: Optional[int],\n+            sample: Optional[int],\n             random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_len": 270,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "target_code_len": 346,
        "diff_format": "@@ -169,6 +170,8 @@\n             dataframe: pd.DataFrame,\n-            head: int = None,\n-            tail: int = None,\n-            sample: int = None,\n-            random_state: Optional[int] = None) -> pd.DataFrame:\n+            head: Optional[int] = None,\n+            tail: Optional[int] = None,\n+            sample: Optional[int] = None,\n+            random_state: Optional[int] = None\n+    ) -> pd.DataFrame:\n+        # pylint: disable=duplicate-code\n         \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        <IND>",
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        <IND>"
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schemas.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schemas.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schemas.py:171:12 Incompatible variable type [9]: tail is declared to have type `int` but is used as type `None`.",
    "message": " tail is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 171,
    "warning_line": "            tail: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_len": 166,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_len": 196,
        "diff_format": "@@ -136,5 +136,5 @@\n             dataframe: pd.DataFrame,\n-            head: int,\n-            tail: int,\n-            sample: int,\n+            head: Optional[int],\n+            tail: Optional[int],\n+            sample: Optional[int],\n             random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_len": 270,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "target_code_len": 346,
        "diff_format": "@@ -169,6 +170,8 @@\n             dataframe: pd.DataFrame,\n-            head: int = None,\n-            tail: int = None,\n-            sample: int = None,\n-            random_state: Optional[int] = None) -> pd.DataFrame:\n+            head: Optional[int] = None,\n+            tail: Optional[int] = None,\n+            sample: Optional[int] = None,\n+            random_state: Optional[int] = None\n+    ) -> pd.DataFrame:\n+        # pylint: disable=duplicate-code\n         \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        <IND>",
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        <IND>"
      }
    ]
  },
  {
    "project": "pandera-dev/pandera",
    "commit": "be3edc26177853ac8e7e231300f1b5d10e4749da",
    "filename": "pandera/schemas.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pandera-dev-pandera/pandera/schemas.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pandera/schemas.py:172:12 Incompatible variable type [9]: sample is declared to have type `int` but is used as type `None`.",
    "message": " sample is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 172,
    "warning_line": "            sample: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_len": 166,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_len": 196,
        "diff_format": "@@ -136,5 +136,5 @@\n             dataframe: pd.DataFrame,\n-            head: int,\n-            tail: int,\n-            sample: int,\n+            head: Optional[int],\n+            tail: Optional[int],\n+            sample: Optional[int],\n             random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int,\n            tail: int,\n            sample: int,\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int],\n            tail: Optional[int],\n            sample: Optional[int],\n            random_state: Optional[int]) -> pd.DataFrame:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_len": 270,
        "target_code": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "target_code_len": 346,
        "diff_format": "@@ -169,6 +170,8 @@\n             dataframe: pd.DataFrame,\n-            head: int = None,\n-            tail: int = None,\n-            sample: int = None,\n-            random_state: Optional[int] = None) -> pd.DataFrame:\n+            head: Optional[int] = None,\n+            tail: Optional[int] = None,\n+            sample: Optional[int] = None,\n+            random_state: Optional[int] = None\n+    ) -> pd.DataFrame:\n+        # pylint: disable=duplicate-code\n         \"\"\"Check if all columns in a dataframe have a column in the Schema.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            dataframe: pd.DataFrame,\n            head: int = None,\n            tail: int = None,\n            sample: int = None,\n            random_state: Optional[int] = None) -> pd.DataFrame:\n        <IND>",
        "target_code_with_indent": "            dataframe: pd.DataFrame,\n            head: Optional[int] = None,\n            tail: Optional[int] = None,\n            sample: Optional[int] = None,\n            random_state: Optional[int] = None\n    ) -> pd.DataFrame:\n        # pylint: disable=duplicate-code\n        <IND>"
      }
    ]
  }
]