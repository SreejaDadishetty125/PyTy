[
  {
    "project": "instadeepai/Mava",
    "commit": "770c2c16c3c984213c4e1b6d7a4c599c354bfeb5",
    "filename": "mava/systems/tf/dial/system.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/systems/tf/dial/system.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/systems/tf/dial/system.py:88:8 Incompatible variable type [9]: communication_module is declared to have type `mava.components.tf.modules.communication.base.BaseCommunicationModule` but is used as type `Type[mava.components.tf.modules.communication.broadcasted.BroadcastedCommunication]`.",
    "message": " communication_module is declared to have type `mava.components.tf.modules.communication.base.BaseCommunicationModule` but is used as type `Type[mava.components.tf.modules.communication.broadcasted.BroadcastedCommunication]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 88,
    "warning_line": "        communication_module: BaseCommunicationModule = BroadcastedCommunication,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_len": 185,
        "target_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_len": 193,
        "diff_format": "@@ -59,3 +56,3 @@\n         # observation_networks: Dict[str, snt.Module],\n-        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n+        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n         executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_len": 196,
        "target_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_len": 203,
        "diff_format": "@@ -87,3 +84,3 @@\n         replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n-        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n+        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n         trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "instadeepai/Mava",
    "commit": "770c2c16c3c984213c4e1b6d7a4c599c354bfeb5",
    "filename": "mava/systems/tf/dial/system.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/systems/tf/dial/system.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/systems/tf/dial/system.py:298:31 Call error [29]: `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "message": " `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 298,
    "warning_line": "        communication_module = self._communication_module_fn(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_len": 185,
        "target_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_len": 193,
        "diff_format": "@@ -59,3 +56,3 @@\n         # observation_networks: Dict[str, snt.Module],\n-        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n+        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n         executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_len": 196,
        "target_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_len": 203,
        "diff_format": "@@ -87,3 +84,3 @@\n         replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n-        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n+        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n         trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "instadeepai/Mava",
    "commit": "770c2c16c3c984213c4e1b6d7a4c599c354bfeb5",
    "filename": "mava/systems/tf/dial/system.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/systems/tf/dial/system.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/systems/tf/dial/system.py:341:31 Call error [29]: `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "message": " `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 341,
    "warning_line": "        communication_module = self._communication_module_fn(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_len": 185,
        "target_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_len": 193,
        "diff_format": "@@ -59,3 +56,3 @@\n         # observation_networks: Dict[str, snt.Module],\n-        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n+        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n         executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_len": 196,
        "target_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_len": 203,
        "diff_format": "@@ -87,3 +84,3 @@\n         replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n-        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n+        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n         trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "instadeepai/Mava",
    "commit": "770c2c16c3c984213c4e1b6d7a4c599c354bfeb5",
    "filename": "mava/systems/tf/dial/system.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/systems/tf/dial/system.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/systems/tf/dial/system.py:404:31 Call error [29]: `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "message": " `mava.components.tf.modules.communication.base.BaseCommunicationModule` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 404,
    "warning_line": "        communication_module = self._communication_module_fn(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_len": 185,
        "target_code": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_len": 193,
        "diff_format": "@@ -59,3 +56,3 @@\n         # observation_networks: Dict[str, snt.Module],\n-        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n+        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n         executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[BaseArchitecture] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # observation_networks: Dict[str, snt.Module],\n        architecture: Type[DecentralisedPolicyActor] = DecentralisedPolicyActor,\n        executor_fn: Type[core.Executor] = DIALExecutor,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_len": 196,
        "target_code": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_len": 203,
        "diff_format": "@@ -87,3 +84,3 @@\n         replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n-        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n+        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n         trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: BaseCommunicationModule = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        replay_table_name: str = reverb_adders.DEFAULT_PRIORITY_TABLE,\n        communication_module: Type[BroadcastedCommunication] = BroadcastedCommunication,\n        trainer_logger: MavaLogger = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]