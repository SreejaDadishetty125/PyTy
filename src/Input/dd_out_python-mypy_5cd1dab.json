[
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:470:8 Incompatible parameter type [6]: Expected `List[int]` for 3rd positional only parameter to call `mypy.checkexpr.ExpressionChecker.check_call` but got `List[typing_extensions.Final[int]]`.",
    "message": " Expected `List[int]` for 3rd positional only parameter to call `mypy.checkexpr.ExpressionChecker.check_call` but got `List[typing_extensions.Final[int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 470,
    "warning_line": "        [ARG_POS, ARG_POS], context)"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:492:35 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `set_any_tvars` but got `Optional[List[str]]`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `set_any_tvars` but got `Optional[List[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 492,
    "warning_line": "    target = set_any_tvars(target, alias.alias_tvars, alias.line, alias.column)"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:784:31 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[TypeVarDef], typing.Any]` for 1st parameter `variables` to call `CallableType.copy_modified` but got `List[TypeVarDef]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[TypeVarDef], typing.Any]` for 1st parameter `variables` to call `CallableType.copy_modified` but got `List[TypeVarDef]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 784,
    "warning_line": "        return t.copy_modified(variables=tvars + t.variables)"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:784:49 Unsupported operand [58]: `+` is not supported for operand types `List[TypeVarDef]` and `Optional[List[TypeVarDef]]`.",
    "message": " `+` is not supported for operand types `List[TypeVarDef]` and `Optional[List[TypeVarDef]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 784,
    "warning_line": "        return t.copy_modified(variables=tvars + t.variables)"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:839:35 Incompatible parameter type [6]: Expected `List[int]` for 2nd parameter `arg_kinds` to call `CallableType.__init__` but got `List[typing_extensions.Final[int]]`.",
    "message": " Expected `List[int]` for 2nd parameter `arg_kinds` to call `CallableType.__init__` but got `List[typing_extensions.Final[int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 839,
    "warning_line": "                                   arg_kinds=[ARG_STAR, ARG_STAR2],"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:913:21 Incompatible parameter type [6]: Expected `typing.Iterable[TypeVarDef]` for 1st positional only parameter to call `list.extend` but got `Optional[List[TypeVarDef]]`.",
    "message": " Expected `typing.Iterable[TypeVarDef]` for 1st positional only parameter to call `list.extend` but got `Optional[List[TypeVarDef]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 913,
    "warning_line": "    variables.extend(init_type.variables)"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:922:8 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 1st parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Type, typing.Any]` for 1st parameter `ret_type` to call `CallableType.copy_modified` but got `Type`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 922,
    "warning_line": "        ret_type=ret_type, fallback=type_type, name=None, variables=variables,"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:922:27 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Instance, typing.Any]` for 2nd parameter `fallback` to call `CallableType.copy_modified` but got `Instance`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Instance, typing.Any]` for 2nd parameter `fallback` to call `CallableType.copy_modified` but got `Instance`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 922,
    "warning_line": "        ret_type=ret_type, fallback=type_type, name=None, variables=variables,"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:922:47 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Optional[str], typing.Any]` for 3rd parameter `name` to call `CallableType.copy_modified` but got `None`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Optional[str], typing.Any]` for 3rd parameter `name` to call `CallableType.copy_modified` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 922,
    "warning_line": "        ret_type=ret_type, fallback=type_type, name=None, variables=variables,"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:922:58 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[List[TypeVarDef], typing.Any]` for 4th parameter `variables` to call `CallableType.copy_modified` but got `List[TypeVarDef]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[List[TypeVarDef], typing.Any]` for 4th parameter `variables` to call `CallableType.copy_modified` but got `List[TypeVarDef]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 922,
    "warning_line": "        ret_type=ret_type, fallback=type_type, name=None, variables=variables,"
  },
  {
    "project": "python/mypy",
    "commit": "5cd1dabf0c0eef3acee31acbb57b51fa3d7b6b9d",
    "filename": "mypy/checkmember.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypy/checkmember.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypy/checkmember.py:923:8 Incompatible parameter type [6]: Expected `mypy_extensions.FlexibleAlias[Optional[str], typing.Any]` for 5th parameter `special_sig` to call `CallableType.copy_modified` but got `Optional[str]`.",
    "message": " Expected `mypy_extensions.FlexibleAlias[Optional[str], typing.Any]` for 5th parameter `special_sig` to call `CallableType.copy_modified` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 923,
    "warning_line": "        special_sig=special_sig)"
  }
]