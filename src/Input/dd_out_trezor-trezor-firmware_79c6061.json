[
  {
    "project": "trezor/trezor-firmware",
    "commit": "79c60615deef79372d35e8b9596e4e3f859de3f9",
    "filename": "core/src/apps/wallet/sign_tx/omni.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/apps/wallet/sign_tx/omni.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/apps/wallet/sign_tx/omni.py:19:8 Incompatible return type [7]: Expected `bool` but got `None`.",
    "message": " Expected `bool` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 19,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from trezor.strings import format_amount\n\n",
        "source_code_len": 42,
        "target_code": "from trezor.strings import format_amount\n\nif False:\n    from typing import Optional\n\n",
        "target_code_len": 85,
        "diff_format": "@@ -3,2 +3,5 @@\n from trezor.strings import format_amount\n+\n+if False:\n+    from typing import Optional\n \n",
        "source_code_with_indent": "from trezor.strings import format_amount\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from trezor.strings import format_amount\n\nif False:\n    <IND>from typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef parse(data: bytes) -> bool:\n    if not is_valid(data):\n",
        "source_code_len": 60,
        "target_code": "\ndef parse(data: bytes) -> Optional[str]:\n    if not is_valid(data):\n",
        "target_code_len": 69,
        "diff_format": "@@ -16,3 +19,3 @@\n \n-def parse(data: bytes) -> bool:\n+def parse(data: bytes) -> Optional[str]:\n     if not is_valid(data):\n",
        "source_code_with_indent": "\n<DED>def parse(data: bytes) -> bool:\n    <IND>if not is_valid(data):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def parse(data: bytes) -> Optional[str]:\n    <IND>if not is_valid(data):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "trezor/trezor-firmware",
    "commit": "79c60615deef79372d35e8b9596e4e3f859de3f9",
    "filename": "core/src/apps/wallet/sign_tx/omni.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/apps/wallet/sign_tx/omni.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/apps/wallet/sign_tx/omni.py:24:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 24,
    "warning_line": "        return \"Simple send of %s %s\" % (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from trezor.strings import format_amount\n\n",
        "source_code_len": 42,
        "target_code": "from trezor.strings import format_amount\n\nif False:\n    from typing import Optional\n\n",
        "target_code_len": 85,
        "diff_format": "@@ -3,2 +3,5 @@\n from trezor.strings import format_amount\n+\n+if False:\n+    from typing import Optional\n \n",
        "source_code_with_indent": "from trezor.strings import format_amount\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from trezor.strings import format_amount\n\nif False:\n    <IND>from typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef parse(data: bytes) -> bool:\n    if not is_valid(data):\n",
        "source_code_len": 60,
        "target_code": "\ndef parse(data: bytes) -> Optional[str]:\n    if not is_valid(data):\n",
        "target_code_len": 69,
        "diff_format": "@@ -16,3 +19,3 @@\n \n-def parse(data: bytes) -> bool:\n+def parse(data: bytes) -> Optional[str]:\n     if not is_valid(data):\n",
        "source_code_with_indent": "\n<DED>def parse(data: bytes) -> bool:\n    <IND>if not is_valid(data):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def parse(data: bytes) -> Optional[str]:\n    <IND>if not is_valid(data):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "trezor/trezor-firmware",
    "commit": "79c60615deef79372d35e8b9596e4e3f859de3f9",
    "filename": "core/src/apps/wallet/sign_tx/omni.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/apps/wallet/sign_tx/omni.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/apps/wallet/sign_tx/omni.py:30:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 30,
    "warning_line": "        return \"Unknown transaction\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from trezor.strings import format_amount\n\n",
        "source_code_len": 42,
        "target_code": "from trezor.strings import format_amount\n\nif False:\n    from typing import Optional\n\n",
        "target_code_len": 85,
        "diff_format": "@@ -3,2 +3,5 @@\n from trezor.strings import format_amount\n+\n+if False:\n+    from typing import Optional\n \n",
        "source_code_with_indent": "from trezor.strings import format_amount\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from trezor.strings import format_amount\n\nif False:\n    <IND>from typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef parse(data: bytes) -> bool:\n    if not is_valid(data):\n",
        "source_code_len": 60,
        "target_code": "\ndef parse(data: bytes) -> Optional[str]:\n    if not is_valid(data):\n",
        "target_code_len": 69,
        "diff_format": "@@ -16,3 +19,3 @@\n \n-def parse(data: bytes) -> bool:\n+def parse(data: bytes) -> Optional[str]:\n     if not is_valid(data):\n",
        "source_code_with_indent": "\n<DED>def parse(data: bytes) -> bool:\n    <IND>if not is_valid(data):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def parse(data: bytes) -> Optional[str]:\n    <IND>if not is_valid(data):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]