[
  {
    "project": "daquexian/onnx-simplifier",
    "commit": "f5a57eb57ce95ec9a89a300c45f86b2a51f66495",
    "filename": "onnxsim/onnx_simplifier.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/daquexian-onnx-simplifier/onnxsim/onnx_simplifier.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "onnxsim/onnx_simplifier.py:54:8 Incompatible return type [7]: Expected `List[int]` but got implicit return value of `None`.",
    "message": " Expected `List[int]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 54,
    "warning_line": "        return get_shape_from_value_info_proto(v)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        return get_shape_from_value_info_proto(v)\n\n",
        "source_code_len": 51,
        "target_code": "        return get_shape_from_value_info_proto(v)\n    raise RuntimeError(\"Cannot get shape of {}\".format(name))\n\n",
        "target_code_len": 113,
        "diff_format": "@@ -54,2 +57,3 @@\n         return get_shape_from_value_info_proto(v)\n+    raise RuntimeError(\"Cannot get shape of {}\".format(name))\n \n",
        "source_code_with_indent": "        <IND>return get_shape_from_value_info_proto(v)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>return get_shape_from_value_info_proto(v)\n    <DED>raise RuntimeError(\"Cannot get shape of {}\".format(name))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "daquexian/onnx-simplifier",
    "commit": "f5a57eb57ce95ec9a89a300c45f86b2a51f66495",
    "filename": "onnxsim/onnx_simplifier.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/daquexian-onnx-simplifier/onnxsim/onnx_simplifier.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "onnxsim/onnx_simplifier.py:60:8 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 60,
    "warning_line": "        return v.type.tensor_type.elem_type",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        return v.type.tensor_type.elem_type\n\n",
        "source_code_len": 45,
        "target_code": "        return v.type.tensor_type.elem_type\n    raise RuntimeError(\"Cannot get type of {}\".format(name))\n\n",
        "target_code_len": 106,
        "diff_format": "@@ -60,2 +64,3 @@\n         return v.type.tensor_type.elem_type\n+    raise RuntimeError(\"Cannot get type of {}\".format(name))\n \n",
        "source_code_with_indent": "        <IND>return v.type.tensor_type.elem_type\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>return v.type.tensor_type.elem_type\n    <DED>raise RuntimeError(\"Cannot get type of {}\".format(name))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]