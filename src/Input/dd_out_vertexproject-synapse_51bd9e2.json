[
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:46:35 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "message": " Expected `str` for 2nd positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 46,
    "warning_line": "    _, val = convert_subprop(core, formname, formname, tufo[1][formname])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    typename = core.getPropTypeName(propname)\n",
        "source_code_len": 167,
        "target_code": "\ndef convert_subprop(core, formname, propname, val):\n    typename = core.getPropTypeName(propname)\n",
        "target_code_len": 99,
        "diff_format": "@@ -105,3 +98,3 @@\n \n-def convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n+def convert_subprop(core, formname, propname, val):\n     typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    <IND>typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef convert_subprop(core, formname, propname, val):\n    <IND>typename = core.getPropTypeName(propname)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:46:45 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "message": " Expected `str` for 3rd positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 46,
    "warning_line": "    _, val = convert_subprop(core, formname, formname, tufo[1][formname])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    typename = core.getPropTypeName(propname)\n",
        "source_code_len": 167,
        "target_code": "\ndef convert_subprop(core, formname, propname, val):\n    typename = core.getPropTypeName(propname)\n",
        "target_code_len": 99,
        "diff_format": "@@ -105,3 +98,3 @@\n \n-def convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n+def convert_subprop(core, formname, propname, val):\n     typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    <IND>typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef convert_subprop(core, formname, propname, val):\n    <IND>typename = core.getPropTypeName(propname)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:46:55 Incompatible parameter type [6]: Expected `Union[int, str]` for 4th positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "message": " Expected `Union[int, str]` for 4th positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 46,
    "warning_line": "    _, val = convert_subprop(core, formname, formname, tufo[1][formname])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    typename = core.getPropTypeName(propname)\n",
        "source_code_len": 167,
        "target_code": "\ndef convert_subprop(core, formname, propname, val):\n    typename = core.getPropTypeName(propname)\n",
        "target_code_len": 99,
        "diff_format": "@@ -105,3 +98,3 @@\n \n-def convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n+def convert_subprop(core, formname, propname, val):\n     typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    <IND>typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef convert_subprop(core, formname, propname, val):\n    <IND>typename = core.getPropTypeName(propname)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:46:63 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 46,
    "warning_line": "    _, val = convert_subprop(core, formname, formname, tufo[1][formname])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_primary_property(core: s_common.Cortex, tufo: Tufo) -> TypeType:\n    formname = tufo[1]['tufo:form']\n",
        "source_code_len": 114,
        "target_code": "\ndef convert_primary_property(core, tufo):\n    formname = tufo[1]['tufo:form']\n",
        "target_code_len": 79,
        "diff_format": "@@ -37,3 +30,3 @@\n \n-def convert_primary_property(core: s_common.Cortex, tufo: Tufo) -> TypeType:\n+def convert_primary_property(core, tufo):\n     formname = tufo[1]['tufo:form']\n",
        "source_code_with_indent": "\ndef convert_primary_property(core: s_common.Cortex, tufo: Tufo) -> TypeType:\n    <IND>formname = tufo[1]['tufo:form']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef convert_primary_property(core, tufo):\n    <IND>formname = tufo[1]['tufo:form']\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:84:64 Invalid type [31]: Expression `(str, $local_synapse?tools?migrate_010$TypeType)` is not a valid type.",
    "message": " Expression `(str, $local_synapse?tools?migrate_010$TypeType)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 84,
    "warning_line": "def ipv4_to_client(core, formname, propname, typename, val) -> (str, TypeType):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef ipv4_to_client(core, formname, propname, typename, val) -> (str, TypeType):\n    return 'client', str(val)\n\n",
        "source_code_len": 112,
        "target_code": "\ndef ipv4_to_client(core, formname, propname, typename, val):\n    return 'client', 'tcp://%s/' % val\n\n",
        "target_code_len": 102,
        "diff_format": "@@ -83,4 +76,4 @@\n \n-def ipv4_to_client(core, formname, propname, typename, val) -> (str, TypeType):\n-    return 'client', str(val)\n+def ipv4_to_client(core, formname, propname, typename, val):\n+    return 'client', 'tcp://%s/' % val\n \n",
        "source_code_with_indent": "\ndef ipv4_to_client(core, formname, propname, typename, val) -> (str, TypeType):\n    <IND>return 'client', str(val)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef ipv4_to_client(core, formname, propname, typename, val):\n    <IND>return 'client', 'tcp://%s/' % val\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:91:62 Invalid type [31]: Expression `(str, $local_synapse?tools?migrate_010$TypeType)` is not a valid type.",
    "message": " Expression `(str, $local_synapse?tools?migrate_010$TypeType)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 91,
    "warning_line": "def ip_to_server(core, formname, propname, typename, val) -> (str, TypeType):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef ip_to_server(core, formname, propname, typename, val) -> (str, TypeType):\n    _, props = core.getTufoByProp(typename, val)\n",
        "source_code_len": 128,
        "target_code": "\ndef ip_to_server(core, formname, propname, typename, val):\n    _, props = core.getTufoByProp(typename, val)\n",
        "target_code_len": 109,
        "diff_format": "@@ -90,3 +83,3 @@\n \n-def ip_to_server(core, formname, propname, typename, val) -> (str, TypeType):\n+def ip_to_server(core, formname, propname, typename, val):\n     _, props = core.getTufoByProp(typename, val)\n",
        "source_code_with_indent": "\ndef ip_to_server(core, formname, propname, typename, val) -> (str, TypeType):\n    <IND>_, props = core.getTufoByProp(typename, val)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef ip_to_server(core, formname, propname, typename, val):\n    <IND>_, props = core.getTufoByProp(typename, val)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vertexproject/synapse",
    "commit": "51bd9e20cc800b02d288530761f2bdf4c7f6edbf",
    "filename": "synapse/tools/migrate_010.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vertexproject-synapse/synapse/tools/migrate_010.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "synapse/tools/migrate_010.py:140:68 Incompatible parameter type [6]: Expected `Union[int, str]` for 4th positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "message": " Expected `Union[int, str]` for 4th positional only parameter to call `convert_subprop` but got `synapse.tools.migrate_010.TypeType (resolves to Union[int, str, typing.Tuple[TypeType, ...]])`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 140,
    "warning_line": "            new_pname, newv = convert_subprop(core, formname, oldk, oldv)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    typename = core.getPropTypeName(propname)\n",
        "source_code_len": 167,
        "target_code": "\ndef convert_subprop(core, formname, propname, val):\n    typename = core.getPropTypeName(propname)\n",
        "target_code_len": 99,
        "diff_format": "@@ -105,3 +98,3 @@\n \n-def convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n+def convert_subprop(core, formname, propname, val):\n     typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent": "\ndef convert_subprop(core: s_common.Cortex, formname: str, propname: str, val: Union[str, int]) -> Tuple[str, TypeType]:\n    <IND>typename = core.getPropTypeName(propname)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef convert_subprop(core, formname, propname, val):\n    <IND>typename = core.getPropTypeName(propname)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]