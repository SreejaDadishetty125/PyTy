[
  {
    "project": "IBM/lale",
    "commit": "b38267abe490e869338f212179b03521e89013ee",
    "filename": "lale/schema_simplifier.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/IBM-lale/lale/schema_simplifier.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lale/schema_simplifier.py:786:37 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[itertools._T1]]` for 1st positional only parameter to call `itertools.product.__new__` but got `object`.",
    "message": " Expected `typing.Iterable[Variable[itertools._T1]]` for 1st positional only parameter to call `itertools.product.__new__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 786,
    "warning_line": "        cp = list(itertools.product(*args))"
  },
  {
    "project": "IBM/lale",
    "commit": "b38267abe490e869338f212179b03521e89013ee",
    "filename": "lale/schema_simplifier.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/IBM-lale/lale/schema_simplifier.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lale/schema_simplifier.py:988:8 Incompatible return type [7]: Expected `Dict[str, typing.Any]` but got `bool`.",
    "message": " Expected `Dict[str, typing.Any]` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 988,
    "warning_line": "        return False",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ") -> JsonSchema:\n    if schema is False:\n        return False\n    if \"anyOf\" in schema:\n",
        "source_code_len": 88,
        "target_code": ") -> JsonSchema:\n    if is_true_schema(schema) or is_false_schema(schema):\n        return schema\n    if \"anyOf\" in schema:\n",
        "target_code_len": 123,
        "diff_format": "@@ -986,4 +986,4 @@\n ) -> JsonSchema:\n-    if schema is False:\n-        return False\n+    if is_true_schema(schema) or is_false_schema(schema):\n+        return schema\n     if \"anyOf\" in schema:\n",
        "source_code_with_indent": ") -> JsonSchema:\n    <IND>if schema is False:\n        <IND>return False\n    <DED>if \"anyOf\" in schema:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ") -> JsonSchema:\n    <IND>if is_true_schema(schema) or is_false_schema(schema):\n        <IND>return schema\n    <DED>if \"anyOf\" in schema:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]