[
  {
    "project": "goodboy/tractor",
    "commit": "4b0554b61f41e5b3fe47d0898ee24510c2bb2e94",
    "filename": "tractor/_actor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/_actor.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/_actor.py:171:8 Incompatible variable type [9]: rpc_module_paths is declared to have type `List[str]` but is used as type `Dict[Variable[_KT], Variable[_VT]]`.",
    "message": " rpc_module_paths is declared to have type `List[str]` but is used as type `Dict[Variable[_KT], Variable[_VT]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 171,
    "warning_line": "        rpc_module_paths: List[str] = {},",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        name: str,\n        rpc_module_paths: List[str] = {},\n        statespace: Optional[Dict[str, Any]] = None,\n",
        "source_code_len": 114,
        "target_code": "        name: str,\n        rpc_module_paths: List[str] = [],\n        statespace: Optional[Dict[str, Any]] = None,\n",
        "target_code_len": 114,
        "diff_format": "@@ -170,3 +170,3 @@\n         name: str,\n-        rpc_module_paths: List[str] = {},\n+        rpc_module_paths: List[str] = [],\n         statespace: Optional[Dict[str, Any]] = None,\n",
        "source_code_with_indent": "        name: str,\n        rpc_module_paths: List[str] = {},\n        statespace: Optional[Dict[str, Any]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        name: str,\n        rpc_module_paths: List[str] = [],\n        statespace: Optional[Dict[str, Any]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "goodboy/tractor",
    "commit": "4b0554b61f41e5b3fe47d0898ee24510c2bb2e94",
    "filename": "tractor/_spawn.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/goodboy-tractor/tractor/_spawn.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tractor/_spawn.py:158:4 Incompatible return type [7]: Expected `mp.context.Process` but got implicit return value of `None`.",
    "message": " Expected `mp.context.Process` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 158,
    "warning_line": "    async with trio.open_nursery() as nursery:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    task_status: TaskStatus[Portal] = trio.TASK_STATUS_IGNORED\n) -> mp.Process:\n    \"\"\"Create a new ``multiprocessing.Process`` using the\n",
        "source_code_len": 138,
        "target_code": "    task_status: TaskStatus[Portal] = trio.TASK_STATUS_IGNORED\n) -> None:\n    \"\"\"Create a new ``multiprocessing.Process`` using the\n",
        "target_code_len": 132,
        "diff_format": "@@ -151,3 +148,3 @@\n     task_status: TaskStatus[Portal] = trio.TASK_STATUS_IGNORED\n-) -> mp.Process:\n+) -> None:\n     \"\"\"Create a new ``multiprocessing.Process`` using the\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    task_status: TaskStatus[Portal] = trio.TASK_STATUS_IGNORED\n) -> mp.Process:\n    <IND>",
        "target_code_with_indent": "    task_status: TaskStatus[Portal] = trio.TASK_STATUS_IGNORED\n) -> None:\n    <IND>"
      }
    ]
  }
]