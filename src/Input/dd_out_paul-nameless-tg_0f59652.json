[
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:65:8 Incompatible return type [7]: Expected `Tuple[int, str]` but got `Tuple[Optional[int], str]`.",
    "message": " Expected `Tuple[int, str]` but got `Tuple[Optional[int], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 65,
    "warning_line": "        return num(repeat_factor, default=1), keys or \"UNKNOWN\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "import logging\nfrom _curses import window\nfrom datetime import datetime\nfrom typing import Any, Dict, List, Optional, Tuple\n\nfrom tg.colors import blue, cyan, get_color, magenta, reverse, white\nfrom tg.msg import MsgProxy\n",
        "source_code_len": 222,
        "target_code": "import logging\nfrom _curses import window  # type: ignore\nfrom datetime import datetime\nfrom typing import Any, Dict, List, Optional, Tuple, cast\n\nfrom tg.colors import blue, cyan, get_color, magenta, reverse, white\nfrom tg.models import UserModel\nfrom tg.msg import MsgProxy\n",
        "target_code_len": 276,
        "diff_format": "@@ -2,7 +2,8 @@\n import logging\n-from _curses import window\n+from _curses import window  # type: ignore\n from datetime import datetime\n-from typing import Any, Dict, List, Optional, Tuple\n+from typing import Any, Dict, List, Optional, Tuple, cast\n \n from tg.colors import blue, cyan, get_color, magenta, reverse, white\n+from tg.models import UserModel\n from tg.msg import MsgProxy\n",
        "source_code_with_indent": "import logging\nfrom _curses import window\nfrom datetime import datetime\nfrom typing import Any, Dict, List, Optional, Tuple\n\nfrom tg.colors import blue, cyan, get_color, magenta, reverse, white\nfrom tg.msg import MsgProxy\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom _curses import window  # type: ignore\nfrom datetime import datetime\nfrom typing import Any, Dict, List, Optional, Tuple, cast\n\nfrom tg.colors import blue, cyan, get_color, magenta, reverse, white\nfrom tg.models import UserModel\nfrom tg.msg import MsgProxy\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        return num(repeat_factor, default=1), keys or \"UNKNOWN\"\n\n",
        "source_code_len": 66,
        "target_code": "\n        return cast(int, num(repeat_factor, default=1)), keys or \"UNKNOWN\"\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -64,3 +65,3 @@\n \n-        return num(repeat_factor, default=1), keys or \"UNKNOWN\"\n+        return cast(int, num(repeat_factor, default=1)), keys or \"UNKNOWN\"\n \n",
        "source_code_with_indent": "\n        <DED><DED>return num(repeat_factor, default=1), keys or \"UNKNOWN\"\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED><DED>return cast(int, num(repeat_factor, default=1)), keys or \"UNKNOWN\"\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:153:12 Incompatible return type [7]: Expected `Tuple[int]` but got `typing.Tuple[int, ...]`.",
    "message": " Expected `Tuple[int]` but got `typing.Tuple[int, ...]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 153,
    "warning_line": "            return tuple(attr | reverse for attr in attrs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n        attrs = (\n",
        "source_code_len": 92,
        "target_code": "\n    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n        attrs = (\n",
        "target_code_len": 97,
        "diff_format": "@@ -145,3 +146,3 @@\n \n-    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n+    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n         attrs = (\n",
        "source_code_with_indent": "\n    <DED>def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n        <IND>attrs = (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n        <IND>attrs = (\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:154:8 Incompatible return type [7]: Expected `Tuple[int]` but got `Tuple[int, int, int]`.",
    "message": " Expected `Tuple[int]` but got `Tuple[int, int, int]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 154,
    "warning_line": "        return attrs",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n        attrs = (\n",
        "source_code_len": 92,
        "target_code": "\n    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n        attrs = (\n",
        "target_code_len": 97,
        "diff_format": "@@ -145,3 +146,3 @@\n \n-    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n+    def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n         attrs = (\n",
        "source_code_with_indent": "\n    <DED>def _chat_attributes(self, is_selected: bool = False) -> Tuple[int]:\n        <IND>attrs = (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _chat_attributes(self, is_selected: bool = False) -> Tuple[int, ...]:\n        <IND>attrs = (\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:279:47 Unsupported operand [58]: `-` is not supported for operand types `int` and `Optional[int]`.",
    "message": " `-` is not supported for operand types `int` and `Optional[int]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 279,
    "warning_line": "                and len(collected_items) - 1 - selected_item_idx",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                selected_item_idx not in (0, len(msgs) - 1, None)\n                and len(collected_items) - 1 - selected_item_idx\n",
        "source_code_len": 131,
        "target_code": "                selected_item_idx not in (0, len(msgs) - 1, None)\n                and selected_item_idx is not None\n                and len(collected_items) - 1 - selected_item_idx\n",
        "target_code_len": 181,
        "diff_format": "@@ -278,2 +283,3 @@\n                 selected_item_idx not in (0, len(msgs) - 1, None)\n+                and selected_item_idx is not None\n                 and len(collected_items) - 1 - selected_item_idx\n",
        "source_code_with_indent": "                selected_item_idx not in (0, len(msgs) - 1, None)\n                and len(collected_items) - 1 - selected_item_idx\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                selected_item_idx not in (0, len(msgs) - 1, None)\n                and selected_item_idx is not None\n                and len(collected_items) - 1 - selected_item_idx\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:318:12 Incompatible return type [7]: Expected `Tuple[int]` but got `typing.Generator[int, None, None]`.",
    "message": " Expected `Tuple[int]` but got `typing.Generator[int, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 318,
    "warning_line": "            return (attr | reverse for attr in attrs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n        attrs = (\n",
        "source_code_len": 83,
        "target_code": "\n    def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n        attrs = (\n",
        "target_code_len": 88,
        "diff_format": "@@ -309,3 +315,3 @@\n \n-    def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n+    def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n         attrs = (\n",
        "source_code_with_indent": "\n    <DED>def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n        <IND>attrs = (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n        <IND>attrs = (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if is_selected:\n            return (attr | reverse for attr in attrs)\n        return attrs\n",
        "source_code_len": 99,
        "target_code": "        if is_selected:\n            return tuple(attr | reverse for attr in attrs)\n        return attrs\n",
        "target_code_len": 104,
        "diff_format": "@@ -317,3 +323,3 @@\n         if is_selected:\n-            return (attr | reverse for attr in attrs)\n+            return tuple(attr | reverse for attr in attrs)\n         return attrs\n",
        "source_code_with_indent": "        if is_selected:\n            <IND>return (attr | reverse for attr in attrs)\n        <DED>return attrs\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if is_selected:\n            <IND>return tuple(attr | reverse for attr in attrs)\n        <DED>return attrs\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "paul-nameless/tg",
    "commit": "0f59652b1b309499981cf3f10ae0411bd43ef191",
    "filename": "tg/views/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/paul-nameless-tg/tg/views/__init__.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg/views/__init__.py:319:8 Incompatible return type [7]: Expected `Tuple[int]` but got `Tuple[int, int, int]`.",
    "message": " Expected `Tuple[int]` but got `Tuple[int, int, int]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 319,
    "warning_line": "        return attrs",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n        attrs = (\n",
        "source_code_len": 83,
        "target_code": "\n    def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n        attrs = (\n",
        "target_code_len": 88,
        "diff_format": "@@ -309,3 +315,3 @@\n \n-    def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n+    def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n         attrs = (\n",
        "source_code_with_indent": "\n    <DED>def _msg_attributes(self, is_selected: bool) -> Tuple[int]:\n        <IND>attrs = (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _msg_attributes(self, is_selected: bool) -> Tuple[int, ...]:\n        <IND>attrs = (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if is_selected:\n            return (attr | reverse for attr in attrs)\n        return attrs\n",
        "source_code_len": 99,
        "target_code": "        if is_selected:\n            return tuple(attr | reverse for attr in attrs)\n        return attrs\n",
        "target_code_len": 104,
        "diff_format": "@@ -317,3 +323,3 @@\n         if is_selected:\n-            return (attr | reverse for attr in attrs)\n+            return tuple(attr | reverse for attr in attrs)\n         return attrs\n",
        "source_code_with_indent": "        if is_selected:\n            <IND>return (attr | reverse for attr in attrs)\n        <DED>return attrs\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if is_selected:\n            <IND>return tuple(attr | reverse for attr in attrs)\n        <DED>return attrs\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]