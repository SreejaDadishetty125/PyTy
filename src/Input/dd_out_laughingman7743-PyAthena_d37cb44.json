[
  {
    "project": "laughingman7743/PyAthena",
    "commit": "d37cb449988bee21c103155008fa78fe2f4e59e5",
    "filename": "pyathena/converter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/laughingman7743-PyAthena/pyathena/converter.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyathena/converter.py:73:0 Incompatible variable type [9]: _DEFAULT_CONVERTERS is declared to have type `Dict[str, typing.Callable[[Optional[str]], Optional[str]]]` but is used as type `Dict[str, typing.Union[typing.Callable(_to_binary)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_boolean)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_date)[[Named(varchar_value, Optional[str])], Optional[date]], typing.Callable(_to_datetime)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_decimal)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_default)[[Named(varchar_value, Optional[str])], Optional[str]], typing.Callable(_to_float)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_int)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_json)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_time)[[Named(varchar_value, Optional[str])], typing.Any]]]`.",
    "message": " _DEFAULT_CONVERTERS is declared to have type `Dict[str, typing.Callable[[Optional[str]], Optional[str]]]` but is used as type `Dict[str, typing.Union[typing.Callable(_to_binary)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_boolean)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_date)[[Named(varchar_value, Optional[str])], Optional[date]], typing.Callable(_to_datetime)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_decimal)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_default)[[Named(varchar_value, Optional[str])], Optional[str]], typing.Callable(_to_float)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_int)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_json)[[Named(varchar_value, Optional[str])], typing.Any], typing.Callable(_to_time)[[Named(varchar_value, Optional[str])], typing.Any]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 73,
    "warning_line": "_DEFAULT_CONVERTERS: Dict[str, Callable[[Optional[str]], Optional[str]]] = {",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_date(varchar_value: Optional[str]) -> Optional[date]:\n    if varchar_value is None:\n",
        "source_code_len": 93,
        "target_code": "\ndef _to_date(varchar_value: Optional[str]) -> Optional[Any]:\n    if varchar_value is None:\n",
        "target_code_len": 92,
        "diff_format": "@@ -14,3 +14,3 @@\n \n-def _to_date(varchar_value: Optional[str]) -> Optional[date]:\n+def _to_date(varchar_value: Optional[str]) -> Optional[Any]:\n     if varchar_value is None:\n",
        "source_code_with_indent": "\ndef _to_date(varchar_value: Optional[str]) -> Optional[date]:\n    <IND>if varchar_value is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_date(varchar_value: Optional[str]) -> Optional[Any]:\n    <IND>if varchar_value is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "laughingman7743/PyAthena",
    "commit": "d37cb449988bee21c103155008fa78fe2f4e59e5",
    "filename": "pyathena/converter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/laughingman7743-PyAthena/pyathena/converter.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyathena/converter.py:107:8 Incompatible variable type [9]: default is declared to have type `typing.Callable[[Optional[str]], Optional[str]]` but is used as type `None`.",
    "message": " default is declared to have type `typing.Callable[[Optional[str]], Optional[str]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 107,
    "warning_line": "        default: Callable[[Optional[str]], Optional[str]] = None,"
  }
]