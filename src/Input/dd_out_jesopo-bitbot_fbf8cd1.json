[
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/Control.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/Control.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/Control.py:21:12 Incompatible return type [7]: Expected `typing.List[str]` but got `None`.",
    "message": " Expected `typing.List[str]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 21,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def read_lines(self) -> typing.List[str]:\n        try:\n",
        "source_code_len": 60,
        "target_code": "\n    def read_lines(self) -> typing.Optional[typing.List[str]]:\n        try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -14,3 +14,3 @@\n \n-    def read_lines(self) -> typing.List[str]:\n+    def read_lines(self) -> typing.Optional[typing.List[str]]:\n         try:\n",
        "source_code_with_indent": "\n    <DED>def read_lines(self) -> typing.List[str]:\n        <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def read_lines(self) -> typing.Optional[typing.List[str]]:\n        <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/Control.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/Control.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/Control.py:108:51 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Control._send_action` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `Control._send_action` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        self._send_action(client, response_action, response_data, id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        client.write_line(\n",
        "source_code_len": 129,
        "target_code": "\n    def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        client.write_line(\n",
        "target_code_len": 163,
        "diff_format": "@@ -111,4 +111,4 @@\n \n-    def _send_action(self, client: ControlClient, action: str, data: str,\n-            id: int=None):\n+    def _send_action(self, client: ControlClient, action: str,\n+            data: typing.Optional[str], id: typing.Optional[str]=None):\n         client.write_line(\n",
        "source_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        <IND>client.write_line(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        <IND>client.write_line(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/Control.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/Control.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/Control.py:108:66 Incompatible parameter type [6]: Expected `int` for 4th positional only parameter to call `Control._send_action` but got `str`.",
    "message": " Expected `int` for 4th positional only parameter to call `Control._send_action` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        self._send_action(client, response_action, response_data, id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        client.write_line(\n",
        "source_code_len": 129,
        "target_code": "\n    def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        client.write_line(\n",
        "target_code_len": 163,
        "diff_format": "@@ -111,4 +111,4 @@\n \n-    def _send_action(self, client: ControlClient, action: str, data: str,\n-            id: int=None):\n+    def _send_action(self, client: ControlClient, action: str,\n+            data: typing.Optional[str], id: typing.Optional[str]=None):\n         client.write_line(\n",
        "source_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        <IND>client.write_line(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        <IND>client.write_line(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/Control.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/Control.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/Control.py:113:12 Incompatible variable type [9]: id is declared to have type `int` but is used as type `None`.",
    "message": " id is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 113,
    "warning_line": "            id: int=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        client.write_line(\n",
        "source_code_len": 129,
        "target_code": "\n    def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        client.write_line(\n",
        "target_code_len": 163,
        "diff_format": "@@ -111,4 +111,4 @@\n \n-    def _send_action(self, client: ControlClient, action: str, data: str,\n-            id: int=None):\n+    def _send_action(self, client: ControlClient, action: str,\n+            data: typing.Optional[str], id: typing.Optional[str]=None):\n         client.write_line(\n",
        "source_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str, data: str,\n            id: int=None):\n        <IND>client.write_line(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _send_action(self, client: ControlClient, action: str,\n            data: typing.Optional[str], id: typing.Optional[str]=None):\n        <IND>client.write_line(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/IRCLine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/IRCLine.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/IRCLine.py:133:8 Incompatible return type [7]: Expected `typing.Tuple[str, str]` but got `typing.List[str]`.",
    "message": " Expected `typing.Tuple[str, str]` but got `typing.List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 133,
    "warning_line": "        return [line, overflow]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        line, sep, overflow = line.partition(\"\\n\")\n        return [line, overflow]\n    def _line_max(self, hostmask: str, margin: int) -> int:\n",
        "source_code_len": 143,
        "target_code": "        line, sep, overflow = line.partition(\"\\n\")\n        return (line, overflow)\n    def _line_max(self, hostmask: str, margin: int) -> int:\n",
        "target_code_len": 143,
        "diff_format": "@@ -132,3 +132,3 @@\n         line, sep, overflow = line.partition(\"\\n\")\n-        return [line, overflow]\n+        return (line, overflow)\n     def _line_max(self, hostmask: str, margin: int) -> int:\n",
        "source_code_with_indent": "        <IND>line, sep, overflow = line.partition(\"\\n\")\n        return [line, overflow]\n    <DED>def _line_max(self, hostmask: str, margin: int) -> int:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>line, sep, overflow = line.partition(\"\\n\")\n        return (line, overflow)\n    <DED>def _line_max(self, hostmask: str, margin: int) -> int:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/IRCServer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/IRCServer.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/IRCServer.py:169:38 Incompatible variable type [9]: username is declared to have type `str` but is used as type `None`.",
    "message": " username is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 169,
    "warning_line": "    def get_user(self, nickname: str, username: str=None, hostname: str=None,"
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/IRCUser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/IRCUser.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/IRCUser.py:38:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 38,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def hostmask(self) -> str:\n        if self.nickname and self.username and self.hostname:\n",
        "source_code_len": 94,
        "target_code": "\n    def hostmask(self) -> typing.Optional[str]:\n        if self.nickname and self.username and self.hostname:\n",
        "target_code_len": 111,
        "diff_format": "@@ -34,3 +34,3 @@\n \n-    def hostmask(self) -> str:\n+    def hostmask(self) -> typing.Optional[str]:\n         if self.nickname and self.username and self.hostname:\n",
        "source_code_with_indent": "\n    <DED>def hostmask(self) -> str:\n        <IND>if self.nickname and self.username and self.hostname:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def hostmask(self) -> typing.Optional[str]:\n        <IND>if self.nickname and self.username and self.hostname:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/ModuleManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/ModuleManager.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/ModuleManager.py:162:8 Incompatible return type [7]: Expected `str` but got `typing.List[typing.Any]`.",
    "message": " Expected `str` but got `typing.List[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 162,
    "warning_line": "        return paths",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        return os.path.basename(path).rsplit(\".py\", 1)[0].lower()\n    def _module_paths(self, name: str) -> str:\n        paths = []\n",
        "source_code_len": 132,
        "target_code": "        return os.path.basename(path).rsplit(\".py\", 1)[0].lower()\n    def _module_paths(self, name: str) -> typing.List[str]:\n        paths = []\n",
        "target_code_len": 145,
        "diff_format": "@@ -157,3 +158,3 @@\n         return os.path.basename(path).rsplit(\".py\", 1)[0].lower()\n-    def _module_paths(self, name: str) -> str:\n+    def _module_paths(self, name: str) -> typing.List[str]:\n         paths = []\n",
        "source_code_with_indent": "        <IND>return os.path.basename(path).rsplit(\".py\", 1)[0].lower()\n    <DED>def _module_paths(self, name: str) -> str:\n        <IND>paths = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>return os.path.basename(path).rsplit(\".py\", 1)[0].lower()\n    <DED>def _module_paths(self, name: str) -> typing.List[str]:\n        <IND>paths = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/ModuleManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/ModuleManager.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/ModuleManager.py:192:20 Incompatible return type [7]: Expected `bool` but got implicit return value of `None`.",
    "message": " Expected `bool` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 192,
    "warning_line": "                    raise ModuleNotLoadableWarning(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _check_hashflags(self, bot: \"IRCBot.Bot\", definition: ModuleDefinition\n            ) -> bool:\n        for hashflag, value in definition.hashflags:\n",
        "source_code_len": 155,
        "target_code": "    def _check_hashflags(self, bot: \"IRCBot.Bot\", definition: ModuleDefinition\n            ) -> None:\n        for hashflag, value in definition.hashflags:\n",
        "target_code_len": 155,
        "diff_format": "@@ -182,3 +183,3 @@\n     def _check_hashflags(self, bot: \"IRCBot.Bot\", definition: ModuleDefinition\n-            ) -> bool:\n+            ) -> None:\n         for hashflag, value in definition.hashflags:\n",
        "source_code_with_indent": "    <DED>def _check_hashflags(self, bot: \"IRCBot.Bot\", definition: ModuleDefinition\n            ) -> bool:\n        <IND>for hashflag, value in definition.hashflags:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _check_hashflags(self, bot: \"IRCBot.Bot\", definition: ModuleDefinition\n            ) -> None:\n        <IND>for hashflag, value in definition.hashflags:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/ModuleManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/ModuleManager.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/ModuleManager.py:331:12 Incompatible return type [7]: Expected `typing.Tuple[typing.List[str], typing.List[str]]` but got implicit return value of `None`.",
    "message": " Expected `typing.Tuple[typing.List[str], typing.List[str]]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 331,
    "warning_line": "            self.load_module(bot, definition)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            blacklist: typing.List[str]=[]\n            ) -> typing.Tuple[typing.List[str], typing.List[str]]:\n        loadable, nonloadable = self._list_valid_modules(bot, whitelist, blacklist)\n",
        "source_code_len": 194,
        "target_code": "            blacklist: typing.List[str]=[]\n            ) -> None:\n        loadable, nonloadable = self._list_valid_modules(bot, whitelist, blacklist)\n",
        "target_code_len": 150,
        "diff_format": "@@ -323,3 +324,3 @@\n             blacklist: typing.List[str]=[]\n-            ) -> typing.Tuple[typing.List[str], typing.List[str]]:\n+            ) -> None:\n         loadable, nonloadable = self._list_valid_modules(bot, whitelist, blacklist)\n",
        "source_code_with_indent": "            blacklist: typing.List[str]=[]\n            ) -> typing.Tuple[typing.List[str], typing.List[str]]:\n        <IND>loadable, nonloadable = self._list_valid_modules(bot, whitelist, blacklist)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            blacklist: typing.List[str]=[]\n            ) -> None:\n        <IND>loadable, nonloadable = self._list_valid_modules(bot, whitelist, blacklist)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/utils/http.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/utils/http.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/utils/http.py:166:30 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Request.__init__` but got `typing.Union[Request, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Request.__init__` but got `typing.Union[Request, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "        request_obj = Request(request_obj, **kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    if type(request_obj) == str:\n        request_obj = Request(request_obj, **kwargs)\n",
        "source_code_len": 162,
        "target_code": "def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    if isinstance(request_obj, str):\n        request_obj = Request(request_obj, **kwargs)\n",
        "target_code_len": 166,
        "diff_format": "@@ -164,3 +164,3 @@\n def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n-    if type(request_obj) == str:\n+    if isinstance(request_obj, str):\n         request_obj = Request(request_obj, **kwargs)\n",
        "source_code_with_indent": "<DED>def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    <IND>if type(request_obj) == str:\n        <IND>request_obj = Request(request_obj, **kwargs)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    <IND>if isinstance(request_obj, str):\n        <IND>request_obj = Request(request_obj, **kwargs)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jesopo/bitbot",
    "commit": "fbf8cd1a167966d31717f4fc1fec1418910ad0f4",
    "filename": "src/utils/http.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jesopo-bitbot/src/utils/http.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/utils/http.py:167:20 Incompatible parameter type [6]: Expected `Request` for 1st positional only parameter to call `_request` but got `typing.Union[Request, str]`.",
    "message": " Expected `Request` for 1st positional only parameter to call `_request` but got `typing.Union[Request, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 167,
    "warning_line": "    return _request(request_obj)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    if type(request_obj) == str:\n        request_obj = Request(request_obj, **kwargs)\n",
        "source_code_len": 162,
        "target_code": "def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    if isinstance(request_obj, str):\n        request_obj = Request(request_obj, **kwargs)\n",
        "target_code_len": 166,
        "diff_format": "@@ -164,3 +164,3 @@\n def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n-    if type(request_obj) == str:\n+    if isinstance(request_obj, str):\n         request_obj = Request(request_obj, **kwargs)\n",
        "source_code_with_indent": "<DED>def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    <IND>if type(request_obj) == str:\n        <IND>request_obj = Request(request_obj, **kwargs)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def request(request_obj: typing.Union[str, Request], **kwargs) -> Response:\n    <IND>if isinstance(request_obj, str):\n        <IND>request_obj = Request(request_obj, **kwargs)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]