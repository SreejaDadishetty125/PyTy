[
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:103:8 Incompatible attribute type [8]: Attribute `speaking_time` declared in class `WeechatUser` has type `int` but is used as type `None`.",
    "message": " Attribute `speaking_time` declared in class `WeechatUser` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 103,
    "warning_line": "        self.speaking_time = None  # type: int"
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:478:43 Incompatible variable type [9]: extra_tags is declared to have type `str` but is used as type `None`.",
    "message": " extra_tags is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 478,
    "warning_line": "    def message(self, nick, message, date, extra_tags=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def message(self, nick, message, date, extra_tags=None):\n        # type: (str, str, int, str) -> None\n        user = self._get_user(nick)\n",
        "source_code_len": 142,
        "target_code": "    def message(self, nick, message, date, extra_tags=None):\n        # type: (str, str, int, List[str]) -> None\n        user = self._get_user(nick)\n",
        "target_code_len": 148,
        "diff_format": "@@ -478,3 +482,3 @@\n     def message(self, nick, message, date, extra_tags=None):\n-        # type: (str, str, int, str) -> None\n+        # type: (str, str, int, List[str]) -> None\n         user = self._get_user(nick)\n",
        "source_code_with_indent": "    <DED>def message(self, nick, message, date, extra_tags=None):\n        # type: (str, str, int, str) -> None\n        <IND>user = self._get_user(nick)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def message(self, nick, message, date, extra_tags=None):\n        # type: (str, str, int, List[str]) -> None\n        <IND>user = self._get_user(nick)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:481:34 Incompatible parameter type [6]: Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "message": " Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 481,
    "warning_line": "        tags = self._message_tags(user, \"message\") + (extra_tags or [])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "source_code_len": 144,
        "target_code": "    def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "target_code_len": 142,
        "diff_format": "@@ -436,3 +440,3 @@\n     def _message_tags(self, user, message_type):\n-        # type: (str, RoomUser, str) -> List[str]\n+        # type: (WeechatUser, str) -> List[str]\n         tags = list(self.tags[message_type])\n",
        "source_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:517:34 Incompatible parameter type [6]: Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "message": " Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 517,
    "warning_line": "        tags = self._message_tags(user, \"notice\") + (extra_tags or [])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "source_code_len": 144,
        "target_code": "    def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "target_code_len": 142,
        "diff_format": "@@ -436,3 +440,3 @@\n     def _message_tags(self, user, message_type):\n-        # type: (str, RoomUser, str) -> List[str]\n+        # type: (WeechatUser, str) -> List[str]\n         tags = list(self.tags[message_type])\n",
        "source_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:550:34 Incompatible parameter type [6]: Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "message": " Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 550,
    "warning_line": "        tags = self._message_tags(user, \"action\") + (extra_tags or [])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "source_code_len": 144,
        "target_code": "    def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "target_code_len": 142,
        "diff_format": "@@ -436,3 +440,3 @@\n     def _message_tags(self, user, message_type):\n-        # type: (str, RoomUser, str) -> List[str]\n+        # type: (WeechatUser, str) -> List[str]\n         tags = list(self.tags[message_type])\n",
        "source_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:638:38 Incompatible parameter type [6]: Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "message": " Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 638,
    "warning_line": "            tags = self._message_tags(user, \"join\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "source_code_len": 144,
        "target_code": "    def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "target_code_len": 142,
        "diff_format": "@@ -436,3 +440,3 @@\n     def _message_tags(self, user, message_type):\n-        # type: (str, RoomUser, str) -> List[str]\n+        # type: (WeechatUser, str) -> List[str]\n         tags = list(self.tags[message_type])\n",
        "source_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:667:38 Incompatible parameter type [6]: Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "message": " Expected `RoomUser` for 1st positional only parameter to call `WeechatChannelBuffer._message_tags` but got `WeechatUser`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 667,
    "warning_line": "            tags = self._message_tags(user, leave_type)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "source_code_len": 144,
        "target_code": "    def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        tags = list(self.tags[message_type])\n",
        "target_code_len": 142,
        "diff_format": "@@ -436,3 +440,3 @@\n     def _message_tags(self, user, message_type):\n-        # type: (str, RoomUser, str) -> List[str]\n+        # type: (WeechatUser, str) -> List[str]\n         tags = list(self.tags[message_type])\n",
        "source_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (str, RoomUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _message_tags(self, user, message_type):\n        # type: (WeechatUser, str) -> List[str]\n        <IND>tags = list(self.tags[message_type])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:673:12 Incompatible variable type [9]: message is declared to have type `bool` but is used as type `str`.",
    "message": " message is declared to have type `bool` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 673,
    "warning_line": "            message = self._membership_message(user, leave_type)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n            message = self._membership_message(user, leave_type)\n            self.print_date_tags(message, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_len": 196,
        "target_code": "\n            msg = self._membership_message(user, leave_type)\n            self.print_date_tags(msg, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "target_code_len": 188,
        "diff_format": "@@ -672,4 +676,4 @@\n \n-            message = self._membership_message(user, leave_type)\n-            self.print_date_tags(message, date, tags + (extra_tags or []))\n+            msg = self._membership_message(user, leave_type)\n+            self.print_date_tags(msg, date, tags + (extra_tags or []))\n             self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_with_indent": "\n            <DED>message = self._membership_message(user, leave_type)\n            self.print_date_tags(message, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n            <DED>msg = self._membership_message(user, leave_type)\n            self.print_date_tags(msg, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/buffer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/buffer.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/buffer.py:674:33 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `WeechatChannelBuffer.print_date_tags` but got `bool`.",
    "message": " Expected `str` for 1st positional only parameter to call `WeechatChannelBuffer.print_date_tags` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 674,
    "warning_line": "            self.print_date_tags(message, date, tags + (extra_tags or []))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n            message = self._membership_message(user, leave_type)\n            self.print_date_tags(message, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_len": 196,
        "target_code": "\n            msg = self._membership_message(user, leave_type)\n            self.print_date_tags(msg, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "target_code_len": 188,
        "diff_format": "@@ -672,4 +676,4 @@\n \n-            message = self._membership_message(user, leave_type)\n-            self.print_date_tags(message, date, tags + (extra_tags or []))\n+            msg = self._membership_message(user, leave_type)\n+            self.print_date_tags(msg, date, tags + (extra_tags or []))\n             self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_with_indent": "\n            <DED>message = self._membership_message(user, leave_type)\n            self.print_date_tags(message, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n            <DED>msg = self._membership_message(user, leave_type)\n            self.print_date_tags(msg, date, tags + (extra_tags or []))\n            self.remove_smart_filtered_nick(user.nick)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/colors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/colors.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/colors.py:691:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 691,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    except ValueError:\n        return None\n\n",
        "source_code_len": 44,
        "target_code": "    except ValueError:\n        return \"\"\n\n",
        "target_code_len": 42,
        "diff_format": "@@ -690,3 +691,3 @@\n     except ValueError:\n-        return None\n+        return \"\"\n \n",
        "source_code_with_indent": "    <DED>except ValueError:\n        <IND>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>except ValueError:\n        <IND>return \"\"\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:191:8 Incompatible attribute type [8]: Attribute `reconnect_time` declared in class `MatrixServer` has type `float` but is used as type `None`.",
    "message": " Attribute `reconnect_time` declared in class `MatrixServer` has type `float` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 191,
    "warning_line": "        self.reconnect_time = None  # type: float"
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:193:8 Incompatible attribute type [8]: Attribute `socket` declared in class `MatrixServer` has type `ssl.SSLSocket` but is used as type `None`.",
    "message": " Attribute `socket` declared in class `MatrixServer` has type `ssl.SSLSocket` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 193,
    "warning_line": "        self.socket = None          # type: ssl.SSLSocket",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_len": 369,
        "target_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_len": 385,
        "diff_format": "@@ -190,7 +193,7 @@\n         self.reconnect_delay = 0    # type: int\n-        self.reconnect_time = None  # type: float\n+        self.reconnect_time = None  # type: Optional[float]\n         self.sync_time = None       # type: Optional[float]\n-        self.socket = None          # type: ssl.SSLSocket\n+        self.socket = None          # type: Optional[ssl.SSLSocket]\n         self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n-        self.transport_type = None  # type: Optional[nio.TransportType]\n+        self.transport_type = None  # type: Optional[TransportType]\n \n",
        "source_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:206:8 Incompatible attribute type [8]: Attribute `access_token` declared in class `MatrixServer` has type `str` but is used as type `None`.",
    "message": " Attribute `access_token` declared in class `MatrixServer` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 206,
    "warning_line": "        self.access_token = None                         # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.client = None\n        self.access_token = None                         # type: str\n        self.next_batch = None                           # type: str\n        self.transaction_id = 0                          # type: int\n",
        "source_code_len": 234,
        "target_code": "        self.client = None\n        self.access_token = None                         # type: Optional[str]\n        self.next_batch = None                           # type: Optional[str]\n        self.transaction_id = 0                          # type: int\n",
        "target_code_len": 254,
        "diff_format": "@@ -205,4 +208,4 @@\n         self.client = None\n-        self.access_token = None                         # type: str\n-        self.next_batch = None                           # type: str\n+        self.access_token = None                         # type: Optional[str]\n+        self.next_batch = None                           # type: Optional[str]\n         self.transaction_id = 0                          # type: int\n",
        "source_code_with_indent": "        <DED>self.client = None\n        self.access_token = None                         # type: str\n        self.next_batch = None                           # type: str\n        self.transaction_id = 0                          # type: int\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>self.client = None\n        self.access_token = None                         # type: Optional[str]\n        self.next_batch = None                           # type: Optional[str]\n        self.transaction_id = 0                          # type: int\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:207:8 Incompatible attribute type [8]: Attribute `next_batch` declared in class `MatrixServer` has type `str` but is used as type `None`.",
    "message": " Attribute `next_batch` declared in class `MatrixServer` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 207,
    "warning_line": "        self.next_batch = None                           # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.client = None\n        self.access_token = None                         # type: str\n        self.next_batch = None                           # type: str\n        self.transaction_id = 0                          # type: int\n",
        "source_code_len": 234,
        "target_code": "        self.client = None\n        self.access_token = None                         # type: Optional[str]\n        self.next_batch = None                           # type: Optional[str]\n        self.transaction_id = 0                          # type: int\n",
        "target_code_len": 254,
        "diff_format": "@@ -205,4 +208,4 @@\n         self.client = None\n-        self.access_token = None                         # type: str\n-        self.next_batch = None                           # type: str\n+        self.access_token = None                         # type: Optional[str]\n+        self.next_batch = None                           # type: Optional[str]\n         self.transaction_id = 0                          # type: int\n",
        "source_code_with_indent": "        <DED>self.client = None\n        self.access_token = None                         # type: str\n        self.next_batch = None                           # type: str\n        self.transaction_id = 0                          # type: int\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>self.client = None\n        self.access_token = None                         # type: Optional[str]\n        self.next_batch = None                           # type: Optional[str]\n        self.transaction_id = 0                          # type: int\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:429:8 Incompatible attribute type [8]: Attribute `socket` declared in class `MatrixServer` has type `ssl.SSLSocket` but is used as type `None`.",
    "message": " Attribute `socket` declared in class `MatrixServer` has type `ssl.SSLSocket` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 429,
    "warning_line": "        self.socket = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_len": 369,
        "target_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_len": 385,
        "diff_format": "@@ -190,7 +193,7 @@\n         self.reconnect_delay = 0    # type: int\n-        self.reconnect_time = None  # type: float\n+        self.reconnect_time = None  # type: Optional[float]\n         self.sync_time = None       # type: Optional[float]\n-        self.socket = None          # type: ssl.SSLSocket\n+        self.socket = None          # type: Optional[ssl.SSLSocket]\n         self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n-        self.transport_type = None  # type: Optional[nio.TransportType]\n+        self.transport_type = None  # type: Optional[TransportType]\n \n",
        "source_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/weechat-matrix",
    "commit": "67141c980a61186c2bfc5a6df60cfee5162b8aa0",
    "filename": "matrix/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-weechat-matrix/matrix/server.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "matrix/server.py:444:8 Incompatible attribute type [8]: Attribute `reconnect_time` declared in class `MatrixServer` has type `float` but is used as type `None`.",
    "message": " Attribute `reconnect_time` declared in class `MatrixServer` has type `float` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 444,
    "warning_line": "        self.reconnect_time = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_len": 369,
        "target_code": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_len": 385,
        "diff_format": "@@ -190,7 +193,7 @@\n         self.reconnect_delay = 0    # type: int\n-        self.reconnect_time = None  # type: float\n+        self.reconnect_time = None  # type: Optional[float]\n         self.sync_time = None       # type: Optional[float]\n-        self.socket = None          # type: ssl.SSLSocket\n+        self.socket = None          # type: Optional[ssl.SSLSocket]\n         self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n-        self.transport_type = None  # type: Optional[nio.TransportType]\n+        self.transport_type = None  # type: Optional[TransportType]\n \n",
        "source_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: float\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: ssl.SSLSocket\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[nio.TransportType]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.reconnect_delay = 0    # type: int\n        self.reconnect_time = None  # type: Optional[float]\n        self.sync_time = None       # type: Optional[float]\n        self.socket = None          # type: Optional[ssl.SSLSocket]\n        self.ssl_context = ssl.create_default_context()  # type: ssl.SSLContext\n        self.transport_type = None  # type: Optional[TransportType]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]