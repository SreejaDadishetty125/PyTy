[
  {
    "project": "typeddjango/django-stubs",
    "commit": "552f2ffc0c2481b592b9f634c245c615acf48c7f",
    "filename": "django-stubs/db/backends/utils.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/typeddjango-django-stubs/django-stubs/db/backends/utils.pyi",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "django-stubs/db/backends/utils.pyi:19:26 Unbound name [10]: Name `Iterator` is used but not defined in the current scope.",
    "message": " Name `Iterator` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 19,
    "warning_line": "    def __iter__(self) -> Iterator[Tuple[Any, ...]]: ...",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\nfrom typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union\nfrom uuid import UUID\n",
        "source_code_len": 150,
        "target_code": "from decimal import Decimal\nfrom typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union, Iterator\nfrom uuid import UUID\n",
        "target_code_len": 160,
        "diff_format": "@@ -3,3 +3,3 @@\n from decimal import Decimal\n-from typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union\n+from typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union, Iterator\n from uuid import UUID\n",
        "source_code_with_indent": "from decimal import Decimal\nfrom typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union\nfrom uuid import UUID\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Any, ContextManager, Dict, List, Mapping, Optional, Sequence, Tuple, Type, Union, Iterator\nfrom uuid import UUID\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]