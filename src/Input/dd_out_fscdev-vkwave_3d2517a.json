[
  {
    "project": "fscdev/vkwave",
    "commit": "3d2517ac3f026f037d79ba8d26b1e9a2144cda4a",
    "filename": "vkwave/bots/utils/keyboards/keyboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/fscdev-vkwave/vkwave/bots/utils/keyboards/keyboard.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vkwave/bots/utils/keyboards/keyboard.py:99:34 Incompatible variable type [9]: payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 99,
    "warning_line": "    def add_location_button(self, payload: dict = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def add_location_button(self, payload: dict = None) -> None:\n        \"\"\"\n",
        "source_code_len": 78,
        "target_code": "\n    def add_location_button(self, payload: typing.Optional[typing.Dict[str, str]] = None) -> None:\n        \"\"\"\n",
        "target_code_len": 112,
        "diff_format": "@@ -98,3 +98,3 @@\n \n-    def add_location_button(self, payload: dict = None) -> None:\n+    def add_location_button(self, payload: typing.Optional[typing.Dict[str, str]] = None) -> None:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def add_location_button(self, payload: dict = None) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def add_location_button(self, payload: typing.Optional[typing.Dict[str, str]] = None) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "fscdev/vkwave",
    "commit": "3d2517ac3f026f037d79ba8d26b1e9a2144cda4a",
    "filename": "vkwave/bots/utils/keyboards/keyboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/fscdev-vkwave/vkwave/bots/utils/keyboards/keyboard.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vkwave/bots/utils/keyboards/keyboard.py:114:52 Incompatible variable type [9]: payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 114,
    "warning_line": "    def add_link_button(self, text: str, link: str, payload: dict = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def add_link_button(self, text: str, link: str, payload: dict = None) -> None:\n        action = {\n",
        "source_code_len": 103,
        "target_code": "\n    def add_link_button(\n        self, text: str, link: str, payload: typing.Optional[typing.Dict[str, str]] = None\n    ) -> None:\n        action = {\n",
        "target_code_len": 151,
        "diff_format": "@@ -113,3 +113,5 @@\n \n-    def add_link_button(self, text: str, link: str, payload: dict = None) -> None:\n+    def add_link_button(\n+        self, text: str, link: str, payload: typing.Optional[typing.Dict[str, str]] = None\n+    ) -> None:\n         action = {\n",
        "source_code_with_indent": "\n    <DED>def add_link_button(self, text: str, link: str, payload: dict = None) -> None:\n        <IND>action = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def add_link_button(\n        self, text: str, link: str, payload: typing.Optional[typing.Dict[str, str]] = None\n    ) -> None:\n        <IND>action = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "fscdev/vkwave",
    "commit": "3d2517ac3f026f037d79ba8d26b1e9a2144cda4a",
    "filename": "vkwave/bots/utils/keyboards/keyboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/fscdev-vkwave/vkwave/bots/utils/keyboards/keyboard.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vkwave/bots/utils/keyboards/keyboard.py:126:42 Incompatible variable type [9]: payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 126,
    "warning_line": "    def add_vkpay_button(self, hash: str, payload: dict = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def add_vkpay_button(self, hash: str, payload: dict = None) -> None:\n        \"\"\"\n",
        "source_code_len": 86,
        "target_code": "\n    def add_vkpay_button(\n        self, hash: str, payload: typing.Optional[typing.Dict[str, str]] = None\n    ) -> None:\n        \"\"\"\n",
        "target_code_len": 134,
        "diff_format": "@@ -125,3 +127,5 @@\n \n-    def add_vkpay_button(self, hash: str, payload: dict = None) -> None:\n+    def add_vkpay_button(\n+        self, hash: str, payload: typing.Optional[typing.Dict[str, str]] = None\n+    ) -> None:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def add_vkpay_button(self, hash: str, payload: dict = None) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def add_vkpay_button(\n        self, hash: str, payload: typing.Optional[typing.Dict[str, str]] = None\n    ) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "fscdev/vkwave",
    "commit": "3d2517ac3f026f037d79ba8d26b1e9a2144cda4a",
    "filename": "vkwave/bots/utils/keyboards/keyboard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/fscdev-vkwave/vkwave/bots/utils/keyboards/keyboard.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vkwave/bots/utils/keyboards/keyboard.py:144:54 Incompatible variable type [9]: payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " payload is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 144,
    "warning_line": "        self, app_id: int, owner_id: int, label: str, payload: dict = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def add_vkapps_button(\n        self, app_id: int, owner_id: int, label: str, payload: dict = None\n    ) -> None:\n",
        "source_code_len": 117,
        "target_code": "    def add_vkapps_button(\n        self,\n        app_id: int,\n        owner_id: int,\n        label: str,\n        payload: typing.Optional[typing.Dict[str, str]] = None,\n    ) -> None:\n",
        "target_code_len": 184,
        "diff_format": "@@ -143,3 +147,7 @@\n     def add_vkapps_button(\n-        self, app_id: int, owner_id: int, label: str, payload: dict = None\n+        self,\n+        app_id: int,\n+        owner_id: int,\n+        label: str,\n+        payload: typing.Optional[typing.Dict[str, str]] = None,\n     ) -> None:\n",
        "source_code_with_indent": "    <DED>def add_vkapps_button(\n        self, app_id: int, owner_id: int, label: str, payload: dict = None\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def add_vkapps_button(\n        self,\n        app_id: int,\n        owner_id: int,\n        label: str,\n        payload: typing.Optional[typing.Dict[str, str]] = None,\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]