[
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_003/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_003/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_003/sol1.py:95:23 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `isprime` but got `float`.",
    "message": " Expected `int` for 1st positional only parameter to call `isprime` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 95,
    "warning_line": "            if isprime(n / i):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if n % i == 0:\n            if isprime(n / i):\n                max_number = n / i\n                break\n",
        "source_code_len": 111,
        "target_code": "        if n % i == 0:\n            if isprime(n // i):\n                max_number = n // i\n                break\n",
        "target_code_len": 113,
        "diff_format": "@@ -94,4 +94,4 @@\n         if n % i == 0:\n-            if isprime(n / i):\n-                max_number = n / i\n+            if isprime(n // i):\n+                max_number = n // i\n                 break\n",
        "source_code_with_indent": "        <IND>if n % i == 0:\n            <IND>if isprime(n / i):\n                <IND>max_number = n / i\n                break\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>if n % i == 0:\n            <IND>if isprime(n // i):\n                <IND>max_number = n // i\n                break\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_003/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_003/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_003/sol1.py:100:4 Incompatible return type [7]: Expected `int` but got `float`.",
    "message": " Expected `int` but got `float`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 100,
    "warning_line": "    return max_number",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if n % i == 0:\n            if isprime(n / i):\n                max_number = n / i\n                break\n",
        "source_code_len": 111,
        "target_code": "        if n % i == 0:\n            if isprime(n // i):\n                max_number = n // i\n                break\n",
        "target_code_len": 113,
        "diff_format": "@@ -94,4 +94,4 @@\n         if n % i == 0:\n-            if isprime(n / i):\n-                max_number = n / i\n+            if isprime(n // i):\n+                max_number = n // i\n                 break\n",
        "source_code_with_indent": "        <IND>if n % i == 0:\n            <IND>if isprime(n / i):\n                <IND>max_number = n / i\n                break\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>if n % i == 0:\n            <IND>if isprime(n // i):\n                <IND>max_number = n // i\n                break\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_003/sol3.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_003/sol3.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_003/sol3.py:60:12 Incompatible variable type [9]: n is declared to have type `int` but is used as type `float`.",
    "message": " n is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 60,
    "warning_line": "            n = n / i",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        while n % i == 0:\n            n = n / i\n        i += 1\n",
        "source_code_len": 63,
        "target_code": "        while n % i == 0:\n            n = n // i\n        i += 1\n",
        "target_code_len": 64,
        "diff_format": "@@ -59,3 +59,3 @@\n         while n % i == 0:\n-            n = n / i\n+            n = n // i\n         i += 1\n",
        "source_code_with_indent": "        while n % i == 0:\n            <IND>n = n / i\n        <DED>i += 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        while n % i == 0:\n            <IND>n = n // i\n        <DED>i += 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_008/sol2.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_008/sol2.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_008/sol2.py:72:4 Incompatible return type [7]: Expected `int` but got `typing.Union[int, str]`.",
    "message": " Expected `int` but got `typing.Union[int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 72,
    "warning_line": "    return max(",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    return max(\n        reduce(lambda x, y: int(x) * int(y), n[i : i + 13]) for i in range(len(n) - 12)\n    )\n",
        "source_code_len": 110,
        "target_code": "    return max(\n        # mypy cannot properly interpret reduce\n        int(reduce(lambda x, y: str(int(x) * int(y)), n[i : i + 13]))\n        for i in range(len(n) - 12)\n    )\n",
        "target_code_len": 176,
        "diff_format": "@@ -72,3 +72,5 @@\n     return max(\n-        reduce(lambda x, y: int(x) * int(y), n[i : i + 13]) for i in range(len(n) - 12)\n+        # mypy cannot properly interpret reduce\n+        int(reduce(lambda x, y: str(int(x) * int(y)), n[i : i + 13]))\n+        for i in range(len(n) - 12)\n     )\n",
        "source_code_with_indent": "    return max(\n        reduce(lambda x, y: int(x) * int(y), n[i : i + 13]) for i in range(len(n) - 12)\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    return max(\n        # mypy cannot properly interpret reduce\n        int(reduce(lambda x, y: str(int(x) * int(y)), n[i : i + 13]))\n        for i in range(len(n) - 12)\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_009/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_009/sol1.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_009/sol1.py:37:24 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 37,
    "warning_line": "                        return a * b * c",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n    return -1\n\n\n",
        "target_code_len": 17,
        "diff_format": "@@ -38,2 +38,4 @@\n \n+    return -1\n+\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED><DED><DED><DED>return -1\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_009/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_009/sol1.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_009/sol1.py:56:16 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 56,
    "warning_line": "                return a * b * c",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                return a * b * c\n\n",
        "source_code_len": 34,
        "target_code": "                return a * b * c\n\n    return -1\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -56,2 +58,4 @@\n                 return a * b * c\n+\n+    return -1\n \n",
        "source_code_with_indent": "                <IND>return a * b * c\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>return a * b * c\n\n    <DED><DED><DED>return -1\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_025/sol2.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_025/sol2.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_025/sol2.py:47:8 Incompatible return type [7]: Expected `int` but got `typing.Generator[int, None, None]`.",
    "message": " Expected `int` but got `typing.Generator[int, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 47,
    "warning_line": "        yield b",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\n\n\ndef fibonacci_generator() -> int:\n    \"\"\"\n",
        "source_code_len": 48,
        "target_code": "\"\"\"\nfrom typing import Generator\n\n\ndef fibonacci_generator() -> Generator[int, None, None]:\n    \"\"\"\n",
        "target_code_len": 100,
        "diff_format": "@@ -25,5 +25,6 @@\n \"\"\"\n+from typing import Generator\n \n \n-def fibonacci_generator() -> int:\n+def fibonacci_generator() -> Generator[int, None, None]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\n\ndef fibonacci_generator() -> int:\n    <IND>",
        "target_code_with_indent": "\nfrom typing import Generator\n\n\ndef fibonacci_generator() -> Generator[int, None, None]:\n    <IND>"
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_025/sol2.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_025/sol2.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_025/sol2.py:65:23 Incompatible parameter type [6]: Expected `typing.Iterator[Variable[_T]]` for 1st positional only parameter to call `next` but got `int`.",
    "message": " Expected `typing.Iterator[Variable[_T]]` for 1st positional only parameter to call `next` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 65,
    "warning_line": "    while len(str(next(gen))) < n:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\n\n\ndef fibonacci_generator() -> int:\n    \"\"\"\n",
        "source_code_len": 48,
        "target_code": "\"\"\"\nfrom typing import Generator\n\n\ndef fibonacci_generator() -> Generator[int, None, None]:\n    \"\"\"\n",
        "target_code_len": 100,
        "diff_format": "@@ -25,5 +25,6 @@\n \"\"\"\n+from typing import Generator\n \n \n-def fibonacci_generator() -> int:\n+def fibonacci_generator() -> Generator[int, None, None]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\n\ndef fibonacci_generator() -> int:\n    <IND>",
        "target_code_with_indent": "\nfrom typing import Generator\n\n\ndef fibonacci_generator() -> Generator[int, None, None]:\n    <IND>"
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_044/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_044/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_044/sol1.py:43:16 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 43,
    "warning_line": "                return b",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n    return -1\n\n\n",
        "target_code_len": 17,
        "diff_format": "@@ -44,2 +44,4 @@\n \n+    return -1\n+\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED><DED>return -1\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_046/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_046/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_046/sol1.py:86:16 Incompatible return type [7]: Expected `typing.List[int]` but got implicit return value of `None`.",
    "message": " Expected `typing.List[int]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 86,
    "warning_line": "                return list_nums",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n    return []\n\n\n",
        "target_code_len": 17,
        "diff_format": "@@ -87,2 +87,4 @@\n \n+    return []\n+\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED><DED>return []\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_051/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_051/sol1.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_051/sol1.py:66:4 Incompatible variable type [9]: number is declared to have type `int` but is used as type `str`.",
    "message": " number is declared to have type `int` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 66,
    "warning_line": "    number = str(number)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    number = str(number)\n    replacements = []\n",
        "source_code_len": 55,
        "target_code": "    \"\"\"\n    number_str = str(number)\n    replacements = []\n",
        "target_code_len": 59,
        "diff_format": "@@ -65,3 +65,3 @@\n     \"\"\"\n-    number = str(number)\n+    number_str = str(number)\n     replacements = []\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    number = str(number)\n    replacements = []\n",
        "target_code_with_indent": "\n    number_str = str(number)\n    replacements = []\n"
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_051/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_051/sol1.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_051/sol1.py:70:29 Incompatible parameter type [6]: Expected `None` for 1st positional only parameter to call `Counter.__init__` but got `int`.",
    "message": " Expected `None` for 1st positional only parameter to call `Counter.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "    for duplicate in Counter(number) - Counter(set(number)):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    number = str(number)\n    replacements = []\n",
        "source_code_len": 55,
        "target_code": "    \"\"\"\n    number_str = str(number)\n    replacements = []\n",
        "target_code_len": 59,
        "diff_format": "@@ -65,3 +65,3 @@\n     \"\"\"\n-    number = str(number)\n+    number_str = str(number)\n     replacements = []\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    number = str(number)\n    replacements = []\n",
        "target_code_with_indent": "\n    number_str = str(number)\n    replacements = []\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    for duplicate in Counter(number) - Counter(set(number)):\n        family = [int(number.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "source_code_len": 175,
        "target_code": "\n    for duplicate in Counter(number_str) - Counter(set(number_str)):\n        family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "target_code_len": 187,
        "diff_format": "@@ -69,4 +69,4 @@\n \n-    for duplicate in Counter(number) - Counter(set(number)):\n-        family = [int(number.replace(duplicate, digit)) for digit in digits]\n+    for duplicate in Counter(number_str) - Counter(set(number_str)):\n+        family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n         replacements.append(family)\n",
        "source_code_with_indent": "\n    for duplicate in Counter(number) - Counter(set(number)):\n        <IND>family = [int(number.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    for duplicate in Counter(number_str) - Counter(set(number_str)):\n        <IND>family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_051/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_051/sol1.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_051/sol1.py:70:51 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `int`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "    for duplicate in Counter(number) - Counter(set(number)):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    number = str(number)\n    replacements = []\n",
        "source_code_len": 55,
        "target_code": "    \"\"\"\n    number_str = str(number)\n    replacements = []\n",
        "target_code_len": 59,
        "diff_format": "@@ -65,3 +65,3 @@\n     \"\"\"\n-    number = str(number)\n+    number_str = str(number)\n     replacements = []\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    number = str(number)\n    replacements = []\n",
        "target_code_with_indent": "\n    number_str = str(number)\n    replacements = []\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    for duplicate in Counter(number) - Counter(set(number)):\n        family = [int(number.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "source_code_len": 175,
        "target_code": "\n    for duplicate in Counter(number_str) - Counter(set(number_str)):\n        family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "target_code_len": 187,
        "diff_format": "@@ -69,4 +69,4 @@\n \n-    for duplicate in Counter(number) - Counter(set(number)):\n-        family = [int(number.replace(duplicate, digit)) for digit in digits]\n+    for duplicate in Counter(number_str) - Counter(set(number_str)):\n+        family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n         replacements.append(family)\n",
        "source_code_with_indent": "\n    for duplicate in Counter(number) - Counter(set(number)):\n        <IND>family = [int(number.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    for duplicate in Counter(number_str) - Counter(set(number_str)):\n        <IND>family = [int(number_str.replace(duplicate, digit)) for digit in digits]\n        replacements.append(family)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_051/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_051/sol1.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_051/sol1.py:107:12 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 107,
    "warning_line": "            return min(primes_in_family)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n    return -1\n\n\n",
        "target_code_len": 17,
        "diff_format": "@@ -108,2 +108,4 @@\n \n+    return -1\n+\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>return -1\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_099/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_099/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_099/sol1.py:30:4 Incompatible return type [7]: Expected `int` but got `float`.",
    "message": " Expected `int` but got `float`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 30,
    "warning_line": "    return largest[1]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    largest = [0, 0]\n    for i, line in enumerate(open(os.path.join(os.path.dirname(__file__), data_file))):\n        a, x = list(map(int, line.split(\",\")))\n        if x * log10(a) > largest[0]:\n            largest = [x * log10(a), i + 1]\n    return largest[1]\n\n",
        "source_code_len": 269,
        "target_code": "    \"\"\"\n    largest: float = 0\n    result = 0\n    for i, line in enumerate(open(os.path.join(os.path.dirname(__file__), data_file))):\n        a, x = list(map(int, line.split(\",\")))\n        if x * log10(a) > largest:\n            largest = x * log10(a)\n            result = i + 1\n    return result\n\n",
        "target_code_len": 297,
        "diff_format": "@@ -24,8 +24,10 @@\n     \"\"\"\n-    largest = [0, 0]\n+    largest: float = 0\n+    result = 0\n     for i, line in enumerate(open(os.path.join(os.path.dirname(__file__), data_file))):\n         a, x = list(map(int, line.split(\",\")))\n-        if x * log10(a) > largest[0]:\n-            largest = [x * log10(a), i + 1]\n-    return largest[1]\n+        if x * log10(a) > largest:\n+            largest = x * log10(a)\n+            result = i + 1\n+    return result\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    largest = [0, 0]\n    for i, line in enumerate(open(os.path.join(os.path.dirname(__file__), data_file))):\n        <IND>a, x = list(map(int, line.split(\",\")))\n        if x * log10(a) > largest[0]:\n            <IND>largest = [x * log10(a), i + 1]\n    <DED><DED>return largest[1]\n\n",
        "target_code_with_indent": "\n    largest: float = 0\n    result = 0\n    for i, line in enumerate(open(os.path.join(os.path.dirname(__file__), data_file))):\n        <IND>a, x = list(map(int, line.split(\",\")))\n        if x * log10(a) > largest:\n            <IND>largest = x * log10(a)\n            result = i + 1\n    <DED><DED>return result\n\n"
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_101/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_101/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_101/sol1.py:208:8 Incompatible variable type [9]: poly is declared to have type `int` but is used as type `typing.Callable[[int], int]`.",
    "message": " poly is declared to have type `int` but is used as type `typing.Callable[[int], int]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 208,
    "warning_line": "    for poly in polynomials:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_len": 46,
        "target_code": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_len": 63,
        "diff_format": "@@ -204,3 +204,3 @@\n     ret: int = 0\n-    poly: int\n+    poly: Callable[[int], int]\n     x_val: int\n",
        "source_code_with_indent": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_101/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_101/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_101/sol1.py:210:29 Call error [29]: `int` is not a function.",
    "message": " `int` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 210,
    "warning_line": "        while func(x_val) == poly(x_val):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_len": 46,
        "target_code": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_len": 63,
        "diff_format": "@@ -204,3 +204,3 @@\n     ret: int = 0\n-    poly: int\n+    poly: Callable[[int], int]\n     x_val: int\n",
        "source_code_with_indent": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_101/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_101/sol1.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_101/sol1.py:213:15 Call error [29]: `int` is not a function.",
    "message": " `int` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 213,
    "warning_line": "        ret += poly(x_val)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_len": 46,
        "target_code": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_len": 63,
        "diff_format": "@@ -204,3 +204,3 @@\n     ret: int = 0\n-    poly: int\n+    poly: Callable[[int], int]\n     x_val: int\n",
        "source_code_with_indent": "    ret: int = 0\n    poly: int\n    x_val: int\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ret: int = 0\n    poly: Callable[[int], int]\n    x_val: int\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "bcfca67faa120cc4cb42775af302d6d52d3a3f1e",
    "filename": "project_euler/problem_188/sol1.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/project_euler/problem_188/sol1.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "project_euler/problem_188/sol1.py:39:27 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `_modexpt` but got `float`.",
    "message": " Expected `int` for 2nd positional only parameter to call `_modexpt` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 39,
    "warning_line": "        x = _modexpt(base, exponent / 2, modulo_value) % modulo_value",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if exponent % 2 == 0:\n        x = _modexpt(base, exponent / 2, modulo_value) % modulo_value\n        return (x * x) % modulo_value\n",
        "source_code_len": 134,
        "target_code": "    if exponent % 2 == 0:\n        x = _modexpt(base, exponent // 2, modulo_value) % modulo_value\n        return (x * x) % modulo_value\n",
        "target_code_len": 135,
        "diff_format": "@@ -38,3 +38,3 @@\n     if exponent % 2 == 0:\n-        x = _modexpt(base, exponent / 2, modulo_value) % modulo_value\n+        x = _modexpt(base, exponent // 2, modulo_value) % modulo_value\n         return (x * x) % modulo_value\n",
        "source_code_with_indent": "    <DED>if exponent % 2 == 0:\n        <IND>x = _modexpt(base, exponent / 2, modulo_value) % modulo_value\n        return (x * x) % modulo_value\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if exponent % 2 == 0:\n        <IND>x = _modexpt(base, exponent // 2, modulo_value) % modulo_value\n        return (x * x) % modulo_value\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]