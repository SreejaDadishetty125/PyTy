[
  {
    "project": "joerick/pyinstrument",
    "commit": "12b65ffb01e65c5fbcfb08abee26da56c745c919",
    "filename": "pyinstrument/frame.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/joerick-pyinstrument/pyinstrument/frame.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyinstrument/frame.py:12:23 Incompatible variable type [9]: parent is declared to have type `Frame` but is used as type `None`.",
    "message": " parent is declared to have type `Frame` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 12,
    "warning_line": "    def __init__(self, parent: Frame = None, self_time: float = 0):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        self.parent = parent\n",
        "source_code_len": 98,
        "target_code": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        self.parent = parent\n",
        "target_code_len": 105,
        "diff_format": "@@ -11,3 +13,3 @@\n \n-    def __init__(self, parent: Frame = None, self_time: float = 0):\n+    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n         self.parent = parent\n",
        "source_code_with_indent": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "joerick/pyinstrument",
    "commit": "12b65ffb01e65c5fbcfb08abee26da56c745c919",
    "filename": "pyinstrument/frame.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/joerick-pyinstrument/pyinstrument/frame.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyinstrument/frame.py:125:8 Incompatible variable type [9]: parent is declared to have type `Frame` but is used as type `None`.",
    "message": " parent is declared to have type `Frame` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 125,
    "warning_line": "        parent: Frame = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        self.parent = parent\n",
        "source_code_len": 98,
        "target_code": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        self.parent = parent\n",
        "target_code_len": 105,
        "diff_format": "@@ -11,3 +13,3 @@\n \n-    def __init__(self, parent: Frame = None, self_time: float = 0):\n+    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n         self.parent = parent\n",
        "source_code_with_indent": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        identifier: str = \"\",\n        parent: Frame = None,\n        children: Sequence[BaseFrame] = None,\n        self_time: float = 0,\n",
        "source_code_len": 136,
        "target_code": "        identifier: str = \"\",\n        parent: Frame | None = None,\n        children: Sequence[BaseFrame] | None = None,\n        self_time: float = 0,\n",
        "target_code_len": 150,
        "diff_format": "@@ -124,4 +131,4 @@\n         identifier: str = \"\",\n-        parent: Frame = None,\n-        children: Sequence[BaseFrame] = None,\n+        parent: Frame | None = None,\n+        children: Sequence[BaseFrame] | None = None,\n         self_time: float = 0,\n",
        "source_code_with_indent": "        identifier: str = \"\",\n        parent: Frame = None,\n        children: Sequence[BaseFrame] = None,\n        self_time: float = 0,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        identifier: str = \"\",\n        parent: Frame | None = None,\n        children: Sequence[BaseFrame] | None = None,\n        self_time: float = 0,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "joerick/pyinstrument",
    "commit": "12b65ffb01e65c5fbcfb08abee26da56c745c919",
    "filename": "pyinstrument/frame.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/joerick-pyinstrument/pyinstrument/frame.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyinstrument/frame.py:126:8 Incompatible variable type [9]: children is declared to have type `Sequence[BaseFrame]` but is used as type `None`.",
    "message": " children is declared to have type `Sequence[BaseFrame]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 126,
    "warning_line": "        children: Sequence[BaseFrame] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        self.parent = parent\n",
        "source_code_len": 98,
        "target_code": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        self.parent = parent\n",
        "target_code_len": 105,
        "diff_format": "@@ -11,3 +13,3 @@\n \n-    def __init__(self, parent: Frame = None, self_time: float = 0):\n+    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n         self.parent = parent\n",
        "source_code_with_indent": "\n    def __init__(self, parent: Frame = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, parent: Frame | None = None, self_time: float = 0):\n        <IND>self.parent = parent\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        identifier: str = \"\",\n        parent: Frame = None,\n        children: Sequence[BaseFrame] = None,\n        self_time: float = 0,\n",
        "source_code_len": 136,
        "target_code": "        identifier: str = \"\",\n        parent: Frame | None = None,\n        children: Sequence[BaseFrame] | None = None,\n        self_time: float = 0,\n",
        "target_code_len": 150,
        "diff_format": "@@ -124,4 +131,4 @@\n         identifier: str = \"\",\n-        parent: Frame = None,\n-        children: Sequence[BaseFrame] = None,\n+        parent: Frame | None = None,\n+        children: Sequence[BaseFrame] | None = None,\n         self_time: float = 0,\n",
        "source_code_with_indent": "        identifier: str = \"\",\n        parent: Frame = None,\n        children: Sequence[BaseFrame] = None,\n        self_time: float = 0,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        identifier: str = \"\",\n        parent: Frame | None = None,\n        children: Sequence[BaseFrame] | None = None,\n        self_time: float = 0,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "joerick/pyinstrument",
    "commit": "12b65ffb01e65c5fbcfb08abee26da56c745c919",
    "filename": "pyinstrument/frame.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/joerick-pyinstrument/pyinstrument/frame.py",
    "file_hunks_size": 26,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyinstrument/frame.py:141:42 Incompatible variable type [9]: after is declared to have type `BaseFrame` but is used as type `None`.",
    "message": " after is declared to have type `BaseFrame` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 141,
    "warning_line": "    def add_child(self, frame: BaseFrame, after: BaseFrame = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def add_child(self, frame: BaseFrame, after: BaseFrame = None):\n        \"\"\"\n",
        "source_code_len": 81,
        "target_code": "\n    def add_child(self, frame: BaseFrame, after: BaseFrame | None = None):\n        \"\"\"\n",
        "target_code_len": 88,
        "diff_format": "@@ -140,3 +147,3 @@\n \n-    def add_child(self, frame: BaseFrame, after: BaseFrame = None):\n+    def add_child(self, frame: BaseFrame, after: BaseFrame | None = None):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED><DED>def add_child(self, frame: BaseFrame, after: BaseFrame = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED><DED>def add_child(self, frame: BaseFrame, after: BaseFrame | None = None):\n        <IND>"
      }
    ]
  },
  {
    "project": "joerick/pyinstrument",
    "commit": "12b65ffb01e65c5fbcfb08abee26da56c745c919",
    "filename": "pyinstrument/profiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/joerick-pyinstrument/pyinstrument/profiler.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyinstrument/profiler.py:101:20 Incompatible variable type [9]: caller_frame is declared to have type `types.FrameType` but is used as type `None`.",
    "message": " caller_frame is declared to have type `types.FrameType` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 101,
    "warning_line": "    def start(self, caller_frame: types.FrameType = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def start(self, caller_frame: types.FrameType = None):\n        \"\"\"\n",
        "source_code_len": 72,
        "target_code": "\n    def start(self, caller_frame: types.FrameType | None = None):\n        \"\"\"\n",
        "target_code_len": 79,
        "diff_format": "@@ -100,3 +100,3 @@\n \n-    def start(self, caller_frame: types.FrameType = None):\n+    def start(self, caller_frame: types.FrameType | None = None):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def start(self, caller_frame: types.FrameType = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def start(self, caller_frame: types.FrameType | None = None):\n        <IND>"
      }
    ]
  }
]