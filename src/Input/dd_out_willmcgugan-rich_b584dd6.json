[
  {
    "project": "willmcgugan/rich",
    "commit": "b584dd64db2e0264f387c204ff3b82c8bf008a5e",
    "filename": "rich/style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/style.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/style.py:108:8 Incompatible variable type [9]: link_id is declared to have type `str` but is used as type `None`.",
    "message": " link_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 108,
    "warning_line": "        link_id: str = None,"
  },
  {
    "project": "willmcgugan/rich",
    "commit": "b584dd64db2e0264f387c204ff3b82c8bf008a5e",
    "filename": "rich/style.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/style.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/style.py:409:65 Incompatible parameter type [6]: Expected `str` for 4th positional only parameter to call `Style.__init__` but got `Optional[bool]`.",
    "message": " Expected `str` for 4th positional only parameter to call `Style.__init__` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 409,
    "warning_line": "        style = Style(color=color, bgcolor=bgcolor, link=link, **attributes)"
  },
  {
    "project": "willmcgugan/rich",
    "commit": "b584dd64db2e0264f387c204ff3b82c8bf008a5e",
    "filename": "rich/text.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/text.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/text.py:366:46 Incompatible parameter type [6]: Expected `Union[Style, str]` for 3rd positional only parameter to call `Span.__init__` but got `Union[None, Style, str]`.",
    "message": " Expected `Union[Style, str]` for 3rd positional only parameter to call `Span.__init__` but got `Union[None, Style, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 366,
    "warning_line": "                append_span(_Span(start, end, match_style))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                match_style = style(plain[start:end]) if callable(style) else style\n                append_span(_Span(start, end, match_style))\n\n",
        "source_code_len": 145,
        "target_code": "                match_style = style(plain[start:end]) if callable(style) else style\n                if match_style is not None:\n                    append_span(_Span(start, end, match_style))\n\n",
        "target_code_len": 193,
        "diff_format": "@@ -365,3 +365,4 @@\n                 match_style = style(plain[start:end]) if callable(style) else style\n-                append_span(_Span(start, end, match_style))\n+                if match_style is not None:\n+                    append_span(_Span(start, end, match_style))\n \n",
        "source_code_with_indent": "                match_style = style(plain[start:end]) if callable(style) else style\n                append_span(_Span(start, end, match_style))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                match_style = style(plain[start:end]) if callable(style) else style\n                if match_style is not None:\n                    <IND>append_span(_Span(start, end, match_style))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]