[
  {
    "project": "aio-libs/aiodocker",
    "commit": "315af297e7303e4f63d636356c2e86ac08ca5d71",
    "filename": "aiodocker/configs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/configs.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/configs.py:36:8 Incompatible variable type [9]: labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 36,
    "warning_line": "        labels: List = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_len": 68,
        "target_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -2,3 +2,3 @@\n from base64 import b64encode\n-from typing import Any, List, Mapping\n+from typing import Any, List, Mapping, Optional\n \n",
        "source_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        b64: bool = False,\n        labels: List = None,\n        templating: Mapping = None,\n",
        "source_code_len": 92,
        "target_code": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        templating: Mapping = None,\n",
        "target_code_len": 115,
        "diff_format": "@@ -35,3 +35,3 @@\n         b64: bool = False,\n-        labels: List = None,\n+        labels: Optional[Mapping[str, str]] = None,\n         templating: Mapping = None,\n",
        "source_code_with_indent": "        b64: bool = False,\n        labels: List = None,\n        templating: Mapping = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        templating: Mapping = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aio-libs/aiodocker",
    "commit": "315af297e7303e4f63d636356c2e86ac08ca5d71",
    "filename": "aiodocker/configs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/configs.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/configs.py:111:8 Incompatible variable type [9]: labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 111,
    "warning_line": "        labels: List = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_len": 68,
        "target_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -2,3 +2,3 @@\n from base64 import b64encode\n-from typing import Any, List, Mapping\n+from typing import Any, List, Mapping, Optional\n \n",
        "source_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        b64: bool = False,\n        labels: List = None,\n        templating: Mapping = None,\n",
        "source_code_len": 92,
        "target_code": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        templating: Mapping = None,\n",
        "target_code_len": 115,
        "diff_format": "@@ -110,3 +110,3 @@\n         b64: bool = False,\n-        labels: List = None,\n+        labels: Optional[Mapping[str, str]] = None,\n         templating: Mapping = None,\n",
        "source_code_with_indent": "        b64: bool = False,\n        labels: List = None,\n        templating: Mapping = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        templating: Mapping = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aio-libs/aiodocker",
    "commit": "315af297e7303e4f63d636356c2e86ac08ca5d71",
    "filename": "aiodocker/secrets.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/secrets.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/secrets.py:36:8 Incompatible variable type [9]: labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 36,
    "warning_line": "        labels: List = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_len": 68,
        "target_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -2,3 +2,3 @@\n from base64 import b64encode\n-from typing import Any, List, Mapping\n+from typing import Any, List, Mapping, Optional\n \n",
        "source_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        b64: bool = False,\n        labels: List = None,\n        driver: Mapping = None,\n",
        "source_code_len": 88,
        "target_code": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        driver: Mapping = None,\n",
        "target_code_len": 111,
        "diff_format": "@@ -35,3 +35,3 @@\n         b64: bool = False,\n-        labels: List = None,\n+        labels: Optional[Mapping[str, str]] = None,\n         driver: Mapping = None,\n",
        "source_code_with_indent": "        b64: bool = False,\n        labels: List = None,\n        driver: Mapping = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        driver: Mapping = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aio-libs/aiodocker",
    "commit": "315af297e7303e4f63d636356c2e86ac08ca5d71",
    "filename": "aiodocker/secrets.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/secrets.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/secrets.py:114:8 Incompatible variable type [9]: labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 114,
    "warning_line": "        labels: List = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_len": 68,
        "target_code": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -2,3 +2,3 @@\n from base64 import b64encode\n-from typing import Any, List, Mapping\n+from typing import Any, List, Mapping, Optional\n \n",
        "source_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from base64 import b64encode\nfrom typing import Any, List, Mapping, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        b64: bool = False,\n        labels: List = None,\n        driver: Mapping = None,\n",
        "source_code_len": 88,
        "target_code": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        driver: Mapping = None,\n",
        "target_code_len": 111,
        "diff_format": "@@ -113,3 +113,3 @@\n         b64: bool = False,\n-        labels: List = None,\n+        labels: Optional[Mapping[str, str]] = None,\n         driver: Mapping = None,\n",
        "source_code_with_indent": "        b64: bool = False,\n        labels: List = None,\n        driver: Mapping = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        b64: bool = False,\n        labels: Optional[Mapping[str, str]] = None,\n        driver: Mapping = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "aio-libs/aiodocker",
    "commit": "315af297e7303e4f63d636356c2e86ac08ca5d71",
    "filename": "aiodocker/services.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aiodocker/aiodocker/services.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiodocker/services.py:44:8 Incompatible variable type [9]: labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 44,
    "warning_line": "        labels: List = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        name: str = None,\n        labels: List = None,\n        mode: Mapping = None,\n",
        "source_code_len": 85,
        "target_code": "        name: str = None,\n        labels: Optional[Mapping[str, str]] = None,\n        mode: Mapping = None,\n",
        "target_code_len": 108,
        "diff_format": "@@ -43,3 +43,3 @@\n         name: str = None,\n-        labels: List = None,\n+        labels: Optional[Mapping[str, str]] = None,\n         mode: Mapping = None,\n",
        "source_code_with_indent": "        name: str = None,\n        labels: List = None,\n        mode: Mapping = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        name: str = None,\n        labels: Optional[Mapping[str, str]] = None,\n        mode: Mapping = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]