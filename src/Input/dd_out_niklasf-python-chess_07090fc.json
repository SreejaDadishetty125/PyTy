[
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:282:8 Incompatible return type [7]: Expected `Optional[PovScore]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[PovScore]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 282,
    "warning_line": "        return self.get(\"score\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:286:8 Incompatible return type [7]: Expected `Optional[List[chess.Move]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[List[chess.Move]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 286,
    "warning_line": "        return self.get(\"pv\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:290:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 290,
    "warning_line": "        return self.get(\"depth\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:294:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 294,
    "warning_line": "        return self.get(\"seldepth\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:298:8 Incompatible return type [7]: Expected `Optional[float]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[float]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 298,
    "warning_line": "        return self.get(\"time\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:302:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 302,
    "warning_line": "        return self.get(\"nodes\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:306:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 306,
    "warning_line": "        return self.get(\"nps\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:310:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 310,
    "warning_line": "        return self.get(\"tbhits\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:314:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 314,
    "warning_line": "        return self.get(\"multipv\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:318:8 Incompatible return type [7]: Expected `Optional[chess.Move]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[chess.Move]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 318,
    "warning_line": "        return self.get(\"currmove\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:322:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 322,
    "warning_line": "        return self.get(\"currmovenumber\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:326:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 326,
    "warning_line": "        return self.get(\"hashfull\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:330:8 Incompatible return type [7]: Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[int]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 330,
    "warning_line": "        return self.get(\"cpuload\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:334:8 Incompatible return type [7]: Expected `Optional[Dict[chess.Move, List[chess.Move]]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[Dict[chess.Move, List[chess.Move]]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 334,
    "warning_line": "        return self.get(\"refutation\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:338:8 Incompatible return type [7]: Expected `Optional[Dict[int, List[chess.Move]]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[Dict[int, List[chess.Move]]]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 338,
    "warning_line": "        return self.get(\"currline\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:342:8 Incompatible return type [7]: Expected `Optional[float]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[float]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 342,
    "warning_line": "        return self.get(\"ebf\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:346:8 Incompatible return type [7]: Expected `Optional[str]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "message": " Expected `Optional[str]` but got `Union[None, Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 346,
    "warning_line": "        return self.get(\"string\")"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:740:38 Incompatible parameter type [6]: Expected `asyncio.futures.Future[None]` for 1st positional only parameter to anonymous call but got `None`.",
    "message": " Expected `asyncio.futures.Future[None]` for 1st positional only parameter to anonymous call but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 740,
    "warning_line": "            previous_command_finished(None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        def previous_command_finished(_: \"asyncio.Future[None]\") -> None:\n            if self.command is not None:\n",
        "source_code_len": 116,
        "target_code": "\n        def previous_command_finished(_: \"Optional[asyncio.Future[None]]\") -> None:\n            if self.command is not None:\n",
        "target_code_len": 126,
        "diff_format": "@@ -727,3 +730,3 @@\n \n-        def previous_command_finished(_: \"asyncio.Future[None]\") -> None:\n+        def previous_command_finished(_: \"Optional[asyncio.Future[None]]\") -> None:\n             if self.command is not None:\n",
        "source_code_with_indent": "\n        def previous_command_finished(_: \"asyncio.Future[None]\") -> None:\n            <IND>if self.command is not None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        def previous_command_finished(_: \"Optional[asyncio.Future[None]]\") -> None:\n            <IND>if self.command is not None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:1408:35 Incompatible parameter type [6]: Expected `Union[Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `chess.Move`.",
    "message": " Expected `Union[Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `chess.Move`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1408,
    "warning_line": "                info[\"currmove\"] = chess.Move.from_uci(tokens.pop(0))"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:1447:30 Incompatible parameter type [6]: Expected `Union[Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `Tuple[int, int, int]`.",
    "message": " Expected `Union[Dict[chess.Move, List[chess.Move]], Dict[int, List[chess.Move]], List[chess.Move], PovScore, float, int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `Tuple[int, int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1447,
    "warning_line": "                info[\"wdl\"] = int(tokens.pop(0)), int(tokens.pop(0)), int(tokens.pop(0))"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:1516:67 Incompatible parameter type [6]: Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `None`.",
    "message": " Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1516,
    "warning_line": "            \"random\": Option(\"random\", \"check\", False, None, None, None),"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:1517:71 Incompatible parameter type [6]: Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `None`.",
    "message": " Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1517,
    "warning_line": "            \"computer\": Option(\"computer\", \"check\", False, None, None, None),"
  },
  {
    "project": "niklasf/python-chess",
    "commit": "07090fc016c1b7b6cd86d71e2622534ce950765f",
    "filename": "chess/engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/niklasf-python-chess/chess/engine.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chess/engine.py:1998:49 Incompatible parameter type [6]: Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `Optional[List[typing.Any]]`.",
    "message": " Expected `List[str]` for 6th positional only parameter to call `Option.__init__` but got `Optional[List[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1998,
    "warning_line": "    return Option(name, type, default, min, max, var)"
  }
]