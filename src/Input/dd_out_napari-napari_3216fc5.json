[
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/components/experimental/chunk/_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/components/experimental/chunk/_loader.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/components/experimental/chunk/_loader.py:176:12 Incompatible return type [7]: Expected `Optional[ChunkRequest]` but got `typing.Tuple[ChunkRequest, None]`.",
    "message": " Expected `Optional[ChunkRequest]` but got `typing.Tuple[ChunkRequest, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 176,
    "warning_line": "            return request, None"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/components/experimental/chunk/_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/components/experimental/chunk/_loader.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/components/experimental/chunk/_loader.py:183:12 Incompatible return type [7]: Expected `Optional[ChunkRequest]` but got `typing.Tuple[ChunkRequest, None]`.",
    "message": " Expected `Optional[ChunkRequest]` but got `typing.Tuple[ChunkRequest, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 183,
    "warning_line": "            return request, None"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/components/experimental/chunk/_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/components/experimental/chunk/_loader.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/components/experimental/chunk/_loader.py:195:8 Incompatible return type [7]: Expected `Optional[ChunkRequest]` but got `typing.Tuple[None, None]`.",
    "message": " Expected `Optional[ChunkRequest]` but got `typing.Tuple[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 195,
    "warning_line": "        return None, self._submit_async(request)"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/components/experimental/chunk/_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/components/experimental/chunk/_loader.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/components/experimental/chunk/_loader.py:280:8 Incompatible return type [7]: Expected `None` but got `concurrent.futures._base.Future[ChunkRequest]`.",
    "message": " Expected `None` but got `concurrent.futures._base.Future[ChunkRequest]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 280,
    "warning_line": "        return future"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/layers/image/experimental/_octree_chunk_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/layers/image/experimental/_octree_loader.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/layers/image/experimental/_octree_chunk_loader.py:359:12 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 359,
    "warning_line": "            return True"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/layers/image/experimental/_octree_chunk_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/layers/image/experimental/_octree_loader.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/layers/image/experimental/_octree_chunk_loader.py:371:8 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 371,
    "warning_line": "        return False"
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/layers/image/experimental/_octree_chunk_loader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/layers/image/experimental/_octree_loader.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/layers/image/experimental/_octree_chunk_loader.py:425:8 Incompatible variable type [9]: chunk is declared to have type `OctreeChunk` but is used as type `None`.",
    "message": " chunk is declared to have type `OctreeChunk` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 425,
    "warning_line": "        chunk: OctreeChunk = self._octree.get_chunk_at_location("
  },
  {
    "project": "napari/napari",
    "commit": "3216fc5b36b0ef90a45c50376811833337d317d3",
    "filename": "napari/layers/image/experimental/octree_chunk.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/layers/image/experimental/octree_chunk.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/layers/image/experimental/octree_chunk.py:175:8 Incompatible return type [7]: Expected `OctreeChunkKey` but got `typing.Tuple[typing.Any, typing.Any, int]`.",
    "message": " Expected `OctreeChunkKey` but got `typing.Tuple[typing.Any, typing.Any, int]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 175,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self.loading = False\n\n    @property\n    def key(self) -> OctreeChunkKey:\n        \"\"\"The unique key for this chunk.\n\n        TODO_OCTREE: Switch to __hash__? Tried __hash__ a while ago and ran\n        into problems, but maybe try again.\n        \"\"\"\n        return (\n            self.geom.pos[0],\n            self.geom.pos[1],\n            self.location.level_index,\n        )\n\n",
        "source_code_len": 383,
        "target_code": "        self.loading = False\n\n",
        "target_code_len": 30,
        "diff_format": "@@ -166,15 +146,2 @@\n         self.loading = False\n-\n-    @property\n-    def key(self) -> OctreeChunkKey:\n-        \"\"\"The unique key for this chunk.\n-\n-        TODO_OCTREE: Switch to __hash__? Tried __hash__ a while ago and ran\n-        into problems, but maybe try again.\n-        \"\"\"\n-        return (\n-            self.geom.pos[0],\n-            self.geom.pos[1],\n-            self.location.level_index,\n-        )\n \n",
        "source_code_with_indent": "        self.loading = False\n\n    <DED>@property\n    def key(self) -> OctreeChunkKey:\n        <IND>\"\"\"The unique key for this chunk.\n\n        TODO_OCTREE: Switch to __hash__? Tried __hash__ a while ago and ran\n        into problems, but maybe try again.\n        \"\"\"\n        return (\n            self.geom.pos[0],\n            self.geom.pos[1],\n            self.location.level_index,\n        )\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.loading = False\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]