[
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "modelstore/clouds/aws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/modelstore/storage/aws.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "modelstore/clouds/aws.py:40:41 Incompatible variable type [9]: region is declared to have type `str` but is used as type `None`.",
    "message": " region is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "    def __init__(self, bucket_name: str, region: str = None):"
  },
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "modelstore/clouds/aws.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/modelstore/storage/aws.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "modelstore/clouds/aws.py:41:25 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 41,
    "warning_line": "        super().__init__([\"boto3\"])"
  },
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "modelstore/clouds/file_system.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/modelstore/storage/local.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "modelstore/clouds/file_system.py:33:25 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[Variable[_T]]`.",
    "message": " Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[Variable[_T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 33,
    "warning_line": "        super().__init__([])"
  },
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "modelstore/clouds/gcloud.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/modelstore/storage/gcloud.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "modelstore/clouds/gcloud.py:48:25 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `CloudStorage.__init__` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 48,
    "warning_line": "        super().__init__([\"google.cloud.storage\"])"
  },
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "modelstore/clouds/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/modelstore/storage/blob_storage.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "modelstore/clouds/storage.py:93:53 Incompatible variable type [9]: model_id is declared to have type `str` but is used as type `None`.",
    "message": " model_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 93,
    "warning_line": "    def download(self, local_path: str, domain: str, model_id: str = None):"
  },
  {
    "project": "operatorai/modelstore",
    "commit": "d98e647ddaa3227bed8d4b5d4c5c3453ec1dabbb",
    "filename": "tests/models/test_modelmanager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/operatorai-modelstore/tests/models/test_modelmanager.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/models/test_modelmanager.py:62:8 Incompatible return type [7]: Expected `typing.Dict[typing.Any, typing.Any]` but got `None`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 62,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _get_params(self, **kwargs) -> dict:\n        return None\n\n",
        "source_code_len": 66,
        "target_code": "    def _get_params(self, **kwargs) -> dict:\n        return {}\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -61,3 +61,3 @@\n     def _get_params(self, **kwargs) -> dict:\n-        return None\n+        return {}\n \n",
        "source_code_with_indent": "    <DED>def _get_params(self, **kwargs) -> dict:\n        <IND>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _get_params(self, **kwargs) -> dict:\n        <IND>return {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]