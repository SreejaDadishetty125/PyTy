[
  {
    "project": "TheAlgorithms/Python",
    "commit": "a53fcf221bc1d361b26c055aa12be38c4e8b2022",
    "filename": "hashes/adler32.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/hashes/adler32.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hashes/adler32.py:29:4 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 29,
    "warning_line": "    return (b << 16) | a",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef adler32(plain_text: str) -> str:\n    \"\"\"\n    Function implements adler-32 hash.\n    Itterates and evaluates new value for each character\n\n",
        "source_code_len": 143,
        "target_code": "\ndef adler32(plain_text: str) -> int:\n    \"\"\"\n    Function implements adler-32 hash.\n    Iterates and evaluates a new value for each character\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -11,6 +11,6 @@\n \n-def adler32(plain_text: str) -> str:\n+def adler32(plain_text: str) -> int:\n     \"\"\"\n     Function implements adler-32 hash.\n-    Itterates and evaluates new value for each character\n+    Iterates and evaluates a new value for each character\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef adler32(plain_text: str) -> str:\n    <IND>",
        "target_code_with_indent": "\ndef adler32(plain_text: str) -> int:\n    <IND>"
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "a53fcf221bc1d361b26c055aa12be38c4e8b2022",
    "filename": "hashes/sdbm.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/hashes/sdbm.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hashes/sdbm.py:37:4 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 37,
    "warning_line": "    return hash",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef sdbm(plain_text: str) -> str:\n    \"\"\"\n",
        "source_code_len": 43,
        "target_code": "\ndef sdbm(plain_text: str) -> int:\n    \"\"\"\n",
        "target_code_len": 43,
        "diff_format": "@@ -21,3 +21,3 @@\n \n-def sdbm(plain_text: str) -> str:\n+def sdbm(plain_text: str) -> int:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef sdbm(plain_text: str) -> str:\n    <IND>",
        "target_code_with_indent": "\ndef sdbm(plain_text: str) -> int:\n    <IND>"
      }
    ]
  }
]