[
  {
    "project": "kinnala/scikit-fem",
    "commit": "961610a6dc10fd23cb777540eeb0cc2cda555ca3",
    "filename": "skfem/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kinnala-scikit-fem/skfem/utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "skfem/utils.py:299:12 Incompatible variable type [9]: basis_from is declared to have type `skfem.assembly.basis.basis.Basis` but is used as type `None`.",
    "message": " basis_from is declared to have type `skfem.assembly.basis.basis.Basis` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 299,
    "warning_line": "            basis_from: Basis = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_len": 198,
        "target_code": "def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_len": 238,
        "diff_format": "@@ -298,6 +298,6 @@\n def project(fun,\n-            basis_from: Basis = None,\n-            basis_to: Basis = None,\n-            diff: int = None,\n-            I: ndarray = None,\n+            basis_from: Optional[Basis] = None,\n+            basis_to: Optional[Basis] = None,\n+            diff: Optional[int] = None,\n+            I: Optional[ndarray] = None,\n             expand: bool = False) -> ndarray:\n",
        "source_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "kinnala/scikit-fem",
    "commit": "961610a6dc10fd23cb777540eeb0cc2cda555ca3",
    "filename": "skfem/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kinnala-scikit-fem/skfem/utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "skfem/utils.py:300:12 Incompatible variable type [9]: basis_to is declared to have type `skfem.assembly.basis.basis.Basis` but is used as type `None`.",
    "message": " basis_to is declared to have type `skfem.assembly.basis.basis.Basis` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 300,
    "warning_line": "            basis_to: Basis = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_len": 198,
        "target_code": "def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_len": 238,
        "diff_format": "@@ -298,6 +298,6 @@\n def project(fun,\n-            basis_from: Basis = None,\n-            basis_to: Basis = None,\n-            diff: int = None,\n-            I: ndarray = None,\n+            basis_from: Optional[Basis] = None,\n+            basis_to: Optional[Basis] = None,\n+            diff: Optional[int] = None,\n+            I: Optional[ndarray] = None,\n             expand: bool = False) -> ndarray:\n",
        "source_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "kinnala/scikit-fem",
    "commit": "961610a6dc10fd23cb777540eeb0cc2cda555ca3",
    "filename": "skfem/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kinnala-scikit-fem/skfem/utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "skfem/utils.py:301:12 Incompatible variable type [9]: diff is declared to have type `int` but is used as type `None`.",
    "message": " diff is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 301,
    "warning_line": "            diff: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_len": 198,
        "target_code": "def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_len": 238,
        "diff_format": "@@ -298,6 +298,6 @@\n def project(fun,\n-            basis_from: Basis = None,\n-            basis_to: Basis = None,\n-            diff: int = None,\n-            I: ndarray = None,\n+            basis_from: Optional[Basis] = None,\n+            basis_to: Optional[Basis] = None,\n+            diff: Optional[int] = None,\n+            I: Optional[ndarray] = None,\n             expand: bool = False) -> ndarray:\n",
        "source_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Basis = None,\n            basis_to: Basis = None,\n            diff: int = None,\n            I: ndarray = None,\n            expand: bool = False) -> ndarray:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def project(fun,\n            basis_from: Optional[Basis] = None,\n            basis_to: Optional[Basis] = None,\n            diff: Optional[int] = None,\n            I: Optional[ndarray] = None,\n            expand: bool = False) -> ndarray:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]