[
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/compress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/compress.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/compress.py:187:12 Incompatible attribute type [8]: Attribute `mtime` declared in class `tarfile.TarInfo` has type `int` but is used as type `Optional[int]`.",
    "message": " Attribute `mtime` declared in class `tarfile.TarInfo` has type `int` but is used as type `Optional[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 187,
    "warning_line": "            tar_info.mtime = mtime"
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/ftpfs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/ftpfs.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/ftpfs.py:85:42 Incompatible parameter type [6]: Expected `str` for 1st parameter `path` to call `errors.ResourceError.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 1st parameter `path` to call `errors.ResourceError.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 85,
    "warning_line": "            raise errors.ResourceNotFound(path=path)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from ftplib import error_temp\n\n",
        "source_code_len": 31,
        "target_code": "from ftplib import error_temp\nfrom typing import cast\n\n",
        "target_code_len": 55,
        "diff_format": "@@ -18,2 +18,3 @@\n from ftplib import error_temp\n+from typing import cast\n \n",
        "source_code_with_indent": "from ftplib import error_temp\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from ftplib import error_temp\nfrom typing import cast\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif code in ('501', '550'):\n            raise errors.ResourceNotFound(path=path)\n        raise errors.PermissionDenied(\n",
        "source_code_len": 129,
        "target_code": "        elif code in ('501', '550'):\n            raise errors.ResourceNotFound(path=cast(str, path))\n        raise errors.PermissionDenied(\n",
        "target_code_len": 140,
        "diff_format": "@@ -84,3 +85,3 @@\n         elif code in ('501', '550'):\n-            raise errors.ResourceNotFound(path=path)\n+            raise errors.ResourceNotFound(path=cast(str, path))\n         raise errors.PermissionDenied(\n",
        "source_code_with_indent": "        <DED>elif code in ('501', '550'):\n            <IND>raise errors.ResourceNotFound(path=path)\n        <DED>raise errors.PermissionDenied(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif code in ('501', '550'):\n            <IND>raise errors.ResourceNotFound(path=cast(str, path))\n        <DED>raise errors.PermissionDenied(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/info.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/info.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/info.py:148:15 Unsupported operand [58]: `in` is not supported for right operand type `Optional[typing.Tuple[]]`.",
    "message": " `in` is not supported for right operand type `Optional[typing.Tuple[]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 148,
    "warning_line": "        return key in _writeable"
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/info.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/info.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/info.py:190:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 190,
    "warning_line": "        return self.get('basic', 'name')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import typing\nfrom copy import deepcopy\n",
        "source_code_len": 40,
        "target_code": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_len": 64,
        "diff_format": "@@ -8,2 +8,3 @@\n import typing\n+from typing import cast\n from copy import deepcopy\n",
        "source_code_with_indent": "import typing\nfrom copy import deepcopy\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        return self.get('basic', 'name')\n\n",
        "source_code_len": 54,
        "target_code": "        \"\"\"\n        return cast(Text, self.get('basic', 'name'))\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -189,3 +184,3 @@\n         \"\"\"\n-        return self.get('basic', 'name')\n+        return cast(Text, self.get('basic', 'name'))\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        return self.get('basic', 'name')\n\n",
        "target_code_with_indent": "\n        return cast(Text, self.get('basic', 'name'))\n\n"
      }
    ]
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/info.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/info.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/info.py:240:12 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 240,
    "warning_line": "            return name"
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/info.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/info.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/info.py:248:8 Incompatible return type [7]: Expected `bool` but got `None`.",
    "message": " Expected `bool` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 248,
    "warning_line": "        return self.get('basic', 'is_dir')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import typing\nfrom copy import deepcopy\n",
        "source_code_len": 40,
        "target_code": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_len": 64,
        "diff_format": "@@ -8,2 +8,3 @@\n import typing\n+from typing import cast\n from copy import deepcopy\n",
        "source_code_with_indent": "import typing\nfrom copy import deepcopy\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        return self.get('basic', 'is_dir')\n\n",
        "source_code_len": 56,
        "target_code": "        \"\"\"\n        return cast(bool, self.get('basic', 'is_dir'))\n\n",
        "target_code_len": 68,
        "diff_format": "@@ -247,3 +242,3 @@\n         \"\"\"\n-        return self.get('basic', 'is_dir')\n+        return cast(bool, self.get('basic', 'is_dir'))\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        return self.get('basic', 'is_dir')\n\n",
        "target_code_with_indent": "\n        return cast(bool, self.get('basic', 'is_dir'))\n\n"
      }
    ]
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/info.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/info.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/info.py:384:8 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 384,
    "warning_line": "        return self.get('details', 'size')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import typing\nfrom copy import deepcopy\n",
        "source_code_len": 40,
        "target_code": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_len": 64,
        "diff_format": "@@ -8,2 +8,3 @@\n import typing\n+from typing import cast\n from copy import deepcopy\n",
        "source_code_with_indent": "import typing\nfrom copy import deepcopy\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import typing\nfrom typing import cast\nfrom copy import deepcopy\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._require_namespace('details')\n        return self.get('details', 'size')\n\n",
        "source_code_len": 87,
        "target_code": "        self._require_namespace('details')\n        return cast(int, self.get('details', 'size'))\n\n",
        "target_code_len": 98,
        "diff_format": "@@ -383,3 +378,3 @@\n         self._require_namespace('details')\n-        return self.get('details', 'size')\n+        return cast(int, self.get('details', 'size'))\n \n",
        "source_code_with_indent": "        self._require_namespace('details')\n        return self.get('details', 'size')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._require_namespace('details')\n        return cast(int, self.get('details', 'size'))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/move.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/move.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/move.py:18:28 Incompatible variable type [9]: workers is declared to have type `Union[FS, str]` but is used as type `int`.",
    "message": " workers is declared to have type `Union[FS, str]` but is used as type `int`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 18,
    "warning_line": "def move_fs(src_fs, dst_fs, workers=0):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS]) -> None\n    \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "source_code_len": 159,
        "target_code": "def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n    \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "target_code_len": 164,
        "diff_format": "@@ -18,3 +18,3 @@\n def move_fs(src_fs, dst_fs, workers=0):\n-    # type: (Union[Text, FS], Union[Text, FS]) -> None\n+    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n     \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS]) -> None\n    <IND>",
        "target_code_with_indent": "<DED>def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n    <IND>"
      }
    ]
  },
  {
    "project": "PyFilesystem/pyfilesystem2",
    "commit": "ed8af089c52b3100f3c07f1ca9cc73ad0160b14f",
    "filename": "fs/move.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyFilesystem-pyfilesystem2/fs/move.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fs/move.py:29:39 Incompatible parameter type [6]: Expected `int` for 5th parameter `workers` to call `move_dir` but got `Union[FS, str]`.",
    "message": " Expected `int` for 5th parameter `workers` to call `move_dir` but got `Union[FS, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 29,
    "warning_line": "    move_dir(src_fs, \"/\", dst_fs, \"/\", workers=workers)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS]) -> None\n    \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "source_code_len": 159,
        "target_code": "def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n    \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "target_code_len": 164,
        "diff_format": "@@ -18,3 +18,3 @@\n def move_fs(src_fs, dst_fs, workers=0):\n-    # type: (Union[Text, FS], Union[Text, FS]) -> None\n+    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n     \"\"\"Move the contents of a filesystem to another filesystem.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS]) -> None\n    <IND>",
        "target_code_with_indent": "<DED>def move_fs(src_fs, dst_fs, workers=0):\n    # type: (Union[Text, FS], Union[Text, FS], int) -> None\n    <IND>"
      }
    ]
  }
]