[
  {
    "project": "kubeflow/pipelines",
    "commit": "5a8298ec2eaff03191c7df2d71094b003442faec",
    "filename": "sdk/python/kfp/v2/components/experimental/component_spec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kubeflow-pipelines/sdk/python/kfp/v2/components/experimental/component_spec.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sdk/python/kfp/v2/components/experimental/component_spec.py:124:2 Incompatible attribute type [8]: Attribute `metadata` declared in class `ImporterSpec` has type `Mapping[str, typing.Any]` but is used as type `None`.",
    "message": " Attribute `metadata` declared in class `ImporterSpec` has type `Mapping[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 124,
    "warning_line": "  metadata: Mapping[str, Any] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  reimport: bool\n  metadata: Mapping[str, Any] = None\n\n",
        "source_code_len": 55,
        "target_code": "  reimport: bool\n  metadata: Optional[Mapping[str, Any]]= None\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -123,3 +123,3 @@\n   reimport: bool\n-  metadata: Mapping[str, Any] = None\n+  metadata: Optional[Mapping[str, Any]]= None\n \n",
        "source_code_with_indent": "  reimport: bool\n  metadata: Mapping[str, Any] = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  reimport: bool\n  metadata: Optional[Mapping[str, Any]]= None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "kubeflow/pipelines",
    "commit": "5a8298ec2eaff03191c7df2d71094b003442faec",
    "filename": "sdk/python/kfp/v2/components/experimental/component_spec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/kubeflow-pipelines/sdk/python/kfp/v2/components/experimental/component_spec.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sdk/python/kfp/v2/components/experimental/component_spec.py:210:6 Incompatible return type [7]: Expected `Union[ContainerSpec, DagSpec]` but got `Union[DagSpec, ImporterSpec]`.",
    "message": " Expected `Union[ContainerSpec, DagSpec]` but got `Union[DagSpec, ImporterSpec]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 210,
    "warning_line": "      return implementation",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "      implementation: Union[ContainerSpec, ImporterSpec, DagSpec],\n  ) -> Union[ContainerSpec, DagSpec]:\n    \"\"\"Validates placeholders reference existing input/output names.\n",
        "source_code_len": 174,
        "target_code": "      implementation: Union[ContainerSpec, ImporterSpec, DagSpec],\n  ) -> Union[ContainerSpec, ImporterSpec, DagSpec]:\n    \"\"\"Validates placeholders reference existing input/output names.\n",
        "target_code_len": 188,
        "diff_format": "@@ -195,3 +195,3 @@\n       implementation: Union[ContainerSpec, ImporterSpec, DagSpec],\n-  ) -> Union[ContainerSpec, DagSpec]:\n+  ) -> Union[ContainerSpec, ImporterSpec, DagSpec]:\n     \"\"\"Validates placeholders reference existing input/output names.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "      implementation: Union[ContainerSpec, ImporterSpec, DagSpec],\n  ) -> Union[ContainerSpec, DagSpec]:\n    <IND>",
        "target_code_with_indent": "      implementation: Union[ContainerSpec, ImporterSpec, DagSpec],\n  ) -> Union[ContainerSpec, ImporterSpec, DagSpec]:\n    <IND>"
      }
    ]
  }
]