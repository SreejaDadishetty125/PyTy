[
  {
    "project": "hikari-py/hikari",
    "commit": "809fb3c1481a027efbbdf620ddebb8f0bf69c8b6",
    "filename": "hikari/colors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/colors.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/colors.py:449:44 Incompatible parameter type [6]: Expected `typing.Union[typing_extensions.Literal['big'], typing_extensions.Literal['little']]` for 2nd positional only parameter to call `int.from_bytes` but got `str`.",
    "message": " Expected `typing.Union[typing_extensions.Literal['big'], typing_extensions.Literal['little']]` for 2nd positional only parameter to call `int.from_bytes` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 449,
    "warning_line": "        return Color(int.from_bytes(bytes_, byteorder, signed=signed))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "809fb3c1481a027efbbdf620ddebb8f0bf69c8b6",
    "filename": "hikari/colors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/colors.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/colors.py:535:4 Inconsistent override [14]: `hikari.colors.Color.to_bytes` overrides method defined in `int` inconsistently. Parameter of type `int` is not a supertype of the overridden parameter `typing_extensions.SupportsIndex`.",
    "message": " `hikari.colors.Color.to_bytes` overrides method defined in `int` inconsistently. Parameter of type `int` is not a supertype of the overridden parameter `typing_extensions.SupportsIndex`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 535,
    "warning_line": "    def to_bytes(self, length: int, byteorder: str, *, signed: bool = True) -> bytes:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "809fb3c1481a027efbbdf620ddebb8f0bf69c8b6",
    "filename": "hikari/colors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/colors.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/colors.py:553:42 Incompatible parameter type [6]: Expected `typing.Union[typing_extensions.Literal['big'], typing_extensions.Literal['little']]` for 2nd positional only parameter to call `int.to_bytes` but got `str`.",
    "message": " Expected `typing.Union[typing_extensions.Literal['big'], typing_extensions.Literal['little']]` for 2nd positional only parameter to call `int.to_bytes` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 553,
    "warning_line": "        return int(self).to_bytes(length, byteorder, signed=signed)"
  }
]