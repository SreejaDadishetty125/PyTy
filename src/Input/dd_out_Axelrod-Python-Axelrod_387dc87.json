[
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/moran.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/moran.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/moran.py:105:8 Incompatible attribute type [8]: Attribute `winning_strategy_name` declared in class `MoranProcess` has type `str` but is used as type `None`.",
    "message": " Attribute `winning_strategy_name` declared in class `MoranProcess` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 105,
    "warning_line": "        self.winning_strategy_name = None  # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Set\n\n",
        "source_code_len": 38,
        "target_code": "\nfrom typing import List, Tuple, Set, Optional\n\n",
        "target_code_len": 48,
        "diff_format": "@@ -14,3 +14,3 @@\n \n-from typing import List, Tuple, Set\n+from typing import List, Tuple, Set, Optional\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Set\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Set, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: str\n        self.mutation_rate = mutation_rate\n",
        "source_code_len": 144,
        "target_code": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: Optional[str]\n        self.mutation_rate = mutation_rate\n",
        "target_code_len": 154,
        "diff_format": "@@ -104,3 +104,3 @@\n         self.score_history = []  # type: List\n-        self.winning_strategy_name = None  # type: str\n+        self.winning_strategy_name = None  # type: Optional[str]\n         self.mutation_rate = mutation_rate\n",
        "source_code_with_indent": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: str\n        self.mutation_rate = mutation_rate\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: Optional[str]\n        self.mutation_rate = mutation_rate\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/moran.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/moran.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/moran.py:358:8 Incompatible attribute type [8]: Attribute `winning_strategy_name` declared in class `MoranProcess` has type `str` but is used as type `None`.",
    "message": " Attribute `winning_strategy_name` declared in class `MoranProcess` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 358,
    "warning_line": "        self.winning_strategy_name = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple, Set\n\n",
        "source_code_len": 38,
        "target_code": "\nfrom typing import List, Tuple, Set, Optional\n\n",
        "target_code_len": 48,
        "diff_format": "@@ -14,3 +14,3 @@\n \n-from typing import List, Tuple, Set\n+from typing import List, Tuple, Set, Optional\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple, Set\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Set, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: str\n        self.mutation_rate = mutation_rate\n",
        "source_code_len": 144,
        "target_code": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: Optional[str]\n        self.mutation_rate = mutation_rate\n",
        "target_code_len": 154,
        "diff_format": "@@ -104,3 +104,3 @@\n         self.score_history = []  # type: List\n-        self.winning_strategy_name = None  # type: str\n+        self.winning_strategy_name = None  # type: Optional[str]\n         self.mutation_rate = mutation_rate\n",
        "source_code_with_indent": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: str\n        self.mutation_rate = mutation_rate\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.score_history = []  # type: List\n        self.winning_strategy_name = None  # type: Optional[str]\n        self.mutation_rate = mutation_rate\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/strategies/apavlov.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/strategies/apavlov.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/strategies/apavlov.py:32:8 Incompatible attribute type [8]: Attribute `opponent_class` declared in class `APavlov2006` has type `str` but is used as type `None`.",
    "message": " Attribute `opponent_class` declared in class `APavlov2006` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 32,
    "warning_line": "        self.opponent_class = None  # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from axelrod.player import Player\n\n",
        "source_code_len": 35,
        "target_code": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -2,2 +2,4 @@\n from axelrod.player import Player\n+\n+from typing import Optional\n \n",
        "source_code_with_indent": "from axelrod.player import Player\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__()\n        self.opponent_class = None  # type: str\n\n",
        "source_code_len": 76,
        "target_code": "        super().__init__()\n        self.opponent_class = None  # type: Optional[str]\n\n",
        "target_code_len": 86,
        "diff_format": "@@ -31,3 +33,3 @@\n         super().__init__()\n-        self.opponent_class = None  # type: str\n+        self.opponent_class = None  # type: Optional[str]\n \n",
        "source_code_with_indent": "        <IND>super().__init__()\n        self.opponent_class = None  # type: str\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>super().__init__()\n        self.opponent_class = None  # type: Optional[str]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/strategies/apavlov.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/strategies/apavlov.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/strategies/apavlov.py:96:8 Incompatible attribute type [8]: Attribute `opponent_class` declared in class `APavlov2011` has type `str` but is used as type `None`.",
    "message": " Attribute `opponent_class` declared in class `APavlov2011` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 96,
    "warning_line": "        self.opponent_class = None # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from axelrod.player import Player\n\n",
        "source_code_len": 35,
        "target_code": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -2,2 +2,4 @@\n from axelrod.player import Player\n+\n+from typing import Optional\n \n",
        "source_code_with_indent": "from axelrod.player import Player\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__()\n        self.opponent_class = None # type: str\n\n",
        "source_code_len": 75,
        "target_code": "        super().__init__()\n        self.opponent_class = None  # type: Optional[str]\n\n",
        "target_code_len": 86,
        "diff_format": "@@ -95,3 +97,3 @@\n         super().__init__()\n-        self.opponent_class = None # type: str\n+        self.opponent_class = None  # type: Optional[str]\n \n",
        "source_code_with_indent": "        <IND>super().__init__()\n        self.opponent_class = None # type: str\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>super().__init__()\n        self.opponent_class = None  # type: Optional[str]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/strategies/darwin.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/strategies/darwin.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/strategies/darwin.py:51:8 Incompatible attribute type [8]: Attribute `outcomes` declared in class `Darwin` has type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " Attribute `outcomes` declared in class `Darwin` has type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 51,
    "warning_line": "        self.outcomes = None  # type: dict",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from axelrod.player import Player\n\n",
        "source_code_len": 35,
        "target_code": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_len": 64,
        "diff_format": "@@ -9,2 +9,4 @@\n from axelrod.player import Player\n+\n+from typing import Optional\n \n",
        "source_code_with_indent": "from axelrod.player import Player\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from axelrod.player import Player\n\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self) -> None:\n        self.outcomes = None  # type: dict\n        self.response = Darwin.genome[0]\n",
        "source_code_len": 116,
        "target_code": "    def __init__(self) -> None:\n        self.outcomes = None  # type: Optional[dict]\n        self.response = Darwin.genome[0]\n",
        "target_code_len": 126,
        "diff_format": "@@ -50,3 +52,3 @@\n     def __init__(self) -> None:\n-        self.outcomes = None  # type: dict\n+        self.outcomes = None  # type: Optional[dict]\n         self.response = Darwin.genome[0]\n",
        "source_code_with_indent": "    def __init__(self) -> None:\n        <IND>self.outcomes = None  # type: dict\n        self.response = Darwin.genome[0]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self) -> None:\n        <IND>self.outcomes = None  # type: Optional[dict]\n        self.response = Darwin.genome[0]\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if trial > 0:\n            outcome = self.outcomes[(self.history[-1], opponent.history[-1])]\n",
        "source_code_len": 100,
        "target_code": "        if trial > 0:\n            assert self.outcomes is not None\n            outcome = self.outcomes[(self.history[-1], opponent.history[-1])]\n",
        "target_code_len": 145,
        "diff_format": "@@ -66,2 +68,3 @@\n         if trial > 0:\n+            assert self.outcomes is not None\n             outcome = self.outcomes[(self.history[-1], opponent.history[-1])]\n",
        "source_code_with_indent": "        if trial > 0:\n            <IND>outcome = self.outcomes[(self.history[-1], opponent.history[-1])]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if trial > 0:\n            <IND>assert self.outcomes is not None\n            outcome = self.outcomes[(self.history[-1], opponent.history[-1])]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/strategies/hunter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/strategies/hunter.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/strategies/hunter.py:123:8 Incompatible attribute type [8]: Attribute `cycle` declared in class `CycleHunter` has type `Tuple[Action]` but is used as type `None`.",
    "message": " Attribute `cycle` declared in class `CycleHunter` has type `Tuple[Action]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 123,
    "warning_line": "        self.cycle = None # type: Tuple[Action]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import List, Tuple\n\n",
        "source_code_len": 33,
        "target_code": "\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_len": 43,
        "diff_format": "@@ -4,3 +4,3 @@\n \n-from typing import List, Tuple\n+from typing import List, Tuple, Optional\n \n",
        "source_code_with_indent": "\nfrom typing import List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__()\n        self.cycle = None # type: Tuple[Action]\n\n",
        "source_code_len": 76,
        "target_code": "        super().__init__()\n        self.cycle = None  # type: Optional[Tuple[Action]]\n\n",
        "target_code_len": 87,
        "diff_format": "@@ -122,3 +122,3 @@\n         super().__init__()\n-        self.cycle = None # type: Tuple[Action]\n+        self.cycle = None  # type: Optional[Tuple[Action]]\n \n",
        "source_code_with_indent": "        <IND>super().__init__()\n        self.cycle = None # type: Tuple[Action]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>super().__init__()\n        self.cycle = None  # type: Optional[Tuple[Action]]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:86:8 Incompatible attribute type [8]: Attribute `filename` declared in class `Tournament` has type `str` but is used as type `None`.",
    "message": " Attribute `filename` declared in class `Tournament` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 86,
    "warning_line": "        self.filename = None  # type: str"
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:87:8 Incompatible attribute type [8]: Attribute `_temp_file_descriptor` declared in class `Tournament` has type `int` but is used as type `None`.",
    "message": " Attribute `_temp_file_descriptor` declared in class `Tournament` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 87,
    "warning_line": "        self._temp_file_descriptor = None  # type: int"
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "387dc87a1a9da96bee1eed6a3953d6751fe83b3f",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:148:8 Incompatible return type [7]: Expected `ResultSet` but got `typing.Optional[ResultSet]`.",
    "message": " Expected `ResultSet` but got `typing.Optional[ResultSet]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 148,
    "warning_line": "        return result_set"
  }
]