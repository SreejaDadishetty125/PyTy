[
  {
    "project": "PrefectHQ/prefect",
    "commit": "73c4e8e85eaee633ea107f99002beab1d9a249e2",
    "filename": "src/prefect/tasks/gcp/storage.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PrefectHQ-prefect/src/prefect/tasks/gcp/storage.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/prefect/tasks/gcp/storage.py:213:14 Invalid type [31]: Expression `typing.Union(str, bytes)` is not a valid type.",
    "message": " Expression `typing.Union(str, bytes)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 213,
    "warning_line": "        data: Union(str, bytes),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        data: Union(str, bytes),\n        bucket: str = None,\n",
        "source_code_len": 75,
        "target_code": "        self,\n        data: Union[str, bytes],\n        bucket: str = None,\n",
        "target_code_len": 75,
        "diff_format": "@@ -212,3 +212,3 @@\n         self,\n-        data: Union(str, bytes),\n+        data: Union[str, bytes],\n         bucket: str = None,\n",
        "source_code_with_indent": "        self,\n        data: Union(str, bytes),\n        bucket: str = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        data: Union[str, bytes],\n        bucket: str = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]