[
  {
    "project": "napari/napari",
    "commit": "bc613b771153a94271571a400c3dd63899611f2d",
    "filename": "napari/_vispy/experimental/vispy_tiled_image_layer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/_vispy/experimental/vispy_tiled_image_layer.py",
    "file_hunks_size": 13,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/_vispy/experimental/vispy_tiled_image_layer.py:200:12 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 200,
    "warning_line": "            return",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        int\n             The number of chunks that still need to be added, in a future frame.\n        \"\"\"\n        if not self.node.visible:\n            return\n\n",
        "source_code_len": 160,
        "target_code": "        int\n             The number of chunks that still need to be added.\n        \"\"\"\n        if not self.node.visible:\n            return 0\n\n",
        "target_code_len": 143,
        "diff_format": "@@ -196,6 +217,6 @@\n         int\n-             The number of chunks that still need to be added, in a future frame.\n+             The number of chunks that still need to be added.\n         \"\"\"\n         if not self.node.visible:\n-            return\n+            return 0\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        if not self.node.visible:\n            <IND>return\n\n",
        "target_code_with_indent": "\n        if not self.node.visible:\n            <IND>return 0\n\n"
      }
    ]
  },
  {
    "project": "napari/napari",
    "commit": "bc613b771153a94271571a400c3dd63899611f2d",
    "filename": "napari/layers/image/experimental/_octree_multiscale_slice.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/napari-napari/napari/layers/image/experimental/_octree_multiscale_slice.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "napari/layers/image/experimental/_octree_multiscale_slice.py:230:8 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 230,
    "warning_line": "        return True  # Chunk was loaded."
  },
  {
    "project": "napari/napari",
    "commit": "bc613b771153a94271571a400c3dd63899611f2d",
    "filename": "napari/layers/image/experimental/octree_image.py",
    "min_patch_found": false,
    "full_warning_msg": "napari/layers/image/experimental/octree_image.py:343:12 Incompatible return type [7]: Expected `None` but got `bool`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "napari/napari",
    "commit": "bc613b771153a94271571a400c3dd63899611f2d",
    "filename": "napari/layers/image/experimental/octree_image.py",
    "min_patch_found": false,
    "full_warning_msg": "napari/layers/image/experimental/octree_image.py:348:8 Incompatible return type [7]: Expected `None` but got `bool`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]