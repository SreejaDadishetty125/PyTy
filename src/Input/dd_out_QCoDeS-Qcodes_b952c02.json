[
  {
    "project": "QCoDeS/Qcodes",
    "commit": "b952c02aa9eb4066a505c82f5b895bef258c4e62",
    "filename": "qcodes/utils/plotting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/QCoDeS-Qcodes/qcodes/utils/plotting.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qcodes/utils/plotting.py:128:12 Incompatible variable type [9]: data_lim is declared to have type `Optional[Tuple[float, float]]` but is used as type `typing.Tuple[float, ...]`.",
    "message": " data_lim is declared to have type `Optional[Tuple[float, float]]` but is used as type `typing.Tuple[float, ...]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 128,
    "warning_line": "            data_lim = tuple(sorted(data_lim))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            data_lim = tuple(sorted(data_lim))\n    # if `None` is provided in the new limits don't change this limit\n",
        "source_code_len": 131,
        "target_code": "        else:\n            data_lim = cast(Tuple[float, float], tuple(sorted(data_lim)))\n    # if `None` is provided in the new limits don't change this limit\n",
        "target_code_len": 158,
        "diff_format": "@@ -127,3 +127,3 @@\n         else:\n-            data_lim = tuple(sorted(data_lim))\n+            data_lim = cast(Tuple[float, float], tuple(sorted(data_lim)))\n     # if `None` is provided in the new limits don't change this limit\n",
        "source_code_with_indent": "        <DED>else:\n            <IND>data_lim = tuple(sorted(data_lim))\n    # if `None` is provided in the new limits don't change this limit\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>else:\n            <IND>data_lim = cast(Tuple[float, float], tuple(sorted(data_lim)))\n    # if `None` is provided in the new limits don't change this limit\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]