[
  {
    "project": "laughingman7743/PyAthena",
    "commit": "c110d18bd254a1c92cae0bf525db3163229ecaa2",
    "filename": "pyathena/result_set.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/laughingman7743-PyAthena/pyathena/result_set.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyathena/result_set.py:272:8 Incompatible attribute type [8]: Attribute `_meta_data` declared in class `AthenaResultSet` has type `Optional[Tuple[typing.Any, typing.Any]]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "message": " Attribute `_meta_data` declared in class `AthenaResultSet` has type `Optional[Tuple[typing.Any, typing.Any]]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 272,
    "warning_line": "        self._meta_data = tuple(column_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        self._meta_data: Optional[Tuple[Any, Any]] = None\n        self._rows: Deque[Tuple[Optional[Any]]] = collections.deque()\n",
        "source_code_len": 129,
        "target_code": "\n        self._meta_data: Optional[Tuple[Any, ...]] = None\n        self._rows: Deque[Tuple[Optional[Any]]] = collections.deque()\n",
        "target_code_len": 129,
        "diff_format": "@@ -37,3 +37,3 @@\n \n-        self._meta_data: Optional[Tuple[Any, Any]] = None\n+        self._meta_data: Optional[Tuple[Any, ...]] = None\n         self._rows: Deque[Tuple[Optional[Any]]] = collections.deque()\n",
        "source_code_with_indent": "\n        self._meta_data: Optional[Tuple[Any, Any]] = None\n        self._rows: Deque[Tuple[Optional[Any]]] = collections.deque()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self._meta_data: Optional[Tuple[Any, ...]] = None\n        self._rows: Deque[Tuple[Optional[Any]]] = collections.deque()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]