[
  {
    "project": "Enforcer/clean-architecture",
    "commit": "f107c1cad3ab5db2ae31a334bcb3a1af94bc25a7",
    "filename": "auctions/auctions/tests/application/use_cases/conftest.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Enforcer-clean-architecture/auctions/auctions/tests/application/use_cases/conftest.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "auctions/auctions/tests/application/use_cases/conftest.py:14:4 Incompatible return type [7]: Expected `int` but got `typing.List[int]`.",
    "message": " Expected `int` but got `typing.List[int]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 14,
    "warning_line": "    return [1, 2, 3]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from unittest.mock import Mock\n",
        "source_code_len": 31,
        "target_code": "from typing import List\nfrom unittest.mock import Mock\n",
        "target_code_len": 55,
        "diff_format": "@@ -1,1 +1,2 @@\n+from typing import List\n from unittest.mock import Mock\n",
        "source_code_with_indent": "from unittest.mock import Mock\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List\nfrom unittest.mock import Mock\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@pytest.fixture()\ndef exemplary_bids_ids() -> int:\n    return [1, 2, 3]\n",
        "source_code_len": 72,
        "target_code": "@pytest.fixture()\ndef exemplary_bids_ids() -> List[int]:\n    return [1, 2, 3]\n",
        "target_code_len": 78,
        "diff_format": "@@ -12,3 +13,3 @@\n @pytest.fixture()\n-def exemplary_bids_ids() -> int:\n+def exemplary_bids_ids() -> List[int]:\n     return [1, 2, 3]\n",
        "source_code_with_indent": "@pytest.fixture()\ndef exemplary_bids_ids() -> int:\n    <IND>return [1, 2, 3]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "@pytest.fixture()\ndef exemplary_bids_ids() -> List[int]:\n    <IND>return [1, 2, 3]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]