[
  {
    "project": "optuna/optuna",
    "commit": "9a770bac0c0516e11d5bf3a280c356eeb2aad579",
    "filename": "tests/multi_objective/test_study.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/optuna-optuna/tests/multi_objective/test_study.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/multi_objective/test_study.py:131:8 Incompatible return type [7]: Expected `List[float]` but got `typing.Tuple[float, float]`.",
    "message": " Expected `List[float]` but got `typing.Tuple[float, float]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 131,
    "warning_line": "        return x, y",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List\nimport uuid\n",
        "source_code_len": 36,
        "target_code": "from typing import List\nfrom typing import Tuple\nimport uuid\n",
        "target_code_len": 61,
        "diff_format": "@@ -1,2 +1,3 @@\n from typing import List\n+from typing import Tuple\n import uuid\n",
        "source_code_with_indent": "from typing import List\nimport uuid\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List\nfrom typing import Tuple\nimport uuid\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> List[float]:\n        x = trial.suggest_float(\"x\", 0, 10)\n",
        "source_code_len": 136,
        "target_code": "\n    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> Tuple[float, float]:\n        x = trial.suggest_float(\"x\", 0, 10)\n",
        "target_code_len": 144,
        "diff_format": "@@ -127,3 +128,3 @@\n \n-    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> List[float]:\n+    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> Tuple[float, float]:\n         x = trial.suggest_float(\"x\", 0, 10)\n",
        "source_code_with_indent": "\n    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> List[float]:\n        <IND>x = trial.suggest_float(\"x\", 0, 10)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def objective(trial: optuna.multi_objective.trial.MultiObjectiveTrial) -> Tuple[float, float]:\n        <IND>x = trial.suggest_float(\"x\", 0, 10)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]