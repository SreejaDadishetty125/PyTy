[
  {
    "project": "Shougo/denite.nvim",
    "commit": "8bc9108b006ac947df476379edda87293d2ce6c0",
    "filename": "rplugin/python3/denite/base/kind.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/base/kind.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/base/kind.py:49:8 Incompatible return type [7]: Expected `None` but got `typing.List[str]`.",
    "message": " Expected `None` but got `typing.List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 49,
    "warning_line": "        return ['default'] + [x.replace('action_', '') for x in dir(self)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# ============================================================================\n\n",
        "source_code_len": 80,
        "target_code": "# ============================================================================\n\nimport typing\n\n",
        "target_code_len": 95,
        "diff_format": "@@ -5,2 +5,4 @@\n # ============================================================================\n+\n+import typing\n \n",
        "source_code_with_indent": "# ============================================================================\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# ============================================================================\n\nimport typing\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_action_names(self) -> None:\n        return ['default'] + [x.replace('action_', '') for x in dir(self)\n",
        "source_code_len": 115,
        "target_code": "\n    def get_action_names(self) -> typing.List[str]:\n        return ['default'] + [x.replace('action_', '') for x in dir(self)\n",
        "target_code_len": 127,
        "diff_format": "@@ -47,3 +49,3 @@\n \n-    def get_action_names(self) -> None:\n+    def get_action_names(self) -> typing.List[str]:\n         return ['default'] + [x.replace('action_', '') for x in dir(self)\n",
        "source_code_with_indent": "\n    <DED><DED>def get_action_names(self) -> None:\n        <IND>return ['default'] + [x.replace('action_', '') for x in dir(self)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def get_action_names(self) -> typing.List[str]:\n        <IND>return ['default'] + [x.replace('action_', '') for x in dir(self)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]