[
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/add.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/add.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/add.py:24:8 Incompatible return type [7]: Expected `Tuple[Variable[OutputType (bound to Array)], typing.Callable[..., typing.Any]]` but got `Tuple[Variable[InputType (bound to Array)], typing.Callable[[Named(dY, typing.Any)], typing.Any]]`.",
    "message": " Expected `Tuple[Variable[OutputType (bound to Array)], typing.Callable[..., typing.Any]]` but got `Tuple[Variable[InputType (bound to Array)], typing.Callable[[Named(dY, typing.Any)], typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 24,
    "warning_line": "        return X, lambda dY: dY",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef forward(model: Model, X: InputType, is_train: bool) -> Tuple[OutputType, Callable]:\n    if not model.layers:\n",
        "source_code_len": 114,
        "target_code": "\ndef forward(model: Model, X: Array, is_train: bool) -> Tuple[Array, Callable]:\n    if not model.layers:\n",
        "target_code_len": 105,
        "diff_format": "@@ -21,3 +21,3 @@\n \n-def forward(model: Model, X: InputType, is_train: bool) -> Tuple[OutputType, Callable]:\n+def forward(model: Model, X: Array, is_train: bool) -> Tuple[Array, Callable]:\n     if not model.layers:\n",
        "source_code_with_indent": "\n<DED>def forward(model: Model, X: InputType, is_train: bool) -> Tuple[OutputType, Callable]:\n    <IND>if not model.layers:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def forward(model: Model, X: Array, is_train: bool) -> Tuple[Array, Callable]:\n    <IND>if not model.layers:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def backprop(dY: OutputType) -> InputType:\n        dX = first_callback(dY)\n",
        "source_code_len": 80,
        "target_code": "\n    def backprop(dY: Array) -> Array:\n        dX = first_callback(dY)\n",
        "target_code_len": 71,
        "diff_format": "@@ -31,3 +31,3 @@\n \n-    def backprop(dY: OutputType) -> InputType:\n+    def backprop(dY: Array) -> Array:\n         dX = first_callback(dY)\n",
        "source_code_with_indent": "\n    <DED>def backprop(dY: OutputType) -> InputType:\n        <IND>dX = first_callback(dY)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def backprop(dY: Array) -> Array:\n        <IND>dX = first_callback(dY)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/cauchysimilarity.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/cauchysimilarity.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/cauchysimilarity.py:64:4 Incompatible return type [7]: Expected `Array` but got `Tuple[float, typing.Callable[[Named(d_inverse, Array)], Array]]`.",
    "message": " Expected `Array` but got `Tuple[float, typing.Callable[[Named(d_inverse, Array)], Array]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 64,
    "warning_line": "    return inverse, backward"
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/embed.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/embed.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/embed.py:25:8 Incompatible parameter type [6]: Expected `typing.Dict[str, Optional[int]]` for 4th parameter `dims` to call `Model.__init__` but got `typing.Dict[str, Optional[Array]]`.",
    "message": " Expected `typing.Dict[str, Optional[int]]` for 4th parameter `dims` to call `Model.__init__` but got `typing.Dict[str, Optional[Array]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "        dims={\"nO\": nO, \"nV\": nV},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def Embed(\n    nO: Optional[Array] = None,\n    nV: Optional[Array] = None,\n    *,\n",
        "source_code_len": 82,
        "target_code": "def Embed(\n    nO: Optional[int] = None,\n    nV: Optional[int] = None,\n    *,\n",
        "target_code_len": 78,
        "diff_format": "@@ -13,4 +13,4 @@\n def Embed(\n-    nO: Optional[Array] = None,\n-    nV: Optional[Array] = None,\n+    nO: Optional[int] = None,\n+    nV: Optional[int] = None,\n     *,\n",
        "source_code_with_indent": "def Embed(\n    nO: Optional[Array] = None,\n    nV: Optional[Array] = None,\n    *,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def Embed(\n    nO: Optional[int] = None,\n    nV: Optional[int] = None,\n    *,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/layernorm.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/layernorm.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/layernorm.py:18:8 Incompatible parameter type [6]: Expected `typing.Dict[str, Optional[int]]` for 4th parameter `dims` to call `Model.__init__` but got `typing.Dict[str, Optional[Array]]`.",
    "message": " Expected `typing.Dict[str, Optional[int]]` for 4th parameter `dims` to call `Model.__init__` but got `typing.Dict[str, Optional[Array]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 18,
    "warning_line": "        dims={\"nO\": nO, \"nI\": nO},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef LayerNorm(nO: Optional[Array] = None) -> Model:\n    return Model(\n",
        "source_code_len": 71,
        "target_code": "\ndef LayerNorm(nO: Optional[int] = None) -> Model:\n    return Model(\n",
        "target_code_len": 69,
        "diff_format": "@@ -12,3 +12,3 @@\n \n-def LayerNorm(nO: Optional[Array] = None) -> Model:\n+def LayerNorm(nO: Optional[int] = None) -> Model:\n     return Model(\n",
        "source_code_with_indent": "\ndef LayerNorm(nO: Optional[Array] = None) -> Model:\n    <IND>return Model(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef LayerNorm(nO: Optional[int] = None) -> Model:\n    <IND>return Model(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/layernorm.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/layernorm.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/layernorm.py:36:4 Incompatible return type [7]: Expected `Tuple[Variable[OutputType (bound to Array)], typing.Callable[..., typing.Any]]` but got `Tuple[Array, typing.Callable[[Named(dY, Variable[OutputType (bound to Array)])], Variable[InputType (bound to Array)]]]`.",
    "message": " Expected `Tuple[Variable[OutputType (bound to Array)], typing.Callable[..., typing.Any]]` but got `Tuple[Array, typing.Callable[[Named(dY, Variable[OutputType (bound to Array)])], Variable[InputType (bound to Array)]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 36,
    "warning_line": "    return y, backprop",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef forward(model: Model, X: InputType) -> Tuple[OutputType, Callable]:\n    N, mu, var = _get_moments(model.ops, X)\n    Xhat = (X - mu) * var ** (-1.0 / 2.0)\n    y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n\n    def backprop(dY: OutputType) -> InputType:\n        dY = backprop_rescale(dY)\n",
        "source_code_len": 306,
        "target_code": "\ndef forward(model: Model, X: Array) -> Tuple[Array, Callable]:\n    N, mu, var = _get_moments(model.ops, X)\n    Xhat = (X - mu) * var ** (-1.0 / 2.0)\n    Y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n\n    def backprop(dY: Array) -> Array:\n        dY = backprop_rescale(dY)\n",
        "target_code_len": 288,
        "diff_format": "@@ -22,8 +22,8 @@\n \n-def forward(model: Model, X: InputType) -> Tuple[OutputType, Callable]:\n+def forward(model: Model, X: Array) -> Tuple[Array, Callable]:\n     N, mu, var = _get_moments(model.ops, X)\n     Xhat = (X - mu) * var ** (-1.0 / 2.0)\n-    y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n+    Y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n \n-    def backprop(dY: OutputType) -> InputType:\n+    def backprop(dY: Array) -> Array:\n         dY = backprop_rescale(dY)\n",
        "source_code_with_indent": "\n<DED>def forward(model: Model, X: InputType) -> Tuple[OutputType, Callable]:\n    <IND>N, mu, var = _get_moments(model.ops, X)\n    Xhat = (X - mu) * var ** (-1.0 / 2.0)\n    y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n\n    def backprop(dY: OutputType) -> InputType:\n        <IND>dY = backprop_rescale(dY)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def forward(model: Model, X: Array) -> Tuple[Array, Callable]:\n    <IND>N, mu, var = _get_moments(model.ops, X)\n    Xhat = (X - mu) * var ** (-1.0 / 2.0)\n    Y, backprop_rescale = _begin_update_scale_shift(model, Xhat)\n\n    def backprop(dY: Array) -> Array:\n        <IND>dY = backprop_rescale(dY)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    return y, backprop\n\n",
        "source_code_len": 25,
        "target_code": "\n    return Y, backprop\n\n",
        "target_code_len": 25,
        "diff_format": "@@ -35,3 +35,3 @@\n \n-    return y, backprop\n+    return Y, backprop\n \n",
        "source_code_with_indent": "\n    <DED>return y, backprop\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>return Y, backprop\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/layernorm.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/layernorm.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/layernorm.py:72:4 Incompatible return type [7]: Expected `Array` but got `Tuple[Array, Array, typing.Any]`.",
    "message": " Expected `Array` but got `Tuple[Array, Array, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 72,
    "warning_line": "    return ops.asarray([X.shape[1]], dtype=\"f\"), mu, var",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _get_moments(ops: Ops, X: Array) -> Array:\n    mu = X.mean(axis=1, keepdims=True)\n",
        "source_code_len": 87,
        "target_code": "\ndef _get_moments(ops: Ops, X: Array) -> Tuple[Array, Array, Array]:\n    mu = X.mean(axis=1, keepdims=True)\n",
        "target_code_len": 108,
        "diff_format": "@@ -68,3 +68,3 @@\n \n-def _get_moments(ops: Ops, X: Array) -> Array:\n+def _get_moments(ops: Ops, X: Array) -> Tuple[Array, Array, Array]:\n     mu = X.mean(axis=1, keepdims=True)\n",
        "source_code_with_indent": "\n<DED>def _get_moments(ops: Ops, X: Array) -> Array:\n    <IND>mu = X.mean(axis=1, keepdims=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _get_moments(ops: Ops, X: Array) -> Tuple[Array, Array, Array]:\n    <IND>mu = X.mean(axis=1, keepdims=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "explosion/thinc",
    "commit": "9b19c1ebf37ed88593f91dc084b63e1c7e9aa03d",
    "filename": "thinc/layers/with_reshape.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/explosion-thinc/thinc/layers/with_reshape.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "thinc/layers/with_reshape.py:34:8 Incompatible variable type [9]: dY is declared to have type `Variable[OutputType (bound to Array)]` but is used as type `Array`.",
    "message": " dY is declared to have type `Variable[OutputType (bound to Array)]` but is used as type `Array`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 34,
    "warning_line": "        dY = dY.reshape(nB * nT, -1).astype(layer.ops.xp.float32)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def backprop(dY: OutputType) -> InputType:\n        dY = dY.reshape(nB * nT, -1).astype(layer.ops.xp.float32)\n        return Y2d_backprop(dY).reshape(initial_shape)\n",
        "source_code_len": 169,
        "target_code": "\n    def backprop(dY: Array) -> Array:\n        dY = dY.reshape((nB * nT, -1)).astype(layer.ops.xp.float32)\n        return Y2d_backprop(dY).reshape(initial_shape)\n",
        "target_code_len": 162,
        "diff_format": "@@ -32,4 +32,4 @@\n \n-    def backprop(dY: OutputType) -> InputType:\n-        dY = dY.reshape(nB * nT, -1).astype(layer.ops.xp.float32)\n+    def backprop(dY: Array) -> Array:\n+        dY = dY.reshape((nB * nT, -1)).astype(layer.ops.xp.float32)\n         return Y2d_backprop(dY).reshape(initial_shape)\n",
        "source_code_with_indent": "\n    def backprop(dY: OutputType) -> InputType:\n        <IND>dY = dY.reshape(nB * nT, -1).astype(layer.ops.xp.float32)\n        return Y2d_backprop(dY).reshape(initial_shape)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def backprop(dY: Array) -> Array:\n        <IND>dY = dY.reshape((nB * nT, -1)).astype(layer.ops.xp.float32)\n        return Y2d_backprop(dY).reshape(initial_shape)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]