[
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/openapi/schema.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/openapi/schema.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/openapi/schema.py:171:26 Unsupported operand [58]: `<` is not supported for operand types `str` and `int`.",
    "message": " `<` is not supported for operand types `str` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 171,
    "warning_line": "            description = status < 300 and \"OK\" or \"Error\""
  },
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/openapi/schema.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/openapi/schema.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/openapi/schema.py:175:45 Incompatible parameter type [6]: Expected `typing.Union[bool, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[str, Dict[str, typing.Any]]`.",
    "message": " Expected `typing.Union[bool, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[str, Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 175,
    "warning_line": "                details[status][\"content\"] = {\"application/json\": {\"schema\": schema}}"
  },
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/operation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/operation.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/operation.py:67:12 Incompatible attribute type [8]: Attribute `response_models` declared in class `Operation` has type `Dict[str, Optional[Type[Schema]]]` but is used as type `Dict[int, Optional[Type[Schema]]]`.",
    "message": " Attribute `response_models` declared in class `Operation` has type `Dict[str, Optional[Type[Schema]]]` but is used as type `Dict[int, Optional[Type[Schema]]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 67,
    "warning_line": "            self.response_models = {200: NOT_SET}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_len": 97,
        "target_code": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_len": 78,
        "diff_format": "@@ -64,3 +64,3 @@\n \n-        self.response_models: Dict[str, Optional[Type[Schema]]]\n+        self.response_models: Dict[Any, Any]\n         if response == NOT_SET:\n",
        "source_code_with_indent": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/operation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/operation.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/operation.py:71:12 Incompatible attribute type [8]: Attribute `response_models` declared in class `Operation` has type `Dict[str, Optional[Type[Schema]]]` but is used as type `Dict[int, Optional[Type[Schema]]]`.",
    "message": " Attribute `response_models` declared in class `Operation` has type `Dict[str, Optional[Type[Schema]]]` but is used as type `Dict[int, Optional[Type[Schema]]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 71,
    "warning_line": "            self.response_models = {200: self._create_response_model(response)}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_len": 97,
        "target_code": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_len": 78,
        "diff_format": "@@ -64,3 +64,3 @@\n \n-        self.response_models: Dict[str, Optional[Type[Schema]]]\n+        self.response_models: Dict[Any, Any]\n         if response == NOT_SET:\n",
        "source_code_with_indent": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/operation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/operation.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/operation.py:150:12 Incompatible variable type [9]: status is declared to have type `int` but is used as type `str`.",
    "message": " status is declared to have type `int` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 150,
    "warning_line": "            status = list(self.response_models.keys())[0]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_len": 97,
        "target_code": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_len": 78,
        "diff_format": "@@ -64,3 +64,3 @@\n \n-        self.response_models: Dict[str, Optional[Type[Schema]]]\n+        self.response_models: Dict[Any, Any]\n         if response == NOT_SET:\n",
        "source_code_with_indent": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "vitalik/django-ninja",
    "commit": "5f0bcb72530ac458d698001043589c71defc38a6",
    "filename": "ninja/operation.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/vitalik-django-ninja/ninja/operation.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ninja/operation.py:159:50 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `ellipsis`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `ellipsis`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 159,
    "warning_line": "            response_model = self.response_models[Ellipsis]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_len": 97,
        "target_code": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_len": 78,
        "diff_format": "@@ -64,3 +64,3 @@\n \n-        self.response_models: Dict[str, Optional[Type[Schema]]]\n+        self.response_models: Dict[Any, Any]\n         if response == NOT_SET:\n",
        "source_code_with_indent": "\n        self.response_models: Dict[str, Optional[Type[Schema]]]\n        if response == NOT_SET:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        self.response_models: Dict[Any, Any]\n        if response == NOT_SET:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]