[
  {
    "project": "pgjones/hypercorn",
    "commit": "97d50ac45d7facf8420cc940f62ca91742ddb965",
    "filename": "tests/test_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-hypercorn/tests/test_config.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/test_config.py:108:39 Incompatible parameter type [6]: Expected `typing.Optional[NonCallableMock]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "message": " Expected `typing.Optional[NonCallableMock]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_len": 122,
        "target_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_len": 160,
        "diff_format": "@@ -107,3 +107,5 @@\n     mock_sock_class = Mock(\n-        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n+        return_value=NonCallableMock(\n+            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n+        )\n     )\n",
        "source_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/hypercorn",
    "commit": "97d50ac45d7facf8420cc940f62ca91742ddb965",
    "filename": "tests/test_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-hypercorn/tests/test_config.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/test_config.py:108:39 Incompatible parameter type [6]: Expected `typing.Optional[bool]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "message": " Expected `typing.Optional[bool]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_len": 122,
        "target_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_len": 160,
        "diff_format": "@@ -107,3 +107,5 @@\n     mock_sock_class = Mock(\n-        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n+        return_value=NonCallableMock(\n+            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n+        )\n     )\n",
        "source_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/hypercorn",
    "commit": "97d50ac45d7facf8420cc940f62ca91742ddb965",
    "filename": "tests/test_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-hypercorn/tests/test_config.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/test_config.py:108:39 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "message": " Expected `typing.Optional[str]` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_len": 122,
        "target_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_len": 160,
        "diff_format": "@@ -107,3 +107,5 @@\n     mock_sock_class = Mock(\n-        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n+        return_value=NonCallableMock(\n+            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n+        )\n     )\n",
        "source_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/hypercorn",
    "commit": "97d50ac45d7facf8420cc940f62ca91742ddb965",
    "filename": "tests/test_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-hypercorn/tests/test_config.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/test_config.py:108:39 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "message": " Expected `bool` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_len": 122,
        "target_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_len": 160,
        "diff_format": "@@ -107,3 +107,5 @@\n     mock_sock_class = Mock(\n-        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n+        return_value=NonCallableMock(\n+            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n+        )\n     )\n",
        "source_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pgjones/hypercorn",
    "commit": "97d50ac45d7facf8420cc940f62ca91742ddb965",
    "filename": "tests/test_config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pgjones-hypercorn/tests/test_config.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/test_config.py:108:39 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "message": " Expected `str` for 1st positional only parameter to call `NonCallableMock.__init__` but got `socket.SocketKind`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_len": 122,
        "target_code": "    mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_len": 160,
        "diff_format": "@@ -107,3 +107,5 @@\n     mock_sock_class = Mock(\n-        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n+        return_value=NonCallableMock(\n+            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n+        )\n     )\n",
        "source_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(**{\"getsockopt.return_value\": socket.SOCK_STREAM})\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>mock_sock_class = Mock(\n        return_value=NonCallableMock(\n            **{\"getsockopt.return_value\": socket.SOCK_STREAM}  # type: ignore\n        )\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]