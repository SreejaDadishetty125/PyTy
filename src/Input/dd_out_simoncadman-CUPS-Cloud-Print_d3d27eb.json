[
  {
    "project": "simoncadman/CUPS-Cloud-Print",
    "commit": "d3d27ebdb39b32310273e5f8d19c9cf87e492fa6",
    "filename": "backend.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/simoncadman-CUPS-Cloud-Print/backend.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend.py:120:38 Unsupported operand [58]: `+` is not supported for operand types `str` and `typing.Optional[str]`.",
    "message": " `+` is not supported for operand types `str` and `typing.Optional[str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 120,
    "warning_line": "    logging.debug('is this a pdf? ' + printFile)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_len": 281,
        "target_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_len": 274,
        "diff_format": "@@ -115,7 +119,7 @@\n     convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n-                          \"-dUseCIEColor\", printFile, \"-\"]\n+                          \"-dUseCIEColor\", \"-\", \"-\"]\n     if Utils.which(\"ps2pdf\") is None:\n-        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n+        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n \n-    logging.debug('is this a pdf? ' + printFile)\n+    logging.debug('is this a pdf? ' + str(printFile))\n     result = 0\n",
        "source_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "simoncadman/CUPS-Cloud-Print",
    "commit": "d3d27ebdb39b32310273e5f8d19c9cf87e492fa6",
    "filename": "backend.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/simoncadman-CUPS-Cloud-Print/backend.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend.py:126:29 Incompatible parameter type [6]: Expected `typing.Union[typing.Sequence[typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, str]], bytes, str]` for 1st positional only parameter to call `subprocess.Popen.__new__` but got `typing.List[typing.Optional[str]]`.",
    "message": " Expected `typing.Union[typing.Sequence[typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, str]], bytes, str]` for 1st positional only parameter to call `subprocess.Popen.__new__` but got `typing.List[typing.Optional[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 126,
    "warning_line": "        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=p1.stdout)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_len": 281,
        "target_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_len": 274,
        "diff_format": "@@ -115,7 +119,7 @@\n     convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n-                          \"-dUseCIEColor\", printFile, \"-\"]\n+                          \"-dUseCIEColor\", \"-\", \"-\"]\n     if Utils.which(\"ps2pdf\") is None:\n-        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n+        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n \n-    logging.debug('is this a pdf? ' + printFile)\n+    logging.debug('is this a pdf? ' + str(printFile))\n     result = 0\n",
        "source_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "simoncadman/CUPS-Cloud-Print",
    "commit": "d3d27ebdb39b32310273e5f8d19c9cf87e492fa6",
    "filename": "backend.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/simoncadman-CUPS-Cloud-Print/backend.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend.py:126:79 Unbound name [10]: Name `p1` is used but not defined in the current scope.",
    "message": " Name `p1` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 126,
    "warning_line": "        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=p1.stdout)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_len": 281,
        "target_code": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_len": 274,
        "diff_format": "@@ -115,7 +119,7 @@\n     convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n-                          \"-dUseCIEColor\", printFile, \"-\"]\n+                          \"-dUseCIEColor\", \"-\", \"-\"]\n     if Utils.which(\"ps2pdf\") is None:\n-        convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n+        convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n \n-    logging.debug('is this a pdf? ' + printFile)\n+    logging.debug('is this a pdf? ' + str(printFile))\n     result = 0\n",
        "source_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", printFile, \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", printFile, \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + printFile)\n    result = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    convertToPDFParams = [\"ps2pdf\", \"-dPDFSETTINGS=/printer\",\n                          \"-dUseCIEColor\", \"-\", \"-\"]\n    if Utils.which(\"ps2pdf\") is None:\n        <IND>convertToPDFParams = [\"pstopdf\", \"-\", \"-\"]\n\n    <DED>logging.debug('is this a pdf? ' + str(printFile))\n    result = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        sys.stderr.write(\"INFO: Converting print job to PDF\\n\")\n        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=p1.stdout)\n        filedata = p.communicate()[0]\n        if p.returncode != 0:\n",
        "source_code_len": 222,
        "target_code": "        sys.stderr.write(\"INFO: Converting print job to PDF\\n\")\n        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n        filedata = p.communicate(filedata)[0]\n        if p.returncode != 0:\n",
        "target_code_len": 236,
        "diff_format": "@@ -125,4 +129,4 @@\n         sys.stderr.write(\"INFO: Converting print job to PDF\\n\")\n-        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=p1.stdout)\n-        filedata = p.communicate()[0]\n+        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n+        filedata = p.communicate(filedata)[0]\n         if p.returncode != 0:\n",
        "source_code_with_indent": "        <IND>sys.stderr.write(\"INFO: Converting print job to PDF\\n\")\n        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=p1.stdout)\n        filedata = p.communicate()[0]\n        if p.returncode != 0:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>sys.stderr.write(\"INFO: Converting print job to PDF\\n\")\n        p = subprocess.Popen(convertToPDFParams, stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n        filedata = p.communicate(filedata)[0]\n        if p.returncode != 0:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "simoncadman/CUPS-Cloud-Print",
    "commit": "d3d27ebdb39b32310273e5f8d19c9cf87e492fa6",
    "filename": "backend.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/simoncadman-CUPS-Cloud-Print/backend.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend.py:153:21 Unsupported operand [58]: `+` is not supported for operand types `typing.Optional[str]` and `str`.",
    "message": " `+` is not supported for operand types `typing.Optional[str]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 153,
    "warning_line": "        logging.info(printFile + \" sent to cloud print, deleting\")"
  },
  {
    "project": "simoncadman/CUPS-Cloud-Print",
    "commit": "d3d27ebdb39b32310273e5f8d19c9cf87e492fa6",
    "filename": "backend.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/simoncadman-CUPS-Cloud-Print/backend.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend.py:157:38 Unsupported operand [58]: `+` is not supported for operand types `str` and `typing.Optional[str]`.",
    "message": " `+` is not supported for operand types `str` and `typing.Optional[str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 157,
    "warning_line": "            logging.info(\"Deleted \" + printFile)"
  }
]