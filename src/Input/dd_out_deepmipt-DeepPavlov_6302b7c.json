[
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/infer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/infer.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/infer.py:27:36 Invalid type [31]: Expression `[str, pathlib.Path, dict]` is not a valid type.",
    "message": " Expression `[str, pathlib.Path, dict]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 27,
    "warning_line": "def build_model_from_config(config: [str, Path, dict], mode: str = 'infer', load_trained: bool = False) -> Chainer:"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/train.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/train.py:404:49 Incompatible parameter type [6]: Expected `Union[OrderedDict[typing.Any, typing.Any], int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[Dict[str, typing.Any]]`.",
    "message": " Expected `Union[OrderedDict[typing.Any, typing.Any], int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 404,
    "warning_line": "                            report['examples'] = [{"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/train.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/train.py:470:45 Incompatible parameter type [6]: Expected `Union[OrderedDict[typing.Any, typing.Any], int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[Dict[str, typing.Any]]`.",
    "message": " Expected `Union[OrderedDict[typing.Any, typing.Any], int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `List[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 470,
    "warning_line": "                        report['examples'] = [{"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/train.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/train.py:548:4 Incompatible return type [7]: Expected `NNModel` but got `Chainer`.",
    "message": " Expected `NNModel` but got `Chainer`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 548,
    "warning_line": "    return model"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/utils.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/utils.py:32:4 Incompatible variable type [9]: deeppavlov.core.common.paths.deeppavlov_root is declared to have type `str` but is used as type `Path`.",
    "message": " deeppavlov.core.common.paths.deeppavlov_root is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 32,
    "warning_line": "    paths.deeppavlov_root = deeppavlov_root"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/core/commands/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/core/commands/utils.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/core/commands/utils.py:39:4 Incompatible return type [7]: Expected `Path` but got `str`.",
    "message": " Expected `Path` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 39,
    "warning_line": "    return paths.deeppavlov_root"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/dataset_readers/amazon_ecommerce_reader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/dataset_readers/amazon_ecommerce_reader.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/dataset_readers/amazon_ecommerce_reader.py:53:8 Incompatible return type [7]: Expected `Dict[str, List[Tuple[typing.Any, typing.Any]]]` but got `Dict[str, typing.Union[List[typing.Any], List[Tuple[Tuple[typing.Any, Dict[typing.Any, typing.Any]]]]]]`.",
    "message": " Expected `Dict[str, List[Tuple[typing.Any, typing.Any]]]` but got `Dict[str, typing.Union[List[typing.Any], List[Tuple[Tuple[typing.Any, Dict[typing.Any, typing.Any]]]]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 53,
    "warning_line": "        return dataset",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        dataset = {\n            'train': [((item, {}), ) for item in ec_data_global],\n            'valid': [],\n",
        "source_code_len": 111,
        "target_code": "        dataset = {\n            'train': [((item['Title'], [], {}), item) for item in ec_data_global],\n            'valid': [],\n",
        "target_code_len": 128,
        "diff_format": "@@ -47,3 +56,3 @@\n         dataset = {\n-            'train': [((item, {}), ) for item in ec_data_global],\n+            'train': [((item['Title'], [], {}), item) for item in ec_data_global],\n             'valid': [],\n",
        "source_code_with_indent": "        <DED><DED><DED>dataset = {\n            'train': [((item, {}), ) for item in ec_data_global],\n            'valid': [],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED><DED>dataset = {\n            'train': [((item['Title'], [], {}), item) for item in ec_data_global],\n            'valid': [],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "6302b7c830945f50aa9d1c62c0dbb7b57bbe2bb6",
    "filename": "deeppavlov/models/preprocessors/ecommerce_preprocess.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/models/preprocessors/ecommerce_preprocess.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/models/preprocessors/ecommerce_preprocess.py:82:63 Unbound name [10]: Name `math` is used but not defined in the current scope.",
    "message": " Name `math` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 82,
    "warning_line": "                money_range = (float(num_token[0].text), float(math.inf))                ",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# limitations under the License.\n\nimport re\nfrom typing import List, Any, Dict, Iterable, Optional, Tuple\nimport spacy\n",
        "source_code_len": 119,
        "target_code": "# limitations under the License.\nimport math\nimport re\nfrom typing import List, Any, Dict, Iterable, Optional, Tuple\n\nimport spacy\n",
        "target_code_len": 131,
        "diff_format": "@@ -10,5 +10,6 @@\n # limitations under the License.\n-\n+import math\n import re\n from typing import List, Any, Dict, Iterable, Optional, Tuple\n+\n import spacy\n",
        "source_code_with_indent": "# limitations under the License.\n\nimport re\nfrom typing import List, Any, Dict, Iterable, Optional, Tuple\nimport spacy\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# limitations under the License.\nimport math\nimport re\nfrom typing import List, Any, Dict, Iterable, Optional, Tuple\n\nimport spacy\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]