[
  {
    "project": "ssato/python-anyconfig",
    "commit": "2856121ff27fab39e95df4f8d4f68a21fe965dba",
    "filename": "tests/base/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/tests/base/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/base/utils.py:88:14 Incompatible parameter type [6]: Expected `typing.Union[pathlib.Path, str]` for 1st positional only parameter to call `load_from_py` but got `typing.Optional[pathlib.Path]`.",
    "message": " Expected `typing.Union[pathlib.Path, str]` for 1st positional only parameter to call `load_from_py` but got `typing.Optional[pathlib.Path]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 88,
    "warning_line": "            )(path)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "                load_from_py if exec_py else load_literal_data_from_py\n            )(path)\n\n",
        "source_code_len": 92,
        "target_code": "                load_from_py if exec_py else load_literal_data_from_py\n            )(path)  # type: ignore\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -87,3 +98,3 @@\n                 load_from_py if exec_py else load_literal_data_from_py\n-            )(path)\n+            )(path)  # type: ignore\n \n",
        "source_code_with_indent": "                load_from_py if exec_py else load_literal_data_from_py\n            )(path)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                load_from_py if exec_py else load_literal_data_from_py\n            )(path)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ssato/python-anyconfig",
    "commit": "2856121ff27fab39e95df4f8d4f68a21fe965dba",
    "filename": "tests/base/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ssato-python-anyconfig/tests/base/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/base/utils.py:93:8 Incompatible return type [7]: Expected `typing.Union[typing.Dict[str, typing.Any], str]` but got `typing.Optional[pathlib.Path]`.",
    "message": " Expected `typing.Union[typing.Dict[str, typing.Any], str]` but got `typing.Optional[pathlib.Path]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 93,
    "warning_line": "        return path"
  }
]