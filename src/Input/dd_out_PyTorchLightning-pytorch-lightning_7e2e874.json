[
  {
    "project": "PyTorchLightning/pytorch-lightning",
    "commit": "7e2e874d9507e6b6f7b96dcf7f44406640381d74",
    "filename": "pytorch_lightning/accelerators/accelerator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyTorchLightning-pytorch-lightning/pytorch_lightning/accelerators/legacy/accelerator.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch_lightning/accelerators/accelerator.py:37:17 Incompatible variable type [9]: trainer is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " trainer is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 37,
    "warning_line": "                 trainer: Optional = None,"
  },
  {
    "project": "PyTorchLightning/pytorch-lightning",
    "commit": "7e2e874d9507e6b6f7b96dcf7f44406640381d74",
    "filename": "pytorch_lightning/accelerators/ddp_accelerator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyTorchLightning-pytorch-lightning/pytorch_lightning/accelerators/legacy/ddp_accelerator.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch_lightning/accelerators/ddp_accelerator.py:51:17 Incompatible variable type [9]: trainer is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " trainer is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 51,
    "warning_line": "                 trainer: Optional = None,"
  },
  {
    "project": "PyTorchLightning/pytorch-lightning",
    "commit": "7e2e874d9507e6b6f7b96dcf7f44406640381d74",
    "filename": "pytorch_lightning/plugins/plugin_connector.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyTorchLightning-pytorch-lightning/pytorch_lightning/plugins/legacy/plugin_connector.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch_lightning/plugins/plugin_connector.py:39:56 Incompatible parameter type [6]: Expected `Union[List[typing.Any], str]` for 1st positional only parameter to call `PluginConnector._convert_str_custom_plugins` but got `Union[None, List[typing.Any], str]`.",
    "message": " Expected `Union[List[typing.Any], str]` for 1st positional only parameter to call `PluginConnector._convert_str_custom_plugins` but got `Union[None, List[typing.Any], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 39,
    "warning_line": "        self.plugins = self._convert_str_custom_plugins(self.plugins)"
  },
  {
    "project": "PyTorchLightning/pytorch-lightning",
    "commit": "7e2e874d9507e6b6f7b96dcf7f44406640381d74",
    "filename": "pytorch_lightning/plugins/sharded_plugin.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyTorchLightning-pytorch-lightning/pytorch_lightning/plugins/legacy/sharded_plugin.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pytorch_lightning/plugins/sharded_plugin.py:41:4 Inconsistent override [15]: `pytorch_lightning.plugins.sharded_plugin.DDPShardedPlugin.optimizer_state` overrides method defined in `DDPPlugin` inconsistently. Returned type `Optional[typing.Dict[typing.Any, typing.Any]]` is not a subtype of the overridden return `typing.Dict[typing.Any, typing.Any]`.",
    "message": " `pytorch_lightning.plugins.sharded_plugin.DDPShardedPlugin.optimizer_state` overrides method defined in `DDPPlugin` inconsistently. Returned type `Optional[typing.Dict[typing.Any, typing.Any]]` is not a subtype of the overridden return `typing.Dict[typing.Any, typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 41,
    "warning_line": "    def optimizer_state(self, optimizer: 'OSS') -> Optional[dict]:"
  }
]