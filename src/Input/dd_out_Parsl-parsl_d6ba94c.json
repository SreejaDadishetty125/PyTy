[
  {
    "project": "Parsl/parsl",
    "commit": "d6ba94c38239a476c52b15a8d9e8e6b11eb1175a",
    "filename": "parsl/monitoring/monitoring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Parsl-parsl/parsl/monitoring/monitoring.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "parsl/monitoring/monitoring.py:476:39 Incompatible parameter type [6]: Expected `Tuple[Dict[str, typing.Any], int]` for 1st positional only parameter to call `queue.Queue.put` but got `Tuple[Tuple[typing.Any, typing.Any], int]`.",
    "message": " Expected `Tuple[Dict[str, typing.Any], int]` for 1st positional only parameter to call `queue.Queue.put` but got `Tuple[Tuple[typing.Any, typing.Any], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 476,
    "warning_line": "                        node_msgs.put((msg, 0))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "              priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n              block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\") -> None:\n        try:\n",
        "source_code_len": 323,
        "target_code": "              priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], Any]]\") -> None:\n        try:\n",
        "target_code_len": 363,
        "diff_format": "@@ -436,5 +436,5 @@\n               priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n-              node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n-              block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n-              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\") -> None:\n+              node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n+              block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n+              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], Any]]\") -> None:\n         try:\n",
        "source_code_with_indent": "              priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n              block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\") -> None:\n        <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "              priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n              resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], Any]]\") -> None:\n        <IND>try:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                   priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n                   block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n                   resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\",\n",
        "source_code_len": 321,
        "target_code": "                   priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\",\n",
        "target_code_len": 361,
        "diff_format": "@@ -504,4 +511,4 @@\n                    priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n-                   node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n-                   block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n+                   node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n+                   block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                    resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\",\n",
        "source_code_with_indent": "                   priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   node_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n                   block_msgs: \"queue.Queue[Tuple[Dict[str, Any], int]]\",\n                   resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                   priority_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   node_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   block_msgs: \"queue.Queue[Tuple[Tuple[MessageType, Dict[str, Any]], int]]\",\n                   resource_msgs: \"queue.Queue[Tuple[Dict[str, Any], str]]\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]