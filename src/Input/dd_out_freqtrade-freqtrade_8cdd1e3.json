[
  {
    "project": "freqtrade/freqtrade",
    "commit": "8cdd1e3aef53aee4bf56b73692c34085ceeaafa1",
    "filename": "freqtrade/optimize/hyperopt_tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/freqtrade-freqtrade/freqtrade/optimize/hyperopt_tools.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "freqtrade/optimize/hyperopt_tools.py:35:12 Incompatible return type [7]: Expected `Path` but got implicit return value of `None`.",
    "message": " Expected `Path` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 35,
    "warning_line": "            return Path(strategy['location'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Any, Dict, List\n\n",
        "source_code_len": 61,
        "target_code": "from pathlib import Path\nfrom typing import Any, Dict, List, Optional\n\n",
        "target_code_len": 71,
        "diff_format": "@@ -5,3 +5,3 @@\n from pathlib import Path\n-from typing import Any, Dict, List\n+from typing import Any, Dict, List, Optional\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Any, Dict, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Any, Dict, List, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def get_strategy_filename(config: Dict, strategy_name: str) -> Path:\n        \"\"\"\n",
        "source_code_len": 103,
        "target_code": "    @staticmethod\n    def get_strategy_filename(config: Dict, strategy_name: str) -> Optional[Path]:\n        \"\"\"\n",
        "target_code_len": 113,
        "diff_format": "@@ -23,3 +23,3 @@\n     @staticmethod\n-    def get_strategy_filename(config: Dict, strategy_name: str) -> Path:\n+    def get_strategy_filename(config: Dict, strategy_name: str) -> Optional[Path]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <IND>@staticmethod\n    def get_strategy_filename(config: Dict, strategy_name: str) -> Path:\n        <IND>",
        "target_code_with_indent": "    <IND>@staticmethod\n    def get_strategy_filename(config: Dict, strategy_name: str) -> Optional[Path]:\n        <IND>"
      }
    ]
  }
]