[
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:79:8 Incompatible variable type [9]: stop_event is declared to have type `asyncio.locks.Event` but is used as type `None`.",
    "message": " stop_event is declared to have type `asyncio.locks.Event` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 79,
    "warning_line": "        stop_event: asyncio.Event = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        watcher_cls: Type[AllWatcher] = DefaultWatcher,\n        watcher_kwargs: Optional[Dict[str, Any]] = None,\n        debounce=1600,\n        normal_sleep=400,\n        min_sleep=50,\n        stop_event: asyncio.Event = None,\n        loop=None,\n    ):\n        self._loop = loop or asyncio.get_event_loop()\n",
        "source_code_len": 317,
        "target_code": "        *,\n        watcher_cls: Type['AllWatcher'] = DefaultWatcher,\n        watcher_kwargs: Optional[Dict[str, Any]] = None,\n        debounce: int = 1600,\n        normal_sleep: int = 400,\n        min_sleep: int = 50,\n        stop_event: Optional[asyncio.Event] = None,\n        loop: Optional[asyncio.AbstractEventLoop] = None,\n    ) -> None:\n        self._loop = loop or asyncio.get_event_loop()\n",
        "target_code_len": 397,
        "diff_format": "@@ -73,10 +71,10 @@\n         *,\n-        watcher_cls: Type[AllWatcher] = DefaultWatcher,\n+        watcher_cls: Type['AllWatcher'] = DefaultWatcher,\n         watcher_kwargs: Optional[Dict[str, Any]] = None,\n-        debounce=1600,\n-        normal_sleep=400,\n-        min_sleep=50,\n-        stop_event: asyncio.Event = None,\n-        loop=None,\n-    ):\n+        debounce: int = 1600,\n+        normal_sleep: int = 400,\n+        min_sleep: int = 50,\n+        stop_event: Optional[asyncio.Event] = None,\n+        loop: Optional[asyncio.AbstractEventLoop] = None,\n+    ) -> None:\n         self._loop = loop or asyncio.get_event_loop()\n",
        "source_code_with_indent": "        *,\n        watcher_cls: Type[AllWatcher] = DefaultWatcher,\n        watcher_kwargs: Optional[Dict[str, Any]] = None,\n        debounce=1600,\n        normal_sleep=400,\n        min_sleep=50,\n        stop_event: asyncio.Event = None,\n        loop=None,\n    ):\n        <IND>self._loop = loop or asyncio.get_event_loop()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        watcher_cls: Type['AllWatcher'] = DefaultWatcher,\n        watcher_kwargs: Optional[Dict[str, Any]] = None,\n        debounce: int = 1600,\n        normal_sleep: int = 400,\n        min_sleep: int = 50,\n        stop_event: Optional[asyncio.Event] = None,\n        loop: Optional[asyncio.AbstractEventLoop] = None,\n    ) -> None:\n        <IND>self._loop = loop or asyncio.get_event_loop()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:175:4 Incompatible variable type [9]: kwargs is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " kwargs is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 175,
    "warning_line": "    kwargs: Dict[str, Any] = None,"
  },
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:176:4 Incompatible variable type [9]: callback is declared to have type `typing.Callable[[Set[Tuple[Change, str]]], None]` but is used as type `None`.",
    "message": " callback is declared to have type `typing.Callable[[Set[Tuple[Change, str]]], None]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 176,
    "warning_line": "    callback: Callable[[Set[Tuple[Change, str]]], None] = None,"
  },
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:206:4 Incompatible variable type [9]: args is declared to have type `Tuple[typing.Any]` but is used as type `Tuple[]`.",
    "message": " args is declared to have type `Tuple[typing.Any]` but is used as type `Tuple[]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 206,
    "warning_line": "    args: Tuple[Any] = (),"
  },
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:207:4 Incompatible variable type [9]: kwargs is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " kwargs is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 207,
    "warning_line": "    kwargs: Dict[str, Any] = None,"
  },
  {
    "project": "samuelcolvin/watchgod",
    "commit": "adf2fcb9d3a6c32948c57ae052646014b6af6374",
    "filename": "watchgod/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/samuelcolvin-watchgod/watchgod/main.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "watchgod/main.py:208:4 Incompatible variable type [9]: callback is declared to have type `typing.Callable[[Set[Tuple[Change, str]]], Awaitable[typing.Any]]` but is used as type `None`.",
    "message": " callback is declared to have type `typing.Callable[[Set[Tuple[Change, str]]], Awaitable[typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 208,
    "warning_line": "    callback: Callable[[Set[Tuple[Change, str]]], Awaitable] = None,"
  }
]