[
  {
    "project": "willmcgugan/rich",
    "commit": "350cbbe6c8db720f1b6c296d92d730e75f6c73fe",
    "filename": "rich/pretty.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/pretty.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/pretty.py:73:12 Incompatible parameter type [6]: Expected `bool` for 5th parameter `no_wrap` to call `pretty_repr` but got `Optional[bool]`.",
    "message": " Expected `bool` for 5th parameter `no_wrap` to call `pretty_repr` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 73,
    "warning_line": "            no_wrap=self.no_wrap if self.no_wrap is not None else options.no_wrap,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from .measure import Measurement\nfrom .text import Text\n",
        "source_code_len": 56,
        "target_code": "from .measure import Measurement\nfrom ._pick import pick_bool\nfrom .text import Text\n",
        "target_code_len": 85,
        "diff_format": "@@ -12,2 +12,3 @@\n from .measure import Measurement\n+from ._pick import pick_bool\n from .text import Text\n",
        "source_code_with_indent": "from .measure import Measurement\nfrom .text import Text\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .measure import Measurement\nfrom ._pick import pick_bool\nfrom .text import Text\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            overflow=self.overflow or options.overflow,\n            no_wrap=self.no_wrap if self.no_wrap is not None else options.no_wrap,\n        )\n",
        "source_code_len": 149,
        "target_code": "            overflow=self.overflow or options.overflow,\n            no_wrap=pick_bool(self.no_wrap, options.no_wrap, True),\n        )\n",
        "target_code_len": 134,
        "diff_format": "@@ -72,3 +73,3 @@\n             overflow=self.overflow or options.overflow,\n-            no_wrap=self.no_wrap if self.no_wrap is not None else options.no_wrap,\n+            no_wrap=pick_bool(self.no_wrap, options.no_wrap, True),\n         )\n",
        "source_code_with_indent": "            overflow=self.overflow or options.overflow,\n            no_wrap=self.no_wrap if self.no_wrap is not None else options.no_wrap,\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            overflow=self.overflow or options.overflow,\n            no_wrap=pick_bool(self.no_wrap, options.no_wrap, True),\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]