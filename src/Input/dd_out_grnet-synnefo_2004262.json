[
  {
    "project": "grnet/synnefo",
    "commit": "2004262b6fefba2c2fcb9e6672227c2aade49476",
    "filename": "commissioning/hlapi/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/grnet-synnefo/commissioning/hlapi/api.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "commissioning/hlapi/api.py:94:20 Unbound name [10]: Name `basestring` is used but not defined in the current scope.",
    "message": " Name `basestring` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 94,
    "warning_line": "    @method_accepts(basestring, basestring, basestring, basestring,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # internal API\n    @method_accepts(basestring, basestring, basestring, basestring,\n                    int, int, int, int, int)\n    @returns(basestring)\n    def __create_attribute_of_node_for_resource(self,\n",
        "source_code_len": 211,
        "target_code": "    # internal API\n    @method_accepts(str, str, str, str,\n                    int, int, int, int, int)\n    @returns(str)\n    def __create_attribute_of_node_for_resource(self,\n",
        "target_code_len": 176,
        "diff_format": "@@ -93,5 +93,5 @@\n     # internal API\n-    @method_accepts(basestring, basestring, basestring, basestring,\n+    @method_accepts(str, str, str, str,\n                     int, int, int, int, int)\n-    @returns(basestring)\n+    @returns(str)\n     def __create_attribute_of_node_for_resource(self,\n",
        "source_code_with_indent": "    # internal API\n    <DED>@method_accepts(basestring, basestring, basestring, basestring,\n                    int, int, int, int, int)\n    @returns(basestring)\n    def __create_attribute_of_node_for_resource(self,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # internal API\n    <DED>@method_accepts(str, str, str, str,\n                    int, int, int, int, int)\n    @returns(str)\n    def __create_attribute_of_node_for_resource(self,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]