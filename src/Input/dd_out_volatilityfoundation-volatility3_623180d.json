[
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "623180ddbda404addc5d46b5e29f93ae233ae446",
    "filename": "volatility/framework/automagic/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/automagic/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/automagic/__init__.py:114:44 Incompatible parameter type [6]: Expected `interfaces.configuration.ConfigurableInterface` for 3rd positional only parameter to call `interfaces.automagic.AutomagicInterface.__call__` but got `requirements.MultiRequirement`.",
    "message": " Expected `interfaces.configuration.ConfigurableInterface` for 3rd positional only parameter to call `interfaces.automagic.AutomagicInterface.__call__` but got `requirements.MultiRequirement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 114,
    "warning_line": "            automagic(context, config_path, requirement, progress_callback)"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "623180ddbda404addc5d46b5e29f93ae233ae446",
    "filename": "volatility/framework/automagic/windows.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/automagic/windows.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/automagic/windows.py:267:42 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `interfaces.layers.Memory.__getitem__` but got `typing.Union[typing.List[typing.Union[bool, bytes, int, str]], bool, bytes, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `interfaces.layers.Memory.__getitem__` but got `typing.Union[typing.List[typing.Union[bool, bytes, int, str]], bool, bytes, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 267,
    "warning_line": "                    hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    physical_layer = requirement.requirements[\"memory_layer\"].config_value(context, sub_config_path)\n                    hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)\n",
        "source_code_len": 232,
        "target_code": "                    physical_layer = requirement.requirements[\"memory_layer\"].config_value(context, sub_config_path)\n                    if not isinstance(physical_layer, str):\n                        raise TypeError(\"Physical layer name is not a string: {}\".format(sub_config_path))\n                    hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)\n",
        "target_code_len": 399,
        "diff_format": "@@ -266,2 +266,4 @@\n                     physical_layer = requirement.requirements[\"memory_layer\"].config_value(context, sub_config_path)\n+                    if not isinstance(physical_layer, str):\n+                        raise TypeError(\"Physical layer name is not a string: {}\".format(sub_config_path))\n                     hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)\n",
        "source_code_with_indent": "                    <IND>physical_layer = requirement.requirements[\"memory_layer\"].config_value(context, sub_config_path)\n                    hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    <IND>physical_layer = requirement.requirements[\"memory_layer\"].config_value(context, sub_config_path)\n                    if not isinstance(physical_layer, str):\n                        <IND>raise TypeError(\"Physical layer name is not a string: {}\".format(sub_config_path))\n                    <DED>hits = context.memory[physical_layer].scan(context, PageMapScanner(useful), progress_callback)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "623180ddbda404addc5d46b5e29f93ae233ae446",
    "filename": "volatility/framework/automagic/windows.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/automagic/windows.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/automagic/windows.py:282:4 Inconsistent override [15]: `volatility.framework.automagic.windows.WintelStacker.stack` overrides method defined in `interfaces.automagic.StackerLayerInterface` inconsistently. Returned type `typing.Optional[str]` is not a subtype of the overridden return `typing.Optional[interfaces.layers.DataLayerInterface]`.",
    "message": " `volatility.framework.automagic.windows.WintelStacker.stack` overrides method defined in `interfaces.automagic.StackerLayerInterface` inconsistently. Returned type `typing.Optional[str]` is not a subtype of the overridden return `typing.Optional[interfaces.layers.DataLayerInterface]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 282,
    "warning_line": "    def stack(cls,"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "623180ddbda404addc5d46b5e29f93ae233ae446",
    "filename": "volatility/framework/interfaces/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/configuration.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/configuration.py:635:30 Incompatible parameter type [6]: Expected `interfaces.layers.DataLayerInterface` for 1st positional only parameter to call `ContextInterface.add_layer` but got `interfaces.objects.ObjectInterface`.",
    "message": " Expected `interfaces.layers.DataLayerInterface` for 1st positional only parameter to call `ContextInterface.add_layer` but got `interfaces.objects.ObjectInterface`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 635,
    "warning_line": "            context.add_layer(obj)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        obj = self._construct_class(context, config_path, args)\n        if obj is not None:\n            context.add_layer(obj)\n",
        "source_code_len": 127,
        "target_code": "        obj = self._construct_class(context, config_path, args)\n        if obj is not None and isinstance(obj, interfaces.layers.DataLayerInterface):\n            context.add_layer(obj)\n",
        "target_code_len": 185,
        "diff_format": "@@ -633,3 +632,3 @@\n         obj = self._construct_class(context, config_path, args)\n-        if obj is not None:\n+        if obj is not None and isinstance(obj, interfaces.layers.DataLayerInterface):\n             context.add_layer(obj)\n",
        "source_code_with_indent": "        <DED>obj = self._construct_class(context, config_path, args)\n        if obj is not None:\n            <IND>context.add_layer(obj)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>obj = self._construct_class(context, config_path, args)\n        if obj is not None and isinstance(obj, interfaces.layers.DataLayerInterface):\n            <IND>context.add_layer(obj)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "623180ddbda404addc5d46b5e29f93ae233ae446",
    "filename": "volatility/framework/interfaces/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/configuration.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/configuration.py:691:40 Incompatible parameter type [6]: Expected `interfaces.symbols.BaseSymbolTableInterface` for 1st positional only parameter to call `interfaces.symbols.SymbolSpaceInterface.append` but got `interfaces.objects.ObjectInterface`.",
    "message": " Expected `interfaces.symbols.BaseSymbolTableInterface` for 1st positional only parameter to call `interfaces.symbols.SymbolSpaceInterface.append` but got `interfaces.objects.ObjectInterface`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 691,
    "warning_line": "            context.symbol_space.append(obj)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        obj = self._construct_class(context, config_path, args)\n        if obj is not None:\n            context.symbol_space.append(obj)\n",
        "source_code_len": 137,
        "target_code": "        obj = self._construct_class(context, config_path, args)\n        if obj is not None and isinstance(obj, interfaces.symbols.SymbolTableInterface):\n            context.symbol_space.append(obj)\n",
        "target_code_len": 198,
        "diff_format": "@@ -689,3 +688,3 @@\n         obj = self._construct_class(context, config_path, args)\n-        if obj is not None:\n+        if obj is not None and isinstance(obj, interfaces.symbols.SymbolTableInterface):\n             context.symbol_space.append(obj)\n",
        "source_code_with_indent": "        <DED><DED>obj = self._construct_class(context, config_path, args)\n        if obj is not None:\n            <IND>context.symbol_space.append(obj)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>obj = self._construct_class(context, config_path, args)\n        if obj is not None and isinstance(obj, interfaces.symbols.SymbolTableInterface):\n            <IND>context.symbol_space.append(obj)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]