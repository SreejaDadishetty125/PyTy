[
  {
    "project": "sanic-org/sanic",
    "commit": "71cc30e5cd409fc2a835d15df2e52e2d03bf67b8",
    "filename": "sanic/server/protocols/websocket_protocol.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sanic-org-sanic/sanic/server/protocols/websocket_protocol.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sanic/server/protocols/websocket_protocol.py:40:8 Incompatible attribute type [8]: Attribute `websocket_max_size` declared in class `WebSocketProtocol` has type `typing.Type[Optional[int]]` but is used as type `Optional[int]`.",
    "message": " Attribute `websocket_max_size` declared in class `WebSocketProtocol` has type `typing.Type[Optional[int]]` but is used as type `Optional[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 40,
    "warning_line": "        self.websocket_max_size = websocket_max_size",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "class WebSocketProtocol(HttpProtocol):\n\n    websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_len": 265,
        "target_code": "class WebSocketProtocol(HttpProtocol):\n    def __init__(\n",
        "target_code_len": 57,
        "diff_format": "@@ -17,9 +18,2 @@\n class WebSocketProtocol(HttpProtocol):\n-\n-    websocket: Optional[WebsocketImplProtocol]\n-    websocket_timeout: float\n-    websocket_max_size = Optional[int]\n-    websocket_ping_interval = Optional[float]\n-    websocket_ping_timeout = Optional[float]\n-\n     def __init__(\n",
        "source_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n\n    <IND>websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n    <IND>def __init__(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "sanic-org/sanic",
    "commit": "71cc30e5cd409fc2a835d15df2e52e2d03bf67b8",
    "filename": "sanic/server/protocols/websocket_protocol.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sanic-org-sanic/sanic/server/protocols/websocket_protocol.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sanic/server/protocols/websocket_protocol.py:65:8 Incompatible attribute type [8]: Attribute `websocket_ping_interval` declared in class `WebSocketProtocol` has type `typing.Type[Optional[float]]` but is used as type `Optional[float]`.",
    "message": " Attribute `websocket_ping_interval` declared in class `WebSocketProtocol` has type `typing.Type[Optional[float]]` but is used as type `Optional[float]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 65,
    "warning_line": "        self.websocket_ping_interval = websocket_ping_interval",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "class WebSocketProtocol(HttpProtocol):\n\n    websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_len": 265,
        "target_code": "class WebSocketProtocol(HttpProtocol):\n    def __init__(\n",
        "target_code_len": 57,
        "diff_format": "@@ -17,9 +18,2 @@\n class WebSocketProtocol(HttpProtocol):\n-\n-    websocket: Optional[WebsocketImplProtocol]\n-    websocket_timeout: float\n-    websocket_max_size = Optional[int]\n-    websocket_ping_interval = Optional[float]\n-    websocket_ping_timeout = Optional[float]\n-\n     def __init__(\n",
        "source_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n\n    <IND>websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n    <IND>def __init__(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "sanic-org/sanic",
    "commit": "71cc30e5cd409fc2a835d15df2e52e2d03bf67b8",
    "filename": "sanic/server/protocols/websocket_protocol.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sanic-org-sanic/sanic/server/protocols/websocket_protocol.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sanic/server/protocols/websocket_protocol.py:66:8 Incompatible attribute type [8]: Attribute `websocket_ping_timeout` declared in class `WebSocketProtocol` has type `typing.Type[Optional[float]]` but is used as type `Optional[float]`.",
    "message": " Attribute `websocket_ping_timeout` declared in class `WebSocketProtocol` has type `typing.Type[Optional[float]]` but is used as type `Optional[float]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 66,
    "warning_line": "        self.websocket_ping_timeout = websocket_ping_timeout",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "class WebSocketProtocol(HttpProtocol):\n\n    websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_len": 265,
        "target_code": "class WebSocketProtocol(HttpProtocol):\n    def __init__(\n",
        "target_code_len": 57,
        "diff_format": "@@ -17,9 +18,2 @@\n class WebSocketProtocol(HttpProtocol):\n-\n-    websocket: Optional[WebsocketImplProtocol]\n-    websocket_timeout: float\n-    websocket_max_size = Optional[int]\n-    websocket_ping_interval = Optional[float]\n-    websocket_ping_timeout = Optional[float]\n-\n     def __init__(\n",
        "source_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n\n    <IND>websocket: Optional[WebsocketImplProtocol]\n    websocket_timeout: float\n    websocket_max_size = Optional[int]\n    websocket_ping_interval = Optional[float]\n    websocket_ping_timeout = Optional[float]\n\n    def __init__(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>class WebSocketProtocol(HttpProtocol):\n    <IND>def __init__(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]