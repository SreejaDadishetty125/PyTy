[
  {
    "project": "nonebot/nonebot2",
    "commit": "22033e1cfb580ca5f6c6c8aad83302bfc6c9e0ca",
    "filename": "nonebot/matcher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/matcher.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/matcher.py:560:24 Incompatible parameter type [6]: Expected `Optional[List[Union[typing.Callable[[typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], Handler]]]` for 4th positional only parameter to call `Matcher.new` but got `List[Handler]`.",
    "message": " Expected `Optional[List[Union[typing.Callable[[typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], Handler]]]` for 4th positional only parameter to call `Matcher.new` but got `List[Handler]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 560,
    "warning_line": "                        self.handlers,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            permission: Optional[Permission] = None,\n            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n            temp: bool = False,\n",
        "source_code_len": 157,
        "target_code": "            permission: Optional[Permission] = None,\n            handlers: Optional[Union[List[T_Handler], List[Handler],\n                                     List[Union[T_Handler, Handler]]]] = None,\n            temp: bool = False,\n",
        "target_code_len": 233,
        "diff_format": "@@ -148,3 +148,4 @@\n             permission: Optional[Permission] = None,\n-            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n+            handlers: Optional[Union[List[T_Handler], List[Handler],\n+                                     List[Union[T_Handler, Handler]]]] = None,\n             temp: bool = False,\n",
        "source_code_with_indent": "            permission: Optional[Permission] = None,\n            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n            temp: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            permission: Optional[Permission] = None,\n            handlers: Optional[Union[List[T_Handler], List[Handler],\n                                     List[Union[T_Handler, Handler]]]] = None,\n            temp: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nonebot/nonebot2",
    "commit": "22033e1cfb580ca5f6c6c8aad83302bfc6c9e0ca",
    "filename": "nonebot/matcher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nonebot-nonebot2/nonebot/matcher.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nonebot/matcher.py:584:24 Incompatible parameter type [6]: Expected `Optional[List[Union[typing.Callable[[typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], Handler]]]` for 4th positional only parameter to call `Matcher.new` but got `List[Handler]`.",
    "message": " Expected `Optional[List[Union[typing.Callable[[typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], typing.Callable[[typing.Any, typing.Any, typing.Any, typing.Any], Union[typing.Awaitable[None], typing.Awaitable[NoReturn]]], Handler]]]` for 4th positional only parameter to call `Matcher.new` but got `List[Handler]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 584,
    "warning_line": "                        self.handlers,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            permission: Optional[Permission] = None,\n            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n            temp: bool = False,\n",
        "source_code_len": 157,
        "target_code": "            permission: Optional[Permission] = None,\n            handlers: Optional[Union[List[T_Handler], List[Handler],\n                                     List[Union[T_Handler, Handler]]]] = None,\n            temp: bool = False,\n",
        "target_code_len": 233,
        "diff_format": "@@ -148,3 +148,4 @@\n             permission: Optional[Permission] = None,\n-            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n+            handlers: Optional[Union[List[T_Handler], List[Handler],\n+                                     List[Union[T_Handler, Handler]]]] = None,\n             temp: bool = False,\n",
        "source_code_with_indent": "            permission: Optional[Permission] = None,\n            handlers: Optional[List[Union[T_Handler, Handler]]] = None,\n            temp: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            permission: Optional[Permission] = None,\n            handlers: Optional[Union[List[T_Handler], List[Handler],\n                                     List[Union[T_Handler, Handler]]]] = None,\n            temp: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]