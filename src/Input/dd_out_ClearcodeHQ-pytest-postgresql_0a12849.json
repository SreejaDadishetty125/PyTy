[
  {
    "project": "ClearcodeHQ/pytest-postgresql",
    "commit": "0a12849075a281010183becd1bbcce3b537a476f",
    "filename": "src/pytest_postgresql/janitor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ClearcodeHQ-pytest-postgresql/src/pytest_postgresql/janitor.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "src/pytest_postgresql/janitor.py:89:41 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `DatabaseJanitor._dont_datallowconn` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `DatabaseJanitor._dont_datallowconn` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "            self._dont_datallowconn(cur, self.dbname)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        port: int,\n        dbname: Optional[str],\n        version: Union[str, float, Version],\n        password: str = None,\n",
        "source_code_len": 125,
        "target_code": "        port: int,\n        dbname: str,\n        version: Union[str, float, Version],  # type: ignore[valid-type]\n        password: str = None,\n",
        "target_code_len": 143,
        "diff_format": "@@ -27,4 +27,4 @@\n         port: int,\n-        dbname: Optional[str],\n-        version: Union[str, float, Version],\n+        dbname: str,\n+        version: Union[str, float, Version],  # type: ignore[valid-type]\n         password: str = None,\n",
        "source_code_with_indent": "        port: int,\n        dbname: Optional[str],\n        version: Union[str, float, Version],\n        password: str = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        port: int,\n        dbname: str,\n        version: Union[str, float, Version],  # type: ignore[valid-type]\n        password: str = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ClearcodeHQ/pytest-postgresql",
    "commit": "0a12849075a281010183becd1bbcce3b537a476f",
    "filename": "src/pytest_postgresql/janitor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ClearcodeHQ-pytest-postgresql/src/pytest_postgresql/janitor.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "src/pytest_postgresql/janitor.py:90:44 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `DatabaseJanitor._terminate_connection` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `DatabaseJanitor._terminate_connection` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "            self._terminate_connection(cur, self.dbname)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        port: int,\n        dbname: Optional[str],\n        version: Union[str, float, Version],\n        password: str = None,\n",
        "source_code_len": 125,
        "target_code": "        port: int,\n        dbname: str,\n        version: Union[str, float, Version],  # type: ignore[valid-type]\n        password: str = None,\n",
        "target_code_len": 143,
        "diff_format": "@@ -27,4 +27,4 @@\n         port: int,\n-        dbname: Optional[str],\n-        version: Union[str, float, Version],\n+        dbname: str,\n+        version: Union[str, float, Version],  # type: ignore[valid-type]\n         password: str = None,\n",
        "source_code_with_indent": "        port: int,\n        dbname: Optional[str],\n        version: Union[str, float, Version],\n        password: str = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        port: int,\n        dbname: str,\n        version: Union[str, float, Version],  # type: ignore[valid-type]\n        password: str = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ClearcodeHQ/pytest-postgresql",
    "commit": "0a12849075a281010183becd1bbcce3b537a476f",
    "filename": "src/pytest_postgresql/janitor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ClearcodeHQ-pytest-postgresql/src/pytest_postgresql/janitor.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pytest_postgresql/janitor.py:113:8 Incompatible variable type [9]: _loader is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " _loader is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 113,
    "warning_line": "        _loader: Callable = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        _loader: Callable = None\n        if isinstance(load, str):\n            if \"/\" in load:\n                _loader = partial(loader, load)\n            else:\n",
        "source_code_len": 173,
        "target_code": "        \"\"\"\n        if isinstance(load, str):\n            if \"/\" in load:\n                _loader: Callable = partial(loader, load)\n            else:\n",
        "target_code_len": 150,
        "diff_format": "@@ -112,6 +112,5 @@\n         \"\"\"\n-        _loader: Callable = None\n         if isinstance(load, str):\n             if \"/\" in load:\n-                _loader = partial(loader, load)\n+                _loader: Callable = partial(loader, load)\n             else:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        _loader: Callable = None\n        if isinstance(load, str):\n            <IND>if \"/\" in load:\n                <IND>_loader = partial(loader, load)\n            <DED>else:\n",
        "target_code_with_indent": "\n        if isinstance(load, str):\n            <IND>if \"/\" in load:\n                <IND>_loader: Callable = partial(loader, load)\n            <DED>else:\n"
      }
    ]
  }
]