[
  {
    "project": "ivopetiz/algotrading",
    "commit": "faccdf2c1751da81306bcf571e4bd9f4d203b243",
    "filename": "cryptoalgotrading/riskmanagement.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ivopetiz-algotrading/cryptoalgotrading/riskmanagement.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cryptoalgotrading/riskmanagement.py:143:34 Invalid type [31]: Expression `(bool, dict)` is not a valid type.",
    "message": " Expression `(bool, dict)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 143,
    "warning_line": "            price: float = 0) -> (bool, dict):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import time\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_len": 64,
        "target_code": "import time\nfrom typing import Tuple\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "target_code_len": 89,
        "diff_format": "@@ -5,2 +5,3 @@\n import time\n+from typing import Tuple\n import cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_with_indent": "import time\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import time\nfrom typing import Tuple\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # amount: float = 0,\n            price: float = 0) -> (bool, dict):\n        \"\"\"\n",
        "source_code_len": 92,
        "target_code": "            # amount: float = 0,\n            price: float = 0) -> Tuple[bool, dict]:\n        \"\"\"\n",
        "target_code_len": 97,
        "diff_format": "@@ -142,3 +143,3 @@\n             # amount: float = 0,\n-            price: float = 0) -> (bool, dict):\n+            price: float = 0) -> Tuple[bool, dict]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            # amount: float = 0,\n            price: float = 0) -> (bool, dict):\n        <IND>",
        "target_code_with_indent": "            # amount: float = 0,\n            price: float = 0) -> Tuple[bool, dict]:\n        <IND>"
      }
    ]
  },
  {
    "project": "ivopetiz/algotrading",
    "commit": "faccdf2c1751da81306bcf571e4bd9f4d203b243",
    "filename": "cryptoalgotrading/riskmanagement.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ivopetiz-algotrading/cryptoalgotrading/riskmanagement.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cryptoalgotrading/riskmanagement.py:199:38 Invalid type [31]: Expression `(bool, dict)` is not a valid type.",
    "message": " Expression `(bool, dict)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 199,
    "warning_line": "             quantity: float = 0) -> (bool, dict):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import time\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_len": 64,
        "target_code": "import time\nfrom typing import Tuple\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "target_code_len": 89,
        "diff_format": "@@ -5,2 +5,3 @@\n import time\n+from typing import Tuple\n import cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_with_indent": "import time\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import time\nfrom typing import Tuple\nimport cryptoalgotrading.lib_bittrex as lib_bittrex\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "             currency: str = 'USDT',\n             quantity: float = 0) -> (bool, dict):\n        \"\"\"\n",
        "source_code_len": 100,
        "target_code": "             currency: str = 'USDT',\n             quantity: float = 0) -> Tuple[bool, dict]:\n        \"\"\"\n",
        "target_code_len": 105,
        "diff_format": "@@ -198,3 +199,3 @@\n              currency: str = 'USDT',\n-             quantity: float = 0) -> (bool, dict):\n+             quantity: float = 0) -> Tuple[bool, dict]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "             currency: str = 'USDT',\n             quantity: float = 0) -> (bool, dict):\n        <IND>",
        "target_code_with_indent": "             currency: str = 'USDT',\n             quantity: float = 0) -> Tuple[bool, dict]:\n        <IND>"
      }
    ]
  }
]