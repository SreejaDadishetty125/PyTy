[
  {
    "project": "deepdrive/deepdrive",
    "commit": "85a4e605a5b90645541340be852f37e37b583693",
    "filename": "recorder/Recorder.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepdrive-deepdrive/recorder/Recorder.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "recorder/Recorder.py:213:59 Invalid type [31]: Expression `(str, str, typing.List[str])` is not a valid type.",
    "message": " Expression `(str, str, typing.List[str])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 213,
    "warning_line": "                         hdf5_observations: List[str]) -> (str, str, List[str]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import shutil\nfrom typing import List\n\n",
        "source_code_len": 39,
        "target_code": "import shutil\nfrom typing import List, Tuple\n\n",
        "target_code_len": 46,
        "diff_format": "@@ -1,3 +1,3 @@\n import shutil\n-from typing import List\n+from typing import List, Tuple\n \n",
        "source_code_with_indent": "import shutil\nfrom typing import List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import shutil\nfrom typing import List, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def upload_artifacts(mp4_file:str,\n                         hdf5_observations: List[str]) -> (str, str, List[str]):\n        youtube_id = utils.upload_to_youtube(mp4_file)\n",
        "source_code_len": 193,
        "target_code": "    @staticmethod\n    def upload_artifacts(mp4_file:str, hdf5_observations: List[str]) \\\n            -> Tuple[str, str, str, List[str]]:\n        youtube_id = utils.upload_to_youtube(mp4_file)\n",
        "target_code_len": 192,
        "diff_format": "@@ -211,4 +211,4 @@\n     @staticmethod\n-    def upload_artifacts(mp4_file:str,\n-                         hdf5_observations: List[str]) -> (str, str, List[str]):\n+    def upload_artifacts(mp4_file:str, hdf5_observations: List[str]) \\\n+            -> Tuple[str, str, str, List[str]]:\n         youtube_id = utils.upload_to_youtube(mp4_file)\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def upload_artifacts(mp4_file:str,\n                         hdf5_observations: List[str]) -> (str, str, List[str]):\n        <IND>youtube_id = utils.upload_to_youtube(mp4_file)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent_exact_match": false,
        "target_code_with_indent": "    <DED>@staticmethod\n    def upload_artifacts(mp4_file:str, hdf5_observations: List[str])            -> Tuple[str, str, str, List[str]]:\n        <IND>youtube_id = utils.upload_to_youtube(mp4_file)\n"
      }
    ]
  }
]