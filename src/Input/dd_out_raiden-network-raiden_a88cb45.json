[
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:57:8 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 5th parameter `target` to call `EventPaymentSentSuccess.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 5th parameter `target` to call `EventPaymentSentSuccess.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "        target=transfer_description.target,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        amount=transfer_description.amount,\n        target=transfer_description.target,\n    )\n",
        "source_code_len": 94,
        "target_code": "        amount=transfer_description.amount,\n        target=typing.cast(typing.TargetAddress, transfer_description.target),\n    )\n",
        "target_code_len": 129,
        "diff_format": "@@ -56,3 +56,3 @@\n         amount=transfer_description.amount,\n-        target=transfer_description.target,\n+        target=typing.cast(typing.TargetAddress, transfer_description.target),\n     )\n",
        "source_code_with_indent": "        amount=transfer_description.amount,\n        target=transfer_description.target,\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        amount=transfer_description.amount,\n        target=typing.cast(typing.TargetAddress, transfer_description.target),\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:96:38 Incompatible parameter type [6]: Expected `typing.List[raiden.transfer.architecture.Event]` for 2nd positional only parameter to call `TransitionResult.__init__` but got `typing.List[raiden.transfer.mediated_transfer.events.SendLockExpired]`.",
    "message": " Expected `typing.List[raiden.transfer.architecture.Event]` for 2nd positional only parameter to call `TransitionResult.__init__` but got `typing.List[raiden.transfer.mediated_transfer.events.SendLockExpired]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 96,
    "warning_line": "        return TransitionResult(None, expired_lock_events)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer import channel\nfrom raiden.transfer.architecture import TransitionResult\nfrom raiden.transfer.events import EventPaymentSentFailed, EventPaymentSentSuccess\n",
        "source_code_len": 177,
        "target_code": "from raiden.transfer import channel\nfrom raiden.transfer.architecture import Event, TransitionResult\nfrom raiden.transfer.events import EventPaymentSentFailed, EventPaymentSentSuccess\n",
        "target_code_len": 184,
        "diff_format": "@@ -5,3 +5,3 @@\n from raiden.transfer import channel\n-from raiden.transfer.architecture import TransitionResult\n+from raiden.transfer.architecture import Event, TransitionResult\n from raiden.transfer.events import EventPaymentSentFailed, EventPaymentSentSuccess\n",
        "source_code_with_indent": "from raiden.transfer import channel\nfrom raiden.transfer.architecture import TransitionResult\nfrom raiden.transfer.events import EventPaymentSentFailed, EventPaymentSentSuccess\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer import channel\nfrom raiden.transfer.architecture import Event, TransitionResult\nfrom raiden.transfer.events import EventPaymentSentFailed, EventPaymentSentSuccess\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        )\n        return TransitionResult(None, expired_lock_events)\n    else:\n",
        "source_code_len": 79,
        "target_code": "        )\n        return TransitionResult(\n            None,\n            typing.cast(typing.List[Event], expired_lock_events),\n        )\n    else:\n",
        "target_code_len": 147,
        "diff_format": "@@ -95,3 +96,6 @@\n         )\n-        return TransitionResult(None, expired_lock_events)\n+        return TransitionResult(\n+            None,\n+            typing.cast(typing.List[Event], expired_lock_events),\n+        )\n     else:\n",
        "source_code_with_indent": "        )\n        return TransitionResult(None, expired_lock_events)\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        )\n        return TransitionResult(\n            None,\n            typing.cast(typing.List[Event], expired_lock_events),\n        )\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:170:12 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 170,
    "warning_line": "            target=transfer_description.target,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            identifier=transfer_description.payment_identifier,\n            target=transfer_description.target,\n            reason=reason,\n",
        "source_code_len": 139,
        "target_code": "            identifier=transfer_description.payment_identifier,\n            target=typing.cast(\n                typing.TargetAddress,\n                transfer_description.target,\n            ),\n            reason=reason,\n",
        "target_code_len": 221,
        "diff_format": "@@ -169,3 +173,6 @@\n             identifier=transfer_description.payment_identifier,\n-            target=transfer_description.target,\n+            target=typing.cast(\n+                typing.TargetAddress,\n+                transfer_description.target,\n+            ),\n             reason=reason,\n",
        "source_code_with_indent": "            identifier=transfer_description.payment_identifier,\n            target=transfer_description.target,\n            reason=reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            identifier=transfer_description.payment_identifier,\n            target=typing.cast(\n                typing.TargetAddress,\n                transfer_description.target,\n            ),\n            reason=reason,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:218:8 Incompatible parameter type [6]: Expected `typing.InitiatorAddress` for 2nd positional only parameter to call `channel.send_lockedtransfer` but got `typing.Address`.",
    "message": " Expected `typing.InitiatorAddress` for 2nd positional only parameter to call `channel.send_lockedtransfer` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 218,
    "warning_line": "        transfer_description.initiator,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_len": 165,
        "target_code": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_len": 378,
        "diff_format": "@@ -217,5 +224,14 @@\n         channel_state,\n-        transfer_description.initiator,\n-        transfer_description.target,\n-        transfer_description.amount,\n+        typing.cast(\n+            typing.InitiatorAddress,\n+            transfer_description.initiator,\n+        ),\n+        typing.cast(\n+            typing.TargetAddress,\n+            transfer_description.target,\n+        ),\n+        typing.cast(\n+            typing.PaymentAmount,\n+            transfer_description.amount,\n+        ),\n         message_identifier,\n",
        "source_code_with_indent": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:219:8 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 3rd positional only parameter to call `channel.send_lockedtransfer` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 3rd positional only parameter to call `channel.send_lockedtransfer` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 219,
    "warning_line": "        transfer_description.target,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_len": 165,
        "target_code": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_len": 378,
        "diff_format": "@@ -217,5 +224,14 @@\n         channel_state,\n-        transfer_description.initiator,\n-        transfer_description.target,\n-        transfer_description.amount,\n+        typing.cast(\n+            typing.InitiatorAddress,\n+            transfer_description.initiator,\n+        ),\n+        typing.cast(\n+            typing.TargetAddress,\n+            transfer_description.target,\n+        ),\n+        typing.cast(\n+            typing.PaymentAmount,\n+            transfer_description.amount,\n+        ),\n         message_identifier,\n",
        "source_code_with_indent": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:220:8 Incompatible parameter type [6]: Expected `typing.PaymentAmount` for 4th positional only parameter to call `channel.send_lockedtransfer` but got `typing.TokenAmount`.",
    "message": " Expected `typing.PaymentAmount` for 4th positional only parameter to call `channel.send_lockedtransfer` but got `typing.TokenAmount`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 220,
    "warning_line": "        transfer_description.amount,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_len": 165,
        "target_code": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_len": 378,
        "diff_format": "@@ -217,5 +224,14 @@\n         channel_state,\n-        transfer_description.initiator,\n-        transfer_description.target,\n-        transfer_description.amount,\n+        typing.cast(\n+            typing.InitiatorAddress,\n+            transfer_description.initiator,\n+        ),\n+        typing.cast(\n+            typing.TargetAddress,\n+            transfer_description.target,\n+        ),\n+        typing.cast(\n+            typing.PaymentAmount,\n+            transfer_description.amount,\n+        ),\n         message_identifier,\n",
        "source_code_with_indent": "        channel_state,\n        transfer_description.initiator,\n        transfer_description.target,\n        transfer_description.amount,\n        message_identifier,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        channel_state,\n        typing.cast(\n            typing.InitiatorAddress,\n            transfer_description.initiator,\n        ),\n        typing.cast(\n            typing.TargetAddress,\n            transfer_description.target,\n        ),\n        typing.cast(\n            typing.PaymentAmount,\n            transfer_description.amount,\n        ),\n        message_identifier,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "a88cb458d7f9349a523178e65154962297786bfe",
    "filename": "raiden/transfer/mediated_transfer/initiator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/initiator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/initiator.py:285:12 Incompatible parameter type [6]: Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "message": " Expected `typing.TargetAddress` for 4th parameter `target` to call `EventPaymentSentFailed.__init__` but got `typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 285,
    "warning_line": "            target=initiator_state.transfer_description.target,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            identifier=initiator_state.transfer_description.payment_identifier,\n            target=initiator_state.transfer_description.target,\n            reason='bad secret request message from target',\n",
        "source_code_len": 205,
        "target_code": "            identifier=initiator_state.transfer_description.payment_identifier,\n            target=typing.cast(\n                typing.TargetAddress,\n                initiator_state.transfer_description.target,\n            ),\n            reason='bad secret request message from target',\n",
        "target_code_len": 287,
        "diff_format": "@@ -284,3 +300,6 @@\n             identifier=initiator_state.transfer_description.payment_identifier,\n-            target=initiator_state.transfer_description.target,\n+            target=typing.cast(\n+                typing.TargetAddress,\n+                initiator_state.transfer_description.target,\n+            ),\n             reason='bad secret request message from target',\n",
        "source_code_with_indent": "            identifier=initiator_state.transfer_description.payment_identifier,\n            target=initiator_state.transfer_description.target,\n            reason='bad secret request message from target',\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            identifier=initiator_state.transfer_description.payment_identifier,\n            target=typing.cast(\n                typing.TargetAddress,\n                initiator_state.transfer_description.target,\n            ),\n            reason='bad secret request message from target',\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]