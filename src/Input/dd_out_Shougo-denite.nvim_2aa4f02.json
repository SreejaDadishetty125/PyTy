[
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/filter/sorter/rank.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/filter/sorter/rank.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/filter/sorter/rank.py:52:54 Incompatible parameter type [6]: Expected `typing.List[str]` for 2nd positional only parameter to call `find_end_of_match` but got `str`.",
    "message": " Expected `typing.List[str]` for 2nd positional only parameter to call `find_end_of_match` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 52,
    "warning_line": "        score, last_index = find_end_of_match(string, tail, first_index)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if last_index and score < best_score:\n            best_score = score\n",
        "source_code_len": 78,
        "target_code": "\n        if last_index and score and score < best_score:\n            best_score = score\n",
        "target_code_len": 88,
        "diff_format": "@@ -53,3 +53,3 @@\n \n-        if last_index and score < best_score:\n+        if last_index and score and score < best_score:\n             best_score = score\n",
        "source_code_with_indent": "\n        if last_index and score < best_score:\n            <IND>best_score = score\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        if last_index and score and score < best_score:\n            <IND>best_score = score\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_len": 190,
        "target_code": "\ndef find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_len": 238,
        "diff_format": "@@ -62,4 +62,5 @@\n \n-def find_end_of_match(to_match: str, chars: typing.List[str],\n-                      first_index: int) -> typing.Tuple[float, int]:\n+def find_end_of_match(to_match: str, chars: str,\n+                      first_index: int) -> typing.Tuple[\n+                          typing.Optional[float], typing.Optional[int]]:\n     score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/filter/sorter/rank.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/filter/sorter/rank.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/filter/sorter/rank.py:71:12 Incompatible return type [7]: Expected `typing.Tuple[float, int]` but got `typing.Tuple[None, None]`.",
    "message": " Expected `typing.Tuple[float, int]` but got `typing.Tuple[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 71,
    "warning_line": "            return None, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if last_index and score < best_score:\n            best_score = score\n",
        "source_code_len": 78,
        "target_code": "\n        if last_index and score and score < best_score:\n            best_score = score\n",
        "target_code_len": 88,
        "diff_format": "@@ -53,3 +53,3 @@\n \n-        if last_index and score < best_score:\n+        if last_index and score and score < best_score:\n             best_score = score\n",
        "source_code_with_indent": "\n        if last_index and score < best_score:\n            <IND>best_score = score\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        if last_index and score and score < best_score:\n            <IND>best_score = score\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_len": 190,
        "target_code": "\ndef find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_len": 238,
        "diff_format": "@@ -62,4 +62,5 @@\n \n-def find_end_of_match(to_match: str, chars: typing.List[str],\n-                      first_index: int) -> typing.Tuple[float, int]:\n+def find_end_of_match(to_match: str, chars: str,\n+                      first_index: int) -> typing.Tuple[\n+                          typing.Optional[float], typing.Optional[int]]:\n     score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/filter/sorter/rank.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/filter/sorter/rank.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/filter/sorter/rank.py:73:12 Incompatible return type [7]: Expected `typing.Tuple[float, int]` but got `typing.Tuple[None, None]`.",
    "message": " Expected `typing.Tuple[float, int]` but got `typing.Tuple[None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 73,
    "warning_line": "            return None, None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if last_index and score < best_score:\n            best_score = score\n",
        "source_code_len": 78,
        "target_code": "\n        if last_index and score and score < best_score:\n            best_score = score\n",
        "target_code_len": 88,
        "diff_format": "@@ -53,3 +53,3 @@\n \n-        if last_index and score < best_score:\n+        if last_index and score and score < best_score:\n             best_score = score\n",
        "source_code_with_indent": "\n        if last_index and score < best_score:\n            <IND>best_score = score\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        if last_index and score and score < best_score:\n            <IND>best_score = score\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_len": 190,
        "target_code": "\ndef find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_len": 238,
        "diff_format": "@@ -62,4 +62,5 @@\n \n-def find_end_of_match(to_match: str, chars: typing.List[str],\n-                      first_index: int) -> typing.Tuple[float, int]:\n+def find_end_of_match(to_match: str, chars: str,\n+                      first_index: int) -> typing.Tuple[\n+                          typing.Optional[float], typing.Optional[int]]:\n     score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: typing.List[str],\n                      first_index: int) -> typing.Tuple[float, int]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def find_end_of_match(to_match: str, chars: str,\n                      first_index: int) -> typing.Tuple[\n                          typing.Optional[float], typing.Optional[int]]:\n    <IND>score, last_index, last_type = 1.0, first_index, None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/command.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/command.py:40:35 Unsupported operand [58]: `+` is not supported for operand types `typing.List[str]` and `typing.List[typing.Dict[str, typing.Any]]`.",
    "message": " `+` is not supported for operand types `typing.List[str]` and `typing.List[typing.Dict[str, typing.Any]]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 40,
    "warning_line": "            return self.commands + [{",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.kind = 'command'\n        self.commands: typing.List[str] = []\n\n",
        "source_code_len": 76,
        "target_code": "        self.kind = 'command'\n        self.commands: Candidates = []\n\n",
        "target_code_len": 70,
        "diff_format": "@@ -21,3 +20,3 @@\n         self.kind = 'command'\n-        self.commands: typing.List[str] = []\n+        self.commands: Candidates = []\n \n",
        "source_code_with_indent": "        self.kind = 'command'\n        self.commands: typing.List[str] = []\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.kind = 'command'\n        self.commands: Candidates = []\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/command.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/command.py:68:41 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `list.append` but got `typing.Dict[str, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `list.append` but got `typing.Dict[str, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 68,
    "warning_line": "                    self.commands.append({",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.kind = 'command'\n        self.commands: typing.List[str] = []\n\n",
        "source_code_len": 76,
        "target_code": "        self.kind = 'command'\n        self.commands: Candidates = []\n\n",
        "target_code_len": 70,
        "diff_format": "@@ -21,3 +20,3 @@\n         self.kind = 'command'\n-        self.commands: typing.List[str] = []\n+        self.commands: Candidates = []\n \n",
        "source_code_with_indent": "        self.kind = 'command'\n        self.commands: typing.List[str] = []\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.kind = 'command'\n        self.commands: Candidates = []\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/file/point.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/file/point.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/file/point.py:55:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 55,
    "warning_line": "        return ''",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _checkhost(path: str) -> bool:\n    if not match(r'https?://', path):\n",
        "source_code_len": 74,
        "target_code": "\ndef _checkhost(path: str) -> str:\n    if not match(r'https?://', path):\n",
        "target_code_len": 73,
        "diff_format": "@@ -52,3 +52,3 @@\n \n-def _checkhost(path: str) -> bool:\n+def _checkhost(path: str) -> str:\n     if not match(r'https?://', path):\n",
        "source_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> bool:\n    <IND>if not match(r'https?://', path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> str:\n    <IND>if not match(r'https?://', path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/file/point.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/file/point.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/file/point.py:59:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 59,
    "warning_line": "        return gethostbyname(sub(r'/.*$', '', sub(r'^\\w+://', '', path)))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _checkhost(path: str) -> bool:\n    if not match(r'https?://', path):\n",
        "source_code_len": 74,
        "target_code": "\ndef _checkhost(path: str) -> str:\n    if not match(r'https?://', path):\n",
        "target_code_len": 73,
        "diff_format": "@@ -52,3 +52,3 @@\n \n-def _checkhost(path: str) -> bool:\n+def _checkhost(path: str) -> str:\n     if not match(r'https?://', path):\n",
        "source_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> bool:\n    <IND>if not match(r'https?://', path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> str:\n    <IND>if not match(r'https?://', path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/file/point.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/file/point.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/file/point.py:61:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 61,
    "warning_line": "        return ''",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _checkhost(path: str) -> bool:\n    if not match(r'https?://', path):\n",
        "source_code_len": 74,
        "target_code": "\ndef _checkhost(path: str) -> str:\n    if not match(r'https?://', path):\n",
        "target_code_len": 73,
        "diff_format": "@@ -52,3 +52,3 @@\n \n-def _checkhost(path: str) -> bool:\n+def _checkhost(path: str) -> str:\n     if not match(r'https?://', path):\n",
        "source_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> bool:\n    <IND>if not match(r'https?://', path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def _checkhost(path: str) -> str:\n    <IND>if not match(r'https?://', path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/file/rec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/file/rec.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/file/rec.py:48:20 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Source.parse_command_for_scantree` but got `typing.List[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `Source.parse_command_for_scantree` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 48,
    "warning_line": "                    ['scantree.py', '--path', ':directory'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def parse_command_for_scantree(self, cmd: str) -> typing.List[str]:\n        \"\"\"Given the user choice for --ignore get the corresponding value\"\"\"\n",
        "source_code_len": 150,
        "target_code": "\n    def parse_command_for_scantree(self,\n                                   cmd: typing.List[str]) -> typing.List[str]:\n        \"\"\"Given the user choice for --ignore get the corresponding value\"\"\"\n",
        "target_code_len": 198,
        "diff_format": "@@ -142,3 +143,4 @@\n \n-    def parse_command_for_scantree(self, cmd: str) -> typing.List[str]:\n+    def parse_command_for_scantree(self,\n+                                   cmd: typing.List[str]) -> typing.List[str]:\n         \"\"\"Given the user choice for --ignore get the corresponding value\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def parse_command_for_scantree(self, cmd: str) -> typing.List[str]:\n        <IND>\"\"\"Given the user choice for --ignore get the corresponding value\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def parse_command_for_scantree(self,\n                                   cmd: typing.List[str]) -> typing.List[str]:\n        <IND>\"\"\"Given the user choice for --ignore get the corresponding value\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/file/rec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/file/rec.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/file/rec.py:130:16 Incompatible return type [7]: Expected `str` but got `typing.Optional[str]`.",
    "message": " Expected `str` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 130,
    "warning_line": "                return shutil.which(exe)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for exe in ['python3', 'python']:\n            if shutil.which(exe) is not None:\n                return shutil.which(exe)\n\n",
        "source_code_len": 130,
        "target_code": "        for exe in ['python3', 'python']:\n            which = shutil.which(exe)\n            if which is not None:\n                return which\n\n",
        "target_code_len": 144,
        "diff_format": "@@ -128,4 +128,5 @@\n         for exe in ['python3', 'python']:\n-            if shutil.which(exe) is not None:\n-                return shutil.which(exe)\n+            which = shutil.which(exe)\n+            if which is not None:\n+                return which\n \n",
        "source_code_with_indent": "        <DED>for exe in ['python3', 'python']:\n            <IND>if shutil.which(exe) is not None:\n                <IND>return shutil.which(exe)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>for exe in ['python3', 'python']:\n            <IND>which = shutil.which(exe)\n            if which is not None:\n                <IND>return which\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/tag.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-denite.nvim/rplugin/python3/denite/source/tag.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/denite/source/tag.py:54:62 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `Source._get_candidate` but got `str`.",
    "message": " Expected `int` for 2nd positional only parameter to call `Source._get_candidate` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 54,
    "warning_line": "                    candidate = self._get_candidate(filename, line)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _get_candidate(self, filename: str, line: int) -> Candidate:\n        if re.match('!', line) or not line:\n            return\n\n",
        "source_code_len": 134,
        "target_code": "\n    def _get_candidate(self, filename: str, line: str) -> Candidate:\n        if re.match('!', line) or not line:\n            return {}\n\n",
        "target_code_len": 137,
        "diff_format": "@@ -59,5 +59,5 @@\n \n-    def _get_candidate(self, filename: str, line: int) -> Candidate:\n+    def _get_candidate(self, filename: str, line: str) -> Candidate:\n         if re.match('!', line) or not line:\n-            return\n+            return {}\n \n",
        "source_code_with_indent": "\n    <DED>def _get_candidate(self, filename: str, line: int) -> Candidate:\n        <IND>if re.match('!', line) or not line:\n            <IND>return\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _get_candidate(self, filename: str, line: str) -> Candidate:\n        <IND>if re.match('!', line) or not line:\n            <IND>return {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/denite.nvim",
    "commit": "2aa4f02d3e4bec82d879c237a87e88d78f243c1d",
    "filename": "rplugin/python3/denite/source/tag.py",
    "min_patch_found": false,
    "full_warning_msg": "rplugin/python3/denite/source/tag.py:61:25 Incompatible parameter type [6]: Expected `Variable[typing.AnyStr <: [str, bytes]]` for 2nd positional only parameter to call `re.match` but got `int`.",
    "exception": "too many values to unpack (expected 2)",
    "dd_fail": true
  }
]