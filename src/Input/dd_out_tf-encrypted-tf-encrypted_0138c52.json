[
  {
    "project": "tf-encrypted/tf-encrypted",
    "commit": "0138c5219f17b18b140cffb1b5070c59260a108c",
    "filename": "tensorflow_encrypted/layers/batchnorm.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tf-encrypted-tf-encrypted/tensorflow_encrypted/layers/batchnorm.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_encrypted/layers/batchnorm.py:19:38 Invalid type [31]: Expression `typing.Union(typing.Tuple[(int, int)], typing.Tuple[(int, int, int, int)])` is not a valid type.",
    "message": " Expression `typing.Union(typing.Tuple[(int, int)], typing.Tuple[(int, int, int, int)])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 19,
    "warning_line": "    def initialize(self, input_shape: Union(Tuple[int, int], Tuple[int, int, int, int])) -> None:"
  }
]