[
  {
    "project": "deephyper/deephyper",
    "commit": "ffa556013d9e51e69cbbbd18e83eae079f17416e",
    "filename": "deephyper/search/search.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deephyper-deephyper/deephyper/search/search.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deephyper/search/search.py:116:12 Incompatible return type [7]: Expected `None` but got `argparse.Namespace`.",
    "message": " Expected `None` but got `argparse.Namespace`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 116,
    "warning_line": "            return parser.parse_args(arg_str)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def parse_args(cls, arg_str=None) -> None:\n        parser = cls.get_parser()\n",
        "source_code_len": 98,
        "target_code": "    @classmethod\n    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n        parser = cls.get_parser()\n",
        "target_code_len": 112,
        "diff_format": "@@ -112,3 +112,3 @@\n     @classmethod\n-    def parse_args(cls, arg_str=None) -> None:\n+    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n         parser = cls.get_parser()\n",
        "source_code_with_indent": "    <DED>@classmethod\n    def parse_args(cls, arg_str=None) -> None:\n        <IND>parser = cls.get_parser()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n        <IND>parser = cls.get_parser()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deephyper/deephyper",
    "commit": "ffa556013d9e51e69cbbbd18e83eae079f17416e",
    "filename": "deephyper/search/search.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deephyper-deephyper/deephyper/search/search.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deephyper/search/search.py:118:12 Incompatible return type [7]: Expected `None` but got `argparse.Namespace`.",
    "message": " Expected `None` but got `argparse.Namespace`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 118,
    "warning_line": "            return parser.parse_args()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def parse_args(cls, arg_str=None) -> None:\n        parser = cls.get_parser()\n",
        "source_code_len": 98,
        "target_code": "    @classmethod\n    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n        parser = cls.get_parser()\n",
        "target_code_len": 112,
        "diff_format": "@@ -112,3 +112,3 @@\n     @classmethod\n-    def parse_args(cls, arg_str=None) -> None:\n+    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n         parser = cls.get_parser()\n",
        "source_code_with_indent": "    <DED>@classmethod\n    def parse_args(cls, arg_str=None) -> None:\n        <IND>parser = cls.get_parser()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    def parse_args(cls, arg_str=None) -> argparse.Namespace:\n        <IND>parser = cls.get_parser()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]