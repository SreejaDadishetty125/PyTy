[
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/datasets/plans/translator/test_mapping.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/datasets/plans/translator/test_mapping.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/datasets/plans/translator/test_mapping.py:27:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 27,
    "warning_line": "            data_source=TableSource(\"my_table\", ColumnSet([])),"
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/datasets/plans/translator/test_mapping.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/datasets/plans/translator/test_mapping.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/datasets/plans/translator/test_mapping.py:75:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 75,
    "warning_line": "            data_source=TableSource(\"my_table\", ColumnSet([])),"
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/datasets/plans/translator/test_mapping.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/datasets/plans/translator/test_mapping.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/datasets/plans/translator/test_mapping.py:149:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd parameter `data_source` to call `SnubaQuery.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 149,
    "warning_line": "            data_source=TableSource(\"my_table\", ColumnSet([])),"
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:32:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 32,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:70:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:149:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 149,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:172:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 172,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:192:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 192,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:246:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 246,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:312:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 312,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:330:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 330,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:355:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 355,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:377:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 377,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:424:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 424,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:454:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 454,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:505:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 505,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:616:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 616,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:691:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 691,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/parser/test_query.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/parser/test_query.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/parser/test_query.py:766:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 766,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_len": 244,
        "target_code": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_len": 244,
        "diff_format": "@@ -5,5 +5,5 @@\n from snuba import state\n-from snuba.clickhouse.columns import ColumnSet\n+from snuba.datasets.entities import EntityKey\n+from snuba.datasets.entities.factory import get_entity\n from snuba.datasets.factory import get_dataset\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent": "from snuba import state\nfrom snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import state\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.factory import get_entity\nfrom snuba.datasets.factory import get_dataset\nfrom snuba.query.conditions import binary_condition, ConditionFunctions\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_len": 108,
        "target_code": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 173,
        "diff_format": "@@ -18,2 +18,3 @@\n from snuba.query import OrderBy, OrderByDirection, SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query import OrderBy, OrderByDirection, SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -31,3 +32,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -69,3 +72,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -148,3 +153,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -171,3 +178,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -191,3 +200,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -245,3 +256,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -311,3 +324,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -329,3 +344,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -354,3 +371,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -376,3 +395,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -423,3 +444,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -453,3 +476,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -504,3 +529,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -615,3 +642,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -690,3 +719,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_len": 167,
        "diff_format": "@@ -765,3 +796,5 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(\n+                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n+            ),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(\n                EntityKey.EVENTS, get_entity(EntityKey.EVENTS).get_data_model()\n            ),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_apdex.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_apdex.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_apdex.py:20:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 20,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -2,3 +2,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "source_code_len": 53,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "target_code_len": 118,
        "diff_format": "@@ -9,2 +9,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import divide, multiply, plus\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +20,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_apdex.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_apdex.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_apdex.py:33:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 33,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -2,3 +2,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "source_code_len": 53,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "target_code_len": 118,
        "diff_format": "@@ -9,2 +9,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import divide, multiply, plus\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import divide, multiply, plus\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +20,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_events_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_events_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_events_column_processor.py:14:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 14,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -6,3 +6,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -12,3 +12,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -23,3 +22,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_events_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_events_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_events_column_processor.py:25:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -6,3 +6,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -12,3 +12,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -23,3 +22,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_events_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_events_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_events_column_processor.py:40:42 Incompatible parameter type [6]: Expected `snuba.clickhouse.query.Query` for 1st positional only parameter to call `EventsColumnProcessor.process_query` but got `Query`.",
    "message": " Expected `snuba.clickhouse.query.Query` for 1st positional only parameter to call `EventsColumnProcessor.process_query` but got `Query`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 40,
    "warning_line": "    EventsColumnProcessor().process_query(unprocessed, HTTPRequestSettings())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -6,3 +6,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -12,3 +12,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -23,3 +22,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_failure_rate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_failure_rate.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_failure_rate.py:20:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 20,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -2,3 +2,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import count, divide\n",
        "source_code_len": 44,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import count, divide\n",
        "target_code_len": 109,
        "diff_format": "@@ -9,2 +9,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import count, divide\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import count, divide\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import count, divide\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +20,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -27,3 +28,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_failure_rate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_failure_rate.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_failure_rate.py:28:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 28,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -2,3 +2,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import count, divide\n",
        "source_code_len": 44,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import count, divide\n",
        "target_code_len": 109,
        "diff_format": "@@ -9,2 +9,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import count, divide\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import count, divide\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import count, divide\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -19,3 +20,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 85,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -27,3 +28,3 @@\n         {},\n-        TableSource(\"events\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:16:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 16,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:32:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 32,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:66:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 66,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:90:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:148:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 148,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_functions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_functions_processor.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_functions_processor.py:162:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 162,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_len": 231,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_len": 288,
        "diff_format": "@@ -4,4 +4,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, CurriedFunctionCall, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -15,3 +16,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -31,3 +32,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -65,3 +66,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -89,3 +90,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -147,3 +148,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -161,3 +162,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:22:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 22,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:33:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 33,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:87:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 87,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:106:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 106,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:117:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 117,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_handled_functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_handled_functions.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_handled_functions.py:171:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 171,
    "warning_line": "        TableSource(\"events\", columnset),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 166,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 158,
        "diff_format": "@@ -3,3 +3,3 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_len": 64,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_len": 129,
        "diff_format": "@@ -10,2 +10,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent": ")\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.exceptions import InvalidExpressionException\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -21,3 +22,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -32,3 +33,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -86,3 +87,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -105,3 +106,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -116,3 +117,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_len": 81,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -170,3 +171,3 @@\n         {},\n-        TableSource(\"events\", columnset),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"events\", columnset),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_pattern_replacer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_pattern_replacer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_pattern_replacer.py:17:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 17,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_len": 222,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_len": 279,
        "diff_format": "@@ -2,4 +2,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -16,3 +17,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -24,3 +25,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -42,3 +43,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -52,3 +53,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_pattern_replacer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_pattern_replacer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_pattern_replacer.py:25:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_len": 222,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_len": 279,
        "diff_format": "@@ -2,4 +2,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -16,3 +17,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -24,3 +25,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -42,3 +43,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -52,3 +53,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_pattern_replacer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_pattern_replacer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_pattern_replacer.py:43:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 43,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_len": 222,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_len": 279,
        "diff_format": "@@ -2,4 +2,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -16,3 +17,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -24,3 +25,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -42,3 +43,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -52,3 +53,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_pattern_replacer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_pattern_replacer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_pattern_replacer.py:53:12 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 53,
    "warning_line": "            TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_len": 222,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_len": 279,
        "diff_format": "@@ -2,4 +2,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query import SelectedExpression\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query import SelectedExpression\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -16,3 +17,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -24,3 +25,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -42,3 +43,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_len": 97,
        "target_code": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_len": 105,
        "diff_format": "@@ -52,3 +53,3 @@\n             {},\n-            TableSource(\"events\", ColumnSet([])),\n+            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n             selected_columns=[\n",
        "source_code_with_indent": "            {},\n            TableSource(\"events\", ColumnSet([])),\n            selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            {},\n            QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n            selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_timeseries_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_timeseries_processor.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_timeseries_processor.py:155:8 Incompatible parameter type [6]: Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 155,
    "warning_line": "        TableSource(\"transactions\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 234,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 226,
        "diff_format": "@@ -5,4 +5,4 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n+from snuba.datasets.entities import EntityKey\n from snuba.datasets.entities.transactions import TransactionsEntity\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_len": 39,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_len": 104,
        "diff_format": "@@ -13,2 +13,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import multiply\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -154,3 +155,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 117,
        "target_code": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 119,
        "diff_format": "@@ -166,3 +167,3 @@\n         {\"granularity\": granularity},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -202,3 +203,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_timeseries_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_timeseries_processor.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_timeseries_processor.py:167:8 Incompatible parameter type [6]: Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 167,
    "warning_line": "        TableSource(\"transactions\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 234,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 226,
        "diff_format": "@@ -5,4 +5,4 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n+from snuba.datasets.entities import EntityKey\n from snuba.datasets.entities.transactions import TransactionsEntity\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_len": 39,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_len": 104,
        "diff_format": "@@ -13,2 +13,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import multiply\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -154,3 +155,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 117,
        "target_code": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 119,
        "diff_format": "@@ -166,3 +167,3 @@\n         {\"granularity\": granularity},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -202,3 +203,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_timeseries_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_timeseries_processor.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_timeseries_processor.py:203:8 Incompatible parameter type [6]: Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 203,
    "warning_line": "        TableSource(\"transactions\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_len": 234,
        "target_code": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_len": 226,
        "diff_format": "@@ -5,4 +5,4 @@\n from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\n+from snuba.datasets.entities import EntityKey\n from snuba.datasets.entities.transactions import TransactionsEntity\n-from snuba.datasets.schemas.tables import TableSource\n from snuba.query import SelectedExpression\n",
        "source_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query import SelectedExpression\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.formatter import ClickhouseExpressionFormatter\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.datasets.entities.transactions import TransactionsEntity\nfrom snuba.query import SelectedExpression\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_len": 39,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_len": 104,
        "diff_format": "@@ -13,2 +13,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.dsl import multiply\n",
        "source_code_with_indent": ")\nfrom snuba.query.dsl import multiply\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.dsl import multiply\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -154,3 +155,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 117,
        "target_code": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 119,
        "diff_format": "@@ -166,3 +167,3 @@\n         {\"granularity\": granularity},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {\"granularity\": granularity},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {\"granularity\": granularity},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_len": 91,
        "target_code": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_len": 93,
        "diff_format": "@@ -202,3 +203,3 @@\n         {},\n-        TableSource(\"transactions\", ColumnSet([])),\n+        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n         selected_columns=[\n",
        "source_code_with_indent": "        {},\n        TableSource(\"transactions\", ColumnSet([])),\n        selected_columns=[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        {},\n        QueryEntity(EntityKey.EVENTS, ColumnSet([])),\n        selected_columns=[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_transaction_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_transaction_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_transaction_column_processor.py:16:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 16,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -8,3 +8,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -14,3 +14,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -26,3 +25,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_transaction_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_transaction_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_transaction_column_processor.py:28:8 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 28,
    "warning_line": "        TableSource(\"events\", ColumnSet([])),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -8,3 +8,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -14,3 +14,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -26,3 +25,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/processors/test_transaction_column_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/processors/test_transaction_column_processor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/processors/test_transaction_column_processor.py:50:47 Incompatible parameter type [6]: Expected `snuba.clickhouse.query.Query` for 1st positional only parameter to call `TransactionColumnProcessor.process_query` but got `Query`.",
    "message": " Expected `snuba.clickhouse.query.Query` for 1st positional only parameter to call `TransactionColumnProcessor.process_query` but got `Query`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "    TransactionColumnProcessor().process_query(unprocessed, HTTPRequestSettings())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_len": 167,
        "target_code": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_len": 170,
        "diff_format": "@@ -8,3 +8,3 @@\n from snuba.query.expressions import Column, FunctionCall, Literal\n-from snuba.query.logical import Query\n+from snuba.clickhouse.query import Query\n from snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.query.logical import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.query.expressions import Column, FunctionCall, Literal\nfrom snuba.clickhouse.query import Query\nfrom snuba.request.request_settings import HTTPRequestSettings\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 83,
        "target_code": "    unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 71,
        "diff_format": "@@ -14,3 +14,2 @@\n     unprocessed = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    <IND>unprocessed = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>unprocessed = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_len": 80,
        "target_code": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_len": 68,
        "diff_format": "@@ -26,3 +25,2 @@\n     expected = Query(\n-        {},\n         TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent": "    expected = Query(\n        {},\n        TableSource(\"events\", ColumnSet([])),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    expected = Query(\n        TableSource(\"events\", ColumnSet([])),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/test_project_extension.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/test_project_extension.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/test_project_extension.py:48:38 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 48,
    "warning_line": "    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Sequence\n\n",
        "source_code_len": 29,
        "target_code": "from typing import Any, Mapping, Sequence\n\n",
        "target_code_len": 43,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Sequence\n+from typing import Any, Mapping, Sequence\n \n",
        "source_code_with_indent": "from typing import Sequence\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Any, Mapping, Sequence\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\nfrom snuba.query.logical import Query\n",
        "source_code_len": 217,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_len": 274,
        "diff_format": "@@ -6,4 +6,5 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query.expressions import Column, Expression, FunctionCall, Literal\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.logical import Query\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\nfrom snuba.query.logical import Query\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query.expressions import Column, Expression, FunctionCall, Literal\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.logical import Query\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def test_project_extension_query_processing(\n    raw_data: dict,\n    expected_conditions: Sequence[Condition],\n    expected_ast_conditions: Expression,\n):\n    extension = ProjectExtension(project_column=\"project_id\")\n    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n    request_settings = HTTPRequestSettings()\n",
        "source_code_len": 412,
        "target_code": "def test_project_extension_query_processing(\n    raw_data: Mapping[str, Any],\n    expected_conditions: Sequence[Condition],\n    expected_ast_conditions: Expression,\n) -> None:\n    extension = ProjectExtension(project_column=\"project_id\")\n    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n    request_settings = HTTPRequestSettings()\n",
        "target_code_len": 438,
        "diff_format": "@@ -41,9 +42,9 @@\n def test_project_extension_query_processing(\n-    raw_data: dict,\n+    raw_data: Mapping[str, Any],\n     expected_conditions: Sequence[Condition],\n     expected_ast_conditions: Expression,\n-):\n+) -> None:\n     extension = ProjectExtension(project_column=\"project_id\")\n     valid_data = validate_jsonschema(raw_data, extension.get_schema())\n-    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n+    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n     request_settings = HTTPRequestSettings()\n",
        "source_code_with_indent": "def test_project_extension_query_processing(\n    raw_data: dict,\n    expected_conditions: Sequence[Condition],\n    expected_ast_conditions: Expression,\n):\n    <IND>extension = ProjectExtension(project_column=\"project_id\")\n    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n    request_settings = HTTPRequestSettings()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def test_project_extension_query_processing(\n    raw_data: Mapping[str, Any],\n    expected_conditions: Sequence[Condition],\n    expected_ast_conditions: Expression,\n) -> None:\n    <IND>extension = ProjectExtension(project_column=\"project_id\")\n    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n    request_settings = HTTPRequestSettings()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "70d55a61f9f4810784341abc760007582b1737f8",
    "filename": "tests/query/test_timeseries_extension.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/tests/query/test_timeseries_extension.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/query/test_timeseries_extension.py:91:38 Incompatible parameter type [6]: Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "message": " Expected `typing.Optional[snuba.query.data_source.simple.Entity]` for 2nd positional only parameter to call `Query.__init__` but got `TableSource`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 91,
    "warning_line": "    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import (\n",
        "source_code_len": 138,
        "target_code": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query.conditions import (\n",
        "target_code_len": 130,
        "diff_format": "@@ -5,3 +6,3 @@\n from snuba.clickhouse.columns import ColumnSet\n-from snuba.datasets.schemas.tables import TableSource\n+from snuba.datasets.entities import EntityKey\n from snuba.query.conditions import (\n",
        "source_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.schemas.tables import TableSource\nfrom snuba.query.conditions import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba.clickhouse.columns import ColumnSet\nfrom snuba.datasets.entities import EntityKey\nfrom snuba.query.conditions import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": ")\nfrom snuba.query.expressions import Column, Expression, Literal\n",
        "source_code_len": 66,
        "target_code": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, Literal\n",
        "target_code_len": 131,
        "diff_format": "@@ -11,2 +12,3 @@\n )\n+from snuba.query.data_source.simple import Entity as QueryEntity\n from snuba.query.expressions import Column, Expression, Literal\n",
        "source_code_with_indent": ")\nfrom snuba.query.expressions import Column, Expression, Literal\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": ")\nfrom snuba.query.data_source.simple import Entity as QueryEntity\nfrom snuba.query.expressions import Column, Expression, Literal\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n\n",
        "source_code_len": 151,
        "target_code": "    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n\n",
        "target_code_len": 156,
        "diff_format": "@@ -90,3 +94,3 @@\n     valid_data = validate_jsonschema(raw_data, extension.get_schema())\n-    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n+    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n \n",
        "source_code_with_indent": "    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, TableSource(\"my_table\", ColumnSet([])),)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    valid_data = validate_jsonschema(raw_data, extension.get_schema())\n    query = Query({\"conditions\": []}, QueryEntity(EntityKey.EVENTS, ColumnSet([])))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]