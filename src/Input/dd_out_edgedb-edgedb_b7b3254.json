[
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/common/struct.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/struct.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/struct.py:172:8 Incompatible variable type [9]: use_slots is declared to have type `bool` but is used as type `None`.",
    "message": " use_slots is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 172,
    "warning_line": "        use_slots: bool = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\n    def __init__(\n        cls,\n        name: str,\n        bases: Tuple[type, ...],\n        clsdict: Dict[str, Any],\n        *,\n        use_slots: bool = None,\n    ) -> None:\n        super().__init__(name, bases, clsdict)\n\n    def get_field(cls, name: str) -> Optional[Field[Any]]:\n",
        "source_code_len": 282,
        "target_code": "\n    def get_field(cls, name: str) -> Optional[Field[Any]]:\n",
        "target_code_len": 60,
        "diff_format": "@@ -165,12 +165,2 @@\n \n-    def __init__(\n-        cls,\n-        name: str,\n-        bases: Tuple[type, ...],\n-        clsdict: Dict[str, Any],\n-        *,\n-        use_slots: bool = None,\n-    ) -> None:\n-        super().__init__(name, bases, clsdict)\n-\n     def get_field(cls, name: str) -> Optional[Field[Any]]:\n",
        "source_code_with_indent": "\n    <DED>def __init__(\n        cls,\n        name: str,\n        bases: Tuple[type, ...],\n        clsdict: Dict[str, Any],\n        *,\n        use_slots: bool = None,\n    ) -> None:\n        <IND>super().__init__(name, bases, clsdict)\n\n    <DED>def get_field(cls, name: str) -> Optional[Field[Any]]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_field(cls, name: str) -> Optional[Field[Any]]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/edgeql/compiler/pathctx.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/compiler/pathctx.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/edgeql/compiler/pathctx.py:85:8 Incompatible variable type [9]: path_scope is declared to have type `edb.ir.scopetree.ScopeTreeNode` but is used as type `None`.",
    "message": " path_scope is declared to have type `edb.ir.scopetree.ScopeTreeNode` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 85,
    "warning_line": "        path_scope: irast.ScopeTreeNode=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        ir_set: irast.Set, *,\n        path_scope: irast.ScopeTreeNode=None,\n        optional: bool=False,\n",
        "source_code_len": 106,
        "target_code": "        ir_set: irast.Set, *,\n        path_scope: Optional[irast.ScopeTreeNode]=None,\n        optional: bool=False,\n",
        "target_code_len": 116,
        "diff_format": "@@ -84,3 +84,3 @@\n         ir_set: irast.Set, *,\n-        path_scope: irast.ScopeTreeNode=None,\n+        path_scope: Optional[irast.ScopeTreeNode]=None,\n         optional: bool=False,\n",
        "source_code_with_indent": "        ir_set: irast.Set, *,\n        path_scope: irast.ScopeTreeNode=None,\n        optional: bool=False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        ir_set: irast.Set, *,\n        path_scope: Optional[irast.ScopeTreeNode]=None,\n        optional: bool=False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/pgsql/compiler/astutils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/pgsql/compiler/astutils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/pgsql/compiler/astutils.py:259:8 Incompatible variable type [9]: nullable is declared to have type `bool` but is used as type `None`.",
    "message": " nullable is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 259,
    "warning_line": "        nullable: bool=None) -> pgast.ColumnRef:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        colspec: Union[str, pgast.ColumnRef], *,\n        nullable: bool=None) -> pgast.ColumnRef:\n\n",
        "source_code_len": 99,
        "target_code": "        colspec: Union[str, pgast.ColumnRef], *,\n        nullable: Optional[bool]=None) -> pgast.ColumnRef:\n\n",
        "target_code_len": 109,
        "diff_format": "@@ -258,3 +258,3 @@\n         colspec: Union[str, pgast.ColumnRef], *,\n-        nullable: bool=None) -> pgast.ColumnRef:\n+        nullable: Optional[bool]=None) -> pgast.ColumnRef:\n \n",
        "source_code_with_indent": "        colspec: Union[str, pgast.ColumnRef], *,\n        nullable: bool=None) -> pgast.ColumnRef:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        colspec: Union[str, pgast.ColumnRef], *,\n        nullable: Optional[bool]=None) -> pgast.ColumnRef:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/ddl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/ddl.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/ddl.py:470:4 Incompatible variable type [9]: compat_ver is declared to have type `verutils.Version` but is used as type `None`.",
    "message": " compat_ver is declared to have type `verutils.Version` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 470,
    "warning_line": "    compat_ver: verutils.Version = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> sd.DeltaRoot:\n",
        "source_code_len": 72,
        "target_code": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> sd.DeltaRoot:\n",
        "target_code_len": 82,
        "diff_format": "@@ -469,3 +469,3 @@\n     ]=None,\n-    compat_ver: verutils.Version = None,\n+    compat_ver: Optional[verutils.Version] = None,\n ) -> sd.DeltaRoot:\n",
        "source_code_with_indent": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> sd.DeltaRoot:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> sd.DeltaRoot:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_len": 96,
        "target_code": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "target_code_len": 106,
        "diff_format": "@@ -494,3 +494,3 @@\n     ]=None,\n-    compat_ver: verutils.Version = None,\n+    compat_ver: Optional[verutils.Version] = None,\n ) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_with_indent": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/ddl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/ddl.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/ddl.py:495:4 Incompatible variable type [9]: compat_ver is declared to have type `verutils.Version` but is used as type `None`.",
    "message": " compat_ver is declared to have type `verutils.Version` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 495,
    "warning_line": "    compat_ver: verutils.Version = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_len": 96,
        "target_code": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "target_code_len": 106,
        "diff_format": "@@ -494,3 +494,3 @@\n     ]=None,\n-    compat_ver: verutils.Version = None,\n+    compat_ver: Optional[verutils.Version] = None,\n ) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_with_indent": "    ]=None,\n    compat_ver: verutils.Version = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ]=None,\n    compat_ver: Optional[verutils.Version] = None,\n) -> Tuple[s_schema.Schema, sd.DeltaRoot]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/pointers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/pointers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/pointers.py:455:8 Incompatible variable type [9]: derived_name_base is declared to have type `str` but is used as type `None`.",
    "message": " derived_name_base is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 455,
    "warning_line": "        derived_name_base: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        derived_name_base: str = None,\n        **kwargs: Any\n",
        "source_code_len": 72,
        "target_code": "        *,\n        derived_name_base: Optional[str] = None,\n        **kwargs: Any\n",
        "target_code_len": 82,
        "diff_format": "@@ -454,3 +454,3 @@\n         *,\n-        derived_name_base: str = None,\n+        derived_name_base: Optional[str] = None,\n         **kwargs: Any\n",
        "source_code_with_indent": "        *,\n        derived_name_base: str = None,\n        **kwargs: Any\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        derived_name_base: Optional[str] = None,\n        **kwargs: Any\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/schema.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/schema.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/schema.py:710:8 Incompatible variable type [9]: type is declared to have type `typing.Type[Variable[so.Object_T (bound to so.Object)]]` but is used as type `None`.",
    "message": " type is declared to have type `typing.Type[Variable[so.Object_T (bound to so.Object)]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 710,
    "warning_line": "        type: Type[so.Object_T] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        type: Type[so.Object_T] = None,\n    ) -> so.Object_T:\n",
        "source_code_len": 73,
        "target_code": "        *,\n        type: Optional[Type[so.Object_T]] = None,\n    ) -> so.Object_T:\n",
        "target_code_len": 83,
        "diff_format": "@@ -709,3 +709,3 @@\n         *,\n-        type: Type[so.Object_T] = None,\n+        type: Optional[Type[so.Object_T]] = None,\n     ) -> so.Object_T:\n",
        "source_code_with_indent": "        *,\n        type: Type[so.Object_T] = None,\n    ) -> so.Object_T:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        type: Optional[Type[so.Object_T]] = None,\n    ) -> so.Object_T:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/types.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/types.py:864:8 Incompatible variable type [9]: view_name is declared to have type `str` but is used as type `None`.",
    "message": " view_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 864,
    "warning_line": "        view_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        *,\n        view_name: str = None,\n    ) -> sd.Command:\n",
        "source_code_len": 63,
        "target_code": "        *,\n        view_name: Optional[str] = None,\n    ) -> sd.Command:\n",
        "target_code_len": 73,
        "diff_format": "@@ -863,3 +863,3 @@\n         *,\n-        view_name: str = None,\n+        view_name: Optional[str] = None,\n     ) -> sd.Command:\n",
        "source_code_with_indent": "        *,\n        view_name: str = None,\n    ) -> sd.Command:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        *,\n        view_name: Optional[str] = None,\n    ) -> sd.Command:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_len": 149,
        "target_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "target_code_len": 159,
        "diff_format": "@@ -1150,3 +1150,3 @@\n     def as_colltype_delete_delta(\n-        self, schema: s_schema.Schema, *, view_name: str = None\n+        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n     ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_len": 149,
        "target_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "target_code_len": 159,
        "diff_format": "@@ -1674,3 +1674,3 @@\n     def as_colltype_delete_delta(\n-        self, schema: s_schema.Schema, *, view_name: str = None\n+        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n     ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/types.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/types.py:1151:42 Incompatible variable type [9]: view_name is declared to have type `str` but is used as type `None`.",
    "message": " view_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1151,
    "warning_line": "        self, schema: s_schema.Schema, *, view_name: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_len": 149,
        "target_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "target_code_len": 159,
        "diff_format": "@@ -1150,3 +1150,3 @@\n     def as_colltype_delete_delta(\n-        self, schema: s_schema.Schema, *, view_name: str = None\n+        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n     ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteArray, DeleteArrayExprAlias]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/schema/types.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/schema/types.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/schema/types.py:1675:42 Incompatible variable type [9]: view_name is declared to have type `str` but is used as type `None`.",
    "message": " view_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1675,
    "warning_line": "        self, schema: s_schema.Schema, *, view_name: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_len": 149,
        "target_code": "    def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "target_code_len": 159,
        "diff_format": "@@ -1674,3 +1674,3 @@\n     def as_colltype_delete_delta(\n-        self, schema: s_schema.Schema, *, view_name: str = None\n+        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n     ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: str = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def as_colltype_delete_delta(\n        self, schema: s_schema.Schema, *, view_name: Optional[str] = None\n    ) -> Union[DeleteTuple, DeleteTupleExprAlias]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "b7b32545b78bacbf957e49615efbffa0667aa5fa",
    "filename": "edb/server/compiler/compiler.py",
    "min_patch_found": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:723:12 Incompatible parameter type [6]: Expected `verutils.Version` for 6th parameter `compat_ver` to call `s_ddl.delta_from_ddl` but got `typing.Optional[verutils.Version]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]