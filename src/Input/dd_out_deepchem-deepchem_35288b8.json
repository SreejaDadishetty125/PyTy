[
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:120:18 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 120,
    "warning_line": "                  hash_function=None,"
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:210:18 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 210,
    "warning_line": "                  hash_function=None,"
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:297:18 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 297,
    "warning_line": "                  hash_function=None,"
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:398:14 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 398,
    "warning_line": "              hash_function=None,"
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:411:14 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 411,
    "warning_line": "              hash_function=None,"
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:440:15 Incompatible variable type [9]: distance_bins is declared to have type `List[typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "message": " distance_bins is declared to have type `List[typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 440,
    "warning_line": "               distance_bins: List[Tuple] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_len": 111,
        "target_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -21,3 +21,3 @@\n from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\n-from typing import List, Tuple\n+from typing import List, Tuple, Optional\n \n",
        "source_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               reduce_to_contacts: bool = True):\n    \"\"\"\n",
        "source_code_len": 215,
        "target_code": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    \"\"\"\n",
        "target_code_len": 224,
        "diff_format": "@@ -437,7 +437,9 @@\n \n-  def __init__(self,\n-               cutoff: float = 4.5,\n-               distance_bins: List[Tuple] = None,\n-               angle_cutoffs: List[float] = None,\n-               reduce_to_contacts: bool = True):\n+  def __init__(\n+      self,\n+      cutoff: float = 4.5,\n+      reduce_to_contacts: bool = True,\n+      distance_bins: Optional[List[Tuple[float, float]]] = None,\n+      angle_cutoffs: Optional[List[float]] = None,\n+  ):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               reduce_to_contacts: bool = True):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:441:15 Incompatible variable type [9]: angle_cutoffs is declared to have type `List[float]` but is used as type `None`.",
    "message": " angle_cutoffs is declared to have type `List[float]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 441,
    "warning_line": "               angle_cutoffs: List[float] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_len": 111,
        "target_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -21,3 +21,3 @@\n from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\n-from typing import List, Tuple\n+from typing import List, Tuple, Optional\n \n",
        "source_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               reduce_to_contacts: bool = True):\n    \"\"\"\n",
        "source_code_len": 215,
        "target_code": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    \"\"\"\n",
        "target_code_len": 224,
        "diff_format": "@@ -437,7 +437,9 @@\n \n-  def __init__(self,\n-               cutoff: float = 4.5,\n-               distance_bins: List[Tuple] = None,\n-               angle_cutoffs: List[float] = None,\n-               reduce_to_contacts: bool = True):\n+  def __init__(\n+      self,\n+      cutoff: float = 4.5,\n+      reduce_to_contacts: bool = True,\n+      distance_bins: Optional[List[Tuple[float, float]]] = None,\n+      angle_cutoffs: Optional[List[float]] = None,\n+  ):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               reduce_to_contacts: bool = True):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:538:15 Incompatible variable type [9]: distance_bins is declared to have type `List[typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "message": " distance_bins is declared to have type `List[typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 538,
    "warning_line": "               distance_bins: List[Tuple] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_len": 111,
        "target_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -21,3 +21,3 @@\n from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\n-from typing import List, Tuple\n+from typing import List, Tuple, Optional\n \n",
        "source_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               box_width: float = 16.0,\n               voxel_width: float = 1.0,\n               reduce_to_contacts: bool = True):\n    \"\"\"\n",
        "source_code_len": 296,
        "target_code": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      box_width: float = 16.0,\n      voxel_width: float = 1.0,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    \"\"\"\n",
        "target_code_len": 287,
        "diff_format": "@@ -535,9 +537,11 @@\n \n-  def __init__(self,\n-               cutoff: float = 4.5,\n-               distance_bins: List[Tuple] = None,\n-               angle_cutoffs: List[float] = None,\n-               box_width: float = 16.0,\n-               voxel_width: float = 1.0,\n-               reduce_to_contacts: bool = True):\n+  def __init__(\n+      self,\n+      cutoff: float = 4.5,\n+      box_width: float = 16.0,\n+      voxel_width: float = 1.0,\n+      reduce_to_contacts: bool = True,\n+      distance_bins: Optional[List[Tuple[float, float]]] = None,\n+      angle_cutoffs: Optional[List[float]] = None,\n+  ):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               box_width: float = 16.0,\n               voxel_width: float = 1.0,\n               reduce_to_contacts: bool = True):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      box_width: float = 16.0,\n      voxel_width: float = 1.0,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:539:15 Incompatible variable type [9]: angle_cutoffs is declared to have type `List[float]` but is used as type `None`.",
    "message": " angle_cutoffs is declared to have type `List[float]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 539,
    "warning_line": "               angle_cutoffs: List[float] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_len": 111,
        "target_code": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -21,3 +21,3 @@\n from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\n-from typing import List, Tuple\n+from typing import List, Tuple, Optional\n \n",
        "source_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from deepchem.utils.fragment_utils import reduce_molecular_complex_to_contacts\nfrom typing import List, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               box_width: float = 16.0,\n               voxel_width: float = 1.0,\n               reduce_to_contacts: bool = True):\n    \"\"\"\n",
        "source_code_len": 296,
        "target_code": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      box_width: float = 16.0,\n      voxel_width: float = 1.0,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    \"\"\"\n",
        "target_code_len": 287,
        "diff_format": "@@ -535,9 +537,11 @@\n \n-  def __init__(self,\n-               cutoff: float = 4.5,\n-               distance_bins: List[Tuple] = None,\n-               angle_cutoffs: List[float] = None,\n-               box_width: float = 16.0,\n-               voxel_width: float = 1.0,\n-               reduce_to_contacts: bool = True):\n+  def __init__(\n+      self,\n+      cutoff: float = 4.5,\n+      box_width: float = 16.0,\n+      voxel_width: float = 1.0,\n+      reduce_to_contacts: bool = True,\n+      distance_bins: Optional[List[Tuple[float, float]]] = None,\n+      angle_cutoffs: Optional[List[float]] = None,\n+  ):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  def __init__(self,\n               cutoff: float = 4.5,\n               distance_bins: List[Tuple] = None,\n               angle_cutoffs: List[float] = None,\n               box_width: float = 16.0,\n               voxel_width: float = 1.0,\n               reduce_to_contacts: bool = True):\n    <IND>",
        "target_code_with_indent": "\n  def __init__(\n      self,\n      cutoff: float = 4.5,\n      box_width: float = 16.0,\n      voxel_width: float = 1.0,\n      reduce_to_contacts: bool = True,\n      distance_bins: Optional[List[Tuple[float, float]]] = None,\n      angle_cutoffs: Optional[List[float]] = None,\n  ):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "35288b8f84622beb50193d8fdae026c894c1d775",
    "filename": "deepchem/feat/complex_featurizers/grid_featurizers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/complex_featurizers/grid_featurizers.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/complex_featurizers/grid_featurizers.py:617:26 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 2nd parameter `hash_function` to call `voxelize` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 617,
    "warning_line": "                          hash_function=None,"
  }
]