[
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "ae6f64a42f9531927318329ff98a53700adc73f3",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:72:37 Incompatible parameter type [6]: Expected `_csv._Writer` for 1st positional only parameter to call `_csv.writer` but got `typing.Union[tempfile._TemporaryFileWrapper[str], io.TextIOWrapper]`.",
    "message": " Expected `_csv._Writer` for 1st positional only parameter to call `_csv.writer` but got `typing.Union[tempfile._TemporaryFileWrapper[str], io.TextIOWrapper]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "            self.writer = csv.writer(self.outputfile, lineterminator='\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def setup_output(self, filename: str=None, in_memory: bool=False) -> None:\n        \"\"\"Open a CSV writer for tournament output.\"\"\"\n",
        "source_code_len": 135,
        "target_code": "\n    def setup_output(self, filename=None, in_memory=False):\n        \"\"\"Open a CSV writer for tournament output.\"\"\"\n",
        "target_code_len": 116,
        "diff_format": "@@ -59,3 +59,3 @@\n \n-    def setup_output(self, filename: str=None, in_memory: bool=False) -> None:\n+    def setup_output(self, filename=None, in_memory=False):\n         \"\"\"Open a CSV writer for tournament output.\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def setup_output(self, filename: str=None, in_memory: bool=False) -> None:\n        <IND>\"\"\"Open a CSV writer for tournament output.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def setup_output(self, filename=None, in_memory=False):\n        <IND>\"\"\"Open a CSV writer for tournament output.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "ae6f64a42f9531927318329ff98a53700adc73f3",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:76:45 Incompatible variable type [9]: filename is declared to have type `str` but is used as type `None`.",
    "message": " filename is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 76,
    "warning_line": "    def play(self, build_results: bool=True, filename: str=None,"
  },
  {
    "project": "Axelrod-Python/Axelrod",
    "commit": "ae6f64a42f9531927318329ff98a53700adc73f3",
    "filename": "axelrod/tournament.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Axelrod-Python-Axelrod/axelrod/tournament.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "axelrod/tournament.py:378:43 Incompatible parameter type [6]: Expected `int` for 4th parameter `turns` to call `Tournament.__init__` but got `float`.",
    "message": " Expected `int` for 4th parameter `turns` to call `Tournament.__init__` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 378,
    "warning_line": "            players, name=name, game=game, turns=float(\"inf\"),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__(\n            players, name=name, game=game, turns=float(\"inf\"),\n            repetitions=repetitions, noise=noise, with_morality=with_morality)\n",
        "source_code_len": 168,
        "target_code": "        super().__init__(\n            players, name=name, game=game, turns=int(\"inf\"),\n            repetitions=repetitions, noise=noise, with_morality=with_morality)\n",
        "target_code_len": 166,
        "diff_format": "@@ -377,3 +377,3 @@\n         super().__init__(\n-            players, name=name, game=game, turns=float(\"inf\"),\n+            players, name=name, game=game, turns=int(\"inf\"),\n             repetitions=repetitions, noise=noise, with_morality=with_morality)\n",
        "source_code_with_indent": "        super().__init__(\n            players, name=name, game=game, turns=float(\"inf\"),\n            repetitions=repetitions, noise=noise, with_morality=with_morality)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        super().__init__(\n            players, name=name, game=game, turns=int(\"inf\"),\n            repetitions=repetitions, noise=noise, with_morality=with_morality)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]