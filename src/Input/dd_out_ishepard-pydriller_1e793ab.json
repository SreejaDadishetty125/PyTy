[
  {
    "project": "ishepard/pydriller",
    "commit": "1e793ab306e09b4a025d44f0435b640b7d0d3940",
    "filename": "pydriller/git_repository.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ishepard-pydriller/pydriller/git_repository.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pydriller/git_repository.py:221:39 Invalid type [31]: Expression `typing.Dict[(str, typing.List[typing.Tuple(int, str)])]` is not a valid type.",
    "message": " Expression `typing.Dict[(str, typing.List[typing.Tuple(int, str)])]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 221,
    "warning_line": "    def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n        \"\"\"\n",
        "source_code_len": 86,
        "target_code": "\n    def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n        \"\"\"\n",
        "target_code_len": 86,
        "diff_format": "@@ -220,3 +220,3 @@\n \n-    def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n+    def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "ishepard/pydriller",
    "commit": "1e793ab306e09b4a025d44f0435b640b7d0d3940",
    "filename": "pydriller/git_repository.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ishepard-pydriller/pydriller/git_repository.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pydriller/git_repository.py:254:8 Incompatible return type [7]: Expected `Dict[str, List[]]` but got `Dict[str, List[typing.Any]]`.",
    "message": " Expected `Dict[str, List[]]` but got `Dict[str, List[typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 254,
    "warning_line": "        return modified_lines",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n        \"\"\"\n",
        "source_code_len": 86,
        "target_code": "\n    def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n        \"\"\"\n",
        "target_code_len": 86,
        "diff_format": "@@ -220,3 +220,3 @@\n \n-    def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n+    def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def parse_diff(self, diff: str) -> Dict[str, List[Tuple(int, str)]]:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def parse_diff(self, diff: str) -> Dict[str, List[Tuple[int, str]]]:\n        <IND>"
      }
    ]
  }
]