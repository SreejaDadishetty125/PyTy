[
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/Connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/Connection.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/Connection.py:18:17 Incompatible variable type [9]: requests_session is declared to have type `requests.sessions.Session` but is used as type `None`.",
    "message": " requests_session is declared to have type `requests.sessions.Session` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 18,
    "warning_line": "                 requests_session: requests.Session = None"
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/Connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/Connection.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/Connection.py:27:56 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `UserSession.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd positional only parameter to call `UserSession.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 27,
    "warning_line": "        self.user_session = UserSession(self, username, password) if username else None"
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/Session.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/Session.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/Session.py:43:17 Incompatible variable type [9]: requests_session is declared to have type `requests.sessions.Session` but is used as type `None`.",
    "message": " requests_session is declared to have type `requests.sessions.Session` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 43,
    "warning_line": "                 requests_session: requests.Session = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 timeout: Union[float, Tuple[float, float], None] = None,\n                 requests_session: requests.Session = None\n                 ):\n",
        "source_code_len": 153,
        "target_code": "                 timeout: Union[float, Tuple[float, float], None] = None,\n                 requests_session: Optional[requests.Session] = None\n                 ):\n",
        "target_code_len": 163,
        "diff_format": "@@ -42,3 +43,3 @@\n                  timeout: Union[float, Tuple[float, float], None] = None,\n-                 requests_session: requests.Session = None\n+                 requests_session: Optional[requests.Session] = None\n                  ):\n",
        "source_code_with_indent": "                 timeout: Union[float, Tuple[float, float], None] = None,\n                 requests_session: requests.Session = None\n                 ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                 timeout: Union[float, Tuple[float, float], None] = None,\n                 requests_session: Optional[requests.Session] = None\n                 ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/api/User.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/api/User.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/api/User.py:22:56 Incompatible variable type [9]: password is declared to have type `str` but is used as type `None`.",
    "message": " password is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 22,
    "warning_line": "    def __init__(self, session: Session, username: str, password: str = None):"
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/api/User.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/api/User.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/api/User.py:43:12 Incompatible variable type [9]: password is declared to have type `str` but is used as type `bytes`.",
    "message": " password is declared to have type `str` but is used as type `bytes`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 43,
    "warning_line": "            password = b''"
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/api/User.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/api/User.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/api/User.py:51:16 Incompatible variable type [9]: password is declared to have type `str` but is used as type `bytes`.",
    "message": " password is declared to have type `str` but is used as type `bytes`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 51,
    "warning_line": "                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                ])\n                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            else:\n                password = base64.b64encode(password.encode('UTF-8'))\n\n",
        "source_code_len": 210,
        "target_code": "                ])\n                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            else:\n                password_encoded = base64.b64encode(password.encode('UTF-8'))\n\n",
        "target_code_len": 226,
        "diff_format": "@@ -50,5 +53,5 @@\n                 ])\n-                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n+                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n             else:\n-                password = base64.b64encode(password.encode('UTF-8'))\n+                password_encoded = base64.b64encode(password.encode('UTF-8'))\n \n",
        "source_code_with_indent": "                ])\n                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            <DED>else:\n                <IND>password = base64.b64encode(password.encode('UTF-8'))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                ])\n                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            <DED>else:\n                <IND>password_encoded = base64.b64encode(password.encode('UTF-8'))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/api/User.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/api/User.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/api/User.py:53:16 Incompatible variable type [9]: password is declared to have type `str` but is used as type `bytes`.",
    "message": " password is declared to have type `str` but is used as type `bytes`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 53,
    "warning_line": "                password = base64.b64encode(password.encode('UTF-8'))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                ])\n                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            else:\n                password = base64.b64encode(password.encode('UTF-8'))\n\n",
        "source_code_len": 210,
        "target_code": "                ])\n                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            else:\n                password_encoded = base64.b64encode(password.encode('UTF-8'))\n\n",
        "target_code_len": 226,
        "diff_format": "@@ -50,5 +53,5 @@\n                 ])\n-                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n+                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n             else:\n-                password = base64.b64encode(password.encode('UTF-8'))\n+                password_encoded = base64.b64encode(password.encode('UTF-8'))\n \n",
        "source_code_with_indent": "                ])\n                password = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            <DED>else:\n                <IND>password = base64.b64encode(password.encode('UTF-8'))\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                ])\n                password_encoded = base64.b64encode(hashlib.sha256(concentrated).hexdigest().encode('ascii'))\n            <DED>else:\n                <IND>password_encoded = base64.b64encode(password.encode('UTF-8'))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Salamek/huawei-lte-api",
    "commit": "e70fd99ad749ddc50077e135fc59768950a971ce",
    "filename": "huawei_lte_api/api/User.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Salamek-huawei-lte-api/huawei_lte_api/api/User.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "huawei_lte_api/api/User.py:81:18 Call error [29]: `typing.Union[typing.Type[typing.Union[LoginErrorAlreadyLoginException, LoginErrorPasswordWrongException, LoginErrorUsernamePasswordModifyException, LoginErrorUsernamePasswordOverrunException, LoginErrorUsernamePasswordWrongException, LoginErrorUsernameWrongException]], typing.Type[ResponseErrorException]]` is not a function.",
    "message": " `typing.Union[typing.Type[typing.Union[LoginErrorAlreadyLoginException, LoginErrorPasswordWrongException, LoginErrorUsernamePasswordModifyException, LoginErrorUsernamePasswordOverrunException, LoginErrorUsernamePasswordWrongException, LoginErrorUsernameWrongException]], typing.Type[ResponseErrorException]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 81,
    "warning_line": "            raise error_code_to_exception.get(e.code, ResponseErrorException)("
  }
]