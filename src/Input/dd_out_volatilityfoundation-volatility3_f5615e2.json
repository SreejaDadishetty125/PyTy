[
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "f5615e28f62285b0c837b24ef92946560721c704",
    "filename": "volatility/framework/interfaces/symbols.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/symbols.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/symbols.py:271:4 Inconsistent override [15]: `volatility.framework.interfaces.symbols.NativeTableInterface.get_symbol` overrides method defined in `BaseSymbolTableInterface` inconsistently. Returned type `objects.Template` is not a subtype of the overridden return `SymbolInterface`.",
    "message": " `volatility.framework.interfaces.symbols.NativeTableInterface.get_symbol` overrides method defined in `BaseSymbolTableInterface` inconsistently. Returned type `objects.Template` is not a subtype of the overridden return `SymbolInterface`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 271,
    "warning_line": "    def get_symbol(self, name: str) -> objects.Template:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_symbol(self, name: str) -> objects.Template:\n        raise exceptions.SymbolError(\"NativeTables never hold symbols\")\n",
        "source_code_len": 130,
        "target_code": "\n    def get_symbol(self, name: str) -> SymbolInterface:\n        raise exceptions.SymbolError(\"NativeTables never hold symbols\")\n",
        "target_code_len": 129,
        "diff_format": "@@ -270,3 +270,3 @@\n \n-    def get_symbol(self, name: str) -> objects.Template:\n+    def get_symbol(self, name: str) -> SymbolInterface:\n         raise exceptions.SymbolError(\"NativeTables never hold symbols\")\n",
        "source_code_with_indent": "\n    def get_symbol(self, name: str) -> objects.Template:\n        <IND>raise exceptions.SymbolError(\"NativeTables never hold symbols\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def get_symbol(self, name: str) -> SymbolInterface:\n        <IND>raise exceptions.SymbolError(\"NativeTables never hold symbols\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]