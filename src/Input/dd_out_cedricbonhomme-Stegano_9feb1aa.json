[
  {
    "project": "cedricbonhomme/Stegano",
    "commit": "9feb1aa72bfb42f7b1c1856e1fbf5e6d3fbc0e9f",
    "filename": "stegano/lsbset/generators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cedricbonhomme-Stegano/stegano/lsbset/generators.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stegano/lsbset/generators.py:75:46 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `int.__add__` but got `typing.List[typing.Any]`.",
    "message": " Expected `int` for 1st positional only parameter to call `int.__add__` but got `typing.List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 75,
    "warning_line": "                d[i + j] = d.get(i + j, []) + [j]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import itertools\nfrom typing import Iterator\n\n",
        "source_code_len": 46,
        "target_code": "import itertools\nfrom typing import Iterator, List, Dict\n\n",
        "target_code_len": 58,
        "diff_format": "@@ -29,3 +29,3 @@\n import itertools\n-from typing import Iterator\n+from typing import Iterator, List, Dict\n \n",
        "source_code_with_indent": "import itertools\nfrom typing import Iterator\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import itertools\nfrom typing import Iterator, List, Dict\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    d = {} # type: dict[int, int]\n    for i in itertools.count(2):\n",
        "source_code_len": 75,
        "target_code": "    \"\"\"\n    d = {} # type: Dict[int, List[int]]\n    for i in itertools.count(2):\n",
        "target_code_len": 81,
        "diff_format": "@@ -70,3 +70,3 @@\n     \"\"\"\n-    d = {} # type: dict[int, int]\n+    d = {} # type: Dict[int, List[int]]\n     for i in itertools.count(2):\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    d = {} # type: dict[int, int]\n    for i in itertools.count(2):\n",
        "target_code_with_indent": "\n    d = {} # type: Dict[int, List[int]]\n    for i in itertools.count(2):\n"
      }
    ]
  },
  {
    "project": "cedricbonhomme/Stegano",
    "commit": "9feb1aa72bfb42f7b1c1856e1fbf5e6d3fbc0e9f",
    "filename": "stegano/lsbset/generators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cedricbonhomme-Stegano/stegano/lsbset/generators.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stegano/lsbset/generators.py:78:23 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[int]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 78,
    "warning_line": "            d[i * i] = [i]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import itertools\nfrom typing import Iterator\n\n",
        "source_code_len": 46,
        "target_code": "import itertools\nfrom typing import Iterator, List, Dict\n\n",
        "target_code_len": 58,
        "diff_format": "@@ -29,3 +29,3 @@\n import itertools\n-from typing import Iterator\n+from typing import Iterator, List, Dict\n \n",
        "source_code_with_indent": "import itertools\nfrom typing import Iterator\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import itertools\nfrom typing import Iterator, List, Dict\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    d = {} # type: dict[int, int]\n    for i in itertools.count(2):\n",
        "source_code_len": 75,
        "target_code": "    \"\"\"\n    d = {} # type: Dict[int, List[int]]\n    for i in itertools.count(2):\n",
        "target_code_len": 81,
        "diff_format": "@@ -70,3 +70,3 @@\n     \"\"\"\n-    d = {} # type: dict[int, int]\n+    d = {} # type: Dict[int, List[int]]\n     for i in itertools.count(2):\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    d = {} # type: dict[int, int]\n    for i in itertools.count(2):\n",
        "target_code_with_indent": "\n    d = {} # type: Dict[int, List[int]]\n    for i in itertools.count(2):\n"
      }
    ]
  },
  {
    "project": "cedricbonhomme/Stegano",
    "commit": "9feb1aa72bfb42f7b1c1856e1fbf5e6d3fbc0e9f",
    "filename": "stegano/lsbset/generators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/cedricbonhomme-Stegano/stegano/lsbset/generators.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stegano/lsbset/generators.py:95:13 Unbound name [10]: Name `eratosthenes_composite` is used but not defined in the current scope.",
    "message": " Name `eratosthenes_composite` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 95,
    "warning_line": "    for m in eratosthenes_composite():",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    for m in eratosthenes_composite():\n        for a in range(2, m):\n",
        "source_code_len": 77,
        "target_code": "    \"\"\"\n    for m in composite():\n        for a in range(2, m):\n",
        "target_code_len": 64,
        "diff_format": "@@ -94,3 +94,3 @@\n     \"\"\"\n-    for m in eratosthenes_composite():\n+    for m in composite():\n         for a in range(2, m):\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    for m in eratosthenes_composite():\n        <IND>for a in range(2, m):\n",
        "target_code_with_indent": "\n    for m in composite():\n        <IND>for a in range(2, m):\n"
      }
    ]
  }
]