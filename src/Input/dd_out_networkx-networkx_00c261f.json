[
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:15:8 Unbound name [10]: Name `connectivity` is used but not defined in the current scope.",
    "message": " Name `connectivity` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 15,
    "warning_line": "        connectivity.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:16:8 Unbound name [10]: Name `cuts` is used but not defined in the current scope.",
    "message": " Name `cuts` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 16,
    "warning_line": "        cuts.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:17:8 Unbound name [10]: Name `edge_augmentation` is used but not defined in the current scope.",
    "message": " Name `edge_augmentation` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 17,
    "warning_line": "        edge_augmentation.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:18:8 Unbound name [10]: Name `edge_kcomponents` is used but not defined in the current scope.",
    "message": " Name `edge_kcomponents` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 18,
    "warning_line": "        edge_kcomponents.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:19:8 Unbound name [10]: Name `disjoint_paths` is used but not defined in the current scope.",
    "message": " Name `disjoint_paths` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 19,
    "warning_line": "        disjoint_paths.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:20:8 Unbound name [10]: Name `kcomponents` is used but not defined in the current scope.",
    "message": " Name `kcomponents` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 20,
    "warning_line": "        kcomponents.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:21:8 Unbound name [10]: Name `kcutsets` is used but not defined in the current scope.",
    "message": " Name `kcutsets` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 21,
    "warning_line": "        kcutsets.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:22:8 Unbound name [10]: Name `stoerwagner` is used but not defined in the current scope.",
    "message": " Name `stoerwagner` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 22,
    "warning_line": "        stoerwagner.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/connectivity/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/connectivity/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/connectivity/__init__.py:23:8 Unbound name [10]: Name `utils` is used but not defined in the current scope.",
    "message": " Name `utils` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 23,
    "warning_line": "        utils.__all__,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_len": 320,
        "target_code": "from .utils import *\n",
        "target_code_len": 21,
        "diff_format": "@@ -11,16 +11,1 @@\n from .utils import *\n-\n-__all__ = sum(\n-    [\n-        connectivity.__all__,\n-        cuts.__all__,\n-        edge_augmentation.__all__,\n-        edge_kcomponents.__all__,\n-        disjoint_paths.__all__,\n-        kcomponents.__all__,\n-        kcutsets.__all__,\n-        stoerwagner.__all__,\n-        utils.__all__,\n-    ],\n-    [],\n-)\n",
        "source_code_with_indent": "from .utils import *\n\n__all__ = sum(\n    [\n        connectivity.__all__,\n        cuts.__all__,\n        edge_augmentation.__all__,\n        edge_kcomponents.__all__,\n        disjoint_paths.__all__,\n        kcomponents.__all__,\n        kcutsets.__all__,\n        stoerwagner.__all__,\n        utils.__all__,\n    ],\n    [],\n)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .utils import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/algorithms/tests/test_smallworld.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/algorithms/tests/test_smallworld.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "networkx/algorithms/tests/test_smallworld.py:11:0 Incompatible variable type [9]: rng is declared to have type `random.Random` but is used as type `int`.",
    "message": " rng is declared to have type `random.Random` but is used as type `int`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 11,
    "warning_line": "rng = 42",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\nrng = random.Random(0)\nrng = 42\n",
        "source_code_len": 33,
        "target_code": "\nrng = 42\n",
        "target_code_len": 10,
        "diff_format": "@@ -9,3 +9,2 @@\n \n-rng = random.Random(0)\n rng = 42\n",
        "source_code_with_indent": "\nrng = random.Random(0)\nrng = 42\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nrng = 42\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "networkx/networkx",
    "commit": "00c261f951ae6734001e0419d2bc754eef6dd1b2",
    "filename": "networkx/utils/decorators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/networkx-networkx/networkx/utils/decorators.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "networkx/utils/decorators.py:97:25 Incompatible parameter type [6]: Expected `typing.Callable(open)[..., unknown][[[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str, default), Named(buffering, int, default), Named(encoding, typing.Optional[str], default), Named(errors, typing.Optional[str], default), Named(newline, typing.Optional[str], default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.TextIOWrapper][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.FileIO][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedRandom][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedWriter][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedReader][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], typing.BinaryIO][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, typing.Optional[str], default), Named(errors, typing.Optional[str], default), Named(newline, typing.Optional[str], default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], typing.IO[typing.Any]]]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Type[bz2.BZ2File]`.",
    "message": " Expected `typing.Callable(open)[..., unknown][[[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str, default), Named(buffering, int, default), Named(encoding, typing.Optional[str], default), Named(errors, typing.Optional[str], default), Named(newline, typing.Optional[str], default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.TextIOWrapper][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.FileIO][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedRandom][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedWriter][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], io.BufferedReader][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], typing.BinaryIO][[Named(file, typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, int, str]), Named(mode, str), Named(buffering, int, default), Named(encoding, typing.Optional[str], default), Named(errors, typing.Optional[str], default), Named(newline, typing.Optional[str], default), Named(closefd, bool, default), Named(opener, typing.Optional[typing.Callable[[str, int], int]], default)], typing.IO[typing.Any]]]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Type[bz2.BZ2File]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 97,
    "warning_line": "_dispatch_dict[\".bz2\"] = bz2.BZ2File",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "# Then add the extension to _dispatch_dict.\n_dispatch_dict = defaultdict(lambda: open)\n_dispatch_dict[\".gz\"] = gzip.open\n_dispatch_dict[\".bz2\"] = bz2.BZ2File\n_dispatch_dict[\".gzip\"] = gzip.open\n\n",
        "source_code_len": 195,
        "target_code": "# Then add the extension to _dispatch_dict.\nfopeners = {\n    \".gz\": gzip.open,\n    \".gzip\": gzip.open,\n    \".bz2\": bz2.BZ2File,\n}\n_dispatch_dict = defaultdict(lambda: open, **fopeners)  # type: ignore\n\n",
        "target_code_len": 202,
        "diff_format": "@@ -94,6 +94,8 @@\n # Then add the extension to _dispatch_dict.\n-_dispatch_dict = defaultdict(lambda: open)\n-_dispatch_dict[\".gz\"] = gzip.open\n-_dispatch_dict[\".bz2\"] = bz2.BZ2File\n-_dispatch_dict[\".gzip\"] = gzip.open\n+fopeners = {\n+    \".gz\": gzip.open,\n+    \".gzip\": gzip.open,\n+    \".bz2\": bz2.BZ2File,\n+}\n+_dispatch_dict = defaultdict(lambda: open, **fopeners)  # type: ignore\n \n",
        "source_code_with_indent": "# Then add the extension to _dispatch_dict.\n<DED>_dispatch_dict = defaultdict(lambda: open)\n_dispatch_dict[\".gz\"] = gzip.open\n_dispatch_dict[\".bz2\"] = bz2.BZ2File\n_dispatch_dict[\".gzip\"] = gzip.open\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# Then add the extension to _dispatch_dict.\n<DED>fopeners = {\n    \".gz\": gzip.open,\n    \".gzip\": gzip.open,\n    \".bz2\": bz2.BZ2File,\n}\n_dispatch_dict = defaultdict(lambda: open, **fopeners)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]