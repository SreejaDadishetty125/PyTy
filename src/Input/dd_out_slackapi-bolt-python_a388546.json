[
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/aws_chalice/app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/aws_chalice/app.py:28:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/aws_lambda/lazy_aws_lambda.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/aws_lambda/lazy_aws_lambda.py:33:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/django/oauth_app/slack_listeners.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/django/oauth_app/slack_listeners.py:65:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/falcon/app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/falcon/app.py:36:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/falcon/oauth_app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/falcon/oauth_app.py:36:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/lazy_async_modals_app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/lazy_async_modals_app.py:97:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Awaitable[typing.Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/lazy_async_modals_app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/lazy_async_modals_app.py:158:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Awaitable[typing.Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/lazy_modals_app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/lazy_modals_app.py:98:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/lazy_modals_app.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/lazy_modals_app.py:159:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/socket_mode.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/socket_mode.py:82:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/socket_mode_async.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/socket_mode_async.py:82:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Awaitable[typing.Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "examples/socket_mode_oauth.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/socket_mode_oauth.py:88:0 Call error [29]: `typing.Optional[typing.Callable[..., typing.Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "slack_bolt/app/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/app/app.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/app/app.py:1242:8 Call error [29]: `Optional[typing.Callable[..., Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "message": " `Optional[typing.Callable[..., Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 1242,
    "warning_line": "        self.event(\"tokens_revoked\")(self.default_tokens_revoked_event_listener())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_len": 236,
        "target_code": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "target_code_len": 251,
        "diff_format": "@@ -724,3 +724,3 @@\n         middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n-    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n+    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n         \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n        <IND>",
        "target_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "slack_bolt/app/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/app/app.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/app/app.py:1243:8 Call error [29]: `Optional[typing.Callable[..., Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "message": " `Optional[typing.Callable[..., Optional[slack_bolt.response.response.BoltResponse]]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 1243,
    "warning_line": "        self.event(\"app_uninstalled\")(self.default_app_uninstalled_event_listener())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_len": 236,
        "target_code": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "target_code_len": 251,
        "diff_format": "@@ -724,3 +724,3 @@\n         middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n-    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n+    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n         \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Optional[Callable[..., Optional[BoltResponse]]]:\n        <IND>",
        "target_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, Middleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Optional[BoltResponse]]]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "slack_bolt/app/async_app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/app/async_app.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/app/async_app.py:1292:8 Call error [29]: `Optional[typing.Callable[..., Awaitable[Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "message": " `Optional[typing.Callable[..., Awaitable[Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 1292,
    "warning_line": "        self.event(\"tokens_revoked\")(self.default_tokens_revoked_event_listener())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_len": 252,
        "target_code": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "target_code_len": 267,
        "diff_format": "@@ -772,3 +772,3 @@\n         middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n-    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n+    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n         \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n        <IND>",
        "target_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "slackapi/bolt-python",
    "commit": "a3885469b198ee58e8d3f519f7c70f43586c410c",
    "filename": "slack_bolt/app/async_app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/slackapi-bolt-python/slack_bolt/app/async_app.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "slack_bolt/app/async_app.py:1293:8 Call error [29]: `Optional[typing.Callable[..., Awaitable[Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "message": " `Optional[typing.Callable[..., Awaitable[Optional[slack_bolt.response.response.BoltResponse]]]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 1293,
    "warning_line": "        self.event(\"app_uninstalled\")(self.default_app_uninstalled_event_listener())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_len": 252,
        "target_code": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n        \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "target_code_len": 267,
        "diff_format": "@@ -772,3 +772,3 @@\n         middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n-    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n+    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n         \"\"\"Registers a new event listener. This method can be used as either a decorator or a method.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]:\n        <IND>",
        "target_code_with_indent": "        middleware: Optional[Sequence[Union[Callable, AsyncMiddleware]]] = None,\n    ) -> Callable[..., Optional[Callable[..., Awaitable[Optional[BoltResponse]]]]]:\n        <IND>"
      }
    ]
  }
]