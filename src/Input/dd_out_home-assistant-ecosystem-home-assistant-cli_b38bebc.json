[
  {
    "project": "home-assistant-ecosystem/home-assistant-cli",
    "commit": "b38bebc88bc6741d10316c3888eb1de17e5e22c4",
    "filename": "homeassistant_cli/remote.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/home-assistant-ecosystem-home-assistant-cli/homeassistant_cli/remote.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "homeassistant_cli/remote.py:39:48 Incompatible variable type [9]: data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 39,
    "warning_line": "    ctx: Configuration, method: str, path: str, data: Dict = None"
  },
  {
    "project": "home-assistant-ecosystem/home-assistant-cli",
    "commit": "b38bebc88bc6741d10316c3888eb1de17e5e22c4",
    "filename": "homeassistant_cli/remote.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/home-assistant-ecosystem-home-assistant-cli/homeassistant_cli/remote.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "homeassistant_cli/remote.py:263:52 Incompatible variable type [9]: data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 263,
    "warning_line": "def fire_event(ctx: Configuration, event_type: str, data: Dict = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def restapi(\n    ctx: Configuration, method: str, path: str, data: Dict = None\n) -> requests.Response:\n",
        "source_code_len": 103,
        "target_code": "def restapi(\n    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n) -> requests.Response:\n",
        "target_code_len": 113,
        "diff_format": "@@ -38,3 +38,3 @@\n def restapi(\n-    ctx: Configuration, method: str, path: str, data: Dict = None\n+    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n ) -> requests.Response:\n",
        "source_code_with_indent": "<DED><DED>def restapi(\n    ctx: Configuration, method: str, path: str, data: Dict = None\n) -> requests.Response:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def restapi(\n    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n) -> requests.Response:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef fire_event(ctx: Configuration, event_type: str, data: Dict = None) -> None:\n    \"\"\"Fire an event at remote API.\"\"\"\n",
        "source_code_len": 120,
        "target_code": "\ndef fire_event(\n    ctx: Configuration, event_type: str, data: Optional[Dict[str, Any]] = None\n) -> Optional[Dict[str, Any]]:\n    \"\"\"Fire an event at remote API.\"\"\"\n",
        "target_code_len": 166,
        "diff_format": "@@ -262,3 +272,5 @@\n \n-def fire_event(ctx: Configuration, event_type: str, data: Dict = None) -> None:\n+def fire_event(\n+    ctx: Configuration, event_type: str, data: Optional[Dict[str, Any]] = None\n+) -> Optional[Dict[str, Any]]:\n     \"\"\"Fire an event at remote API.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>def fire_event(ctx: Configuration, event_type: str, data: Dict = None) -> None:\n    <IND>\"\"\"Fire an event at remote API.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def fire_event(\n    ctx: Configuration, event_type: str, data: Optional[Dict[str, Any]] = None\n) -> Optional[Dict[str, Any]]:\n    <IND>\"\"\"Fire an event at remote API.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "home-assistant-ecosystem/home-assistant-cli",
    "commit": "b38bebc88bc6741d10316c3888eb1de17e5e22c4",
    "filename": "homeassistant_cli/remote.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/home-assistant-ecosystem-home-assistant-cli/homeassistant_cli/remote.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "homeassistant_cli/remote.py:280:51 Incompatible variable type [9]: service_data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " service_data is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 280,
    "warning_line": "    ctx: Configuration, domain: str, service: str, service_data: Dict = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def restapi(\n    ctx: Configuration, method: str, path: str, data: Dict = None\n) -> requests.Response:\n",
        "source_code_len": 103,
        "target_code": "def restapi(\n    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n) -> requests.Response:\n",
        "target_code_len": 113,
        "diff_format": "@@ -38,3 +38,3 @@\n def restapi(\n-    ctx: Configuration, method: str, path: str, data: Dict = None\n+    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n ) -> requests.Response:\n",
        "source_code_with_indent": "<DED><DED>def restapi(\n    ctx: Configuration, method: str, path: str, data: Dict = None\n) -> requests.Response:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def restapi(\n    ctx: Configuration, method: str, path: str, data: Optional[Dict] = None\n) -> requests.Response:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def call_service(\n    ctx: Configuration, domain: str, service: str, service_data: Dict = None\n) -> Optional[Dict]:\n    \"\"\" Call a service.\"\"\"\n    try:\n",
        "source_code_len": 152,
        "target_code": "def call_service(\n    ctx: Configuration,\n    domain: str,\n    service: str,\n    service_data: Optional[Dict] = None,\n) -> Optional[Dict[str, Any]]:\n    \"\"\"Call a service.\"\"\"\n    try:\n",
        "target_code_len": 184,
        "diff_format": "@@ -279,5 +293,8 @@\n def call_service(\n-    ctx: Configuration, domain: str, service: str, service_data: Dict = None\n-) -> Optional[Dict]:\n-    \"\"\" Call a service.\"\"\"\n+    ctx: Configuration,\n+    domain: str,\n+    service: str,\n+    service_data: Optional[Dict] = None,\n+) -> Optional[Dict[str, Any]]:\n+    \"\"\"Call a service.\"\"\"\n     try:\n",
        "source_code_with_indent": "<DED><DED>def call_service(\n    ctx: Configuration, domain: str, service: str, service_data: Dict = None\n) -> Optional[Dict]:\n    <IND>\"\"\" Call a service.\"\"\"\n    try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def call_service(\n    ctx: Configuration,\n    domain: str,\n    service: str,\n    service_data: Optional[Dict] = None,\n) -> Optional[Dict[str, Any]]:\n    <IND>\"\"\"Call a service.\"\"\"\n    try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]