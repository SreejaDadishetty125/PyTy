[
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/contexts/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/contexts/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/contexts/__init__.py:120:15 Incompatible variable type [9]: symbol_name is declared to have type `str` but is used as type `None`.",
    "message": " symbol_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 120,
    "warning_line": "               symbol_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_len": 134,
        "target_code": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_len": 120,
        "diff_format": "@@ -119,4 +119,4 @@\n     def object(self,\n-               symbol_name: str = None,\n-               type_name: str = None,\n+               symbol_name: str,\n+               type_name: str,\n                offset: int = None,\n",
        "source_code_with_indent": "    <IND>def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/contexts/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/contexts/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/contexts/__init__.py:121:15 Incompatible variable type [9]: type_name is declared to have type `str` but is used as type `None`.",
    "message": " type_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 121,
    "warning_line": "               type_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_len": 134,
        "target_code": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_len": 120,
        "diff_format": "@@ -119,4 +119,4 @@\n     def object(self,\n-               symbol_name: str = None,\n-               type_name: str = None,\n+               symbol_name: str,\n+               type_name: str,\n                offset: int = None,\n",
        "source_code_with_indent": "    <IND>def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/configuration.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/configuration.py:98:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            return key[key.index(self.separator) + 1:]\n        return None\n\n",
        "source_code_len": 76,
        "target_code": "            return key[key.index(self.separator) + 1:]\n        return ''\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -97,3 +97,3 @@\n             return key[key.index(self.separator) + 1:]\n-        return None\n+        return ''\n \n",
        "source_code_with_indent": "            <IND>return key[key.index(self.separator) + 1:]\n        <DED>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>return key[key.index(self.separator) + 1:]\n        <DED>return ''\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/configuration.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/configuration.py:141:37 Incompatible parameter type [6]: Expected `HierarchicalDict` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[HierarchicalDict]`.",
    "message": " Expected `HierarchicalDict` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[HierarchicalDict]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "                self._subdict[key] = value",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            else:\n                if not isinstance(value, HierarchicalDict) and value is not None:\n                    raise TypeError(\n",
        "source_code_len": 137,
        "target_code": "            else:\n                if not isinstance(value, HierarchicalDict):\n                    raise TypeError(\n",
        "target_code_len": 115,
        "diff_format": "@@ -136,3 +136,3 @@\n             else:\n-                if not isinstance(value, HierarchicalDict) and value is not None:\n+                if not isinstance(value, HierarchicalDict):\n                     raise TypeError(\n",
        "source_code_with_indent": "            <DED>else:\n                <IND>if not isinstance(value, HierarchicalDict) and value is not None:\n                    <IND>raise TypeError(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <DED>else:\n                <IND>if not isinstance(value, HierarchicalDict):\n                    <IND>raise TypeError(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/configuration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/configuration.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/configuration.py:562:17 Incompatible variable type [9]: default is declared to have type `typing.Union[typing.List[typing.Union[bool, bytes, int, str]], bool, bytes, int, str]` but is used as type `None`.",
    "message": " default is declared to have type `typing.Union[typing.List[typing.Union[bool, bytes, int, str]], bool, bytes, int, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 562,
    "warning_line": "                 default: ConfigSimpleType = None,"
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/context.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/context.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/context.py:107:15 Incompatible variable type [9]: symbol_name is declared to have type `str` but is used as type `None`.",
    "message": " symbol_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 107,
    "warning_line": "               symbol_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_len": 134,
        "target_code": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_len": 120,
        "diff_format": "@@ -106,4 +106,4 @@\n     def object(self,\n-               symbol_name: str = None,\n-               type_name: str = None,\n+               symbol_name: str,\n+               type_name: str,\n                offset: int = None,\n",
        "source_code_with_indent": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/context.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/context.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/context.py:108:15 Incompatible variable type [9]: type_name is declared to have type `str` but is used as type `None`.",
    "message": " type_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 108,
    "warning_line": "               type_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_len": 134,
        "target_code": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_len": 120,
        "diff_format": "@@ -106,4 +106,4 @@\n     def object(self,\n-               symbol_name: str = None,\n-               type_name: str = None,\n+               symbol_name: str,\n+               type_name: str,\n                offset: int = None,\n",
        "source_code_with_indent": "    def object(self,\n               symbol_name: str = None,\n               type_name: str = None,\n               offset: int = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def object(self,\n               symbol_name: str,\n               type_name: str,\n               offset: int = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/layers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/layers.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/layers.py:65:8 Incompatible return type [7]: Expected `context.ContextInterface` but got `typing.Optional[context.ContextInterface]`.",
    "message": " Expected `context.ContextInterface` but got `typing.Optional[context.ContextInterface]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 65,
    "warning_line": "        return self._context",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def context(self) -> 'interfaces.context.ContextInterface':\n        return self._context\n",
        "source_code_len": 107,
        "target_code": "    @property\n    def context(self) -> typing.Optional['interfaces.context.ContextInterface']:\n        return self._context\n",
        "target_code_len": 124,
        "diff_format": "@@ -63,3 +63,3 @@\n     @property\n-    def context(self) -> 'interfaces.context.ContextInterface':\n+    def context(self) -> typing.Optional['interfaces.context.ContextInterface']:\n         return self._context\n",
        "source_code_with_indent": "    <DED>@property\n    def context(self) -> 'interfaces.context.ContextInterface':\n        <IND>return self._context\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def context(self) -> typing.Optional['interfaces.context.ContextInterface']:\n        <IND>return self._context\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/layers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/layers.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/layers.py:74:8 Incompatible return type [7]: Expected `str` but got `typing.Optional[str]`.",
    "message": " Expected `str` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 74,
    "warning_line": "        return self._layer_name",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def layer_name(self) -> str:\n        return self._layer_name\n",
        "source_code_len": 79,
        "target_code": "    @property\n    def layer_name(self) -> typing.Optional[str]:\n        return self._layer_name\n",
        "target_code_len": 96,
        "diff_format": "@@ -72,3 +72,3 @@\n     @property\n-    def layer_name(self) -> str:\n+    def layer_name(self) -> typing.Optional[str]:\n         return self._layer_name\n",
        "source_code_with_indent": "    <DED>@property\n    def layer_name(self) -> str:\n        <IND>return self._layer_name\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def layer_name(self) -> typing.Optional[str]:\n        <IND>return self._layer_name\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/objects.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/objects.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/objects.py:119:12 Incompatible return type [7]: Expected `interfaces.symbols.SymbolTableInterface` but got `None`.",
    "message": " Expected `interfaces.symbols.SymbolTableInterface` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 119,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_symbol_table(self) -> 'interfaces.symbols.SymbolTableInterface':\n        \"\"\"Returns the symbol table for this particular object\n",
        "source_code_len": 141,
        "target_code": "\n    def get_symbol_table(self) -> typing.Optional['interfaces.symbols.SymbolTableInterface']:\n        \"\"\"Returns the symbol table for this particular object\n",
        "target_code_len": 158,
        "diff_format": "@@ -111,3 +110,3 @@\n \n-    def get_symbol_table(self) -> 'interfaces.symbols.SymbolTableInterface':\n+    def get_symbol_table(self) -> typing.Optional['interfaces.symbols.SymbolTableInterface']:\n         \"\"\"Returns the symbol table for this particular object\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def get_symbol_table(self) -> 'interfaces.symbols.SymbolTableInterface':\n        <IND>",
        "target_code_with_indent": "\n    <DED>def get_symbol_table(self) -> typing.Optional['interfaces.symbols.SymbolTableInterface']:\n        <IND>"
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/plugins.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/plugins.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/plugins.py:72:8 Incompatible attribute type [8]: Attribute `_file_consumer` declared in class `PluginInterface` has type `FileConsumerInterface` but is used as type `None`.",
    "message": " Attribute `_file_consumer` declared in class `PluginInterface` has type `FileConsumerInterface` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 72,
    "warning_line": "        self._file_consumer = None  # type: FileConsumerInterface",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            raise exceptions.PluginRequirementException(\"The plugin configuration failed to validate\")\n        self._file_consumer = None  # type: FileConsumerInterface\n\n",
        "source_code_len": 170,
        "target_code": "            raise exceptions.PluginRequirementException(\"The plugin configuration failed to validate\")\n        self._file_consumer = None  # type: typing.Optional[FileConsumerInterface]\n\n",
        "target_code_len": 187,
        "diff_format": "@@ -71,3 +73,3 @@\n             raise exceptions.PluginRequirementException(\"The plugin configuration failed to validate\")\n-        self._file_consumer = None  # type: FileConsumerInterface\n+        self._file_consumer = None  # type: typing.Optional[FileConsumerInterface]\n \n",
        "source_code_with_indent": "            raise exceptions.PluginRequirementException(\"The plugin configuration failed to validate\")\n        <DED>self._file_consumer = None  # type: FileConsumerInterface\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            raise exceptions.PluginRequirementException(\"The plugin configuration failed to validate\")\n        <DED>self._file_consumer = None  # type: typing.Optional[FileConsumerInterface]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/renderers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/renderers.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/renderers.py:193:14 Incompatible variable type [9]: initial_accumulator is declared to have type `Variable[_Type (bound to typing.Type[typing.Any])]` but is used as type `None`.",
    "message": " initial_accumulator is declared to have type `Variable[_Type (bound to typing.Type[typing.Any])]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 193,
    "warning_line": "              initial_accumulator: _Type = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "              function: VisitorSignature,\n              initial_accumulator: _Type = None,\n              sort_key: ColumnSortKey = None) -> None:\n",
        "source_code_len": 146,
        "target_code": "              function: VisitorSignature,\n              initial_accumulator: _Type,\n              sort_key: ColumnSortKey = None) -> None:\n",
        "target_code_len": 139,
        "diff_format": "@@ -192,3 +188,3 @@\n               function: VisitorSignature,\n-              initial_accumulator: _Type = None,\n+              initial_accumulator: _Type,\n               sort_key: ColumnSortKey = None) -> None:\n",
        "source_code_with_indent": "              function: VisitorSignature,\n              initial_accumulator: _Type = None,\n              sort_key: ColumnSortKey = None) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "              function: VisitorSignature,\n              initial_accumulator: _Type,\n              sort_key: ColumnSortKey = None) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/symbols.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/symbols.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/symbols.py:155:29 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `BaseSymbolTableInterface.get_type` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `BaseSymbolTableInterface.get_type` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 155,
    "warning_line": "        return self.get_type(self.get_symbol(name).type_name)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_symbol_type(self, name: str) -> objects.Template:\n        \"\"\"Resolves a symbol name into a symbol and then resolves the symbol's type\"\"\"\n        return self.get_type(self.get_symbol(name).type_name)\n\n",
        "source_code_len": 213,
        "target_code": "\n    def get_symbol_type(self, name: str) -> typing.Optional[objects.Template]:\n        \"\"\"Resolves a symbol name into a symbol and then resolves the symbol's type\"\"\"\n        type_name = self.get_symbol(name).type_name\n        if type_name is None:\n            return None\n        return self.get_type(type_name)\n\n",
        "target_code_len": 314,
        "diff_format": "@@ -152,5 +152,8 @@\n \n-    def get_symbol_type(self, name: str) -> objects.Template:\n+    def get_symbol_type(self, name: str) -> typing.Optional[objects.Template]:\n         \"\"\"Resolves a symbol name into a symbol and then resolves the symbol's type\"\"\"\n-        return self.get_type(self.get_symbol(name).type_name)\n+        type_name = self.get_symbol(name).type_name\n+        if type_name is None:\n+            return None\n+        return self.get_type(type_name)\n \n",
        "source_code_with_indent": "\n    <DED>def get_symbol_type(self, name: str) -> objects.Template:\n        <IND>\"\"\"Resolves a symbol name into a symbol and then resolves the symbol's type\"\"\"\n        return self.get_type(self.get_symbol(name).type_name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_symbol_type(self, name: str) -> typing.Optional[objects.Template]:\n        <IND>\"\"\"Resolves a symbol name into a symbol and then resolves the symbol's type\"\"\"\n        type_name = self.get_symbol(name).type_name\n        if type_name is None:\n            <IND>return None\n        <DED>return self.get_type(type_name)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/interfaces/symbols.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/interfaces/symbols.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/interfaces/symbols.py:225:17 Incompatible variable type [9]: native_types is declared to have type `NativeTableInterface` but is used as type `None`.",
    "message": " native_types is declared to have type `NativeTableInterface` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 225,
    "warning_line": "                 native_types: 'NativeTableInterface' = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 name: str,\n                 native_types: 'NativeTableInterface' = None,\n                 table_mapping: typing.Optional[typing.Dict[str, str]] = None) -> None:\n",
        "source_code_len": 178,
        "target_code": "                 name: str,\n                 native_types: 'NativeTableInterface',\n                 table_mapping: typing.Optional[typing.Dict[str, str]] = None) -> None:\n",
        "target_code_len": 171,
        "diff_format": "@@ -224,3 +228,3 @@\n                  name: str,\n-                 native_types: 'NativeTableInterface' = None,\n+                 native_types: 'NativeTableInterface',\n                  table_mapping: typing.Optional[typing.Dict[str, str]] = None) -> None:\n",
        "source_code_with_indent": "                 name: str,\n                 native_types: 'NativeTableInterface' = None,\n                 table_mapping: typing.Optional[typing.Dict[str, str]] = None) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                 name: str,\n                 native_types: 'NativeTableInterface',\n                 table_mapping: typing.Optional[typing.Dict[str, str]] = None) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/layers/scanners/wumanber.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/layers/scanners/wumanber.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/layers/scanners/wumanber.py:40:45 Unsupported operand [58]: `+` is not supported for operand types `typing.Optional[int]` and `int`.",
    "message": " `+` is not supported for operand types `typing.Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 40,
    "warning_line": "            for i in range(self._block_size, self.minimum_pattern_length + 1):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self, block_size: int = 3) -> None:\n        self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_len": 127,
        "target_code": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_len": 145,
        "diff_format": "@@ -7,3 +7,4 @@\n     def __init__(self, block_size: int = 3) -> None:\n-        self.minimum_pattern_length = None  # type: typing.Optional[int]\n+        # Set a suitably large minimum\n+        self.minimum_pattern_length = 1000000000000\n \n",
        "source_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        <IND>self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        <IND>self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/layers/scanners/wumanber.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/layers/scanners/wumanber.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/layers/scanners/wumanber.py:42:65 Unsupported operand [58]: `-` is not supported for operand types `typing.Optional[int]` and `int`.",
    "message": " `-` is not supported for operand types `typing.Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 42,
    "warning_line": "                self._shift[hashval] = min(self._shift[hashval], self.minimum_pattern_length - i)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self, block_size: int = 3) -> None:\n        self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_len": 127,
        "target_code": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_len": 145,
        "diff_format": "@@ -7,3 +7,4 @@\n     def __init__(self, block_size: int = 3) -> None:\n-        self.minimum_pattern_length = None  # type: typing.Optional[int]\n+        # Set a suitably large minimum\n+        self.minimum_pattern_length = 1000000000000\n \n",
        "source_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        <IND>self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        <IND>self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/layers/scanners/wumanber.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/layers/scanners/wumanber.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/layers/scanners/wumanber.py:44:19 Unsupported operand [58]: `-` is not supported for operand types `typing.Optional[int]` and `int`.",
    "message": " `-` is not supported for operand types `typing.Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 44,
    "warning_line": "                if self.minimum_pattern_length - i == 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self, block_size: int = 3) -> None:\n        self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_len": 127,
        "target_code": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_len": 145,
        "diff_format": "@@ -7,3 +7,4 @@\n     def __init__(self, block_size: int = 3) -> None:\n-        self.minimum_pattern_length = None  # type: typing.Optional[int]\n+        # Set a suitably large minimum\n+        self.minimum_pattern_length = 1000000000000\n \n",
        "source_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        <IND>self.minimum_pattern_length = None  # type: typing.Optional[int]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self, block_size: int = 3) -> None:\n        # Set a suitably large minimum\n        <IND>self.minimum_pattern_length = 1000000000000\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/objects/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/objects/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/objects/__init__.py:355:16 Incompatible variable type [9]: base_type is declared to have type `interfaces.objects.Template` but is used as type `None`.",
    "message": " base_type is declared to have type `interfaces.objects.Template` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 355,
    "warning_line": "                base_type: interfaces.objects.Template = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template = None,\n                choices: typing.Dict[str, int] = None,\n                **kwargs) -> typing.Type:\n",
        "source_code_len": 227,
        "target_code": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template,\n                choices: typing.Dict[str, int],\n                **kwargs) -> typing.Type:\n",
        "target_code_len": 213,
        "diff_format": "@@ -354,4 +352,4 @@\n                 object_info: interfaces.objects.ObjectInformation,\n-                base_type: interfaces.objects.Template = None,\n-                choices: typing.Dict[str, int] = None,\n+                base_type: interfaces.objects.Template,\n+                choices: typing.Dict[str, int],\n                 **kwargs) -> typing.Type:\n",
        "source_code_with_indent": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template = None,\n                choices: typing.Dict[str, int] = None,\n                **kwargs) -> typing.Type:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template,\n                choices: typing.Dict[str, int],\n                **kwargs) -> typing.Type:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/objects/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/objects/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/objects/__init__.py:356:16 Incompatible variable type [9]: choices is declared to have type `typing.Dict[str, int]` but is used as type `None`.",
    "message": " choices is declared to have type `typing.Dict[str, int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 356,
    "warning_line": "                choices: typing.Dict[str, int] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template = None,\n                choices: typing.Dict[str, int] = None,\n                **kwargs) -> typing.Type:\n",
        "source_code_len": 227,
        "target_code": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template,\n                choices: typing.Dict[str, int],\n                **kwargs) -> typing.Type:\n",
        "target_code_len": 213,
        "diff_format": "@@ -354,4 +352,4 @@\n                 object_info: interfaces.objects.ObjectInformation,\n-                base_type: interfaces.objects.Template = None,\n-                choices: typing.Dict[str, int] = None,\n+                base_type: interfaces.objects.Template,\n+                choices: typing.Dict[str, int],\n                 **kwargs) -> typing.Type:\n",
        "source_code_with_indent": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template = None,\n                choices: typing.Dict[str, int] = None,\n                **kwargs) -> typing.Type:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                object_info: interfaces.objects.ObjectInformation,\n                base_type: interfaces.objects.Template,\n                choices: typing.Dict[str, int],\n                **kwargs) -> typing.Type:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/objects/templates.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/objects/templates.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/objects/templates.py:22:17 Incompatible variable type [9]: type_name is declared to have type `str` but is used as type `None`.",
    "message": " type_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 22,
    "warning_line": "                 type_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self,\n                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n                 type_name: str = None,\n                 **arguments) -> None:\n",
        "source_code_len": 206,
        "target_code": "    def __init__(self,\n                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n                 type_name: str,\n                 **arguments) -> None:\n",
        "target_code_len": 175,
        "diff_format": "@@ -20,4 +20,4 @@\n     def __init__(self,\n-                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n-                 type_name: str = None,\n+                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n+                 type_name: str,\n                  **arguments) -> None:\n",
        "source_code_with_indent": "    def __init__(self,\n                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n                 type_name: str = None,\n                 **arguments) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self,\n                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n                 type_name: str,\n                 **arguments) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/objects/templates.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/objects/templates.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/objects/templates.py:25:26 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `validity.ValidityRoutines._check_class` but got `typing.Optional[typing.Type[interfaces.objects.ObjectInterface]]`.",
    "message": " Expected `typing.Type[typing.Any]` for 1st positional only parameter to call `validity.ValidityRoutines._check_class` but got `typing.Optional[typing.Type[interfaces.objects.ObjectInterface]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "        self._check_class(object_class, interfaces.objects.ObjectInterface)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self,\n                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n                 type_name: str = None,\n                 **arguments) -> None:\n",
        "source_code_len": 206,
        "target_code": "    def __init__(self,\n                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n                 type_name: str,\n                 **arguments) -> None:\n",
        "target_code_len": 175,
        "diff_format": "@@ -20,4 +20,4 @@\n     def __init__(self,\n-                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n-                 type_name: str = None,\n+                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n+                 type_name: str,\n                  **arguments) -> None:\n",
        "source_code_with_indent": "    def __init__(self,\n                 object_class: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]] = None,\n                 type_name: str = None,\n                 **arguments) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self,\n                 object_class: typing.Type[interfaces.objects.ObjectInterface],\n                 type_name: str,\n                 **arguments) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/renderers/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/renderers/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/renderers/__init__.py:258:14 Incompatible variable type [9]: sort_key is declared to have type `interfaces.renderers.ColumnSortKey` but is used as type `None`.",
    "message": " sort_key is declared to have type `interfaces.renderers.ColumnSortKey` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 258,
    "warning_line": "              sort_key: interfaces.renderers.ColumnSortKey = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "              function: typing.Callable[[interfaces.renderers.TreeNode, _T], _T],\n              initial_accumulator: _T = None,\n              sort_key: interfaces.renderers.ColumnSortKey = None):\n        \"\"\"Visits all the nodes in a tree, calling function on each one.\n",
        "source_code_len": 269,
        "target_code": "              function: typing.Callable[[interfaces.renderers.TreeNode, _T], _T],\n              initial_accumulator: _T,\n              sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None):\n        \"\"\"Visits all the nodes in a tree, calling function on each one.\n",
        "target_code_len": 279,
        "diff_format": "@@ -256,4 +257,4 @@\n               function: typing.Callable[[interfaces.renderers.TreeNode, _T], _T],\n-              initial_accumulator: _T = None,\n-              sort_key: interfaces.renderers.ColumnSortKey = None):\n+              initial_accumulator: _T,\n+              sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None):\n         \"\"\"Visits all the nodes in a tree, calling function on each one.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "              function: typing.Callable[[interfaces.renderers.TreeNode, _T], _T],\n              initial_accumulator: _T = None,\n              sort_key: interfaces.renderers.ColumnSortKey = None):\n        <IND>",
        "target_code_with_indent": "              function: typing.Callable[[interfaces.renderers.TreeNode, _T], _T],\n              initial_accumulator: _T,\n              sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "               accumulator: _T,\n               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n        \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_len": 182,
        "target_code": "               accumulator: _T,\n               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n        \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "target_code_len": 199,
        "diff_format": "@@ -292,3 +293,3 @@\n                accumulator: _T,\n-               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n+               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n         \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_with_indent": "               accumulator: _T,\n               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n        <IND>\"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "               accumulator: _T,\n               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n        <IND>\"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/renderers/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/renderers/__init__.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/renderers/__init__.py:293:15 Incompatible variable type [9]: sort_key is declared to have type `interfaces.renderers.ColumnSortKey` but is used as type `None`.",
    "message": " sort_key is declared to have type `interfaces.renderers.ColumnSortKey` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 293,
    "warning_line": "               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "               accumulator: _T,\n               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n        \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_len": 182,
        "target_code": "               accumulator: _T,\n               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n        \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "target_code_len": 199,
        "diff_format": "@@ -292,3 +293,3 @@\n                accumulator: _T,\n-               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n+               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n         \"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_with_indent": "               accumulator: _T,\n               sort_key: interfaces.renderers.ColumnSortKey = None) -> _T:\n        <IND>\"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "               accumulator: _T,\n               sort_key: typing.Optional[interfaces.renderers.ColumnSortKey] = None) -> _T:\n        <IND>\"\"\"Visits all the nodes in a tree, calling function on each one\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/symbols/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/__init__.py:109:27 Incompatible variable type [9]: type_name is declared to have type `str` but is used as type `None`.",
    "message": " type_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 109,
    "warning_line": "        def __init__(self, type_name: str = None, **kwargs) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        def __init__(self, type_name: str = None, **kwargs) -> None:\n            vollog.debug(\"Unresolved reference: {}\".format(type_name))\n",
        "source_code_len": 141,
        "target_code": "\n        def __init__(self, type_name: str, **kwargs) -> None:\n            vollog.debug(\"Unresolved reference: {}\".format(type_name))\n",
        "target_code_len": 134,
        "diff_format": "@@ -108,3 +108,3 @@\n \n-        def __init__(self, type_name: str = None, **kwargs) -> None:\n+        def __init__(self, type_name: str, **kwargs) -> None:\n             vollog.debug(\"Unresolved reference: {}\".format(type_name))\n",
        "source_code_with_indent": "\n        def __init__(self, type_name: str = None, **kwargs) -> None:\n            <IND>vollog.debug(\"Unresolved reference: {}\".format(type_name))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        def __init__(self, type_name: str, **kwargs) -> None:\n            <IND>vollog.debug(\"Unresolved reference: {}\".format(type_name))\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/symbols/intermed.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/intermed.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/intermed.py:200:53 Incompatible parameter type [6]: Expected `interfaces.symbols.NativeTableInterface` for 4th positional only parameter to call `interfaces.symbols.SymbolTableInterface.__init__` but got `typing.Optional[interfaces.symbols.NativeTableInterface]`.",
    "message": " Expected `interfaces.symbols.NativeTableInterface` for 4th positional only parameter to call `interfaces.symbols.SymbolTableInterface.__init__` but got `typing.Optional[interfaces.symbols.NativeTableInterface]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 200,
    "warning_line": "        super().__init__(context, config_path, name, nt, table_mapping = table_mapping)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        nt = native_types or self._get_natives()\n        nt.name = name + \"_natives\"\n",
        "source_code_len": 85,
        "target_code": "        nt = native_types or self._get_natives()\n        if nt is None:\n            raise ValueError(\"Native table not provided\")\n        nt.name = name + \"_natives\"\n",
        "target_code_len": 166,
        "diff_format": "@@ -198,2 +198,4 @@\n         nt = native_types or self._get_natives()\n+        if nt is None:\n+            raise ValueError(\"Native table not provided\")\n         nt.name = name + \"_natives\"\n",
        "source_code_with_indent": "        nt = native_types or self._get_natives()\n        nt.name = name + \"_natives\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        nt = native_types or self._get_natives()\n        if nt is None:\n            <IND>raise ValueError(\"Native table not provided\")\n        <DED>nt.name = name + \"_natives\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "7a52ac9debc6e0463a52ecc1c5cacc5dbb40a0d1",
    "filename": "volatility/framework/symbols/native.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/symbols/native.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/symbols/native.py:48:8 Incompatible variable type [9]: obj is declared to have type `typing.Type[interfaces.objects.ObjectInterface]` but is used as type `None`.",
    "message": " obj is declared to have type `typing.Type[interfaces.objects.ObjectInterface]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 48,
    "warning_line": "        obj = None  # type: typing.Type[interfaces.objects.ObjectInterface]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        additional = {}  # type: typing.Dict[str, typing.Any]\n        obj = None  # type: typing.Type[interfaces.objects.ObjectInterface]\n        if type_name == 'void' or type_name == 'function':\n",
        "source_code_len": 197,
        "target_code": "        additional = {}  # type: typing.Dict[str, typing.Any]\n        obj = None  # type: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]]\n        if type_name == 'void' or type_name == 'function':\n",
        "target_code_len": 214,
        "diff_format": "@@ -47,3 +47,3 @@\n         additional = {}  # type: typing.Dict[str, typing.Any]\n-        obj = None  # type: typing.Type[interfaces.objects.ObjectInterface]\n+        obj = None  # type: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]]\n         if type_name == 'void' or type_name == 'function':\n",
        "source_code_with_indent": "        <DED>additional = {}  # type: typing.Dict[str, typing.Any]\n        obj = None  # type: typing.Type[interfaces.objects.ObjectInterface]\n        if type_name == 'void' or type_name == 'function':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>additional = {}  # type: typing.Dict[str, typing.Any]\n        obj = None  # type: typing.Optional[typing.Type[interfaces.objects.ObjectInterface]]\n        if type_name == 'void' or type_name == 'function':\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]