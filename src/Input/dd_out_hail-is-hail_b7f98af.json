[
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:368:14 Unbound name [10]: Name `Env` is used but not defined in the current scope.",
    "message": " Name `Env` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 368,
    "warning_line": "        uid = Env.get_uid()"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:371:25 Unbound name [10]: Name `construct_expr` is used but not defined in the current scope.",
    "message": " Name `construct_expr` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 371,
    "warning_line": "                ordering(construct_expr(VariableReference(uid), expr.dtype, expr._indices,"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:371:40 Unbound name [10]: Name `VariableReference` is used but not defined in the current scope.",
    "message": " Name `VariableReference` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 371,
    "warning_line": "                ordering(construct_expr(VariableReference(uid), expr.dtype, expr._indices,"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:376:32 Unbound name [10]: Name `unify_all` is used but not defined in the current scope.",
    "message": " Name `unify_all` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 376,
    "warning_line": "        indices, aggregations = unify_all(expr, lambda_result)"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:378:16 Unbound name [10]: Name `is_numeric` is used but not defined in the current scope.",
    "message": " Name `is_numeric` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 378,
    "warning_line": "        if not (is_numeric(ordering.dtype) or ordering.dtype == tstr):"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:378:64 Unbound name [10]: Name `tstr` is used but not defined in the current scope.",
    "message": " Name `tstr` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 378,
    "warning_line": "        if not (is_numeric(ordering.dtype) or ordering.dtype == tstr):"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:382:14 Unbound name [10]: Name `LambdaClassMethod` is used but not defined in the current scope.",
    "message": " Name `LambdaClassMethod` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 382,
    "warning_line": "        ast = LambdaClassMethod('takeBy', uid, expr._ast, lambda_result._ast, n._ast)"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:385:18 Unbound name [10]: Name `ExpressionException` is used but not defined in the current scope.",
    "message": " Name `ExpressionException` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 385,
    "warning_line": "            raise ExpressionException('Cannot aggregate an already-aggregated expression')"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:390:55 Unbound name [10]: Name `Indices` is used but not defined in the current scope.",
    "message": " Name `Indices` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 390,
    "warning_line": "        return construct_expr(ast, tarray(expr._type), Indices(source=indices.source),"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:391:48 Unbound name [10]: Name `Aggregation` is used but not defined in the current scope.",
    "message": " Name `Aggregation` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 391,
    "warning_line": "                              aggregations.push(Aggregation(expr, lambda_result)))"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/aggregators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/aggregators.py",
    "file_hunks_size": 33,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/aggregators.py:795:34 Unbound name [10]: Name `tbool` is used but not defined in the current scope.",
    "message": " Name `tbool` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 795,
    "warning_line": "    assert lambda_result.dtype == tbool",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    uid = Env.get_uid()\n\n    if callable(condition):\n        lambda_result = to_expr(\n            condition(\n                construct_expr(VariableReference(uid), expr._type, expr._indices,\n                               expr._aggregations)))\n    else:\n        lambda_result = to_expr(condition)\n\n    assert lambda_result.dtype == tbool\n\n    indices, aggregations = unify_all(expr, lambda_result)\n    ast = LambdaClassMethod('filter', uid, expr._ast, lambda_result._ast)\n    return Aggregable(ast, expr.dtype, indices, aggregations)\n\n",
        "source_code_len": 536,
        "target_code": "\n    f = condition if callable(condition) else lambda x: condition\n    return expr._filter(f)\n\n\n@typecheck(f=oneof(func_spec(1, expr_any), expr_any), expr=agg_expr(expr_any))\ndef _map(f, expr) -> Aggregable:\n    f2 = f if callable(f) else lambda x: f\n    return expr._map(f2)\n\n\n@typecheck(f=oneof(func_spec(1, expr_array()), expr_array()), expr=agg_expr(expr_any))\ndef _flatmap(f, expr) -> Aggregable:\n    f2 = f if callable(f) else lambda x: f\n    return expr._flatmap(f2)\n\n",
        "target_code_len": 475,
        "diff_format": "@@ -784,17 +811,16 @@\n \n-    uid = Env.get_uid()\n-\n-    if callable(condition):\n-        lambda_result = to_expr(\n-            condition(\n-                construct_expr(VariableReference(uid), expr._type, expr._indices,\n-                               expr._aggregations)))\n-    else:\n-        lambda_result = to_expr(condition)\n-\n-    assert lambda_result.dtype == tbool\n-\n-    indices, aggregations = unify_all(expr, lambda_result)\n-    ast = LambdaClassMethod('filter', uid, expr._ast, lambda_result._ast)\n-    return Aggregable(ast, expr.dtype, indices, aggregations)\n+    f = condition if callable(condition) else lambda x: condition\n+    return expr._filter(f)\n+\n+\n+@typecheck(f=oneof(func_spec(1, expr_any), expr_any), expr=agg_expr(expr_any))\n+def _map(f, expr) -> Aggregable:\n+    f2 = f if callable(f) else lambda x: f\n+    return expr._map(f2)\n+\n+\n+@typecheck(f=oneof(func_spec(1, expr_array()), expr_array()), expr=agg_expr(expr_any))\n+def _flatmap(f, expr) -> Aggregable:\n+    f2 = f if callable(f) else lambda x: f\n+    return expr._flatmap(f2)\n \n",
        "source_code_with_indent": "\n    uid = Env.get_uid()\n\n    if callable(condition):\n        <IND>lambda_result = to_expr(\n            condition(\n                construct_expr(VariableReference(uid), expr._type, expr._indices,\n                               expr._aggregations)))\n    <DED>else:\n        <IND>lambda_result = to_expr(condition)\n\n    <DED>assert lambda_result.dtype == tbool\n\n    indices, aggregations = unify_all(expr, lambda_result)\n    ast = LambdaClassMethod('filter', uid, expr._ast, lambda_result._ast)\n    return Aggregable(ast, expr.dtype, indices, aggregations)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    f = condition if callable(condition) else lambda x: condition\n    return expr._filter(f)\n\n\n<DED>@typecheck(f=oneof(func_spec(1, expr_any), expr_any), expr=agg_expr(expr_any))\ndef _map(f, expr) -> Aggregable:\n    <IND>f2 = f if callable(f) else lambda x: f\n    return expr._map(f2)\n\n\n<DED>@typecheck(f=oneof(func_spec(1, expr_array()), expr_array()), expr=agg_expr(expr_any))\ndef _flatmap(f, expr) -> Aggregable:\n    <IND>f2 = f if callable(f) else lambda x: f\n    return expr._flatmap(f2)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expr_ast.py",
    "min_patch_found": false,
    "full_warning_msg": "python/hail/expr/expr_ast.py:8:10 Unbound name [10]: Name `lazy` is used but not defined in the current scope.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expr_ast.py'",
    "dd_fail": true
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expr_ast.py",
    "min_patch_found": false,
    "full_warning_msg": "python/hail/expr/expr_ast.py:12:5 Unbound name [10]: Name `typecheck_method` is used but not defined in the current scope.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expr_ast.py'",
    "dd_fail": true
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expr_ast.py",
    "min_patch_found": false,
    "full_warning_msg": "python/hail/expr/expr_ast.py:33:8 Incompatible return type [7]: Expected `typing.Tuple[AST]` but got `typing.Tuple[typing.Any, ...]`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expr_ast.py'",
    "dd_fail": true
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expr_ast.py",
    "min_patch_found": false,
    "full_warning_msg": "python/hail/expr/expr_ast.py:190:29 Unbound name [10]: Name `sequenceof` is used but not defined in the current scope.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expr_ast.py'",
    "dd_fail": true
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expr_ast.py",
    "min_patch_found": false,
    "full_warning_msg": "python/hail/expr/expr_ast.py:249:28 Unbound name [10]: Name `nullable` is used but not defined in the current scope.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expr_ast.py'",
    "dd_fail": true
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/base_expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/base_expression.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/base_expression.py:225:25 Unbound name [10]: Name `Tuple` is used but not defined in the current scope.",
    "message": " Name `Tuple` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 225,
    "warning_line": "def unify_all(*exprs) -> Tuple[Indices, LinkedList]:"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/base_expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/base_expression.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/base_expression.py:303:26 Unbound name [10]: Name `AST` is used but not defined in the current scope.",
    "message": " Name `AST` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 303,
    "warning_line": "    @typecheck_method(ast=AST, type=HailType, indices=Indices, aggregations=linked_list(Aggregation))"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/typed_expressions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/typed_expressions.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/typed_expressions.py:1052:23 Unbound name [10]: Name `Mapping` is used but not defined in the current scope.",
    "message": " Name `Mapping` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1052,
    "warning_line": "class StructExpression(Mapping, Expression):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_len": 129,
        "target_code": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "target_code_len": 118,
        "diff_format": "@@ -1,3 +1,4 @@\n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,",
        "target_code_with_indent": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,"
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/typed_expressions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/typed_expressions.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/typed_expressions.py:1077:34 Unbound name [10]: Name `Dict` is used but not defined in the current scope.",
    "message": " Name `Dict` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1077,
    "warning_line": "    def _from_fields(cls, fields: Dict[str, Expression]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_len": 129,
        "target_code": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "target_code_len": 118,
        "diff_format": "@@ -1,3 +1,4 @@\n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,",
        "target_code_with_indent": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,"
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/typed_expressions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/typed_expressions.py",
    "file_hunks_size": 30,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/typed_expressions.py:1079:14 Unbound name [10]: Name `StructDeclaration` is used but not defined in the current scope.",
    "message": " Name `StructDeclaration` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1079,
    "warning_line": "        ast = StructDeclaration(list(fields), list(expr._ast for expr in fields.values()))"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/typed_expressions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/typed_expressions.py",
    "file_hunks_size": 30,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/typed_expressions.py:1088:26 Unbound name [10]: Name `AST` is used but not defined in the current scope.",
    "message": " Name `AST` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1088,
    "warning_line": "    @typecheck_method(ast=AST, type=HailType, indices=Indices, aggregations=LinkedList)"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/expr/expressions/typed_expressions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/expr/expressions/typed_expressions.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/expr/expressions/typed_expressions.py:1308:34 Unbound name [10]: Name `Sequence` is used but not defined in the current scope.",
    "message": " Name `Sequence` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1308,
    "warning_line": "class TupleExpression(Expression, Sequence):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_len": 129,
        "target_code": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "target_code_len": 118,
        "diff_format": "@@ -1,3 +1,4 @@\n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import Expression, to_expr, ExpressionException, \\\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "import hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,",
        "target_code_with_indent": "from typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import Expression, to_expr, ExpressionException,"
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/methods/misc.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/methods/misc.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/methods/misc.py:128:12 Unbound name [10]: Name `construct_expr` is used but not defined in the current scope.",
    "message": " Name `construct_expr` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 128,
    "warning_line": "        l = construct_expr(VariableReference('l'), wrapped_node_t)"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/table.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/table.py:348:21 Unbound name [10]: Name `Optional` is used but not defined in the current scope.",
    "message": " Name `Optional` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 348,
    "warning_line": "    def key(self) -> Optional[StructExpression]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_len": 147,
        "target_code": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_len": 158,
        "diff_format": "@@ -4,6 +4,8 @@\n \n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import *\n from hail.expr.types import *\n+from hail.ir import *\n from hail.typecheck import *\n",
        "source_code_with_indent": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/table.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/table.py:422:53 Unbound name [10]: Name `Tuple` is used but not defined in the current scope.",
    "message": " Name `Tuple` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 422,
    "warning_line": "    def _make_row(self, key_struct, value_struct) -> Tuple[StructExpression, Optional[List[str]], Optional[List[str]], Optional[List[str]]]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_len": 147,
        "target_code": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_len": 158,
        "diff_format": "@@ -4,6 +4,8 @@\n \n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import *\n from hail.expr.types import *\n+from hail.ir import *\n from hail.typecheck import *\n",
        "source_code_with_indent": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/table.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/table.py:422:86 Unbound name [10]: Name `List` is used but not defined in the current scope.",
    "message": " Name `List` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 422,
    "warning_line": "    def _make_row(self, key_struct, value_struct) -> Tuple[StructExpression, Optional[List[str]], Optional[List[str]], Optional[List[str]]]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_len": 147,
        "target_code": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_len": 158,
        "diff_format": "@@ -4,6 +4,8 @@\n \n+from typing import *\n+\n import hail as hl\n-from hail.expr.expr_ast import *\n from hail.expr.expressions import *\n from hail.expr.types import *\n+from hail.ir import *\n from hail.typecheck import *\n",
        "source_code_with_indent": "\nimport hail as hl\nfrom hail.expr.expr_ast import *\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.typecheck import *\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import *\n\nimport hail as hl\nfrom hail.expr.expressions import *\nfrom hail.expr.types import *\nfrom hail.ir import *\nfrom hail.typecheck import *\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/table.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/table.py:1100:37 Unbound name [10]: Name `TopLevelReference` is used but not defined in the current scope.",
    "message": " Name `TopLevelReference` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1100,
    "warning_line": "            if any(not isinstance(a, TopLevelReference) and not isinstance(a, Select) for a in ast):"
  },
  {
    "project": "hail-is/hail",
    "commit": "b7f98afc0c50d01c31b66f2e3872dd47b9fd474b",
    "filename": "python/hail/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hail-is-hail/python/hail/table.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "python/hail/table.py:1100:78 Unbound name [10]: Name `Select` is used but not defined in the current scope.",
    "message": " Name `Select` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1100,
    "warning_line": "            if any(not isinstance(a, TopLevelReference) and not isinstance(a, Select) for a in ast):"
  }
]