[
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:832:48 Incompatible parameter type [6]: Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 832,
    "warning_line": "            lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:832:48 Incompatible parameter type [6]: Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 832,
    "warning_line": "            lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:832:48 Incompatible parameter type [6]: Expected `Optional[int]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[int]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 832,
    "warning_line": "            lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:832:48 Incompatible parameter type [6]: Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 832,
    "warning_line": "            lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:832:48 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `bool` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 832,
    "warning_line": "            lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `Optional[typing.IO[str]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.IO[str]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `Optional[int]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[int]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:835:39 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `bool` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 835,
    "warning_line": "            traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if config.debug_enabled:\n            exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                tlog(f\"error: {line}\")\n            traceback.print_exception(*exc_info)\n            del exc_info\n    finally:\n",
        "source_code_len": 286,
        "target_code": "        if config.debug_enabled:\n            tlog_exception(\"queue_consumer\")\n    finally:\n",
        "target_code_len": 91,
        "diff_format": "@@ -830,8 +850,3 @@\n         if config.debug_enabled:\n-            exc_info = sys.exc_info()\n-            lines = traceback.format_exception(*exc_info)\n-            for line in lines:\n-                tlog(f\"error: {line}\")\n-            traceback.print_exception(*exc_info)\n-            del exc_info\n+            tlog_exception(\"queue_consumer\")\n     finally:\n",
        "source_code_with_indent": "        if config.debug_enabled:\n            <IND>exc_info = sys.exc_info()\n            lines = traceback.format_exception(*exc_info)\n            for line in lines:\n                <IND>tlog(f\"error: {line}\")\n            <DED>traceback.print_exception(*exc_info)\n            del exc_info\n    <DED><DED>finally:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if config.debug_enabled:\n            <IND>tlog_exception(\"queue_consumer\")\n    <DED><DED>finally:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:886:52 Incompatible parameter type [6]: Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 886,
    "warning_line": "                lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:886:52 Incompatible parameter type [6]: Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 886,
    "warning_line": "                lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:886:52 Incompatible parameter type [6]: Expected `Optional[int]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[int]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 886,
    "warning_line": "                lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:886:52 Incompatible parameter type [6]: Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 886,
    "warning_line": "                lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:886:52 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `bool` for 1st positional only parameter to call `traceback.format_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 886,
    "warning_line": "                lines = traceback.format_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `Optional[typing.IO[str]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.IO[str]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[typing.Type[BaseException]]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[BaseException]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `Optional[int]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[int]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `Optional[types.TracebackType]` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "amor71/LiuAlgoTrader",
    "commit": "99260f6ec10dd7ed57268edf2b9fd7c05eede414",
    "filename": "liualgotrader/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/amor71-LiuAlgoTrader/liualgotrader/consumer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "liualgotrader/consumer.py:889:43 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "message": " Expected `bool` for 1st positional only parameter to call `traceback.print_exception` but got `typing.Union[None, typing.Type[BaseException], BaseException, types.TracebackType]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 889,
    "warning_line": "                traceback.print_exception(*exc_info)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            if config.debug_enabled:\n                exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    tlog(f\"error: {line}\")\n                traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_len": 302,
        "target_code": "            if config.debug_enabled:\n                tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_len": 92,
        "diff_format": "@@ -884,8 +899,3 @@\n             if config.debug_enabled:\n-                exc_info = sys.exc_info()\n-                lines = traceback.format_exception(*exc_info)\n-                for line in lines:\n-                    tlog(f\"error: {line}\")\n-                traceback.print_exception(*exc_info)\n-                del exc_info\n+                tlog_exception(\"consumer_async_main\")\n \n",
        "source_code_with_indent": "            if config.debug_enabled:\n                <IND>exc_info = sys.exc_info()\n                lines = traceback.format_exception(*exc_info)\n                for line in lines:\n                    <IND>tlog(f\"error: {line}\")\n                <DED>traceback.print_exception(*exc_info)\n                del exc_info\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            if config.debug_enabled:\n                <IND>tlog_exception(\"consumer_async_main\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]