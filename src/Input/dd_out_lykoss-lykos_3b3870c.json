[
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/crazedshaman.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/crazedshaman.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/crazedshaman.py:87:59 Incompatible parameter type [6]: Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `User`.",
    "message": " Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `User`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 87,
    "warning_line": "                    dispatcher = MessageDispatcher(shaman, shaman)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport re\nimport random\nimport itertools\nfrom collections import defaultdict, deque\nfrom typing import Optional\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.events import Event, event_listener\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.gamestate import GameState\nfrom src.messages import messages\nfrom src.status import try_misdirection, try_exchange, is_silent\nfrom src.users import User\nfrom src.cats import Win_Stealer\n\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n\n",
        "source_code_len": 737,
        "target_code": "\nimport itertools\nimport random\nfrom typing import Optional\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.gamestate import GameState\nfrom src.messages import messages\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\nfrom src.status import is_silent\nfrom src.users import User, Bot\n\n",
        "target_code_len": 475,
        "diff_format": "@@ -2,21 +2,15 @@\n \n-import re\n+import itertools\n import random\n-import itertools\n-from collections import defaultdict, deque\n from typing import Optional\n \n-from src import users, channels\n-from src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\n from src.decorators import command\n+from src.dispatcher import MessageDispatcher\n from src.events import Event, event_listener\n-from src.containers import UserList, UserSet, UserDict, DefaultUserDict\n-from src.dispatcher import MessageDispatcher\n+from src.functions import get_players, get_all_players\n from src.gamestate import GameState\n from src.messages import messages\n-from src.status import try_misdirection, try_exchange, is_silent\n-from src.users import User\n-from src.cats import Win_Stealer\n-\n from src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n+from src.status import is_silent\n+from src.users import User, Bot\n \n",
        "source_code_with_indent": "\nimport re\nimport random\nimport itertools\nfrom collections import defaultdict, deque\nfrom typing import Optional\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.events import Event, event_listener\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.gamestate import GameState\nfrom src.messages import messages\nfrom src.status import try_misdirection, try_exchange, is_silent\nfrom src.users import User\nfrom src.cats import Win_Stealer\n\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nimport itertools\nimport random\nfrom typing import Optional\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.gamestate import GameState\nfrom src.messages import messages\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\nfrom src.status import is_silent\nfrom src.users import User, Bot\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_unknown\", role=\"crazed shaman\")\n",
        "source_code_len": 235,
        "target_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_unknown\", role=\"crazed shaman\")\n",
        "target_code_len": 232,
        "diff_format": "@@ -86,3 +80,3 @@\n                     ps.remove(target)\n-                    dispatcher = MessageDispatcher(shaman, shaman)\n+                    dispatcher = MessageDispatcher(shaman, Bot)\n                     given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_unknown\", role=\"crazed shaman\")\n",
        "source_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_unknown\", role=\"crazed shaman\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_unknown\", role=\"crazed shaman\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/fallenangel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/fallenangel.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/fallenangel.py:30:51 Incompatible parameter type [6]: Expected `User` for 3rd parameter `attacker` to call `status.protection.remove_all_protections` but got `None`.",
    "message": " Expected `User` for 3rd parameter `attacker` to call `status.protection.remove_all_protections` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 30,
    "warning_line": "        status.remove_all_protections(var, target, attacker=None, attacker_role=\"fallen angel\", reason=\"fallen_angel\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if attacker_role == \"wolf\" and get_all_players(var, (\"fallen angel\",)):\n        status.remove_all_protections(var, target, attacker=None, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n        evt.prevent_default = True\n",
        "source_code_len": 230,
        "target_code": "    if attacker_role == \"wolf\" and get_all_players(var, (\"fallen angel\",)):\n        status.remove_all_protections(var, target, attacker=attacker, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n        evt.prevent_default = True\n",
        "target_code_len": 234,
        "diff_format": "@@ -29,3 +18,3 @@\n     if attacker_role == \"wolf\" and get_all_players(var, (\"fallen angel\",)):\n-        status.remove_all_protections(var, target, attacker=None, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n+        status.remove_all_protections(var, target, attacker=attacker, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n         evt.prevent_default = True\n",
        "source_code_with_indent": "    <IND>if attacker_role == \"wolf\" and get_all_players(var, (\"fallen angel\",)):\n        <IND>status.remove_all_protections(var, target, attacker=None, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n        evt.prevent_default = True\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>if attacker_role == \"wolf\" and get_all_players(var, (\"fallen angel\",)):\n        <IND>status.remove_all_protections(var, target, attacker=attacker, attacker_role=\"fallen angel\", reason=\"fallen_angel\")\n        evt.prevent_default = True\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/helper/shamans.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/helper/shamans.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/helper/shamans.py:422:43 Incompatible parameter type [6]: Expected `User` for 3rd parameter `protector` to call `status.protection.add_protection` but got `None`.",
    "message": " Expected `User` for 3rd parameter `protector` to call `status.protection.add_protection` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 422,
    "warning_line": "        status.add_protection(var, player, protector=None, protector_role=\"shaman\")"
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/madscientist.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/madscientist.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/madscientist.py:53:41 Incompatible parameter type [6]: Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "message": " Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 53,
    "warning_line": "    target1, target2 = _get_targets(var, get_players(var), player)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    target1, target2 = _get_targets(var, get_players(var), player)\n\n",
        "source_code_len": 69,
        "target_code": "\n    target1, target2 = _get_targets(var, get_all_players(var), player)\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -52,3 +38,3 @@\n \n-    target1, target2 = _get_targets(var, get_players(var), player)\n+    target1, target2 = _get_targets(var, get_all_players(var), player)\n \n",
        "source_code_with_indent": "\n    <DED>target1, target2 = _get_targets(var, get_players(var), player)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>target1, target2 = _get_targets(var, get_all_players(var), player)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/madscientist.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/madscientist.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/madscientist.py:88:45 Incompatible parameter type [6]: Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "message": " Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 88,
    "warning_line": "        target1, target2 = _get_targets(var, pl, ms)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    for ms in get_all_players(var, (\"mad scientist\",)):\n        pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, ms)\n",
        "source_code_len": 139,
        "target_code": "    for ms in get_all_players(var, (\"mad scientist\",)):\n        pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, ms)\n",
        "target_code_len": 143,
        "diff_format": "@@ -86,3 +72,3 @@\n     for ms in get_all_players(var, (\"mad scientist\",)):\n-        pl = get_players(var)\n+        pl = get_all_players(var)\n         target1, target2 = _get_targets(var, pl, ms)\n",
        "source_code_with_indent": "    <IND>for ms in get_all_players(var, (\"mad scientist\",)):\n        <IND>pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, ms)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>for ms in get_all_players(var, (\"mad scientist\",)):\n        <IND>pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, ms)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/madscientist.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/madscientist.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/madscientist.py:96:45 Incompatible parameter type [6]: Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "message": " Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 96,
    "warning_line": "        target1, target2 = _get_targets(var, pl, user)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if user in var.roles[\"mad scientist\"]:\n        pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_len": 128,
        "target_code": "    if user in var.roles[\"mad scientist\"]:\n        pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "target_code_len": 132,
        "diff_format": "@@ -94,3 +80,3 @@\n     if user in var.roles[\"mad scientist\"]:\n-        pl = get_players(var)\n+        pl = get_all_players(var)\n         target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_with_indent": "    <IND>if user in var.roles[\"mad scientist\"]:\n        <IND>pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>if user in var.roles[\"mad scientist\"]:\n        <IND>pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/madscientist.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/madscientist.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/madscientist.py:103:45 Incompatible parameter type [6]: Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "message": " Expected `typing.Set[User]` for 2nd positional only parameter to call `_get_targets` but got `typing.List[User]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 103,
    "warning_line": "        target1, target2 = _get_targets(var, pl, user)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if role == \"mad scientist\":\n        pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_len": 117,
        "target_code": "    if role == \"mad scientist\":\n        pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "target_code_len": 121,
        "diff_format": "@@ -101,3 +87,3 @@\n     if role == \"mad scientist\":\n-        pl = get_players(var)\n+        pl = get_all_players(var)\n         target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_with_indent": "    <IND>if role == \"mad scientist\":\n        <IND>pl = get_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>if role == \"mad scientist\":\n        <IND>pl = get_all_players(var)\n        target1, target2 = _get_targets(var, pl, user)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/monster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/monster.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/monster.py:42:37 Incompatible parameter type [6]: Expected `User` for 3rd parameter `protector` to call `src.status.protection.add_protection` but got `None`.",
    "message": " Expected `User` for 3rd parameter `protector` to call `src.status.protection.add_protection` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 42,
    "warning_line": "        add_protection(var, monster, protector=None, protector_role=\"monster\", scope=Wolf)"
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/shaman.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/shaman.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/shaman.py:82:59 Incompatible parameter type [6]: Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `users.User`.",
    "message": " Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `users.User`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "                    dispatcher = MessageDispatcher(shaman, shaman)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport re\nimport random\nimport itertools\nimport typing\nfrom collections import defaultdict, deque\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.messages import messages\nfrom src.events import Event, event_listener\nfrom src.status import try_misdirection, try_exchange, is_silent\n\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n\n",
        "source_code_len": 627,
        "target_code": "\nimport itertools\nimport random\nimport typing\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.messages import messages\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\nfrom src.status import is_silent\nfrom src.users import Bot\n\n",
        "target_code_len": 419,
        "diff_format": "@@ -2,18 +2,14 @@\n \n-import re\n+import itertools\n import random\n-import itertools\n import typing\n-from collections import defaultdict, deque\n \n-from src import users, channels\n-from src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\n from src.decorators import command\n-from src.containers import UserList, UserSet, UserDict, DefaultUserDict\n from src.dispatcher import MessageDispatcher\n+from src.events import Event, event_listener\n+from src.functions import get_players, get_all_players\n from src.messages import messages\n-from src.events import Event, event_listener\n-from src.status import try_misdirection, try_exchange, is_silent\n-\n from src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n+from src.status import is_silent\n+from src.users import Bot\n \n",
        "source_code_with_indent": "\nimport re\nimport random\nimport itertools\nimport typing\nfrom collections import defaultdict, deque\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.messages import messages\nfrom src.events import Event, event_listener\nfrom src.status import try_misdirection, try_exchange, is_silent\n\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nimport itertools\nimport random\nimport typing\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.messages import messages\nfrom src.roles.helper.shamans import setup_variables, get_totem_target, give_totem, totem_message\nfrom src.status import is_silent\nfrom src.users import Bot\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"shaman\")\n",
        "source_code_len": 226,
        "target_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"shaman\")\n",
        "target_code_len": 223,
        "diff_format": "@@ -81,3 +77,3 @@\n                     ps.remove(target)\n-                    dispatcher = MessageDispatcher(shaman, shaman)\n+                    dispatcher = MessageDispatcher(shaman, Bot)\n                     given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"shaman\")\n",
        "source_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"shaman\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"shaman\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/vengefulghost.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/vengefulghost.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/vengefulghost.py:169:31 Unsupported operand [58]: `+` is not supported for operand types `str` and `User`.",
    "message": " `+` is not supported for operand types `str` and `User`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 169,
    "warning_line": "        GHOSTS[target] = \"!\" + GHOSTS[target]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "KILLS: UserDict[users.User, users.User] = UserDict()\nGHOSTS: UserDict[users.User, users.User] = UserDict()\n\n",
        "source_code_len": 108,
        "target_code": "KILLS: UserDict[users.User, users.User] = UserDict()\nGHOSTS: UserDict[users.User, str] = UserDict()\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -23,3 +22,3 @@\n KILLS: UserDict[users.User, users.User] = UserDict()\n-GHOSTS: UserDict[users.User, users.User] = UserDict()\n+GHOSTS: UserDict[users.User, str] = UserDict()\n \n",
        "source_code_with_indent": "<DED>KILLS: UserDict[users.User, users.User] = UserDict()\nGHOSTS: UserDict[users.User, users.User] = UserDict()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>KILLS: UserDict[users.User, users.User] = UserDict()\nGHOSTS: UserDict[users.User, str] = UserDict()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/wolfmystic.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/wolfmystic.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/wolfmystic.py:15:48 Incompatible parameter type [6]: Expected `typing.Tuple[str]` for 3rd parameter `types` to call `register_mystic` but got `typing.Tuple[str, str]`.",
    "message": " Expected `typing.Tuple[str]` for 3rd parameter `types` to call `register_mystic` but got `typing.Tuple[str, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 15,
    "warning_line": "register_mystic(\"wolf mystic\", send_role=False, types=(\"Safe\", \"Win Stealer\"))"
  },
  {
    "project": "lykoss/lykos",
    "commit": "3b3870c9f365944134225c5b7364430c5bce0158",
    "filename": "src/roles/wolfshaman.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/lykoss-lykos/src/roles/wolfshaman.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/roles/wolfshaman.py:87:59 Incompatible parameter type [6]: Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `users.User`.",
    "message": " Expected `typing.Union[channels.Channel, users.BotUser]` for 2nd positional only parameter to call `MessageDispatcher.__init__` but got `users.User`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 87,
    "warning_line": "                    dispatcher = MessageDispatcher(shaman, shaman)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport re\nimport random\nimport itertools\nimport typing\nfrom collections import defaultdict, deque\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.messages import messages\nfrom src.events import Event, find_listener, event_listener\nfrom src.status import try_misdirection, try_exchange, is_silent\n\nfrom src.roles.helper.shamans import get_totem_target, give_totem, setup_variables, totem_message\nfrom src.roles.helper.wolves import register_wolf, send_wolfchat_message\n\n",
        "source_code_len": 715,
        "target_code": "\nimport itertools\nimport random\nimport typing\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, find_listener, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.messages import messages\nfrom src.roles.helper.shamans import get_totem_target, give_totem, setup_variables, totem_message\nfrom src.roles.helper.wolves import register_wolf, send_wolfchat_message\nfrom src.status import is_silent\nfrom src.users import Bot\n\n",
        "target_code_len": 507,
        "diff_format": "@@ -2,19 +2,15 @@\n \n-import re\n+import itertools\n import random\n-import itertools\n import typing\n-from collections import defaultdict, deque\n \n-from src import users, channels\n-from src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\n from src.decorators import command\n-from src.containers import UserList, UserSet, UserDict, DefaultUserDict\n from src.dispatcher import MessageDispatcher\n+from src.events import Event, find_listener, event_listener\n+from src.functions import get_players, get_all_players\n from src.messages import messages\n-from src.events import Event, find_listener, event_listener\n-from src.status import try_misdirection, try_exchange, is_silent\n-\n from src.roles.helper.shamans import get_totem_target, give_totem, setup_variables, totem_message\n from src.roles.helper.wolves import register_wolf, send_wolfchat_message\n+from src.status import is_silent\n+from src.users import Bot\n \n",
        "source_code_with_indent": "\nimport re\nimport random\nimport itertools\nimport typing\nfrom collections import defaultdict, deque\n\nfrom src import users, channels\nfrom src.functions import get_players, get_all_players, get_main_role, get_reveal_role, get_target\nfrom src.decorators import command\nfrom src.containers import UserList, UserSet, UserDict, DefaultUserDict\nfrom src.dispatcher import MessageDispatcher\nfrom src.messages import messages\nfrom src.events import Event, find_listener, event_listener\nfrom src.status import try_misdirection, try_exchange, is_silent\n\nfrom src.roles.helper.shamans import get_totem_target, give_totem, setup_variables, totem_message\nfrom src.roles.helper.wolves import register_wolf, send_wolfchat_message\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nimport itertools\nimport random\nimport typing\n\nfrom src.decorators import command\nfrom src.dispatcher import MessageDispatcher\nfrom src.events import Event, find_listener, event_listener\nfrom src.functions import get_players, get_all_players\nfrom src.messages import messages\nfrom src.roles.helper.shamans import get_totem_target, give_totem, setup_variables, totem_message\nfrom src.roles.helper.wolves import register_wolf, send_wolfchat_message\nfrom src.status import is_silent\nfrom src.users import Bot\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"wolf shaman\")\n",
        "source_code_len": 231,
        "target_code": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"wolf shaman\")\n",
        "target_code_len": 228,
        "diff_format": "@@ -86,3 +82,3 @@\n                     ps.remove(target)\n-                    dispatcher = MessageDispatcher(shaman, shaman)\n+                    dispatcher = MessageDispatcher(shaman, Bot)\n                     given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"wolf shaman\")\n",
        "source_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, shaman)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"wolf shaman\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    ps.remove(target)\n                    dispatcher = MessageDispatcher(shaman, Bot)\n                    given = give_totem(var, dispatcher, target, totem, key=\"shaman_success_random_known\", role=\"wolf shaman\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]