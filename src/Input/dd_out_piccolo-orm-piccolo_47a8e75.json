[
  {
    "project": "piccolo-orm/piccolo",
    "commit": "47a8e75546c5d51b4b812d17f45c81cddbcb2c4a",
    "filename": "aragorm/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/piccolo-orm-piccolo/aragorm/table.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aragorm/table.py:53:35 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 53,
    "warning_line": "    def select(cls, *column_names: [str]) -> Select:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    class Meta:\n        pass\n\n    @classmethod\n    def select(cls, *column_names: [str]) -> Select:\n        \"\"\"\n",
        "source_code_len": 112,
        "target_code": "    class Meta:\n        tablename = None\n\n    @classmethod\n    def select(cls, *column_names: str) -> Select:\n        \"\"\"\n",
        "target_code_len": 122,
        "diff_format": "@@ -49,6 +49,6 @@\n     class Meta:\n-        pass\n+        tablename = None\n \n     @classmethod\n-    def select(cls, *column_names: [str]) -> Select:\n+    def select(cls, *column_names: str) -> Select:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <IND>class Meta:\n        <IND>pass\n\n    <DED>@classmethod\n    def select(cls, *column_names: [str]) -> Select:\n        <IND>",
        "target_code_with_indent": "    <IND>class Meta:\n        <IND>tablename = None\n\n    <DED>@classmethod\n    def select(cls, *column_names: str) -> Select:\n        <IND>"
      }
    ]
  },
  {
    "project": "piccolo-orm/piccolo",
    "commit": "47a8e75546c5d51b4b812d17f45c81cddbcb2c4a",
    "filename": "aragorm/table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/piccolo-orm-piccolo/aragorm/table.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aragorm/table.py:75:32 Invalid type [31]: Expression `[aragorm.table.Table]` is not a valid type.",
    "message": " Expression `[aragorm.table.Table]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 75,
    "warning_line": "    def insert(cls, *instances: ['Table']):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def insert(cls, *instances: ['Table']):\n        \"\"\"\n",
        "source_code_len": 73,
        "target_code": "    @classmethod\n    def insert(cls, *instances: 'Table'):\n        \"\"\"\n",
        "target_code_len": 71,
        "diff_format": "@@ -74,3 +74,3 @@\n     @classmethod\n-    def insert(cls, *instances: ['Table']):\n+    def insert(cls, *instances: 'Table'):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@classmethod\n    def insert(cls, *instances: ['Table']):\n        <IND>",
        "target_code_with_indent": "    <DED>@classmethod\n    def insert(cls, *instances: 'Table'):\n        <IND>"
      }
    ]
  }
]