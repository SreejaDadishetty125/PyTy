[
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/api/views/instance.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/api/views/instance.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/api/views/instance.py:569:8 Incompatible parameter type [6]: Expected `Mapping[str, int]` for 4th positional only parameter to call `build_envoy_location_dict` but got `typing.Set[Tuple[str, int]]`.",
    "message": " Expected `Mapping[str, int]` for 4th positional only parameter to call `build_envoy_location_dict` but got `typing.Set[Tuple[str, int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 569,
    "warning_line": "        casper_proxied_backends,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any\n",
        "source_code_len": 45,
        "target_code": "from enum import Enum\nfrom typing import AbstractSet\nfrom typing import Any\n",
        "target_code_len": 76,
        "diff_format": "@@ -23,2 +23,3 @@\n from enum import Enum\n+from typing import AbstractSet\n from typing import Any\n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import AbstractSet\nfrom typing import Any\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    should_return_individual_backends: bool,\n    casper_proxied_backends: Mapping[str, int],\n) -> MutableMapping[str, Any]:\n",
        "source_code_len": 124,
        "target_code": "    should_return_individual_backends: bool,\n    casper_proxied_backends: AbstractSet[Tuple[str, int]],\n) -> MutableMapping[str, Any]:\n",
        "target_code_len": 135,
        "diff_format": "@@ -740,3 +741,3 @@\n     should_return_individual_backends: bool,\n-    casper_proxied_backends: Mapping[str, int],\n+    casper_proxied_backends: AbstractSet[Tuple[str, int]],\n ) -> MutableMapping[str, Any]:\n",
        "source_code_with_indent": "    should_return_individual_backends: bool,\n    casper_proxied_backends: Mapping[str, int],\n) -> MutableMapping[str, Any]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    should_return_individual_backends: bool,\n    casper_proxied_backends: AbstractSet[Tuple[str, int]],\n) -> MutableMapping[str, Any]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:680:11 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Iterable[typing.Any]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Iterable[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 680,
    "warning_line": "    if len(locations) == 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Callable\nfrom typing import DefaultDict\n",
        "source_code_len": 59,
        "target_code": "from typing import Callable\nfrom typing import Collection\nfrom typing import DefaultDict\n",
        "target_code_len": 89,
        "diff_format": "@@ -27,2 +27,3 @@\n from typing import Callable\n+from typing import Collection\n from typing import DefaultDict\n",
        "source_code_with_indent": "from typing import Callable\nfrom typing import DefaultDict\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Callable\nfrom typing import Collection\nfrom typing import DefaultDict\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def get_smartstack_status_human(\n    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n) -> List[str]:\n",
        "source_code_len": 135,
        "target_code": "def get_smartstack_status_human(\n    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n) -> List[str]:\n",
        "target_code_len": 137,
        "diff_format": "@@ -677,3 +678,3 @@\n def get_smartstack_status_human(\n-    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n+    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n ) -> List[str]:\n",
        "source_code_with_indent": "<DED>def get_smartstack_status_human(\n    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n) -> List[str]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def get_smartstack_status_human(\n    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n) -> List[str]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:728:20 Incompatible parameter type [6]: Expected `Tuple[str, str, str, str]` for 1st positional only parameter to call `list.append` but got `Union[Tuple[str, str, typing.Any, str], typing.Tuple[str, ...]]`.",
    "message": " Expected `Tuple[str, str, str, str]` for 1st positional only parameter to call `list.append` but got `Union[Tuple[str, str, typing.Any, str], typing.Tuple[str, ...]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 728,
    "warning_line": "        rows.append(row)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "source_code_len": 176,
        "target_code": "\ndef build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n    rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "target_code_len": 187,
        "diff_format": "@@ -698,4 +699,4 @@\n \n-def build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n-    rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n+def build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n+    rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n     for backend in backends:\n",
        "source_code_with_indent": "\n<DED>def build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    <IND>rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n    <IND>rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:730:4 Incompatible return type [7]: Expected `List[typing.Tuple[str, ...]]` but got `List[str]`.",
    "message": " Expected `List[typing.Tuple[str, ...]]` but got `List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 730,
    "warning_line": "    return format_table(rows)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "source_code_len": 176,
        "target_code": "\ndef build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n    rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "target_code_len": 187,
        "diff_format": "@@ -698,4 +699,4 @@\n \n-def build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n-    rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n+def build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n+    rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n     for backend in backends:\n",
        "source_code_with_indent": "\n<DED>def build_smartstack_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    <IND>rows = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def build_smartstack_backends_table(backends: Iterable[Any]) -> List[str]:\n    <IND>rows: List[Tuple[str, ...]] = [(\"Name\", \"LastCheck\", \"LastChange\", \"Status\")]\n    for backend in backends:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:736:11 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Iterable[typing.Any]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Iterable[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 736,
    "warning_line": "    if len(locations) == 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Callable\nfrom typing import DefaultDict\n",
        "source_code_len": 59,
        "target_code": "from typing import Callable\nfrom typing import Collection\nfrom typing import DefaultDict\n",
        "target_code_len": 89,
        "diff_format": "@@ -27,2 +27,3 @@\n from typing import Callable\n+from typing import Collection\n from typing import DefaultDict\n",
        "source_code_with_indent": "from typing import Callable\nfrom typing import DefaultDict\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Callable\nfrom typing import Collection\nfrom typing import DefaultDict\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def get_envoy_status_human(\n    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n) -> List[str]:\n",
        "source_code_len": 130,
        "target_code": "def get_envoy_status_human(\n    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n) -> List[str]:\n",
        "target_code_len": 132,
        "diff_format": "@@ -733,3 +734,3 @@\n def get_envoy_status_human(\n-    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n+    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n ) -> List[str]:\n",
        "source_code_with_indent": "<DED>def get_envoy_status_human(\n    registration: str, expected_backends_per_location: int, locations: Iterable[Any],\n) -> List[str]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def get_envoy_status_human(\n    registration: str, expected_backends_per_location: int, locations: Collection[Any],\n) -> List[str]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:788:20 Incompatible parameter type [6]: Expected `Tuple[str, str, str]` for 1st positional only parameter to call `list.append` but got `typing.Tuple[str, ...]`.",
    "message": " Expected `Tuple[str, str, str]` for 1st positional only parameter to call `list.append` but got `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 788,
    "warning_line": "        rows.append(row)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "source_code_len": 163,
        "target_code": "\ndef build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n    rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "target_code_len": 174,
        "diff_format": "@@ -766,4 +767,4 @@\n \n-def build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n-    rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n+def build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n+    rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n     for backend in backends:\n",
        "source_code_with_indent": "\n<DED>def build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    <IND>rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n    <IND>rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Yelp/paasta",
    "commit": "f51774815cf2409863b3e47058dcc1a28f1fb337",
    "filename": "paasta_tools/cli/cmds/status.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/cli/cmds/status.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/cli/cmds/status.py:790:4 Incompatible return type [7]: Expected `List[typing.Tuple[str, ...]]` but got `List[str]`.",
    "message": " Expected `List[typing.Tuple[str, ...]]` but got `List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 790,
    "warning_line": "    return format_table(rows)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "source_code_len": 163,
        "target_code": "\ndef build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n    rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "target_code_len": 174,
        "diff_format": "@@ -766,4 +767,4 @@\n \n-def build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n-    rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n+def build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n+    rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n     for backend in backends:\n",
        "source_code_with_indent": "\n<DED>def build_envoy_backends_table(backends: Iterable[Any]) -> List[Tuple[str, ...]]:\n    <IND>rows = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def build_envoy_backends_table(backends: Iterable[Any]) -> List[str]:\n    <IND>rows: List[Tuple[str, ...]] = [(\"Hostname:Port\", \"Weight\", \"Status\")]\n    for backend in backends:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]