[
  {
    "project": "rotki/rotki",
    "commit": "8b6700e18b2f8c9380027d42729650b6df8b28ca",
    "filename": "rotkehlchen/accounting/accountant.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/accounting/accountant.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/accounting/accountant.py:45:18 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `tuple.__getitem__` but got `str`.",
    "message": " Expected `int` for 1st positional only parameter to call `tuple.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 45,
    "warning_line": "    return action['close_time']",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # For loans\n    is_loan = isinstance(action, Dict) and 'close_time' in action\n    assert is_loan, 'Unexpected action in get_timestamp'\n\n    return action['close_time']\n",
        "source_code_len": 172,
        "target_code": "    # For loans\n    assert isinstance(action, Dict) and 'close_time' in action, (\n        'Unexpected action in get_timestamp'\n    )\n    return action['close_time']\n",
        "target_code_len": 165,
        "diff_format": "@@ -41,5 +41,5 @@\n     # For loans\n-    is_loan = isinstance(action, Dict) and 'close_time' in action\n-    assert is_loan, 'Unexpected action in get_timestamp'\n-\n+    assert isinstance(action, Dict) and 'close_time' in action, (\n+        'Unexpected action in get_timestamp'\n+    )\n     return action['close_time']\n",
        "source_code_with_indent": "    # For loans\n    <DED>is_loan = isinstance(action, Dict) and 'close_time' in action\n    assert is_loan, 'Unexpected action in get_timestamp'\n\n    return action['close_time']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # For loans\n    <DED>assert isinstance(action, Dict) and 'close_time' in action, (\n        'Unexpected action in get_timestamp'\n    )\n    return action['close_time']\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rotki/rotki",
    "commit": "8b6700e18b2f8c9380027d42729650b6df8b28ca",
    "filename": "rotkehlchen/accounting/accountant.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/accounting/accountant.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/accounting/accountant.py:328:8 Incompatible variable type [9]: prev_time is declared to have type `Timestamp` but is used as type `int`.",
    "message": " prev_time is declared to have type `Timestamp` but is used as type `int`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 328,
    "warning_line": "        prev_time: Timestamp = 0",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        prev_time: Timestamp = 0\n        count = 0\n",
        "source_code_len": 52,
        "target_code": "\n        prev_time = Timestamp(0)\n        count = 0\n",
        "target_code_len": 52,
        "diff_format": "@@ -327,3 +327,3 @@\n \n-        prev_time: Timestamp = 0\n+        prev_time = Timestamp(0)\n         count = 0\n",
        "source_code_with_indent": "\n        prev_time: Timestamp = 0\n        count = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        prev_time = Timestamp(0)\n        count = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            count: int,\n    ) -> Tuple[bool, int, int]:\n        \"\"\"Processes each individual action and returns whether we should continue\n",
        "source_code_len": 139,
        "target_code": "            count: int,\n    ) -> Tuple[bool, Timestamp, int]:\n        \"\"\"Processes each individual action and returns whether we should continue\n",
        "target_code_len": 145,
        "diff_format": "@@ -377,3 +377,3 @@\n             count: int,\n-    ) -> Tuple[bool, int, int]:\n+    ) -> Tuple[bool, Timestamp, int]:\n         \"\"\"Processes each individual action and returns whether we should continue\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            count: int,\n    ) -> Tuple[bool, int, int]:\n        <IND>",
        "target_code_with_indent": "            count: int,\n    ) -> Tuple[bool, Timestamp, int]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rotki/rotki",
    "commit": "8b6700e18b2f8c9380027d42729650b6df8b28ca",
    "filename": "rotkehlchen/accounting/accountant.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/accounting/accountant.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/accounting/accountant.py:334:20 Incompatible variable type [9]: prev_time is declared to have type `Timestamp` but is used as type `int`.",
    "message": " prev_time is declared to have type `Timestamp` but is used as type `int`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 334,
    "warning_line": "                    prev_time,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            count: int,\n    ) -> Tuple[bool, int, int]:\n        \"\"\"Processes each individual action and returns whether we should continue\n",
        "source_code_len": 139,
        "target_code": "            count: int,\n    ) -> Tuple[bool, Timestamp, int]:\n        \"\"\"Processes each individual action and returns whether we should continue\n",
        "target_code_len": 145,
        "diff_format": "@@ -377,3 +377,3 @@\n             count: int,\n-    ) -> Tuple[bool, int, int]:\n+    ) -> Tuple[bool, Timestamp, int]:\n         \"\"\"Processes each individual action and returns whether we should continue\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "            count: int,\n    ) -> Tuple[bool, int, int]:\n        <IND>",
        "target_code_with_indent": "            count: int,\n    ) -> Tuple[bool, Timestamp, int]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rotki/rotki",
    "commit": "8b6700e18b2f8c9380027d42729650b6df8b28ca",
    "filename": "rotkehlchen/poloniex.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/poloniex.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/poloniex.py:314:12 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got `Union[Dict[typing.Any, typing.Any], List[typing.Any]]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got `Union[Dict[typing.Any, typing.Any], List[typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 314,
    "warning_line": "            return cache",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if cache is not None:\n            return cache\n",
        "source_code_len": 55,
        "target_code": "        if cache is not None:\n            assert isinstance(cache, Dict), 'Poloniex trade history should be a dict'\n            return cache\n",
        "target_code_len": 141,
        "diff_format": "@@ -313,2 +313,3 @@\n         if cache is not None:\n+            assert isinstance(cache, Dict), 'Poloniex trade history should be a dict'\n             return cache\n",
        "source_code_with_indent": "        <DED>if cache is not None:\n            <IND>return cache\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>if cache is not None:\n            <IND>assert isinstance(cache, Dict), 'Poloniex trade history should be a dict'\n            return cache\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]