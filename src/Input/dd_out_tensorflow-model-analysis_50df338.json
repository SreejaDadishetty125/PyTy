[
  {
    "project": "tensorflow/model-analysis",
    "commit": "50df338aa0a86ddb89dab17589b840bd18e97899",
    "filename": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py:66:15 Incompatible variable type [9]: thresholds is declared to have type `List[float]` but is used as type `Tuple[float]`.",
    "message": " thresholds is declared to have type `List[float]` but is used as type `Tuple[float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 66,
    "warning_line": "               thresholds: List[float] = DEFAULT_THRESHOLDS):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import Dict, Optional, Any, Iterator, Tuple, List\n\n",
        "source_code_len": 64,
        "target_code": "\nfrom typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-from typing import Dict, Optional, Any, Iterator, Tuple, List\n+from typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n \n",
        "source_code_with_indent": "\nfrom typing import Dict, Optional, Any, Iterator, Tuple, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "               name: str = FLIP_COUNT_NAME,\n               thresholds: List[float] = DEFAULT_THRESHOLDS):\n    \"\"\"Initializes flip count.\n",
        "source_code_len": 137,
        "target_code": "               name: str = FLIP_COUNT_NAME,\n               thresholds: Sequence[float] = DEFAULT_THRESHOLDS):\n    \"\"\"Initializes flip count.\n",
        "target_code_len": 141,
        "diff_format": "@@ -65,3 +65,3 @@\n                name: str = FLIP_COUNT_NAME,\n-               thresholds: List[float] = DEFAULT_THRESHOLDS):\n+               thresholds: Sequence[float] = DEFAULT_THRESHOLDS):\n     \"\"\"Initializes flip count.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "               name: str = FLIP_COUNT_NAME,\n               thresholds: List[float] = DEFAULT_THRESHOLDS):\n    <IND>",
        "target_code_with_indent": "               name: str = FLIP_COUNT_NAME,\n               thresholds: Sequence[float] = DEFAULT_THRESHOLDS):\n    <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/model-analysis",
    "commit": "50df338aa0a86ddb89dab17589b840bd18e97899",
    "filename": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_count.py:132:4 Incompatible variable type [9]: thresholds is declared to have type `List[float]` but is used as type `Tuple[float]`.",
    "message": " thresholds is declared to have type `List[float]` but is used as type `Tuple[float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 132,
    "warning_line": "    thresholds: List[float] = DEFAULT_THRESHOLDS,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom typing import Dict, Optional, Any, Iterator, Tuple, List\n\n",
        "source_code_len": 64,
        "target_code": "\nfrom typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-from typing import Dict, Optional, Any, Iterator, Tuple, List\n+from typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n \n",
        "source_code_with_indent": "\nfrom typing import Dict, Optional, Any, Iterator, Tuple, List\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Dict, Optional, Any, Iterator, Sequence, Tuple, List\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def create_metric_keys(\n    thresholds: List[float], metrics: List[str], metric_name: str,\n    model_name: str, output_name: str\n",
        "source_code_len": 129,
        "target_code": "def create_metric_keys(\n    thresholds: Sequence[float], metrics: List[str], metric_name: str,\n    model_name: str, output_name: str\n",
        "target_code_len": 133,
        "diff_format": "@@ -107,3 +107,3 @@\n def create_metric_keys(\n-    thresholds: List[float], metrics: List[str], metric_name: str,\n+    thresholds: Sequence[float], metrics: List[str], metric_name: str,\n     model_name: str, output_name: str\n",
        "source_code_with_indent": "<DED>def create_metric_keys(\n    thresholds: List[float], metrics: List[str], metric_name: str,\n    model_name: str, output_name: str\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def create_metric_keys(\n    thresholds: Sequence[float], metrics: List[str], metric_name: str,\n    model_name: str, output_name: str\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    name: str = FLIP_COUNT_NAME,\n    thresholds: List[float] = DEFAULT_THRESHOLDS,\n    model_name: str = '',\n",
        "source_code_len": 109,
        "target_code": "    name: str = FLIP_COUNT_NAME,\n    thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n    model_name: str = '',\n",
        "target_code_len": 113,
        "diff_format": "@@ -131,3 +131,3 @@\n     name: str = FLIP_COUNT_NAME,\n-    thresholds: List[float] = DEFAULT_THRESHOLDS,\n+    thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n     model_name: str = '',\n",
        "source_code_with_indent": "    name: str = FLIP_COUNT_NAME,\n    thresholds: List[float] = DEFAULT_THRESHOLDS,\n    model_name: str = '',\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    name: str = FLIP_COUNT_NAME,\n    thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n    model_name: str = '',\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  computations = binary_confusion_matrices.binary_confusion_matrices(\n      thresholds=thresholds,\n      eval_config=eval_config,\n",
        "source_code_len": 130,
        "target_code": "  computations = binary_confusion_matrices.binary_confusion_matrices(\n      thresholds=list(thresholds),\n      eval_config=eval_config,\n",
        "target_code_len": 136,
        "diff_format": "@@ -253,3 +253,3 @@\n   computations = binary_confusion_matrices.binary_confusion_matrices(\n-      thresholds=thresholds,\n+      thresholds=list(thresholds),\n       eval_config=eval_config,\n",
        "source_code_with_indent": "  <DED><DED><DED>computations = binary_confusion_matrices.binary_confusion_matrices(\n      thresholds=thresholds,\n      eval_config=eval_config,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  <DED><DED><DED>computations = binary_confusion_matrices.binary_confusion_matrices(\n      thresholds=list(thresholds),\n      eval_config=eval_config,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/model-analysis",
    "commit": "50df338aa0a86ddb89dab17589b840bd18e97899",
    "filename": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py:52:6 Incompatible variable type [9]: thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float]`.",
    "message": " thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 52,
    "warning_line": "      thresholds: List[float] = flip_count.DEFAULT_THRESHOLDS,"
  },
  {
    "project": "tensorflow/model-analysis",
    "commit": "50df338aa0a86ddb89dab17589b840bd18e97899",
    "filename": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/addons/fairness/metrics/counterfactual_fairness/flip_rate.py:81:4 Incompatible variable type [9]: thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float]`.",
    "message": " thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 81,
    "warning_line": "    thresholds: List[float] = flip_count.DEFAULT_THRESHOLDS,"
  },
  {
    "project": "tensorflow/model-analysis",
    "commit": "50df338aa0a86ddb89dab17589b840bd18e97899",
    "filename": "tensorflow_model_analysis/addons/fairness/metrics/fairness_indicators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-model-analysis/tensorflow_model_analysis/addons/fairness/metrics/fairness_indicators.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_model_analysis/addons/fairness/metrics/fairness_indicators.py:44:15 Incompatible variable type [9]: thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float, float, float, float, float, float, float, float, float]`.",
    "message": " thresholds is declared to have type `List[float]` but is used as type `typing.Tuple[float, float, float, float, float, float, float, float, float]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 44,
    "warning_line": "               thresholds: List[float] = DEFAULT_THRESHOLDS,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import collections\nfrom typing import Any, Dict, List, Optional, Text\n\n",
        "source_code_len": 71,
        "target_code": "import collections\nfrom typing import Any, Dict, List, Optional, Sequence, Text\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -22,3 +22,3 @@\n import collections\n-from typing import Any, Dict, List, Optional, Text\n+from typing import Any, Dict, List, Optional, Sequence, Text\n \n",
        "source_code_with_indent": "import collections\nfrom typing import Any, Dict, List, Optional, Text\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import collections\nfrom typing import Any, Dict, List, Optional, Sequence, Text\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  def __init__(self,\n               thresholds: List[float] = DEFAULT_THRESHOLDS,\n               name: Text = FAIRNESS_INDICATORS_METRICS_NAME):\n",
        "source_code_len": 145,
        "target_code": "  def __init__(self,\n               thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n               name: Text = FAIRNESS_INDICATORS_METRICS_NAME):\n",
        "target_code_len": 149,
        "diff_format": "@@ -43,3 +43,3 @@\n   def __init__(self,\n-               thresholds: List[float] = DEFAULT_THRESHOLDS,\n+               thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n                name: Text = FAIRNESS_INDICATORS_METRICS_NAME):\n",
        "source_code_with_indent": "  def __init__(self,\n               thresholds: List[float] = DEFAULT_THRESHOLDS,\n               name: Text = FAIRNESS_INDICATORS_METRICS_NAME):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "  def __init__(self,\n               thresholds: Sequence[float] = DEFAULT_THRESHOLDS,\n               name: Text = FAIRNESS_INDICATORS_METRICS_NAME):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]