[
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:72:23 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 72,
    "warning_line": "        query_results: [QueryResult],"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:89:23 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 89,
    "warning_line": "        query_results: [QueryResult],"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:143:30 Incompatible parameter type [6]: Expected `typing.Mapping[str, str]` for 1st positional only parameter to call `dict.update` but got `Dict[QnATelemetryConstants, str]`.",
    "message": " Expected `typing.Mapping[str, str]` for 1st positional only parameter to call `dict.update` but got `Dict[QnATelemetryConstants, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 143,
    "warning_line": "            properties.update(no_match_properties)"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:161:9 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 161,
    "warning_line": "    ) -> [QueryResult]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\n    async def get_answers(\n        self,\n        context: TurnContext,\n        options: QnAMakerOptions = None,\n        telemetry_properties: Dict[str, str] = None,\n        telemetry_metrics: Dict[str, int] = None,\n    ) -> [QueryResult]:\n        \"\"\"\n        Generates answers from the knowledge base.\n        :return: A list of answers for the user's query, sorted in decreasing order of ranking score.\n        :rtype: [QueryResult]\n        \"\"\"\n\n        hydrated_options = self._hydrate_options(options)\n        self._validate_options(hydrated_options)\n\n        result = await self._query_qna_service(context, hydrated_options)\n\n        await self.on_qna_result(\n            result, context, telemetry_properties, telemetry_metrics\n        )\n\n        await self._emit_trace_info(context, result, hydrated_options)\n\n        return result\n\n    def _validate_options(self, options: QnAMakerOptions):\n",
        "source_code_len": 899,
        "target_code": "\n    def _validate_options(self, options: QnAMakerOptions):\n",
        "target_code_len": 60,
        "diff_format": "@@ -154,28 +227,2 @@\n \n-    async def get_answers(\n-        self,\n-        context: TurnContext,\n-        options: QnAMakerOptions = None,\n-        telemetry_properties: Dict[str, str] = None,\n-        telemetry_metrics: Dict[str, int] = None,\n-    ) -> [QueryResult]:\n-        \"\"\"\n-        Generates answers from the knowledge base.\n-        :return: A list of answers for the user's query, sorted in decreasing order of ranking score.\n-        :rtype: [QueryResult]\n-        \"\"\"\n-\n-        hydrated_options = self._hydrate_options(options)\n-        self._validate_options(hydrated_options)\n-\n-        result = await self._query_qna_service(context, hydrated_options)\n-\n-        await self.on_qna_result(\n-            result, context, telemetry_properties, telemetry_metrics\n-        )\n-\n-        await self._emit_trace_info(context, result, hydrated_options)\n-\n-        return result\n-\n     def _validate_options(self, options: QnAMakerOptions):\n",
        "source_code_with_indent": "\n    <DED>async def get_answers(\n        self,\n        context: TurnContext,\n        options: QnAMakerOptions = None,\n        telemetry_properties: Dict[str, str] = None,\n        telemetry_metrics: Dict[str, int] = None,\n    ) -> [QueryResult]:\n        <IND>\"\"\"\n        Generates answers from the knowledge base.\n        :return: A list of answers for the user's query, sorted in decreasing order of ranking score.\n        :rtype: [QueryResult]\n        \"\"\"\n\n        hydrated_options = self._hydrate_options(options)\n        self._validate_options(hydrated_options)\n\n        result = await self._query_qna_service(context, hydrated_options)\n\n        await self.on_qna_result(\n            result, context, telemetry_properties, telemetry_metrics\n        )\n\n        await self._emit_trace_info(context, result, hydrated_options)\n\n        return result\n\n    <DED>def _validate_options(self, options: QnAMakerOptions):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _validate_options(self, options: QnAMakerOptions):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:234:9 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 234,
    "warning_line": "    ) -> [QueryResult]:"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:258:49 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 258,
    "warning_line": "        self, turn_context: TurnContext, result: [QueryResult], options: QnAMakerOptions"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker.py:281:9 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "message": " Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 281,
    "warning_line": "    ) -> [QueryResult]:"
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker_trace_info.py",
    "min_patch_found": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker_trace_info.py:12:23 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.query_result.QueryResult]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/qnamaker_trace_info.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py",
    "min_patch_found": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py:10:19 Invalid type [31]: Expression `[str]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/botbuilder-python",
    "commit": "1f541e41517b3baaa5bf763f1b152705b3ebcbf2",
    "filename": "libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py",
    "min_patch_found": false,
    "full_warning_msg": "libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py:13:18 Invalid type [31]: Expression `[libraries.botbuilder-ai.botbuilder.ai.qna.metadata.Metadata]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-botbuilder-python/libraries/botbuilder-ai/botbuilder/ai/qna/query_result.py'",
    "dd_fail": true
  }
]