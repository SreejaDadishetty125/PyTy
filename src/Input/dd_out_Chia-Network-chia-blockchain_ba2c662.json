[
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/cc_wallet/cc_wallet.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/cc_wallet/cc_wallet.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/cc_wallet/cc_wallet.py:648:12 Incompatible parameter type [6]: Expected `Program` for 1st positional only parameter to call `src.wallet.cc_wallet.genesis_by_coin_id_with_0.genesis_coin_id_for_genesis_coin_checker` but got `Optional[Program]`.",
    "message": " Expected `Program` for 1st positional only parameter to call `src.wallet.cc_wallet.genesis_by_coin_id_with_0.genesis_coin_id_for_genesis_coin_checker` but got `Optional[Program]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 648,
    "warning_line": "            self.cc_info.my_genesis_checker",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        inner_puzzle = await self.inner_puzzle_for_cc_puzhash(coin.puzzle_hash)\n        genesis_id = genesis_coin_id_for_genesis_coin_checker(\n",
        "source_code_len": 143,
        "target_code": "        inner_puzzle = await self.inner_puzzle_for_cc_puzhash(coin.puzzle_hash)\n\n        if self.cc_info.my_genesis_checker is None:\n            return None\n\n        genesis_id = genesis_coin_id_for_genesis_coin_checker(\n",
        "target_code_len": 221,
        "diff_format": "@@ -646,2 +647,6 @@\n         inner_puzzle = await self.inner_puzzle_for_cc_puzhash(coin.puzzle_hash)\n+\n+        if self.cc_info.my_genesis_checker is None:\n+            return None\n+\n         genesis_id = genesis_coin_id_for_genesis_coin_checker(\n",
        "source_code_with_indent": "        inner_puzzle = await self.inner_puzzle_for_cc_puzhash(coin.puzzle_hash)\n        genesis_id = genesis_coin_id_for_genesis_coin_checker(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        inner_puzzle = await self.inner_puzzle_for_cc_puzhash(coin.puzzle_hash)\n\n        if self.cc_info.my_genesis_checker is None:\n            <IND>return None\n\n        <DED>genesis_id = genesis_coin_id_for_genesis_coin_checker(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/trade_manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/trade_manager.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/trade_manager.py:599:35 Incompatible parameter type [6]: Expected `SpendBundle` for 1st positional only parameter to call `list.append` but got `Optional[SpendBundle]`.",
    "message": " Expected `SpendBundle` for 1st positional only parameter to call `list.append` but got `Optional[SpendBundle]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 599,
    "warning_line": "            zero_spend_list.append(spend_bundle)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n                mod_hash, genesis_coin_checker, inner_puzzle = uncurry_cc(puzzle)\n                inner_solution = solution.first()\n                lineage_proof = solution.rest().rest().first()\n                spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n                innersol_list.append(inner_solution)\n\n",
        "source_code_len": 362,
        "target_code": "\n                r = uncurry_cc(puzzle)\n                if r:\n                    mod_hash, genesis_coin_checker, inner_puzzle = r\n                    inner_solution = solution.first()\n                    lineage_proof = solution.rest().rest().first()\n                    spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n                    innersol_list.append(inner_solution)\n\n",
        "target_code_len": 426,
        "diff_format": "@@ -545,7 +547,9 @@\n \n-                mod_hash, genesis_coin_checker, inner_puzzle = uncurry_cc(puzzle)\n-                inner_solution = solution.first()\n-                lineage_proof = solution.rest().rest().first()\n-                spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n-                innersol_list.append(inner_solution)\n+                r = uncurry_cc(puzzle)\n+                if r:\n+                    mod_hash, genesis_coin_checker, inner_puzzle = r\n+                    inner_solution = solution.first()\n+                    lineage_proof = solution.rest().rest().first()\n+                    spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n+                    innersol_list.append(inner_solution)\n \n",
        "source_code_with_indent": "\n                mod_hash, genesis_coin_checker, inner_puzzle = uncurry_cc(puzzle)\n                inner_solution = solution.first()\n                lineage_proof = solution.rest().rest().first()\n                spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n                innersol_list.append(inner_solution)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n                r = uncurry_cc(puzzle)\n                if r:\n                    <IND>mod_hash, genesis_coin_checker, inner_puzzle = r\n                    inner_solution = solution.first()\n                    lineage_proof = solution.rest().rest().first()\n                    spendable_cc_list.append(SpendableCC(cc_coinsol.coin, genesis_id, inner_puzzle, lineage_proof))\n                    innersol_list.append(inner_solution)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:82:37 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__getitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "                    cc_discrepancies[colour] += coinsol.coin.amount - total",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:82:37 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "                    cc_discrepancies[colour] += coinsol.coin.amount - total",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:84:37 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 84,
    "warning_line": "                    cc_discrepancies[colour] = coinsol.coin.amount - total",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:90:37 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "                    cc_discrepancies[\"chia\"] = cc_discrepancies[\"chia\"] + diff",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:90:64 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__getitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "                    cc_discrepancies[\"chia\"] = cc_discrepancies[\"chia\"] + diff",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Chia-Network/chia-blockchain",
    "commit": "ba2c662db62b0779ca4e9f48d14c097eab50e561",
    "filename": "src/wallet/util/trade_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Chia-Network-chia-blockchain/src/wallet/util/trade_utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/wallet/util/trade_utils.py:92:37 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 92,
    "warning_line": "                    cc_discrepancies[\"chia\"] = diff",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_len": 112,
        "target_code": "    try:\n        cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_len": 110,
        "diff_format": "@@ -68,3 +68,3 @@\n     try:\n-        cc_discrepancies: Dict[bytes, int] = dict()\n+        cc_discrepancies: Dict[str, int] = dict()\n         for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[bytes, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>try:\n        <IND>cc_discrepancies: Dict[str, int] = dict()\n        for coinsol in trade_offer.coin_solutions:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]