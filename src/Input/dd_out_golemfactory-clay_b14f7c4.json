[
  {
    "project": "golemfactory/clay",
    "commit": "b14f7c417ef777daf2ef9e5acebdbbbc036f18bb",
    "filename": "apps/core/task/coretask.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/golemfactory-clay/apps/core/task/coretask.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "apps/core/task/coretask.py:526:22 Incompatible variable type [9]: node_id is declared to have type `str` but is used as type `None`.",
    "message": " node_id is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 526,
    "warning_line": "                      node_id: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Type\n\n",
        "source_code_len": 47,
        "target_code": "from enum import Enum\nfrom typing import Type, Optional, Dict, Any\n\n",
        "target_code_len": 68,
        "diff_format": "@@ -5,3 +5,3 @@\n from enum import Enum\n-from typing import Type\n+from typing import Type, Optional, Dict, Any\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Type\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Type, Optional, Dict, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                      num_cores=1,\n                      node_id: str = None,\n                      node_name: str = None) -> Task.ExtraData:\n        verdict = self._accept_client(node_id)\n",
        "source_code_len": 189,
        "target_code": "                      num_cores=1,\n                      node_id: Optional[str] = None,\n                      node_name: Optional[str] = None) -> Task.ExtraData:\n        verdict = self._accept_client(node_id)\n",
        "target_code_len": 209,
        "diff_format": "@@ -525,4 +525,4 @@\n                       num_cores=1,\n-                      node_id: str = None,\n-                      node_name: str = None) -> Task.ExtraData:\n+                      node_id: Optional[str] = None,\n+                      node_name: Optional[str] = None) -> Task.ExtraData:\n         verdict = self._accept_client(node_id)\n",
        "source_code_with_indent": "                      num_cores=1,\n                      node_id: str = None,\n                      node_name: str = None) -> Task.ExtraData:\n        <IND>verdict = self._accept_client(node_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                      num_cores=1,\n                      node_id: Optional[str] = None,\n                      node_name: Optional[str] = None) -> Task.ExtraData:\n        <IND>verdict = self._accept_client(node_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "golemfactory/clay",
    "commit": "b14f7c417ef777daf2ef9e5acebdbbbc036f18bb",
    "filename": "apps/core/task/coretask.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/golemfactory-clay/apps/core/task/coretask.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "apps/core/task/coretask.py:527:22 Incompatible variable type [9]: node_name is declared to have type `str` but is used as type `None`.",
    "message": " node_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 527,
    "warning_line": "                      node_name: str = None) -> Task.ExtraData:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Type\n\n",
        "source_code_len": 47,
        "target_code": "from enum import Enum\nfrom typing import Type, Optional, Dict, Any\n\n",
        "target_code_len": 68,
        "diff_format": "@@ -5,3 +5,3 @@\n from enum import Enum\n-from typing import Type\n+from typing import Type, Optional, Dict, Any\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Type\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Type, Optional, Dict, Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                      num_cores=1,\n                      node_id: str = None,\n                      node_name: str = None) -> Task.ExtraData:\n        verdict = self._accept_client(node_id)\n",
        "source_code_len": 189,
        "target_code": "                      num_cores=1,\n                      node_id: Optional[str] = None,\n                      node_name: Optional[str] = None) -> Task.ExtraData:\n        verdict = self._accept_client(node_id)\n",
        "target_code_len": 209,
        "diff_format": "@@ -525,4 +525,4 @@\n                       num_cores=1,\n-                      node_id: str = None,\n-                      node_name: str = None) -> Task.ExtraData:\n+                      node_id: Optional[str] = None,\n+                      node_name: Optional[str] = None) -> Task.ExtraData:\n         verdict = self._accept_client(node_id)\n",
        "source_code_with_indent": "                      num_cores=1,\n                      node_id: str = None,\n                      node_name: str = None) -> Task.ExtraData:\n        <IND>verdict = self._accept_client(node_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                      num_cores=1,\n                      node_id: Optional[str] = None,\n                      node_name: Optional[str] = None) -> Task.ExtraData:\n        <IND>verdict = self._accept_client(node_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]