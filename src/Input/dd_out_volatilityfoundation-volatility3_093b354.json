[
  {
    "project": "volatilityfoundation/volatility3",
    "commit": "093b354f7e22f11f241018cc178b7a87d0bd5890",
    "filename": "volatility/framework/layers/crash.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/volatilityfoundation-volatility3/volatility/framework/layers/crash.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "volatility/framework/layers/crash.py:102:8 Incompatible return type [7]: Expected `typing.Tuple[int, int]` but got `None`.",
    "message": " Expected `typing.Tuple[int, int]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 102,
    "warning_line": "        return",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if signature != cls.SIGNATURE:\n            raise  WindowsCrashDump32FormatException(\"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n        if validdump != cls.VALIDDUMP:\n            raise  WindowsCrashDump32FormatException(\"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n\n        return\n\n",
        "source_code_len": 344,
        "target_code": "        if signature != cls.SIGNATURE:\n            raise WindowsCrashDump32FormatException(\n                \"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n        if validdump != cls.VALIDDUMP:\n            raise WindowsCrashDump32FormatException(\n                \"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n\n        return (signature, validdump)\n\n",
        "target_code_len": 399,
        "diff_format": "@@ -97,7 +98,9 @@\n         if signature != cls.SIGNATURE:\n-            raise  WindowsCrashDump32FormatException(\"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n+            raise WindowsCrashDump32FormatException(\n+                \"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n         if validdump != cls.VALIDDUMP:\n-            raise  WindowsCrashDump32FormatException(\"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n+            raise WindowsCrashDump32FormatException(\n+                \"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n \n-        return\n+        return (signature, validdump)\n \n",
        "source_code_with_indent": "        if signature != cls.SIGNATURE:\n            <IND>raise  WindowsCrashDump32FormatException(\"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n        <DED>if validdump != cls.VALIDDUMP:\n            <IND>raise  WindowsCrashDump32FormatException(\"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n\n        <DED>return\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if signature != cls.SIGNATURE:\n            <IND>raise WindowsCrashDump32FormatException(\n                \"bad signature 0x{:x} at file offset 0x{:x}\".format(signature, offset))\n        <DED>if validdump != cls.VALIDDUMP:\n            <IND>raise WindowsCrashDump32FormatException(\n                \"invalid dump 0x{:x} at file offset 0x{:x}\".format(validdump, offset))\n\n        <DED>return (signature, validdump)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]