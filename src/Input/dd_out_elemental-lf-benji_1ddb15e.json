[
  {
    "project": "elemental-lf/benji",
    "commit": "1ddb15e203677134c02d6e80cb7ac586abe037fd",
    "filename": "src/benji/database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/elemental-lf-benji/src/benji/database.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/benji/database.py:511:8 Incompatible return type [7]: Expected `List[VersionUid]` but got `Set[typing.Any]`.",
    "message": " Expected `List[VersionUid]` but got `Set[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 511,
    "warning_line": "        return affected_version_uids",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> List[VersionUid]:\n        try:\n",
        "source_code_len": 114,
        "target_code": "    @classmethod\n    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> Set[VersionUid]:\n        try:\n",
        "target_code_len": 113,
        "diff_format": "@@ -481,3 +482,3 @@\n     @classmethod\n-    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> List[VersionUid]:\n+    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> Set[VersionUid]:\n         try:\n",
        "source_code_with_indent": "    <DED><DED>@classmethod\n    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> List[VersionUid]:\n        <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>@classmethod\n    def set_block_valid(cls, block_uid: BlockUid, valid: bool) -> Set[VersionUid]:\n        <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]