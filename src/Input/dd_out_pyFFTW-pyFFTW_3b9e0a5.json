[
  {
    "project": "pyFFTW/pyFFTW",
    "commit": "3b9e0a5dfed978c84702478a30c2431e6f35d263",
    "filename": "test/test_pyfftw_scipy_interface.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyFFTW-pyFFTW/test/test_pyfftw_scipy_interface.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "test/test_pyfftw_scipy_interface.py:82:21 Unbound name [10]: Name `_supported_nptypes_complex` is used but not defined in the current scope.",
    "message": " Name `_supported_nptypes_complex` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 82,
    "warning_line": "    complex_dtypes = _supported_nptypes_complex",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    complex_dtypes = _supported_nptypes_complex\n    real_dtypes = _supported_nptypes_real\nelse:\n",
        "source_code_len": 166,
        "target_code": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    complex_dtypes = pyfftw._supported_nptypes_complex\n    real_dtypes = pyfftw._supported_nptypes_real\nelse:\n",
        "target_code_len": 180,
        "diff_format": "@@ -81,4 +81,4 @@\n     # cannot validate transforms with float16 input vs. scipy.fftpack\n-    complex_dtypes = _supported_nptypes_complex\n-    real_dtypes = _supported_nptypes_real\n+    complex_dtypes = pyfftw._supported_nptypes_complex\n+    real_dtypes = pyfftw._supported_nptypes_real\n else:\n",
        "source_code_with_indent": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    <IND>complex_dtypes = _supported_nptypes_complex\n    real_dtypes = _supported_nptypes_real\n<DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    <IND>complex_dtypes = pyfftw._supported_nptypes_complex\n    real_dtypes = pyfftw._supported_nptypes_real\n<DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyFFTW/pyFFTW",
    "commit": "3b9e0a5dfed978c84702478a30c2431e6f35d263",
    "filename": "test/test_pyfftw_scipy_interface.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyFFTW-pyFFTW/test/test_pyfftw_scipy_interface.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "test/test_pyfftw_scipy_interface.py:83:18 Unbound name [10]: Name `_supported_nptypes_real` is used but not defined in the current scope.",
    "message": " Name `_supported_nptypes_real` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 83,
    "warning_line": "    real_dtypes = _supported_nptypes_real",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    complex_dtypes = _supported_nptypes_complex\n    real_dtypes = _supported_nptypes_real\nelse:\n",
        "source_code_len": 166,
        "target_code": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    complex_dtypes = pyfftw._supported_nptypes_complex\n    real_dtypes = pyfftw._supported_nptypes_real\nelse:\n",
        "target_code_len": 180,
        "diff_format": "@@ -81,4 +81,4 @@\n     # cannot validate transforms with float16 input vs. scipy.fftpack\n-    complex_dtypes = _supported_nptypes_complex\n-    real_dtypes = _supported_nptypes_real\n+    complex_dtypes = pyfftw._supported_nptypes_complex\n+    real_dtypes = pyfftw._supported_nptypes_real\n else:\n",
        "source_code_with_indent": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    <IND>complex_dtypes = _supported_nptypes_complex\n    real_dtypes = _supported_nptypes_real\n<DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # cannot validate transforms with float16 input vs. scipy.fftpack\n    <IND>complex_dtypes = pyfftw._supported_nptypes_complex\n    real_dtypes = pyfftw._supported_nptypes_real\n<DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]