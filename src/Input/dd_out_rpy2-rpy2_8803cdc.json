[
  {
    "project": "rpy2/rpy2",
    "commit": "8803cdcadc92029e36287a0cd073e579051401c7",
    "filename": "rpy2/rinterface.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "rpy2/rinterface.py:374:12 Incompatible variable type [9]: res is declared to have type `Union[BoolSexpVector, bool, sexp.NALogicalType]` but is used as type `Union[None, bool, sexp.NALogicalType]`.",
    "message": " res is declared to have type `Union[BoolSexpVector, bool, sexp.NALogicalType]` but is used as type `Union[None, bool, sexp.NALogicalType]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 374,
    "warning_line": "            res = na_values.NA_Logical if elt == NA_Logical else bool(elt)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            elt = openrlib.LOGICAL_ELT(cdata, i_c)\n            res = na_values.NA_Logical if elt == NA_Logical else bool(elt)\n        elif isinstance(i, slice):\n",
        "source_code_len": 161,
        "target_code": "            elt = openrlib.LOGICAL_ELT(cdata, i_c)\n            res = (na_values.NA_Logical  # type: ignore\n                   if elt == NA_Logical else bool(elt))\n        elif isinstance(i, slice):\n",
        "target_code_len": 198,
        "diff_format": "@@ -373,3 +377,4 @@\n             elt = openrlib.LOGICAL_ELT(cdata, i_c)\n-            res = na_values.NA_Logical if elt == NA_Logical else bool(elt)\n+            res = (na_values.NA_Logical  # type: ignore\n+                   if elt == NA_Logical else bool(elt))\n         elif isinstance(i, slice):\n",
        "source_code_with_indent": "            elt = openrlib.LOGICAL_ELT(cdata, i_c)\n            res = na_values.NA_Logical if elt == NA_Logical else bool(elt)\n        <DED>elif isinstance(i, slice):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            elt = openrlib.LOGICAL_ELT(cdata, i_c)\n            res = (na_values.NA_Logical  # type: ignore\n                   if elt == NA_Logical else bool(elt))\n        <DED>elif isinstance(i, slice):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "rpy2/rpy2",
    "commit": "8803cdcadc92029e36287a0cd073e579051401c7",
    "filename": "rpy2/rinterface_lib/embedded.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rpy2-rpy2/rpy2/rinterface_lib/embedded.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "rpy2/rinterface_lib/embedded.py:33:0 Incompatible variable type [9]: rstart is declared to have type `Is_RStart` but is used as type `None`.",
    "message": " rstart is declared to have type `Is_RStart` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 33,
    "warning_line": "rstart: Is_RStart = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n\nrstart: Is_RStart = None\n\n",
        "source_code_len": 28,
        "target_code": "\n    @CharacterMode.setter\n    def CharacterMode(self, value) -> None: ...\n\n    @property\n    def ReadConsole(self): ...\n\n    @ReadConsole.setter\n    def ReadConsole(self, value) -> None: ...\n\n    @property\n    def WriteConsoleEx(self): ...\n\n    @WriteConsoleEx.setter\n    def WriteConsoleEx(self, value) -> None: ...\n\n    @property\n    def CallBack(self): ...\n\n    @CallBack.setter\n    def CallBack(self, value) -> None: ...\n\n    @property\n    def ShowMessage(self): ...\n\n    @ShowMessage.setter\n    def ShowMessage(self, value) -> None: ...\n\n    @property\n    def YesNoCancel(self): ...\n\n    @YesNoCancel.setter\n    def YesNoCancel(self, value) -> None: ...\n\n    @property\n    def Busy(self): ...\n\n    @Busy.setter\n    def Busy(self, value) -> None: ...\n\n    @property\n    def R_Quiet(self): ...\n\n    @R_Quiet.setter\n    def R_Quiet(self, value) -> None: ...\n\n    @property\n    def R_Interactive(self): ...\n\n    @R_Interactive.setter\n    def R_Interactive(self, value) -> None: ...\n\n    @property\n    def RestoreAction(self): ...\n\n    @RestoreAction.setter\n    def RestoreAction(self, value) -> None: ...\n\n    @property\n    def SaveAction(self): ...\n\n    @SaveAction.setter\n    def SaveAction(self, value) -> None: ...\n\n    @property\n    def vsize(self): ...\n\n    @vsize.setter\n    def vsize(self, value) -> None: ...\n\n    @property\n    def nsize(self): ...\n\n    @nsize.setter\n    def nsize(self, value) -> None: ...\n\n    @property\n    def max_vsize(self): ...\n\n    @max_vsize.setter\n    def max_vsize(self, value) -> None: ...\n\n    @property\n    def max_nsize(self): ...\n\n    @max_nsize.setter\n    def max_nsize(self, value) -> None: ...\n\n    @property\n    def ppsize(self): ...\n\n    @ppsize.setter\n    def ppsize(self, value) -> None: ...\n\n\nrstart: Is_RStart = None  # type: ignore\n\n",
        "target_code_len": 1787,
        "diff_format": "@@ -31,4 +31,97 @@\n \n-\n-rstart: Is_RStart = None\n+    @CharacterMode.setter\n+    def CharacterMode(self, value) -> None: ...\n+\n+    @property\n+    def ReadConsole(self): ...\n+\n+    @ReadConsole.setter\n+    def ReadConsole(self, value) -> None: ...\n+\n+    @property\n+    def WriteConsoleEx(self): ...\n+\n+    @WriteConsoleEx.setter\n+    def WriteConsoleEx(self, value) -> None: ...\n+\n+    @property\n+    def CallBack(self): ...\n+\n+    @CallBack.setter\n+    def CallBack(self, value) -> None: ...\n+\n+    @property\n+    def ShowMessage(self): ...\n+\n+    @ShowMessage.setter\n+    def ShowMessage(self, value) -> None: ...\n+\n+    @property\n+    def YesNoCancel(self): ...\n+\n+    @YesNoCancel.setter\n+    def YesNoCancel(self, value) -> None: ...\n+\n+    @property\n+    def Busy(self): ...\n+\n+    @Busy.setter\n+    def Busy(self, value) -> None: ...\n+\n+    @property\n+    def R_Quiet(self): ...\n+\n+    @R_Quiet.setter\n+    def R_Quiet(self, value) -> None: ...\n+\n+    @property\n+    def R_Interactive(self): ...\n+\n+    @R_Interactive.setter\n+    def R_Interactive(self, value) -> None: ...\n+\n+    @property\n+    def RestoreAction(self): ...\n+\n+    @RestoreAction.setter\n+    def RestoreAction(self, value) -> None: ...\n+\n+    @property\n+    def SaveAction(self): ...\n+\n+    @SaveAction.setter\n+    def SaveAction(self, value) -> None: ...\n+\n+    @property\n+    def vsize(self): ...\n+\n+    @vsize.setter\n+    def vsize(self, value) -> None: ...\n+\n+    @property\n+    def nsize(self): ...\n+\n+    @nsize.setter\n+    def nsize(self, value) -> None: ...\n+\n+    @property\n+    def max_vsize(self): ...\n+\n+    @max_vsize.setter\n+    def max_vsize(self, value) -> None: ...\n+\n+    @property\n+    def max_nsize(self): ...\n+\n+    @max_nsize.setter\n+    def max_nsize(self, value) -> None: ...\n+\n+    @property\n+    def ppsize(self): ...\n+\n+    @ppsize.setter\n+    def ppsize(self, value) -> None: ...\n+\n+\n+rstart: Is_RStart = None  # type: ignore\n \n",
        "source_code_with_indent": "\n\n<DED>rstart: Is_RStart = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    @CharacterMode.setter\n    def CharacterMode(self, value) -> None: ...\n\n    @property\n    def ReadConsole(self): ...\n\n    @ReadConsole.setter\n    def ReadConsole(self, value) -> None: ...\n\n    @property\n    def WriteConsoleEx(self): ...\n\n    @WriteConsoleEx.setter\n    def WriteConsoleEx(self, value) -> None: ...\n\n    @property\n    def CallBack(self): ...\n\n    @CallBack.setter\n    def CallBack(self, value) -> None: ...\n\n    @property\n    def ShowMessage(self): ...\n\n    @ShowMessage.setter\n    def ShowMessage(self, value) -> None: ...\n\n    @property\n    def YesNoCancel(self): ...\n\n    @YesNoCancel.setter\n    def YesNoCancel(self, value) -> None: ...\n\n    @property\n    def Busy(self): ...\n\n    @Busy.setter\n    def Busy(self, value) -> None: ...\n\n    @property\n    def R_Quiet(self): ...\n\n    @R_Quiet.setter\n    def R_Quiet(self, value) -> None: ...\n\n    @property\n    def R_Interactive(self): ...\n\n    @R_Interactive.setter\n    def R_Interactive(self, value) -> None: ...\n\n    @property\n    def RestoreAction(self): ...\n\n    @RestoreAction.setter\n    def RestoreAction(self, value) -> None: ...\n\n    @property\n    def SaveAction(self): ...\n\n    @SaveAction.setter\n    def SaveAction(self, value) -> None: ...\n\n    @property\n    def vsize(self): ...\n\n    @vsize.setter\n    def vsize(self, value) -> None: ...\n\n    @property\n    def nsize(self): ...\n\n    @nsize.setter\n    def nsize(self, value) -> None: ...\n\n    @property\n    def max_vsize(self): ...\n\n    @max_vsize.setter\n    def max_vsize(self, value) -> None: ...\n\n    @property\n    def max_nsize(self): ...\n\n    @max_nsize.setter\n    def max_nsize(self, value) -> None: ...\n\n    @property\n    def ppsize(self): ...\n\n    @ppsize.setter\n    def ppsize(self, value) -> None: ...\n\n\n<DED>rstart: Is_RStart = None  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]