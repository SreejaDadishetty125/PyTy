[
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/hooks/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/hooks/leveldb.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/hooks/leveldb.py:77:8 Incompatible variable type [9]: value is declared to have type `bytes` but is used as type `None`.",
    "message": " value is declared to have type `bytes` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 77,
    "warning_line": "        value: bytes = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_len": 145,
        "target_code": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_len": 175,
        "diff_format": "@@ -76,5 +78,5 @@\n         key: bytes,\n-        value: bytes = None,\n-        keys: List[bytes] = None,\n-        values: List[bytes] = None,\n+        value: Optional[bytes] = None,\n+        keys: Optional[List[bytes]] = None,\n+        values: Optional[List[bytes]] = None,\n     ) -> Optional[bytes]:\n",
        "source_code_with_indent": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if command == 'put':\n            return self.put(key, value)\n",
        "source_code_len": 69,
        "target_code": "        if command == 'put':\n            if not value:\n                raise Exception(\"Please provide `value`!\")\n            return self.put(key, value)\n",
        "target_code_len": 154,
        "diff_format": "@@ -98,2 +100,4 @@\n         if command == 'put':\n+            if not value:\n+                raise Exception(\"Please provide `value`!\")\n             return self.put(key, value)\n",
        "source_code_with_indent": "        if command == 'put':\n            <IND>return self.put(key, value)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if command == 'put':\n            <IND>if not value:\n                <IND>raise Exception(\"Please provide `value`!\")\n            <DED>return self.put(key, value)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif command == 'write_batch':\n            return self.write_batch(keys, values)\n",
        "source_code_len": 89,
        "target_code": "        elif command == 'write_batch':\n            if not keys:\n                raise Exception(\"Please provide `keys`!\")\n            if not values:\n                raise Exception(\"Please provide `values`!\")\n            return self.write_batch(keys, values)\n",
        "target_code_len": 259,
        "diff_format": "@@ -104,2 +108,6 @@\n         elif command == 'write_batch':\n+            if not keys:\n+                raise Exception(\"Please provide `keys`!\")\n+            if not values:\n+                raise Exception(\"Please provide `values`!\")\n             return self.write_batch(keys, values)\n",
        "source_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>return self.write_batch(keys, values)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>if not keys:\n                <IND>raise Exception(\"Please provide `keys`!\")\n            <DED>if not values:\n                <IND>raise Exception(\"Please provide `values`!\")\n            <DED>return self.write_batch(keys, values)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/hooks/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/hooks/leveldb.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/hooks/leveldb.py:78:8 Incompatible variable type [9]: keys is declared to have type `List[bytes]` but is used as type `None`.",
    "message": " keys is declared to have type `List[bytes]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 78,
    "warning_line": "        keys: List[bytes] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_len": 145,
        "target_code": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_len": 175,
        "diff_format": "@@ -76,5 +78,5 @@\n         key: bytes,\n-        value: bytes = None,\n-        keys: List[bytes] = None,\n-        values: List[bytes] = None,\n+        value: Optional[bytes] = None,\n+        keys: Optional[List[bytes]] = None,\n+        values: Optional[List[bytes]] = None,\n     ) -> Optional[bytes]:\n",
        "source_code_with_indent": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if command == 'put':\n            return self.put(key, value)\n",
        "source_code_len": 69,
        "target_code": "        if command == 'put':\n            if not value:\n                raise Exception(\"Please provide `value`!\")\n            return self.put(key, value)\n",
        "target_code_len": 154,
        "diff_format": "@@ -98,2 +100,4 @@\n         if command == 'put':\n+            if not value:\n+                raise Exception(\"Please provide `value`!\")\n             return self.put(key, value)\n",
        "source_code_with_indent": "        if command == 'put':\n            <IND>return self.put(key, value)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if command == 'put':\n            <IND>if not value:\n                <IND>raise Exception(\"Please provide `value`!\")\n            <DED>return self.put(key, value)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif command == 'write_batch':\n            return self.write_batch(keys, values)\n",
        "source_code_len": 89,
        "target_code": "        elif command == 'write_batch':\n            if not keys:\n                raise Exception(\"Please provide `keys`!\")\n            if not values:\n                raise Exception(\"Please provide `values`!\")\n            return self.write_batch(keys, values)\n",
        "target_code_len": 259,
        "diff_format": "@@ -104,2 +108,6 @@\n         elif command == 'write_batch':\n+            if not keys:\n+                raise Exception(\"Please provide `keys`!\")\n+            if not values:\n+                raise Exception(\"Please provide `values`!\")\n             return self.write_batch(keys, values)\n",
        "source_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>return self.write_batch(keys, values)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>if not keys:\n                <IND>raise Exception(\"Please provide `keys`!\")\n            <DED>if not values:\n                <IND>raise Exception(\"Please provide `values`!\")\n            <DED>return self.write_batch(keys, values)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/hooks/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/hooks/leveldb.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/hooks/leveldb.py:79:8 Incompatible variable type [9]: values is declared to have type `List[bytes]` but is used as type `None`.",
    "message": " values is declared to have type `List[bytes]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 79,
    "warning_line": "        values: List[bytes] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_len": 145,
        "target_code": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_len": 175,
        "diff_format": "@@ -76,5 +78,5 @@\n         key: bytes,\n-        value: bytes = None,\n-        keys: List[bytes] = None,\n-        values: List[bytes] = None,\n+        value: Optional[bytes] = None,\n+        keys: Optional[List[bytes]] = None,\n+        values: Optional[List[bytes]] = None,\n     ) -> Optional[bytes]:\n",
        "source_code_with_indent": "        key: bytes,\n        value: bytes = None,\n        keys: List[bytes] = None,\n        values: List[bytes] = None,\n    ) -> Optional[bytes]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        key: bytes,\n        value: Optional[bytes] = None,\n        keys: Optional[List[bytes]] = None,\n        values: Optional[List[bytes]] = None,\n    ) -> Optional[bytes]:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if command == 'put':\n            return self.put(key, value)\n",
        "source_code_len": 69,
        "target_code": "        if command == 'put':\n            if not value:\n                raise Exception(\"Please provide `value`!\")\n            return self.put(key, value)\n",
        "target_code_len": 154,
        "diff_format": "@@ -98,2 +100,4 @@\n         if command == 'put':\n+            if not value:\n+                raise Exception(\"Please provide `value`!\")\n             return self.put(key, value)\n",
        "source_code_with_indent": "        if command == 'put':\n            <IND>return self.put(key, value)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if command == 'put':\n            <IND>if not value:\n                <IND>raise Exception(\"Please provide `value`!\")\n            <DED>return self.put(key, value)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        elif command == 'write_batch':\n            return self.write_batch(keys, values)\n",
        "source_code_len": 89,
        "target_code": "        elif command == 'write_batch':\n            if not keys:\n                raise Exception(\"Please provide `keys`!\")\n            if not values:\n                raise Exception(\"Please provide `values`!\")\n            return self.write_batch(keys, values)\n",
        "target_code_len": 259,
        "diff_format": "@@ -104,2 +108,6 @@\n         elif command == 'write_batch':\n+            if not keys:\n+                raise Exception(\"Please provide `keys`!\")\n+            if not values:\n+                raise Exception(\"Please provide `values`!\")\n             return self.write_batch(keys, values)\n",
        "source_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>return self.write_batch(keys, values)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>elif command == 'write_batch':\n            <IND>if not keys:\n                <IND>raise Exception(\"Please provide `keys`!\")\n            <DED>if not values:\n                <IND>raise Exception(\"Please provide `values`!\")\n            <DED>return self.write_batch(keys, values)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/operators/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/operators/leveldb.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/operators/leveldb.py:56:8 Incompatible variable type [9]: value is declared to have type `bytes` but is used as type `None`.",
    "message": " value is declared to have type `bytes` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 56,
    "warning_line": "        value: bytes = None,"
  },
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/operators/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/operators/leveldb.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/operators/leveldb.py:57:8 Incompatible variable type [9]: keys is declared to have type `List[bytes]` but is used as type `None`.",
    "message": " keys is declared to have type `List[bytes]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 57,
    "warning_line": "        keys: List[bytes] = None,"
  },
  {
    "project": "apache/airflow",
    "commit": "c4b369410155dfc461d2b95ee66cb1927f8e4230",
    "filename": "airflow/providers/google/leveldb/operators/leveldb.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/google/leveldb/operators/leveldb.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/google/leveldb/operators/leveldb.py:58:8 Incompatible variable type [9]: values is declared to have type `List[bytes]` but is used as type `None`.",
    "message": " values is declared to have type `List[bytes]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 58,
    "warning_line": "        values: List[bytes] = None,"
  }
]