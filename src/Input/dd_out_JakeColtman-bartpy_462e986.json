[
  {
    "project": "JakeColtman/bartpy",
    "commit": "462e9863dac83d4865a9e5490826e5466b0555ec",
    "filename": "bartpy/samplers/schedule.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/JakeColtman-bartpy/bartpy/samplers/schedule.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bartpy/samplers/schedule.py:48:12 Incompatible return type [7]: Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], typing.Optional[bartpy.mutation.TreeMutation]]], None, None]`.",
    "message": " Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], typing.Optional[bartpy.mutation.TreeMutation]]], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 48,
    "warning_line": "            yield \"Tree\", lambda: self.tree_sampler.step(model, tree)"
  },
  {
    "project": "JakeColtman/bartpy",
    "commit": "462e9863dac83d4865a9e5490826e5466b0555ec",
    "filename": "bartpy/samplers/schedule.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/JakeColtman-bartpy/bartpy/samplers/schedule.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bartpy/samplers/schedule.py:50:16 Incompatible return type [7]: Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], float]], None, None]`.",
    "message": " Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], float]], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 50,
    "warning_line": "                yield \"Node\", lambda: self.leaf_sampler.step(model, node)"
  },
  {
    "project": "JakeColtman/bartpy",
    "commit": "462e9863dac83d4865a9e5490826e5466b0555ec",
    "filename": "bartpy/samplers/schedule.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/JakeColtman-bartpy/bartpy/samplers/schedule.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bartpy/samplers/schedule.py:51:8 Incompatible return type [7]: Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], float]], None, None]`.",
    "message": " Expected `Generator[typing.Callable[[Model], Sampler], None, None]` but got `Generator[typing.Tuple[str, typing.Callable[[], float]], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 51,
    "warning_line": "        yield \"Node\", lambda: self.sigma_sampler.step(model, model.sigma)"
  }
]