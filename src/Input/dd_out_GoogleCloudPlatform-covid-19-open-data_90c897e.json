[
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "90c897e4f6759bcd6de456624730af059d1b52db",
    "filename": "src/lib/net.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/lib/net.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/lib/net.py:106:16 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 106,
    "warning_line": "                return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_len": 78,
        "target_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -17,3 +17,3 @@\n from pathlib import Path\n-from typing import Any, BinaryIO, Dict, List, Union\n+from typing import Any, BinaryIO, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 39,
        "target_code": "    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 49,
        "diff_format": "@@ -35,3 +35,3 @@\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    **download_opts,\n) -> Optional[str]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    **download_opts,\n) -> str:\n    \"\"\"See: download_snapshot for argument descriptions.\"\"\"\n",
        "source_code_len": 91,
        "target_code": "    **download_opts,\n) -> Optional[str]:\n    \"\"\"See: download_snapshot for argument descriptions.\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -95,3 +95,3 @@\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"See: download_snapshot for argument descriptions.\"\"\"\n",
        "source_code_with_indent": "    **download_opts,\n) -> str:\n    <IND>\"\"\"See: download_snapshot for argument descriptions.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    **download_opts,\n) -> Optional[str]:\n    <IND>\"\"\"See: download_snapshot for argument descriptions.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 164,
        "target_code": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 167,
        "diff_format": "@@ -116,7 +116,7 @@\n     file_path: Path,\n+    date_format: str,\n     ignore_failure: bool = False,\n-    date_format: str = None,\n     logger: ErrorLogger = ErrorLogger(),\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    <IND>"
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "90c897e4f6759bcd6de456624730af059d1b52db",
    "filename": "src/lib/net.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/lib/net.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/lib/net.py:118:4 Incompatible variable type [9]: date_format is declared to have type `str` but is used as type `None`.",
    "message": " date_format is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 118,
    "warning_line": "    date_format: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_len": 78,
        "target_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -17,3 +17,3 @@\n from pathlib import Path\n-from typing import Any, BinaryIO, Dict, List, Union\n+from typing import Any, BinaryIO, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 39,
        "target_code": "    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 49,
        "diff_format": "@@ -35,3 +35,3 @@\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    **download_opts,\n) -> Optional[str]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 164,
        "target_code": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 167,
        "diff_format": "@@ -116,7 +116,7 @@\n     file_path: Path,\n+    date_format: str,\n     ignore_failure: bool = False,\n-    date_format: str = None,\n     logger: ErrorLogger = ErrorLogger(),\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    <IND>"
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "90c897e4f6759bcd6de456624730af059d1b52db",
    "filename": "src/lib/net.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/lib/net.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/lib/net.py:142:8 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 142,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_len": 78,
        "target_code": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_len": 88,
        "diff_format": "@@ -17,3 +17,3 @@\n from pathlib import Path\n-from typing import Any, BinaryIO, Dict, List, Union\n+from typing import Any, BinaryIO, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Any, BinaryIO, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 39,
        "target_code": "    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 49,
        "diff_format": "@@ -35,3 +35,3 @@\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    **download_opts,\n) -> Optional[str]:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    \"\"\"\n",
        "source_code_len": 164,
        "target_code": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    \"\"\"\n",
        "target_code_len": 167,
        "diff_format": "@@ -116,7 +116,7 @@\n     file_path: Path,\n+    date_format: str,\n     ignore_failure: bool = False,\n-    date_format: str = None,\n     logger: ErrorLogger = ErrorLogger(),\n     **download_opts,\n-) -> str:\n+) -> Optional[str]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    file_path: Path,\n    ignore_failure: bool = False,\n    date_format: str = None,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> str:\n    <IND>",
        "target_code_with_indent": "    file_path: Path,\n    date_format: str,\n    ignore_failure: bool = False,\n    logger: ErrorLogger = ErrorLogger(),\n    **download_opts,\n) -> Optional[str]:\n    <IND>"
      }
    ]
  }
]