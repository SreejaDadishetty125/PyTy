[
  {
    "project": "Ultimaker/Cura",
    "commit": "0dfa7f1f845725f90136feea272b62030934e425",
    "filename": "plugins/CuraProfileReader/CuraProfileReader.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/plugins/CuraProfileReader/CuraProfileReader.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plugins/CuraProfileReader/CuraProfileReader.py:71:72 Incompatible parameter type [6]: Expected `Optional[str]` for 2nd positional only parameter to call `configparser.SectionProxy.get` but got `int`.",
    "message": " Expected `Optional[str]` for 2nd positional only parameter to call `configparser.SectionProxy.get` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "        setting_version = int(parser[\"metadata\"].get(\"setting_version\", 0))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        version = int(parser[\"general\"][\"version\"])\n        setting_version = int(parser[\"metadata\"].get(\"setting_version\", 0))\n        if InstanceContainer.Version != version:\n",
        "source_code_len": 177,
        "target_code": "        version = int(parser[\"general\"][\"version\"])\n        setting_version = int(parser[\"metadata\"].get(\"setting_version\", \"0\"))\n        if InstanceContainer.Version != version:\n",
        "target_code_len": 179,
        "diff_format": "@@ -70,3 +70,3 @@\n         version = int(parser[\"general\"][\"version\"])\n-        setting_version = int(parser[\"metadata\"].get(\"setting_version\", 0))\n+        setting_version = int(parser[\"metadata\"].get(\"setting_version\", \"0\"))\n         if InstanceContainer.Version != version:\n",
        "source_code_with_indent": "        <DED>version = int(parser[\"general\"][\"version\"])\n        setting_version = int(parser[\"metadata\"].get(\"setting_version\", 0))\n        if InstanceContainer.Version != version:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>version = int(parser[\"general\"][\"version\"])\n        setting_version = int(parser[\"metadata\"].get(\"setting_version\", \"0\"))\n        if InstanceContainer.Version != version:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]