[
  {
    "project": "snapcore/snapcraft",
    "commit": "b6e9db740a5f317b57559d7d42747c3d10abf22d",
    "filename": "snapcraft/internal/lifecycle/_status_cache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/snapcore-snapcraft/snapcraft/internal/lifecycle/_status_cache.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snapcraft/internal/lifecycle/_status_cache.py:142:54 Incompatible parameter type [6]: Expected `pluginhandler._outdated_report.OutdatedReport` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[pluginhandler._outdated_report.OutdatedReport]`.",
    "message": " Expected `pluginhandler._outdated_report.OutdatedReport` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[pluginhandler._outdated_report.OutdatedReport]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 142,
    "warning_line": "            self._outdated_reports[part.name][step] = part.get_outdated_report(step)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import contextlib\nfrom typing import Any, Dict, List, Set  # noqa: F401\n\n",
        "source_code_len": 73,
        "target_code": "import contextlib\nfrom typing import Any, Dict, List, Optional, Set\n\n",
        "target_code_len": 69,
        "diff_format": "@@ -18,3 +18,3 @@\n import contextlib\n-from typing import Any, Dict, List, Set  # noqa: F401\n+from typing import Any, Dict, List, Optional, Set\n \n",
        "source_code_with_indent": "import contextlib\nfrom typing import Any, Dict, List, Set  # noqa: F401\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import contextlib\nfrom typing import Any, Dict, List, Optional, Set\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n\n",
        "source_code_len": 148,
        "target_code": "\n_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -23,4 +23,4 @@\n \n-_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n-_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n+_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n+_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n \n",
        "source_code_with_indent": "\n_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> pluginhandler.DirtyReport:\n        \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "source_code_len": 173,
        "target_code": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> Optional[pluginhandler.DirtyReport]:\n        \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "target_code_len": 183,
        "diff_format": "@@ -103,3 +103,3 @@\n         self, part: pluginhandler.PluginHandler, step: steps.Step\n-    ) -> pluginhandler.DirtyReport:\n+    ) -> Optional[pluginhandler.DirtyReport]:\n         \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> pluginhandler.DirtyReport:\n        <IND>",
        "target_code_with_indent": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> Optional[pluginhandler.DirtyReport]:\n        <IND>"
      }
    ]
  },
  {
    "project": "snapcore/snapcraft",
    "commit": "b6e9db740a5f317b57559d7d42747c3d10abf22d",
    "filename": "snapcraft/internal/lifecycle/_status_cache.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/snapcore-snapcraft/snapcraft/internal/lifecycle/_status_cache.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snapcraft/internal/lifecycle/_status_cache.py:153:47 Incompatible parameter type [6]: Expected `pluginhandler._dirty_report.DirtyReport` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[pluginhandler._dirty_report.DirtyReport]`.",
    "message": " Expected `pluginhandler._dirty_report.DirtyReport` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Optional[pluginhandler._dirty_report.DirtyReport]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 153,
    "warning_line": "        self._dirty_reports[part.name][step] = part.get_dirty_report(step)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import contextlib\nfrom typing import Any, Dict, List, Set  # noqa: F401\n\n",
        "source_code_len": 73,
        "target_code": "import contextlib\nfrom typing import Any, Dict, List, Optional, Set\n\n",
        "target_code_len": 69,
        "diff_format": "@@ -18,3 +18,3 @@\n import contextlib\n-from typing import Any, Dict, List, Set  # noqa: F401\n+from typing import Any, Dict, List, Optional, Set\n \n",
        "source_code_with_indent": "import contextlib\nfrom typing import Any, Dict, List, Set  # noqa: F401\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import contextlib\nfrom typing import Any, Dict, List, Optional, Set\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n\n",
        "source_code_len": 148,
        "target_code": "\n_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n\n",
        "target_code_len": 168,
        "diff_format": "@@ -23,4 +23,4 @@\n \n-_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n-_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n+_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n+_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n \n",
        "source_code_with_indent": "\n_DirtyReport = Dict[str, Dict[steps.Step, pluginhandler.DirtyReport]]\n_OutdatedReport = Dict[str, Dict[steps.Step, pluginhandler.OutdatedReport]]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_DirtyReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.DirtyReport]]]\n_OutdatedReport = Dict[str, Dict[steps.Step, Optional[pluginhandler.OutdatedReport]]]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> pluginhandler.DirtyReport:\n        \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "source_code_len": 173,
        "target_code": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> Optional[pluginhandler.DirtyReport]:\n        \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "target_code_len": 183,
        "diff_format": "@@ -103,3 +103,3 @@\n         self, part: pluginhandler.PluginHandler, step: steps.Step\n-    ) -> pluginhandler.DirtyReport:\n+    ) -> Optional[pluginhandler.DirtyReport]:\n         \"\"\"Obtain the dirty report for a given step of the given part.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> pluginhandler.DirtyReport:\n        <IND>",
        "target_code_with_indent": "        self, part: pluginhandler.PluginHandler, step: steps.Step\n    ) -> Optional[pluginhandler.DirtyReport]:\n        <IND>"
      }
    ]
  }
]