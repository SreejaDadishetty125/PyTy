[
  {
    "project": "idom-team/idom",
    "commit": "12e7d205474ce2455658852dd21e3166e1c69d40",
    "filename": "idom/testing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/idom-team-idom/idom/testing.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "idom/testing.py:38:8 Incompatible return type [7]: Expected `Iterator[Tuple[selenium.webdriver.chrome.webdriver.WebDriver, typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]]` but got `typing.Generator[Tuple[selenium.webdriver.chrome.webdriver.WebDriver, typing.ContextManager[typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]], None, None]`.",
    "message": " Expected `Iterator[Tuple[selenium.webdriver.chrome.webdriver.WebDriver, typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]]` but got `typing.Generator[Tuple[selenium.webdriver.chrome.webdriver.WebDriver, typing.ContextManager[typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 38,
    "warning_line": "        yield (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n\n",
        "source_code_len": 85,
        "target_code": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\nDisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n\n",
        "target_code_len": 166,
        "diff_format": "@@ -18,2 +19,3 @@\n DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n+DisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n \n",
        "source_code_with_indent": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\nDisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n    host = \"127.0.0.1\"\n",
        "source_code_len": 154,
        "target_code": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n    host = \"127.0.0.1\"\n",
        "target_code_len": 161,
        "diff_format": "@@ -23,3 +25,3 @@\n     headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n-) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n+) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n     host = \"127.0.0.1\"\n",
        "source_code_with_indent": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n    <IND>host = \"127.0.0.1\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n    <IND>host = \"127.0.0.1\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n    display_id = Ref(0)\n",
        "source_code_len": 151,
        "target_code": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n    display_id = Ref(0)\n",
        "target_code_len": 132,
        "diff_format": "@@ -50,3 +52,3 @@\n     element_mount_function: Callable[..., None],\n-) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n+) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n     display_id = Ref(0)\n",
        "source_code_with_indent": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n    <IND>display_id = Ref(0)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n    <IND>display_id = Ref(0)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "idom-team/idom",
    "commit": "12e7d205474ce2455658852dd21e3166e1c69d40",
    "filename": "idom/testing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/idom-team-idom/idom/testing.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "idom/testing.py:41:24 Incompatible parameter type [6]: Expected `SanicRenderServerWithLastError` for 2nd positional only parameter to call `create_selenium_page_get_and_display_context` but got `SanicRenderServer`.",
    "message": " Expected `SanicRenderServerWithLastError` for 2nd positional only parameter to call `create_selenium_page_get_and_display_context` but got `SanicRenderServer`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 41,
    "warning_line": "                driver, server, server_url, mount",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    app: Optional[Sanic] = None,\n) -> Tuple[Callable[..., None], SanicRenderServer]:\n\n",
        "source_code_len": 86,
        "target_code": "    app: Optional[Sanic] = None,\n) -> Tuple[Callable[..., None], \"SanicRenderServerWithLastError\"]:\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -117,3 +119,3 @@\n     app: Optional[Sanic] = None,\n-) -> Tuple[Callable[..., None], SanicRenderServer]:\n+) -> Tuple[Callable[..., None], \"SanicRenderServerWithLastError\"]:\n \n",
        "source_code_with_indent": "    app: Optional[Sanic] = None,\n) -> Tuple[Callable[..., None], SanicRenderServer]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    app: Optional[Sanic] = None,\n) -> Tuple[Callable[..., None], \"SanicRenderServerWithLastError\"]:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "idom-team/idom",
    "commit": "12e7d205474ce2455658852dd21e3166e1c69d40",
    "filename": "idom/testing.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/idom-team-idom/idom/testing.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "idom/testing.py:91:4 Incompatible return type [7]: Expected `Tuple[typing.Callable[[str], None], typing.ContextManager[typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]]` but got `Tuple[typing.Callable[[Named(query, str, default)], None], typing.Callable[[], typing.Any]]`.",
    "message": " Expected `Tuple[typing.Callable[[str], None], typing.ContextManager[typing.Callable[[Union[typing.Callable[..., idom.core.element.Element], AbstractElement], str], None]]]` but got `Tuple[typing.Callable[[Named(query, str, default)], None], typing.Callable[[], typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 91,
    "warning_line": "    return get_page, display_context",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n\n",
        "source_code_len": 85,
        "target_code": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\nDisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n\n",
        "target_code_len": 166,
        "diff_format": "@@ -18,2 +19,3 @@\n DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n+DisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n \n",
        "source_code_with_indent": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "DisplayFunction = Callable[[Union[ElementConstructor, AbstractElement], str], None]\nDisplayFunctionContext = Callable[[], \"AbstractContextManager[DisplayFunction]\"]\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n    host = \"127.0.0.1\"\n",
        "source_code_len": 154,
        "target_code": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n    host = \"127.0.0.1\"\n",
        "target_code_len": 161,
        "diff_format": "@@ -23,3 +25,3 @@\n     headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n-) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n+) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n     host = \"127.0.0.1\"\n",
        "source_code_with_indent": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunction]]:\n    <IND>host = \"127.0.0.1\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    headless: bool, driver_timeout: float = 3.0, wait_for_server_start: float = 1.0\n) -> Iterator[Tuple[Chrome, DisplayFunctionContext]]:\n    <IND>host = \"127.0.0.1\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n    display_id = Ref(0)\n",
        "source_code_len": 151,
        "target_code": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n    display_id = Ref(0)\n",
        "target_code_len": 132,
        "diff_format": "@@ -50,3 +52,3 @@\n     element_mount_function: Callable[..., None],\n-) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n+) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n     display_id = Ref(0)\n",
        "source_code_with_indent": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], \"AbstractContextManager[DisplayFunction]\"]:\n    <IND>display_id = Ref(0)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    element_mount_function: Callable[..., None],\n) -> Tuple[Callable[[str], None], DisplayFunctionContext]:\n    <IND>display_id = Ref(0)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]