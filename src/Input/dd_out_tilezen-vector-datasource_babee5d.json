[
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1016-missing-localized-names.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1016-missing-localized-names.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1016-missing-localized-names.py:6:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 6,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# -*- coding: utf-8 -*-\n\n# New Jersey - New York state boundary\n# http://www.openstreetmap.org/relation/224951 (New Jersey)\n# http://www.openstreetmap.org/relation/61320 (New York state)\ntest.assert_has_feature(\n    15, 9643, 12327, \"boundaries\",\n    {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n    \"name:right\": \"New York\",      \"name:left\": \"New Jersey\",\n    \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n    \"name:right:lv\":u\"\u0145ujorka\",    \"name:left:lv\":u\"\u0145\u016bd\u017eersija\"\n    })\n",
        "source_code_len": 503,
        "target_code": "# -*- coding: utf-8 -*-\nfrom . import OsmFixtureTest\n\n\nclass MissingLocalizedNames(OsmFixtureTest):\n    def test_nj_ny_state_boundary(self):\n        # New Jersey - New York state boundary\n        self.load_fixtures([\n            'http://www.openstreetmap.org/relation/224951',\n            'http://www.openstreetmap.org/relation/61320',\n        ])\n\n        self.assert_has_feature(\n            15, 9643, 12327, \"boundaries\",\n            {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n             \"name:right\": \"New York\", \"name:left\": \"New Jersey\",\n             \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n             \"name:right:lv\": u\"\u0145ujorka\", \"name:left:lv\": u\"\u0145\u016bd\u017eersija\"})\n",
        "target_code_len": 704,
        "diff_format": "@@ -1,12 +1,18 @@\n # -*- coding: utf-8 -*-\n+from . import OsmFixtureTest\n \n-# New Jersey - New York state boundary\n-# http://www.openstreetmap.org/relation/224951 (New Jersey)\n-# http://www.openstreetmap.org/relation/61320 (New York state)\n-test.assert_has_feature(\n-    15, 9643, 12327, \"boundaries\",\n-    {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n-    \"name:right\": \"New York\",      \"name:left\": \"New Jersey\",\n-    \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n-    \"name:right:lv\":u\"\u0145ujorka\",    \"name:left:lv\":u\"\u0145\u016bd\u017eersija\"\n-    })\n+\n+class MissingLocalizedNames(OsmFixtureTest):\n+    def test_nj_ny_state_boundary(self):\n+        # New Jersey - New York state boundary\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/relation/224951',\n+            'http://www.openstreetmap.org/relation/61320',\n+        ])\n+\n+        self.assert_has_feature(\n+            15, 9643, 12327, \"boundaries\",\n+            {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n+             \"name:right\": \"New York\", \"name:left\": \"New Jersey\",\n+             \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n+             \"name:right:lv\": u\"\u0145ujorka\", \"name:left:lv\": u\"\u0145\u016bd\u017eersija\"})\n",
        "source_code_with_indent": "# -*- coding: utf-8 -*-\n\n# New Jersey - New York state boundary\n# http://www.openstreetmap.org/relation/224951 (New Jersey)\n# http://www.openstreetmap.org/relation/61320 (New York state)\ntest.assert_has_feature(\n    15, 9643, 12327, \"boundaries\",\n    {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n    \"name:right\": \"New York\",      \"name:left\": \"New Jersey\",\n    \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n    \"name:right:lv\":u\"\u0145ujorka\",    \"name:left:lv\":u\"\u0145\u016bd\u017eersija\"\n    })\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# -*- coding: utf-8 -*-\nfrom . import OsmFixtureTest\n\n\nclass MissingLocalizedNames(OsmFixtureTest):\n    <IND>def test_nj_ny_state_boundary(self):\n        # New Jersey - New York state boundary\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/relation/224951',\n            'http://www.openstreetmap.org/relation/61320',\n        ])\n\n        self.assert_has_feature(\n            15, 9643, 12327, \"boundaries\",\n            {\"kind\": \"region\", \"name\": \"New Jersey - New York\",\n             \"name:right\": \"New York\", \"name:left\": \"New Jersey\",\n             \"name:right:es\": \"Nueva York\", \"name:left:es\": \"Nueva Jersey\",\n             \"name:right:lv\": u\"\u0145ujorka\", \"name:left:lv\": u\"\u0145\u016bd\u017eersija\"})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1020-roads-surface.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1020-roads-surface.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1020-roads-surface.py:5:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 5,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# Add surface properties to roads layer (at max zooms)\n\n# Prince St with cobblestones in Alexandria, VA\n# https://www.openstreetmap.org/way/190536019\ntest.assert_has_feature(\n    15, 9371, 12546, 'roads',\n    { 'id': 190536019, 'kind': 'minor_road', 'surface': 'cobblestone'})\n",
        "source_code_len": 277,
        "target_code": "from . import OsmFixtureTest\n\n\nclass RoadsSurface(OsmFixtureTest):\n\n    def test_road_surface(self):\n        # Add surface properties to roads layer (at max zooms)\n        # Prince St with cobblestones in Alexandria, VA\n        # https://www.openstreetmap.org/way/190536019\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/190536019',\n        ])\n\n        self.assert_has_feature(\n            15, 9371, 12546, 'roads',\n            {'id': 190536019, 'kind': 'minor_road',\n             'surface': 'cobblestone'})\n",
        "target_code_len": 537,
        "diff_format": "@@ -1,7 +1,17 @@\n-# Add surface properties to roads layer (at max zooms)\n+from . import OsmFixtureTest\n \n-# Prince St with cobblestones in Alexandria, VA\n-# https://www.openstreetmap.org/way/190536019\n-test.assert_has_feature(\n-    15, 9371, 12546, 'roads',\n-    { 'id': 190536019, 'kind': 'minor_road', 'surface': 'cobblestone'})\n+\n+class RoadsSurface(OsmFixtureTest):\n+\n+    def test_road_surface(self):\n+        # Add surface properties to roads layer (at max zooms)\n+        # Prince St with cobblestones in Alexandria, VA\n+        # https://www.openstreetmap.org/way/190536019\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/190536019',\n+        ])\n+\n+        self.assert_has_feature(\n+            15, 9371, 12546, 'roads',\n+            {'id': 190536019, 'kind': 'minor_road',\n+             'surface': 'cobblestone'})\n",
        "source_code_with_indent": "# Add surface properties to roads layer (at max zooms)\n\n# Prince St with cobblestones in Alexandria, VA\n# https://www.openstreetmap.org/way/190536019\ntest.assert_has_feature(\n    15, 9371, 12546, 'roads',\n    { 'id': 190536019, 'kind': 'minor_road', 'surface': 'cobblestone'})\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from . import OsmFixtureTest\n\n\nclass RoadsSurface(OsmFixtureTest):\n\n    <IND>def test_road_surface(self):\n        # Add surface properties to roads layer (at max zooms)\n        # Prince St with cobblestones in Alexandria, VA\n        # https://www.openstreetmap.org/way/190536019\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/190536019',\n        ])\n\n        self.assert_has_feature(\n            15, 9371, 12546, 'roads',\n            {'id': 190536019, 'kind': 'minor_road',\n             'surface': 'cobblestone'})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1091-missing-name-short.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1091-missing-name-short.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1091-missing-name-short.py:3:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 3,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# Node: Missouri (473849775)\n# http://www.openstreetmap.org/node/473849775\ntest.assert_has_feature(\n    16, 15917, 25102, 'places',\n    { 'id': 473849775, 'name:short': 'MO' })\n",
        "source_code_len": 177,
        "target_code": "from . import OsmFixtureTest\n\n\nclass MissingNameShort(OsmFixtureTest):\n    def test_missouri(self):\n        self.load_fixtures([\n            'http://www.openstreetmap.org/node/473849775',\n        ])\n\n        self.assert_has_feature(\n            16, 15917, 25102, 'places',\n            {'id': 473849775, 'name:short': 'MO'})\n",
        "target_code_len": 324,
        "diff_format": "@@ -1,5 +1,12 @@\n-# Node: Missouri (473849775)\n-# http://www.openstreetmap.org/node/473849775\n-test.assert_has_feature(\n-    16, 15917, 25102, 'places',\n-    { 'id': 473849775, 'name:short': 'MO' })\n+from . import OsmFixtureTest\n+\n+\n+class MissingNameShort(OsmFixtureTest):\n+    def test_missouri(self):\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/node/473849775',\n+        ])\n+\n+        self.assert_has_feature(\n+            16, 15917, 25102, 'places',\n+            {'id': 473849775, 'name:short': 'MO'})\n",
        "source_code_with_indent": "# Node: Missouri (473849775)\n# http://www.openstreetmap.org/node/473849775\ntest.assert_has_feature(\n    16, 15917, 25102, 'places',\n    { 'id': 473849775, 'name:short': 'MO' })\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from . import OsmFixtureTest\n\n\nclass MissingNameShort(OsmFixtureTest):\n    <IND>def test_missouri(self):\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/node/473849775',\n        ])\n\n        self.assert_has_feature(\n            16, 15917, 25102, 'places',\n            {'id': 473849775, 'name:short': 'MO'})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1103-no-natural-pois.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1103-no-natural-pois.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1103-no-natural-pois.py:5:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 5,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# example from ticket: an unnamed natural=wood in Hyde Park, London\n# http://www.openstreetmap.org/relation/1756198\n# since this is unnamed, it might already get dropped as a POI, and won't have\n# a landuse label, so this checks for the polygon.\ntest.assert_has_feature(\n    16, 32737, 21792, 'landuse',\n    { 'id': -1756198, 'kind': 'natural_wood' })\ntest.assert_no_matching_feature(\n    16, 32737, 21792, 'pois',\n    { 'id': -1756198, 'kind': 'natural_wood' })\n\n# named area, should get a label placement. note that we currently only add\n# landuse label placements at zoom 15+.\n# Mt. Cydonia Ponds Natural Area\n# http://www.openstreetmap.org/relation/6366946\ntest.assert_has_feature(\n    15, 9327, 12418, 'landuse',\n    { 'id': -6366946, 'kind': 'natural_wood', 'label_placement': True })\ntest.assert_no_matching_feature(\n    15, 9327, 12418, 'pois',\n    { 'id': -6366946, 'kind': 'natural_wood' })\n\n# same, but for a forest\n# Liebesinsel, nr. Berlin, Germany\n# http://www.openstreetmap.org/way/316516905\ntest.assert_has_feature(\n    16, 35199, 21454, 'landuse',\n    { 'id': 316516905, 'kind': 'natural_forest', 'label_placement': True })\ntest.assert_no_matching_feature(\n    16, 35199, 21454, 'pois',\n    { 'id': 316516905, 'kind': 'natural_forest' })\n",
        "source_code_len": 1255,
        "target_code": "from . import OsmFixtureTest\n\n\nclass NoNaturalPois(OsmFixtureTest):\n\n    def test_unnamed_natural_wood_hyde_park_london(self):\n        # example from ticket: an unnamed natural=wood in Hyde Park, London\n        # since this is unnamed, it might already get dropped as a POI, and\n        # won't have a landuse label, so this checks for the polygon.\n        self.load_fixtures([\n            'http://www.openstreetmap.org/relation/1756198',\n        ])\n\n        self.assert_has_feature(\n            16, 32737, 21792, 'landuse',\n            {'id': -1756198, 'kind': 'natural_wood'})\n\n        self.assert_no_matching_feature(\n            16, 32737, 21792, 'pois',\n            {'id': -1756198, 'kind': 'natural_wood'})\n\n    def test_named_area_mt_cydonia_ponds(self):\n        # named area, should get a label placement. note that we currently\n        # only add landuse label placements at zoom 15+.\n        # Mt. Cydonia Ponds Natural Area\n        self.load_fixtures([\n            'http://www.openstreetmap.org/relation/6366946',\n        ])\n\n        self.assert_has_feature(\n            15, 9327, 12418, 'landuse',\n            {'id': -6366946, 'kind': 'natural_wood',\n             'label_placement': True})\n\n        self.assert_no_matching_feature(\n            15, 9327, 12418, 'pois',\n            {'id': -6366946, 'kind': 'natural_wood'})\n\n    def test_named_forest(self):\n        # same, but for a forest\n        # Liebesinsel, nr. Berlin, Germany\n        self.load_fixtures([\n            'http://www.openstreetmap.org/way/316516905',\n        ])\n\n        self.assert_has_feature(\n            16, 35199, 21454, 'landuse',\n            {'id': 316516905, 'kind': 'natural_forest',\n             'label_placement': True})\n\n        self.assert_no_matching_feature(\n            16, 35199, 21454, 'pois',\n            {'id': 316516905, 'kind': 'natural_forest'})\n",
        "target_code_len": 1850,
        "diff_format": "@@ -1,31 +1,53 @@\n-# example from ticket: an unnamed natural=wood in Hyde Park, London\n-# http://www.openstreetmap.org/relation/1756198\n-# since this is unnamed, it might already get dropped as a POI, and won't have\n-# a landuse label, so this checks for the polygon.\n-test.assert_has_feature(\n-    16, 32737, 21792, 'landuse',\n-    { 'id': -1756198, 'kind': 'natural_wood' })\n-test.assert_no_matching_feature(\n-    16, 32737, 21792, 'pois',\n-    { 'id': -1756198, 'kind': 'natural_wood' })\n+from . import OsmFixtureTest\n \n-# named area, should get a label placement. note that we currently only add\n-# landuse label placements at zoom 15+.\n-# Mt. Cydonia Ponds Natural Area\n-# http://www.openstreetmap.org/relation/6366946\n-test.assert_has_feature(\n-    15, 9327, 12418, 'landuse',\n-    { 'id': -6366946, 'kind': 'natural_wood', 'label_placement': True })\n-test.assert_no_matching_feature(\n-    15, 9327, 12418, 'pois',\n-    { 'id': -6366946, 'kind': 'natural_wood' })\n \n-# same, but for a forest\n-# Liebesinsel, nr. Berlin, Germany\n-# http://www.openstreetmap.org/way/316516905\n-test.assert_has_feature(\n-    16, 35199, 21454, 'landuse',\n-    { 'id': 316516905, 'kind': 'natural_forest', 'label_placement': True })\n-test.assert_no_matching_feature(\n-    16, 35199, 21454, 'pois',\n-    { 'id': 316516905, 'kind': 'natural_forest' })\n+class NoNaturalPois(OsmFixtureTest):\n+\n+    def test_unnamed_natural_wood_hyde_park_london(self):\n+        # example from ticket: an unnamed natural=wood in Hyde Park, London\n+        # since this is unnamed, it might already get dropped as a POI, and\n+        # won't have a landuse label, so this checks for the polygon.\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/relation/1756198',\n+        ])\n+\n+        self.assert_has_feature(\n+            16, 32737, 21792, 'landuse',\n+            {'id': -1756198, 'kind': 'natural_wood'})\n+\n+        self.assert_no_matching_feature(\n+            16, 32737, 21792, 'pois',\n+            {'id': -1756198, 'kind': 'natural_wood'})\n+\n+    def test_named_area_mt_cydonia_ponds(self):\n+        # named area, should get a label placement. note that we currently\n+        # only add landuse label placements at zoom 15+.\n+        # Mt. Cydonia Ponds Natural Area\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/relation/6366946',\n+        ])\n+\n+        self.assert_has_feature(\n+            15, 9327, 12418, 'landuse',\n+            {'id': -6366946, 'kind': 'natural_wood',\n+             'label_placement': True})\n+\n+        self.assert_no_matching_feature(\n+            15, 9327, 12418, 'pois',\n+            {'id': -6366946, 'kind': 'natural_wood'})\n+\n+    def test_named_forest(self):\n+        # same, but for a forest\n+        # Liebesinsel, nr. Berlin, Germany\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/way/316516905',\n+        ])\n+\n+        self.assert_has_feature(\n+            16, 35199, 21454, 'landuse',\n+            {'id': 316516905, 'kind': 'natural_forest',\n+             'label_placement': True})\n+\n+        self.assert_no_matching_feature(\n+            16, 35199, 21454, 'pois',\n+            {'id': 316516905, 'kind': 'natural_forest'})\n",
        "source_code_with_indent": "# example from ticket: an unnamed natural=wood in Hyde Park, London\n# http://www.openstreetmap.org/relation/1756198\n# since this is unnamed, it might already get dropped as a POI, and won't have\n# a landuse label, so this checks for the polygon.\ntest.assert_has_feature(\n    16, 32737, 21792, 'landuse',\n    { 'id': -1756198, 'kind': 'natural_wood' })\ntest.assert_no_matching_feature(\n    16, 32737, 21792, 'pois',\n    { 'id': -1756198, 'kind': 'natural_wood' })\n\n# named area, should get a label placement. note that we currently only add\n# landuse label placements at zoom 15+.\n# Mt. Cydonia Ponds Natural Area\n# http://www.openstreetmap.org/relation/6366946\ntest.assert_has_feature(\n    15, 9327, 12418, 'landuse',\n    { 'id': -6366946, 'kind': 'natural_wood', 'label_placement': True })\ntest.assert_no_matching_feature(\n    15, 9327, 12418, 'pois',\n    { 'id': -6366946, 'kind': 'natural_wood' })\n\n# same, but for a forest\n# Liebesinsel, nr. Berlin, Germany\n# http://www.openstreetmap.org/way/316516905\ntest.assert_has_feature(\n    16, 35199, 21454, 'landuse',\n    { 'id': 316516905, 'kind': 'natural_forest', 'label_placement': True })\ntest.assert_no_matching_feature(\n    16, 35199, 21454, 'pois',\n    { 'id': 316516905, 'kind': 'natural_forest' })\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from . import OsmFixtureTest\n\n\nclass NoNaturalPois(OsmFixtureTest):\n\n    <IND>def test_unnamed_natural_wood_hyde_park_london(self):\n        # example from ticket: an unnamed natural=wood in Hyde Park, London\n        # since this is unnamed, it might already get dropped as a POI, and\n        # won't have a landuse label, so this checks for the polygon.\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/relation/1756198',\n        ])\n\n        self.assert_has_feature(\n            16, 32737, 21792, 'landuse',\n            {'id': -1756198, 'kind': 'natural_wood'})\n\n        self.assert_no_matching_feature(\n            16, 32737, 21792, 'pois',\n            {'id': -1756198, 'kind': 'natural_wood'})\n\n    <DED>def test_named_area_mt_cydonia_ponds(self):\n        # named area, should get a label placement. note that we currently\n        # only add landuse label placements at zoom 15+.\n        # Mt. Cydonia Ponds Natural Area\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/relation/6366946',\n        ])\n\n        self.assert_has_feature(\n            15, 9327, 12418, 'landuse',\n            {'id': -6366946, 'kind': 'natural_wood',\n             'label_placement': True})\n\n        self.assert_no_matching_feature(\n            15, 9327, 12418, 'pois',\n            {'id': -6366946, 'kind': 'natural_wood'})\n\n    <DED>def test_named_forest(self):\n        # same, but for a forest\n        # Liebesinsel, nr. Berlin, Germany\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/way/316516905',\n        ])\n\n        self.assert_has_feature(\n            16, 35199, 21454, 'landuse',\n            {'id': 316516905, 'kind': 'natural_forest',\n             'label_placement': True})\n\n        self.assert_no_matching_feature(\n            16, 35199, 21454, 'pois',\n            {'id': 316516905, 'kind': 'natural_forest'})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1147-bicycle-ramps.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1147-bicycle-ramps.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1147-bicycle-ramps.py:5:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 5,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# Add ramp properties to paths in roads layer\n\n# Steps with ramp:bicycle=yes in Copenhagen\n# https://www.openstreetmap.org/way/91275149\ntest.assert_has_feature(\n    15, 17527, 10257, 'roads',\n    { 'id': 91275149, 'kind': 'path', 'kind_detail': 'steps', 'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n\n# Footway with ramp=yes in San Francisco\n# https://www.openstreetmap.org/way/346088008\ntest.assert_has_feature(\n    16, 10470, 25342, 'roads',\n    { 'id': 346088008, 'kind': 'path', 'kind_detail': 'footway', 'ramp': 'yes'})\n",
        "source_code_len": 531,
        "target_code": "from . import OsmFixtureTest\n\n\nclass BicycleRamps(OsmFixtureTest):\n\n    def test_ramp_properties_on_path(self):\n        # Add ramp properties to paths in roads layer\n        # Steps with ramp:bicycle=yes in Copenhagen\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/91275149',\n        ])\n\n        self.assert_has_feature(\n            15, 17527, 10257, 'roads',\n            {'id': 91275149, 'kind': 'path', 'kind_detail': 'steps',\n             'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n\n    def test_ramp_properties_on_footway(self):\n        # Footway with ramp=yes in San Francisco\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/346088008',\n        ])\n\n        self.assert_has_feature(\n            16, 10470, 25342, 'roads',\n            {'id': 346088008, 'kind': 'path', 'kind_detail': 'footway',\n             'ramp': 'yes'})\n",
        "target_code_len": 893,
        "diff_format": "@@ -1,13 +1,27 @@\n-# Add ramp properties to paths in roads layer\n+from . import OsmFixtureTest\n \n-# Steps with ramp:bicycle=yes in Copenhagen\n-# https://www.openstreetmap.org/way/91275149\n-test.assert_has_feature(\n-    15, 17527, 10257, 'roads',\n-    { 'id': 91275149, 'kind': 'path', 'kind_detail': 'steps', 'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n \n-# Footway with ramp=yes in San Francisco\n-# https://www.openstreetmap.org/way/346088008\n-test.assert_has_feature(\n-    16, 10470, 25342, 'roads',\n-    { 'id': 346088008, 'kind': 'path', 'kind_detail': 'footway', 'ramp': 'yes'})\n+class BicycleRamps(OsmFixtureTest):\n+\n+    def test_ramp_properties_on_path(self):\n+        # Add ramp properties to paths in roads layer\n+        # Steps with ramp:bicycle=yes in Copenhagen\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/91275149',\n+        ])\n+\n+        self.assert_has_feature(\n+            15, 17527, 10257, 'roads',\n+            {'id': 91275149, 'kind': 'path', 'kind_detail': 'steps',\n+             'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n+\n+    def test_ramp_properties_on_footway(self):\n+        # Footway with ramp=yes in San Francisco\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/346088008',\n+        ])\n+\n+        self.assert_has_feature(\n+            16, 10470, 25342, 'roads',\n+            {'id': 346088008, 'kind': 'path', 'kind_detail': 'footway',\n+             'ramp': 'yes'})\n",
        "source_code_with_indent": "# Add ramp properties to paths in roads layer\n\n# Steps with ramp:bicycle=yes in Copenhagen\n# https://www.openstreetmap.org/way/91275149\ntest.assert_has_feature(\n    15, 17527, 10257, 'roads',\n    { 'id': 91275149, 'kind': 'path', 'kind_detail': 'steps', 'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n\n# Footway with ramp=yes in San Francisco\n# https://www.openstreetmap.org/way/346088008\ntest.assert_has_feature(\n    16, 10470, 25342, 'roads',\n    { 'id': 346088008, 'kind': 'path', 'kind_detail': 'footway', 'ramp': 'yes'})\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from . import OsmFixtureTest\n\n\nclass BicycleRamps(OsmFixtureTest):\n\n    <IND>def test_ramp_properties_on_path(self):\n        # Add ramp properties to paths in roads layer\n        # Steps with ramp:bicycle=yes in Copenhagen\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/91275149',\n        ])\n\n        self.assert_has_feature(\n            15, 17527, 10257, 'roads',\n            {'id': 91275149, 'kind': 'path', 'kind_detail': 'steps',\n             'is_bicycle_related': True, 'ramp_bicycle': 'yes'})\n\n    <DED>def test_ramp_properties_on_footway(self):\n        # Footway with ramp=yes in San Francisco\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/346088008',\n        ])\n\n        self.assert_has_feature(\n            16, 10470, 25342, 'roads',\n            {'id': 346088008, 'kind': 'path', 'kind_detail': 'footway',\n             'ramp': 'yes'})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tilezen/vector-datasource",
    "commit": "babee5dd98cf063f9c7118c781db4ae954b80714",
    "filename": "integration-test/1170-very-early-paths-and-bike-routes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tilezen-vector-datasource/integration-test/1170-very-early-paths-and-bike-routes.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "integration-test/1170-very-early-paths-and-bike-routes.py:5:0 Unbound name [10]: Name `test` is used but not defined in the current scope.",
    "message": " Name `test` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 5,
    "warning_line": "test.assert_has_feature(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# highway=path, with route inter-national\n# GR5-Grand Traverse de Jura between France and Switzerland\n# https://www.openstreetmap.org/way/285975282\n# https://www.openstreetmap.org/relation/6009161\ntest.assert_has_feature(\n    9, 265, 179, 'roads',\n    { 'kind': 'path', 'walking_network': 'iwn' } )\n\n# highway=path, with route national (Pacific Crest Trail) at zoom 9\n# https://www.openstreetmap.org/way/236361475\n# https://www.openstreetmap.org/relation/1225378\ntest.assert_has_feature(\n    9, 86, 197, 'roads',\n    { 'kind': 'path', 'walking_network': 'nwn' } )\n\n# highway=path, with route regional (Merced Pass Trail) at zoom 11\n# https://www.openstreetmap.org/way/373491941\n# https://www.openstreetmap.org/relation/5549623\ntest.assert_has_feature(\n   11, 343, 792, 'roads',\n   { 'kind': 'path', 'walking_network': 'rwn'  } )\n\n# highway=unclassified, with route local (Grant Avenue) at zoom 12\n# part of The Barbary Coast Trail in San Francisco\n# https://www.openstreetmap.org/way/91181758\n# https://www.openstreetmap.org/relation/6322028\ntest.assert_has_feature(\n   12, 655, 1582, 'roads',\n   { 'kind': 'minor_road', 'walking_network': 'lwn' } )\n\n\n# Str\u00f8by Bygade secondary road part of international cycle network\n# https://www.openstreetmap.org/way/378138944\n# https://www.openstreetmap.org/relation/1737354\n# https://www.openstreetmap.org/relation/28441\n# https://www.openstreetmap.org/relation/2689634\n# https://www.openstreetmap.org/relation/2749837\n# https://www.openstreetmap.org/relation/36778\n# https://www.openstreetmap.org/relation/721738\ntest.assert_has_feature(\n    8, 136, 80, 'roads',\n    { 'kind': 'major_road', 'kind_detail': 'secondary',\n      'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# Sundbylillevej tertiary road part of national cycle network\n# https://www.openstreetmap.org/way/28273516\n# https://www.openstreetmap.org/relation/26863\ntest.assert_has_feature(\n    8, 136, 79, 'roads',\n    { 'kind': 'major_road', 'kind_detail': 'tertiary',\n      'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n\n# Way: North Sea Cycle Route - part Netherlands (1977662)\n# A really long highway=cycleway\n# https://www.openstreetmap.org/way/35568189\n# https://www.openstreetmap.org/relation/1977662\n# https://www.openstreetmap.org/relation/1975739\n# https://www.openstreetmap.org/relation/5294\n# https://www.openstreetmap.org/relation/537418\ntest.assert_has_feature(\n    8, 131, 83, 'roads',\n    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# Ferry between Denmark and Germany, icn\n# https://www.openstreetmap.org/way/128631318\n# https://www.openstreetmap.org/relation/721738\ntest.assert_has_feature(\n    8, 136, 81, 'roads',\n    { 'kind': 'ferry', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# S\u00f8ndervangsvej minor road in Denmark as national cycle route\n# https://www.openstreetmap.org/way/149701891\n# https://www.openstreetmap.org/relation/349521\ntest.assert_has_feature(\n    8, 136, 79, 'roads',\n    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n\n# Part of Bay Trail in South (San Francisco) Bay\n# way is marked rcn=yes, and part of a proper bike relation\n# http://www.openstreetmap.org/way/44422697\n# http://www.openstreetmap.org/relation/325779\ntest.assert_has_feature(\n    10, 164, 396, 'roads',\n    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n\n# Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n# https://www.openstreetmap.org/way/2860759\n# https://www.openstreetmap.org/relation/2087590\ntest.assert_has_feature(\n    10, 547, 320, 'roads',\n    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n\n# lcn in Seattle (living street that would only be visible at zoom 13 otherwise) at zoom 11\n# https://www.openstreetmap.org/way/6477775\n# https://www.openstreetmap.org/relation/3541926\ntest.assert_has_feature(\n    11, 327, 715, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n\n# Kirkham Street lcn in San Francisco at zoom 11\n# https://www.openstreetmap.org/way/89802424\n# https://www.openstreetmap.org/relation/32313\ntest.assert_has_feature(\n    11, 327, 791, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n\n# Asiatisk Plads service road with lcn in Copenhagen\n# https://www.openstreetmap.org/way/164049387\n# https://www.openstreetmap.org/relation/6199242\ntest.assert_has_feature(\n    11, 1095, 641, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n",
        "source_code_len": 4479,
        "target_code": "# -*- encoding: utf-8 -*-\nfrom . import OsmFixtureTest\n\n\nclass VeryEarlyPathsAndBikeRoutes(OsmFixtureTest):\n\n    def test_path_with_international_route(self):\n        # highway=path, with route inter-national\n        # GR5-Grand Traverse de Jura between France and Switzerland\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/285975282',\n            'https://www.openstreetmap.org/relation/6009161',\n        ], clip=self.tile_bbox(9, 265, 179))\n\n        self.assert_has_feature(\n            9, 265, 179, 'roads',\n            {'kind': 'path', 'walking_network': 'iwn'})\n\n    def test_path_with_national_route(self):\n        # highway=path, with route national (Pacific Crest Trail) at zoom 9\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/236361475',\n            'https://www.openstreetmap.org/relation/1225378',\n        ], clip=self.tile_bbox(9, 86, 197))\n\n        self.assert_has_feature(\n            9, 86, 197, 'roads',\n            {'kind': 'path', 'walking_network': 'nwn'})\n\n    def test_path_with_regional_route(self):\n        # highway=path, with route regional (Merced Pass Trail) at zoom 11\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/373491941',\n            'https://www.openstreetmap.org/relation/5549623',\n        ], clip=self.tile_bbox(11, 343, 792))\n\n        self.assert_has_feature(\n            11, 343, 792, 'roads',\n            {'kind': 'path', 'walking_network': 'rwn'})\n\n    def test_unclassified_with_local_route(self):\n        # highway=unclassified, with route local (Grant Avenue) at zoom 12\n        # part of The Barbary Coast Trail in San Francisco\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/91181758',\n            'https://www.openstreetmap.org/relation/6322028',\n        ], clip=self.tile_bbox(12, 655, 1582))\n\n        self.assert_has_feature(\n            12, 655, 1582, 'roads',\n            {'kind': 'minor_road', 'walking_network': 'lwn'})\n\n    def test_secondary_with_international_route(self):\n        # Str\u00f8by Bygade secondary road part of international cycle network\n        # https://www.openstreetmap.org/relation/28441\n        # https://www.openstreetmap.org/relation/2689634\n        # https://www.openstreetmap.org/relation/2749837\n        # https://www.openstreetmap.org/relation/36778\n        # https://www.openstreetmap.org/relation/721738\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/378138944',\n            'https://www.openstreetmap.org/relation/1737354',\n            'https://www.openstreetmap.org/relation/28441',\n            'https://www.openstreetmap.org/relation/2689634',\n            'https://www.openstreetmap.org/relation/2749837',\n            'https://www.openstreetmap.org/relation/36778',\n            'https://www.openstreetmap.org/relation/721738',\n        ], clip=self.tile_bbox(8, 136, 80))\n\n        self.assert_has_feature(\n            8, 136, 80, 'roads',\n            {'kind': 'major_road', 'kind_detail': 'secondary',\n             'is_bicycle_related': True, 'bicycle_network': 'icn'})\n\n    def test_teriary_with_national_route(self):\n        # Sundbylillevej tertiary road part of national cycle network\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/28273516',\n            'https://www.openstreetmap.org/relation/26863',\n        ], clip=self.tile_bbox(8, 136, 79))\n\n        self.assert_has_feature(\n            8, 136, 79, 'roads',\n            {'kind': 'major_road', 'kind_detail': 'tertiary',\n             'is_bicycle_related': True, 'bicycle_network': 'ncn'})\n\n    def test_cycleway_with_international_route(self):\n        # Way: North Sea Cycle Route - part Netherlands (1977662)\n        # A really long highway=cycleway\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/35568189',\n            'https://www.openstreetmap.org/relation/1977662',\n            'https://www.openstreetmap.org/relation/1975739',\n            'https://www.openstreetmap.org/relation/5294',\n            'https://www.openstreetmap.org/relation/537418',\n        ], clip=self.tile_bbox(8, 131, 83))\n\n        self.assert_has_feature(\n            8, 131, 83, 'roads',\n            {'kind': 'path', 'is_bicycle_related': True,\n             'bicycle_network': 'icn'})\n\n    def test_ferry_with_international_route(self):\n        # Ferry between Denmark and Germany, icn\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/128631318',\n            'https://www.openstreetmap.org/relation/721738',\n        ], clip=self.tile_bbox(8, 136, 81))\n\n        self.assert_has_feature(\n            8, 136, 81, 'roads',\n            {'kind': 'ferry', 'is_bicycle_related': True,\n             'bicycle_network': 'icn'})\n\n    def test_minor_road_with_national_route(self):\n        # S\u00f8ndervangsvej minor road in Denmark as national cycle route\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/149701891',\n            'https://www.openstreetmap.org/relation/349521',\n        ], clip=self.tile_bbox(8, 136, 79))\n\n        self.assert_has_feature(\n            8, 136, 79, 'roads',\n            {'kind': 'minor_road', 'is_bicycle_related': True,\n             'bicycle_network': 'ncn'})\n\n    def test_bay_trail_rcn(self):\n        # Part of Bay Trail in South (San Francisco) Bay\n        # way is marked rcn=yes, and part of a proper bike relation\n        self.load_fixtures([\n            'http://www.openstreetmap.org/way/44422697',\n            'http://www.openstreetmap.org/relation/325779',\n        ], clip=self.tile_bbox(10, 164, 396))\n\n        self.assert_has_feature(\n            10, 164, 396, 'roads',\n            {'kind': 'path', 'is_bicycle_related': True,\n             'bicycle_network': 'rcn'})\n\n    def test_residential_with_regional_route(self):\n        # Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/2860759',\n            'https://www.openstreetmap.org/relation/2087590',\n        ], clip=self.tile_bbox(10, 547, 320))\n\n        self.assert_has_feature(\n            10, 547, 320, 'roads',\n            {'kind': 'minor_road', 'is_bicycle_related': True,\n             'bicycle_network': 'rcn'})\n\n    def test_living_street_with_local_route(self):\n        # lcn in Seattle (living street that would only be visible at zoom 13\n        # otherwise) at zoom 11\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/6477775',\n            'https://www.openstreetmap.org/relation/3541926',\n        ], clip=self.tile_bbox(11, 327, 715))\n\n        self.assert_has_feature(\n            11, 327, 715, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n\n    def test_kirkham_street_lcn(self):\n        # Kirkham Street lcn in San Francisco at zoom 11\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/89802424',\n            'https://www.openstreetmap.org/relation/32313',\n        ], clip=self.tile_bbox(11, 327, 791))\n\n        self.assert_has_feature(\n            11, 327, 791, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n\n    def test_asiatisk_plads_service_road_lcn(self):\n        # Asiatisk Plads service road with lcn in Copenhagen\n        self.load_fixtures([\n            'https://www.openstreetmap.org/way/164049387',\n            'https://www.openstreetmap.org/relation/6199242',\n        ], clip=self.tile_bbox(11, 1095, 641))\n\n        self.assert_has_feature(\n            11, 1095, 641, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n",
        "target_code_len": 7605,
        "diff_format": "@@ -1,112 +1,184 @@\n-# highway=path, with route inter-national\n-# GR5-Grand Traverse de Jura between France and Switzerland\n-# https://www.openstreetmap.org/way/285975282\n-# https://www.openstreetmap.org/relation/6009161\n-test.assert_has_feature(\n-    9, 265, 179, 'roads',\n-    { 'kind': 'path', 'walking_network': 'iwn' } )\n-\n-# highway=path, with route national (Pacific Crest Trail) at zoom 9\n-# https://www.openstreetmap.org/way/236361475\n-# https://www.openstreetmap.org/relation/1225378\n-test.assert_has_feature(\n-    9, 86, 197, 'roads',\n-    { 'kind': 'path', 'walking_network': 'nwn' } )\n-\n-# highway=path, with route regional (Merced Pass Trail) at zoom 11\n-# https://www.openstreetmap.org/way/373491941\n-# https://www.openstreetmap.org/relation/5549623\n-test.assert_has_feature(\n-   11, 343, 792, 'roads',\n-   { 'kind': 'path', 'walking_network': 'rwn'  } )\n-\n-# highway=unclassified, with route local (Grant Avenue) at zoom 12\n-# part of The Barbary Coast Trail in San Francisco\n-# https://www.openstreetmap.org/way/91181758\n-# https://www.openstreetmap.org/relation/6322028\n-test.assert_has_feature(\n-   12, 655, 1582, 'roads',\n-   { 'kind': 'minor_road', 'walking_network': 'lwn' } )\n+# -*- encoding: utf-8 -*-\n+from . import OsmFixtureTest\n \n \n-# Str\u00f8by Bygade secondary road part of international cycle network\n-# https://www.openstreetmap.org/way/378138944\n-# https://www.openstreetmap.org/relation/1737354\n-# https://www.openstreetmap.org/relation/28441\n-# https://www.openstreetmap.org/relation/2689634\n-# https://www.openstreetmap.org/relation/2749837\n-# https://www.openstreetmap.org/relation/36778\n-# https://www.openstreetmap.org/relation/721738\n-test.assert_has_feature(\n-    8, 136, 80, 'roads',\n-    { 'kind': 'major_road', 'kind_detail': 'secondary',\n-      'is_bicycle_related': True, 'bicycle_network': 'icn' })\n+class VeryEarlyPathsAndBikeRoutes(OsmFixtureTest):\n \n-# Sundbylillevej tertiary road part of national cycle network\n-# https://www.openstreetmap.org/way/28273516\n-# https://www.openstreetmap.org/relation/26863\n-test.assert_has_feature(\n-    8, 136, 79, 'roads',\n-    { 'kind': 'major_road', 'kind_detail': 'tertiary',\n-      'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n+    def test_path_with_international_route(self):\n+        # highway=path, with route inter-national\n+        # GR5-Grand Traverse de Jura between France and Switzerland\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/285975282',\n+            'https://www.openstreetmap.org/relation/6009161',\n+        ], clip=self.tile_bbox(9, 265, 179))\n \n-# Way: North Sea Cycle Route - part Netherlands (1977662)\n-# A really long highway=cycleway\n-# https://www.openstreetmap.org/way/35568189\n-# https://www.openstreetmap.org/relation/1977662\n-# https://www.openstreetmap.org/relation/1975739\n-# https://www.openstreetmap.org/relation/5294\n-# https://www.openstreetmap.org/relation/537418\n-test.assert_has_feature(\n-    8, 131, 83, 'roads',\n-    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n+        self.assert_has_feature(\n+            9, 265, 179, 'roads',\n+            {'kind': 'path', 'walking_network': 'iwn'})\n \n-# Ferry between Denmark and Germany, icn\n-# https://www.openstreetmap.org/way/128631318\n-# https://www.openstreetmap.org/relation/721738\n-test.assert_has_feature(\n-    8, 136, 81, 'roads',\n-    { 'kind': 'ferry', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n+    def test_path_with_national_route(self):\n+        # highway=path, with route national (Pacific Crest Trail) at zoom 9\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/236361475',\n+            'https://www.openstreetmap.org/relation/1225378',\n+        ], clip=self.tile_bbox(9, 86, 197))\n \n-# S\u00f8ndervangsvej minor road in Denmark as national cycle route\n-# https://www.openstreetmap.org/way/149701891\n-# https://www.openstreetmap.org/relation/349521\n-test.assert_has_feature(\n-    8, 136, 79, 'roads',\n-    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n+        self.assert_has_feature(\n+            9, 86, 197, 'roads',\n+            {'kind': 'path', 'walking_network': 'nwn'})\n \n-# Part of Bay Trail in South (San Francisco) Bay\n-# way is marked rcn=yes, and part of a proper bike relation\n-# http://www.openstreetmap.org/way/44422697\n-# http://www.openstreetmap.org/relation/325779\n-test.assert_has_feature(\n-    10, 164, 396, 'roads',\n-    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n+    def test_path_with_regional_route(self):\n+        # highway=path, with route regional (Merced Pass Trail) at zoom 11\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/373491941',\n+            'https://www.openstreetmap.org/relation/5549623',\n+        ], clip=self.tile_bbox(11, 343, 792))\n \n-# Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n-# https://www.openstreetmap.org/way/2860759\n-# https://www.openstreetmap.org/relation/2087590\n-test.assert_has_feature(\n-    10, 547, 320, 'roads',\n-    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n+        self.assert_has_feature(\n+            11, 343, 792, 'roads',\n+            {'kind': 'path', 'walking_network': 'rwn'})\n \n-# lcn in Seattle (living street that would only be visible at zoom 13 otherwise) at zoom 11\n-# https://www.openstreetmap.org/way/6477775\n-# https://www.openstreetmap.org/relation/3541926\n-test.assert_has_feature(\n-    11, 327, 715, 'roads',\n-    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n+    def test_unclassified_with_local_route(self):\n+        # highway=unclassified, with route local (Grant Avenue) at zoom 12\n+        # part of The Barbary Coast Trail in San Francisco\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/91181758',\n+            'https://www.openstreetmap.org/relation/6322028',\n+        ], clip=self.tile_bbox(12, 655, 1582))\n \n-# Kirkham Street lcn in San Francisco at zoom 11\n-# https://www.openstreetmap.org/way/89802424\n-# https://www.openstreetmap.org/relation/32313\n-test.assert_has_feature(\n-    11, 327, 791, 'roads',\n-    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n+        self.assert_has_feature(\n+            12, 655, 1582, 'roads',\n+            {'kind': 'minor_road', 'walking_network': 'lwn'})\n \n-# Asiatisk Plads service road with lcn in Copenhagen\n-# https://www.openstreetmap.org/way/164049387\n-# https://www.openstreetmap.org/relation/6199242\n-test.assert_has_feature(\n-    11, 1095, 641, 'roads',\n-    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n+    def test_secondary_with_international_route(self):\n+        # Str\u00f8by Bygade secondary road part of international cycle network\n+        # https://www.openstreetmap.org/relation/28441\n+        # https://www.openstreetmap.org/relation/2689634\n+        # https://www.openstreetmap.org/relation/2749837\n+        # https://www.openstreetmap.org/relation/36778\n+        # https://www.openstreetmap.org/relation/721738\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/378138944',\n+            'https://www.openstreetmap.org/relation/1737354',\n+            'https://www.openstreetmap.org/relation/28441',\n+            'https://www.openstreetmap.org/relation/2689634',\n+            'https://www.openstreetmap.org/relation/2749837',\n+            'https://www.openstreetmap.org/relation/36778',\n+            'https://www.openstreetmap.org/relation/721738',\n+        ], clip=self.tile_bbox(8, 136, 80))\n+\n+        self.assert_has_feature(\n+            8, 136, 80, 'roads',\n+            {'kind': 'major_road', 'kind_detail': 'secondary',\n+             'is_bicycle_related': True, 'bicycle_network': 'icn'})\n+\n+    def test_teriary_with_national_route(self):\n+        # Sundbylillevej tertiary road part of national cycle network\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/28273516',\n+            'https://www.openstreetmap.org/relation/26863',\n+        ], clip=self.tile_bbox(8, 136, 79))\n+\n+        self.assert_has_feature(\n+            8, 136, 79, 'roads',\n+            {'kind': 'major_road', 'kind_detail': 'tertiary',\n+             'is_bicycle_related': True, 'bicycle_network': 'ncn'})\n+\n+    def test_cycleway_with_international_route(self):\n+        # Way: North Sea Cycle Route - part Netherlands (1977662)\n+        # A really long highway=cycleway\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/35568189',\n+            'https://www.openstreetmap.org/relation/1977662',\n+            'https://www.openstreetmap.org/relation/1975739',\n+            'https://www.openstreetmap.org/relation/5294',\n+            'https://www.openstreetmap.org/relation/537418',\n+        ], clip=self.tile_bbox(8, 131, 83))\n+\n+        self.assert_has_feature(\n+            8, 131, 83, 'roads',\n+            {'kind': 'path', 'is_bicycle_related': True,\n+             'bicycle_network': 'icn'})\n+\n+    def test_ferry_with_international_route(self):\n+        # Ferry between Denmark and Germany, icn\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/128631318',\n+            'https://www.openstreetmap.org/relation/721738',\n+        ], clip=self.tile_bbox(8, 136, 81))\n+\n+        self.assert_has_feature(\n+            8, 136, 81, 'roads',\n+            {'kind': 'ferry', 'is_bicycle_related': True,\n+             'bicycle_network': 'icn'})\n+\n+    def test_minor_road_with_national_route(self):\n+        # S\u00f8ndervangsvej minor road in Denmark as national cycle route\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/149701891',\n+            'https://www.openstreetmap.org/relation/349521',\n+        ], clip=self.tile_bbox(8, 136, 79))\n+\n+        self.assert_has_feature(\n+            8, 136, 79, 'roads',\n+            {'kind': 'minor_road', 'is_bicycle_related': True,\n+             'bicycle_network': 'ncn'})\n+\n+    def test_bay_trail_rcn(self):\n+        # Part of Bay Trail in South (San Francisco) Bay\n+        # way is marked rcn=yes, and part of a proper bike relation\n+        self.load_fixtures([\n+            'http://www.openstreetmap.org/way/44422697',\n+            'http://www.openstreetmap.org/relation/325779',\n+        ], clip=self.tile_bbox(10, 164, 396))\n+\n+        self.assert_has_feature(\n+            10, 164, 396, 'roads',\n+            {'kind': 'path', 'is_bicycle_related': True,\n+             'bicycle_network': 'rcn'})\n+\n+    def test_residential_with_regional_route(self):\n+        # Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/2860759',\n+            'https://www.openstreetmap.org/relation/2087590',\n+        ], clip=self.tile_bbox(10, 547, 320))\n+\n+        self.assert_has_feature(\n+            10, 547, 320, 'roads',\n+            {'kind': 'minor_road', 'is_bicycle_related': True,\n+             'bicycle_network': 'rcn'})\n+\n+    def test_living_street_with_local_route(self):\n+        # lcn in Seattle (living street that would only be visible at zoom 13\n+        # otherwise) at zoom 11\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/6477775',\n+            'https://www.openstreetmap.org/relation/3541926',\n+        ], clip=self.tile_bbox(11, 327, 715))\n+\n+        self.assert_has_feature(\n+            11, 327, 715, 'roads',\n+            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n+\n+    def test_kirkham_street_lcn(self):\n+        # Kirkham Street lcn in San Francisco at zoom 11\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/89802424',\n+            'https://www.openstreetmap.org/relation/32313',\n+        ], clip=self.tile_bbox(11, 327, 791))\n+\n+        self.assert_has_feature(\n+            11, 327, 791, 'roads',\n+            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n+\n+    def test_asiatisk_plads_service_road_lcn(self):\n+        # Asiatisk Plads service road with lcn in Copenhagen\n+        self.load_fixtures([\n+            'https://www.openstreetmap.org/way/164049387',\n+            'https://www.openstreetmap.org/relation/6199242',\n+        ], clip=self.tile_bbox(11, 1095, 641))\n+\n+        self.assert_has_feature(\n+            11, 1095, 641, 'roads',\n+            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n",
        "source_code_with_indent": "# highway=path, with route inter-national\n# GR5-Grand Traverse de Jura between France and Switzerland\n# https://www.openstreetmap.org/way/285975282\n# https://www.openstreetmap.org/relation/6009161\ntest.assert_has_feature(\n    9, 265, 179, 'roads',\n    { 'kind': 'path', 'walking_network': 'iwn' } )\n\n# highway=path, with route national (Pacific Crest Trail) at zoom 9\n# https://www.openstreetmap.org/way/236361475\n# https://www.openstreetmap.org/relation/1225378\ntest.assert_has_feature(\n    9, 86, 197, 'roads',\n    { 'kind': 'path', 'walking_network': 'nwn' } )\n\n# highway=path, with route regional (Merced Pass Trail) at zoom 11\n# https://www.openstreetmap.org/way/373491941\n# https://www.openstreetmap.org/relation/5549623\ntest.assert_has_feature(\n   11, 343, 792, 'roads',\n   { 'kind': 'path', 'walking_network': 'rwn'  } )\n\n# highway=unclassified, with route local (Grant Avenue) at zoom 12\n# part of The Barbary Coast Trail in San Francisco\n# https://www.openstreetmap.org/way/91181758\n# https://www.openstreetmap.org/relation/6322028\ntest.assert_has_feature(\n   12, 655, 1582, 'roads',\n   { 'kind': 'minor_road', 'walking_network': 'lwn' } )\n\n\n# Str\u00f8by Bygade secondary road part of international cycle network\n# https://www.openstreetmap.org/way/378138944\n# https://www.openstreetmap.org/relation/1737354\n# https://www.openstreetmap.org/relation/28441\n# https://www.openstreetmap.org/relation/2689634\n# https://www.openstreetmap.org/relation/2749837\n# https://www.openstreetmap.org/relation/36778\n# https://www.openstreetmap.org/relation/721738\ntest.assert_has_feature(\n    8, 136, 80, 'roads',\n    { 'kind': 'major_road', 'kind_detail': 'secondary',\n      'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# Sundbylillevej tertiary road part of national cycle network\n# https://www.openstreetmap.org/way/28273516\n# https://www.openstreetmap.org/relation/26863\ntest.assert_has_feature(\n    8, 136, 79, 'roads',\n    { 'kind': 'major_road', 'kind_detail': 'tertiary',\n      'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n\n# Way: North Sea Cycle Route - part Netherlands (1977662)\n# A really long highway=cycleway\n# https://www.openstreetmap.org/way/35568189\n# https://www.openstreetmap.org/relation/1977662\n# https://www.openstreetmap.org/relation/1975739\n# https://www.openstreetmap.org/relation/5294\n# https://www.openstreetmap.org/relation/537418\ntest.assert_has_feature(\n    8, 131, 83, 'roads',\n    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# Ferry between Denmark and Germany, icn\n# https://www.openstreetmap.org/way/128631318\n# https://www.openstreetmap.org/relation/721738\ntest.assert_has_feature(\n    8, 136, 81, 'roads',\n    { 'kind': 'ferry', 'is_bicycle_related': True, 'bicycle_network': 'icn' })\n\n# S\u00f8ndervangsvej minor road in Denmark as national cycle route\n# https://www.openstreetmap.org/way/149701891\n# https://www.openstreetmap.org/relation/349521\ntest.assert_has_feature(\n    8, 136, 79, 'roads',\n    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'ncn' })\n\n# Part of Bay Trail in South (San Francisco) Bay\n# way is marked rcn=yes, and part of a proper bike relation\n# http://www.openstreetmap.org/way/44422697\n# http://www.openstreetmap.org/relation/325779\ntest.assert_has_feature(\n    10, 164, 396, 'roads',\n    { 'kind': 'path', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n\n# Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n# https://www.openstreetmap.org/way/2860759\n# https://www.openstreetmap.org/relation/2087590\ntest.assert_has_feature(\n    10, 547, 320, 'roads',\n    { 'kind': 'minor_road', 'is_bicycle_related': True, 'bicycle_network': 'rcn' })\n\n# lcn in Seattle (living street that would only be visible at zoom 13 otherwise) at zoom 11\n# https://www.openstreetmap.org/way/6477775\n# https://www.openstreetmap.org/relation/3541926\ntest.assert_has_feature(\n    11, 327, 715, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n\n# Kirkham Street lcn in San Francisco at zoom 11\n# https://www.openstreetmap.org/way/89802424\n# https://www.openstreetmap.org/relation/32313\ntest.assert_has_feature(\n    11, 327, 791, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n\n# Asiatisk Plads service road with lcn in Copenhagen\n# https://www.openstreetmap.org/way/164049387\n# https://www.openstreetmap.org/relation/6199242\ntest.assert_has_feature(\n    11, 1095, 641, 'roads',\n    { 'kind': 'minor_road', 'bicycle_network': 'lcn' })\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# -*- encoding: utf-8 -*-\nfrom . import OsmFixtureTest\n\n\nclass VeryEarlyPathsAndBikeRoutes(OsmFixtureTest):\n\n    <IND>def test_path_with_international_route(self):\n        # highway=path, with route inter-national\n        # GR5-Grand Traverse de Jura between France and Switzerland\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/285975282',\n            'https://www.openstreetmap.org/relation/6009161',\n        ], clip=self.tile_bbox(9, 265, 179))\n\n        self.assert_has_feature(\n            9, 265, 179, 'roads',\n            {'kind': 'path', 'walking_network': 'iwn'})\n\n    <DED>def test_path_with_national_route(self):\n        # highway=path, with route national (Pacific Crest Trail) at zoom 9\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/236361475',\n            'https://www.openstreetmap.org/relation/1225378',\n        ], clip=self.tile_bbox(9, 86, 197))\n\n        self.assert_has_feature(\n            9, 86, 197, 'roads',\n            {'kind': 'path', 'walking_network': 'nwn'})\n\n    <DED>def test_path_with_regional_route(self):\n        # highway=path, with route regional (Merced Pass Trail) at zoom 11\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/373491941',\n            'https://www.openstreetmap.org/relation/5549623',\n        ], clip=self.tile_bbox(11, 343, 792))\n\n        self.assert_has_feature(\n            11, 343, 792, 'roads',\n            {'kind': 'path', 'walking_network': 'rwn'})\n\n    <DED>def test_unclassified_with_local_route(self):\n        # highway=unclassified, with route local (Grant Avenue) at zoom 12\n        # part of The Barbary Coast Trail in San Francisco\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/91181758',\n            'https://www.openstreetmap.org/relation/6322028',\n        ], clip=self.tile_bbox(12, 655, 1582))\n\n        self.assert_has_feature(\n            12, 655, 1582, 'roads',\n            {'kind': 'minor_road', 'walking_network': 'lwn'})\n\n    <DED>def test_secondary_with_international_route(self):\n        # Str\u00f8by Bygade secondary road part of international cycle network\n        # https://www.openstreetmap.org/relation/28441\n        # https://www.openstreetmap.org/relation/2689634\n        # https://www.openstreetmap.org/relation/2749837\n        # https://www.openstreetmap.org/relation/36778\n        # https://www.openstreetmap.org/relation/721738\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/378138944',\n            'https://www.openstreetmap.org/relation/1737354',\n            'https://www.openstreetmap.org/relation/28441',\n            'https://www.openstreetmap.org/relation/2689634',\n            'https://www.openstreetmap.org/relation/2749837',\n            'https://www.openstreetmap.org/relation/36778',\n            'https://www.openstreetmap.org/relation/721738',\n        ], clip=self.tile_bbox(8, 136, 80))\n\n        self.assert_has_feature(\n            8, 136, 80, 'roads',\n            {'kind': 'major_road', 'kind_detail': 'secondary',\n             'is_bicycle_related': True, 'bicycle_network': 'icn'})\n\n    <DED>def test_teriary_with_national_route(self):\n        # Sundbylillevej tertiary road part of national cycle network\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/28273516',\n            'https://www.openstreetmap.org/relation/26863',\n        ], clip=self.tile_bbox(8, 136, 79))\n\n        self.assert_has_feature(\n            8, 136, 79, 'roads',\n            {'kind': 'major_road', 'kind_detail': 'tertiary',\n             'is_bicycle_related': True, 'bicycle_network': 'ncn'})\n\n    <DED>def test_cycleway_with_international_route(self):\n        # Way: North Sea Cycle Route - part Netherlands (1977662)\n        # A really long highway=cycleway\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/35568189',\n            'https://www.openstreetmap.org/relation/1977662',\n            'https://www.openstreetmap.org/relation/1975739',\n            'https://www.openstreetmap.org/relation/5294',\n            'https://www.openstreetmap.org/relation/537418',\n        ], clip=self.tile_bbox(8, 131, 83))\n\n        self.assert_has_feature(\n            8, 131, 83, 'roads',\n            {'kind': 'path', 'is_bicycle_related': True,\n             'bicycle_network': 'icn'})\n\n    <DED>def test_ferry_with_international_route(self):\n        # Ferry between Denmark and Germany, icn\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/128631318',\n            'https://www.openstreetmap.org/relation/721738',\n        ], clip=self.tile_bbox(8, 136, 81))\n\n        self.assert_has_feature(\n            8, 136, 81, 'roads',\n            {'kind': 'ferry', 'is_bicycle_related': True,\n             'bicycle_network': 'icn'})\n\n    <DED>def test_minor_road_with_national_route(self):\n        # S\u00f8ndervangsvej minor road in Denmark as national cycle route\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/149701891',\n            'https://www.openstreetmap.org/relation/349521',\n        ], clip=self.tile_bbox(8, 136, 79))\n\n        self.assert_has_feature(\n            8, 136, 79, 'roads',\n            {'kind': 'minor_road', 'is_bicycle_related': True,\n             'bicycle_network': 'ncn'})\n\n    <DED>def test_bay_trail_rcn(self):\n        # Part of Bay Trail in South (San Francisco) Bay\n        # way is marked rcn=yes, and part of a proper bike relation\n        <IND>self.load_fixtures([\n            'http://www.openstreetmap.org/way/44422697',\n            'http://www.openstreetmap.org/relation/325779',\n        ], clip=self.tile_bbox(10, 164, 396))\n\n        self.assert_has_feature(\n            10, 164, 396, 'roads',\n            {'kind': 'path', 'is_bicycle_related': True,\n             'bicycle_network': 'rcn'})\n\n    <DED>def test_residential_with_regional_route(self):\n        # Hyltebjerg All\u00e9 residential road with rcn in Copenhagen\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/2860759',\n            'https://www.openstreetmap.org/relation/2087590',\n        ], clip=self.tile_bbox(10, 547, 320))\n\n        self.assert_has_feature(\n            10, 547, 320, 'roads',\n            {'kind': 'minor_road', 'is_bicycle_related': True,\n             'bicycle_network': 'rcn'})\n\n    <DED>def test_living_street_with_local_route(self):\n        # lcn in Seattle (living street that would only be visible at zoom 13\n        # otherwise) at zoom 11\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/6477775',\n            'https://www.openstreetmap.org/relation/3541926',\n        ], clip=self.tile_bbox(11, 327, 715))\n\n        self.assert_has_feature(\n            11, 327, 715, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n\n    <DED>def test_kirkham_street_lcn(self):\n        # Kirkham Street lcn in San Francisco at zoom 11\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/89802424',\n            'https://www.openstreetmap.org/relation/32313',\n        ], clip=self.tile_bbox(11, 327, 791))\n\n        self.assert_has_feature(\n            11, 327, 791, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n\n    <DED>def test_asiatisk_plads_service_road_lcn(self):\n        # Asiatisk Plads service road with lcn in Copenhagen\n        <IND>self.load_fixtures([\n            'https://www.openstreetmap.org/way/164049387',\n            'https://www.openstreetmap.org/relation/6199242',\n        ], clip=self.tile_bbox(11, 1095, 641))\n\n        self.assert_has_feature(\n            11, 1095, 641, 'roads',\n            {'kind': 'minor_road', 'bicycle_network': 'lcn'})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]