[
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:231:12 Incompatible parameter type [6]: Expected `BlockExpiration` for 1st parameter `expiration` to call `ContractSendChannelUpdateTransfer.__init__` but got `int`.",
    "message": " Expected `BlockExpiration` for 1st parameter `expiration` to call `ContractSendChannelUpdateTransfer.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 231,
    "warning_line": "            expiration=int(data['expiration']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            expiration=int(data['expiration']),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 121,
        "target_code": "        restored = cls(\n            expiration=BlockExpiration(int(data['expiration'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 138,
        "diff_format": "@@ -230,3 +231,3 @@\n         restored = cls(\n-            expiration=int(data['expiration']),\n+            expiration=BlockExpiration(int(data['expiration'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            expiration=int(data['expiration']),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            expiration=BlockExpiration(int(data['expiration'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:441:12 Incompatible parameter type [6]: Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentSentSuccess.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentSentSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 441,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_len": 238,
        "target_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_len": 262,
        "diff_format": "@@ -440,4 +441,4 @@\n             token_network_identifier=to_canonical_address(data['token_network_identifier']),\n-            identifier=int(data['identifier']),\n-            amount=int(data['amount']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            amount=TokenAmount(int(data['amount'])),\n             target=to_canonical_address(data['target']),\n",
        "source_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:442:12 Incompatible parameter type [6]: Expected `TokenAmount` for 4th parameter `amount` to call `EventPaymentSentSuccess.__init__` but got `int`.",
    "message": " Expected `TokenAmount` for 4th parameter `amount` to call `EventPaymentSentSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 442,
    "warning_line": "            amount=int(data['amount']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_len": 238,
        "target_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_len": 262,
        "diff_format": "@@ -440,4 +441,4 @@\n             token_network_identifier=to_canonical_address(data['token_network_identifier']),\n-            identifier=int(data['identifier']),\n-            amount=int(data['amount']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            amount=TokenAmount(int(data['amount'])),\n             target=to_canonical_address(data['target']),\n",
        "source_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:515:12 Incompatible parameter type [6]: Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentSentFailed.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentSentFailed.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 515,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_len": 198,
        "target_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_len": 209,
        "diff_format": "@@ -514,3 +515,3 @@\n             token_network_identifier=to_canonical_address(data['token_network_identifier']),\n-            identifier=int(data['identifier']),\n+            identifier=PaymentID(int(data['identifier'])),\n             target=to_canonical_address(data['target']),\n",
        "source_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            target=to_canonical_address(data['target']),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            target=to_canonical_address(data['target']),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:597:12 Incompatible parameter type [6]: Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentReceivedSuccess.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 3rd parameter `identifier` to call `EventPaymentReceivedSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 597,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            initiator=to_canonical_address(data['initiator']),\n",
        "source_code_len": 244,
        "target_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            initiator=to_canonical_address(data['initiator']),\n",
        "target_code_len": 268,
        "diff_format": "@@ -596,4 +597,4 @@\n             token_network_identifier=to_canonical_address(data['token_network_identifier']),\n-            identifier=int(data['identifier']),\n-            amount=int(data['amount']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            amount=TokenAmount(int(data['amount'])),\n             initiator=to_canonical_address(data['initiator']),\n",
        "source_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            initiator=to_canonical_address(data['initiator']),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            initiator=to_canonical_address(data['initiator']),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:598:12 Incompatible parameter type [6]: Expected `TokenAmount` for 4th parameter `amount` to call `EventPaymentReceivedSuccess.__init__` but got `int`.",
    "message": " Expected `TokenAmount` for 4th parameter `amount` to call `EventPaymentReceivedSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 598,
    "warning_line": "            amount=int(data['amount']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            initiator=to_canonical_address(data['initiator']),\n",
        "source_code_len": 244,
        "target_code": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            initiator=to_canonical_address(data['initiator']),\n",
        "target_code_len": 268,
        "diff_format": "@@ -596,4 +597,4 @@\n             token_network_identifier=to_canonical_address(data['token_network_identifier']),\n-            identifier=int(data['identifier']),\n-            amount=int(data['amount']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            amount=TokenAmount(int(data['amount'])),\n             initiator=to_canonical_address(data['initiator']),\n",
        "source_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=int(data['identifier']),\n            amount=int(data['amount']),\n            initiator=to_canonical_address(data['initiator']),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_network_identifier=to_canonical_address(data['token_network_identifier']),\n            identifier=PaymentID(int(data['identifier'])),\n            amount=TokenAmount(int(data['amount'])),\n            initiator=to_canonical_address(data['initiator']),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:645:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `payment_identifier` to call `EventInvalidReceivedTransferRefund.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `payment_identifier` to call `EventInvalidReceivedTransferRefund.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 645,
    "warning_line": "            payment_identifier=int(data['payment_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            payment_identifier=int(data['payment_identifier']),\n            reason=data['reason'],\n",
        "source_code_len": 123,
        "target_code": "        restored = cls(\n            payment_identifier=PaymentID(int(data['payment_identifier'])),\n            reason=data['reason'],\n",
        "target_code_len": 134,
        "diff_format": "@@ -644,3 +645,3 @@\n         restored = cls(\n-            payment_identifier=int(data['payment_identifier']),\n+            payment_identifier=PaymentID(int(data['payment_identifier'])),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            payment_identifier=int(data['payment_identifier']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            payment_identifier=PaymentID(int(data['payment_identifier'])),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:692:12 Incompatible parameter type [6]: Expected `SecretHash` for 1st parameter `secrethash` to call `EventInvalidReceivedLockExpired.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 1st parameter `secrethash` to call `EventInvalidReceivedLockExpired.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 692,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 141,
        "diff_format": "@@ -691,3 +692,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:739:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `payment_identifier` to call `EventInvalidReceivedLockedTransfer.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `payment_identifier` to call `EventInvalidReceivedLockedTransfer.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 739,
    "warning_line": "            payment_identifier=int(data['payment_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            payment_identifier=int(data['payment_identifier']),\n            reason=data['reason'],\n",
        "source_code_len": 123,
        "target_code": "        restored = cls(\n            payment_identifier=PaymentID(int(data['payment_identifier'])),\n            reason=data['reason'],\n",
        "target_code_len": 134,
        "diff_format": "@@ -738,3 +739,3 @@\n         restored = cls(\n-            payment_identifier=int(data['payment_identifier']),\n+            payment_identifier=PaymentID(int(data['payment_identifier'])),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            payment_identifier=int(data['payment_identifier']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            payment_identifier=PaymentID(int(data['payment_identifier'])),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:786:12 Incompatible parameter type [6]: Expected `SecretHash` for 1st parameter `secrethash` to call `EventInvalidReceivedUnlock.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 1st parameter `secrethash` to call `EventInvalidReceivedUnlock.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 786,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 141,
        "diff_format": "@@ -785,3 +786,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "e349c2aa42059e125df2aba9bcf1bfc9e6668277",
    "filename": "raiden/transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/events.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/events.py:825:12 Incompatible parameter type [6]: Expected `raiden.utils.typing.MessageID` for 3rd parameter `message_identifier` to call `SendMessageEvent.__init__` but got `int`.",
    "message": " Expected `raiden.utils.typing.MessageID` for 3rd parameter `message_identifier` to call `SendMessageEvent.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 825,
    "warning_line": "            message_identifier=int(data['message_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    InitiatorAddress,\n    Optional,\n",
        "source_code_len": 36,
        "target_code": "    InitiatorAddress,\n    MessageID,\n    Optional,\n",
        "target_code_len": 51,
        "diff_format": "@@ -21,2 +21,3 @@\n     InitiatorAddress,\n+    MessageID,\n     Optional,\n",
        "source_code_with_indent": "    InitiatorAddress,\n    Optional,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    InitiatorAddress,\n    MessageID,\n    Optional,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n        )\n\n        return restored\n",
        "source_code_len": 174,
        "target_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n        )\n\n        return restored\n",
        "target_code_len": 185,
        "diff_format": "@@ -824,5 +825,5 @@\n             channel_identifier=ChannelID(int(data['channel_identifier'])),\n-            message_identifier=int(data['message_identifier']),\n-        )\n-\n-        return restored\n+            message_identifier=MessageID(int(data['message_identifier'])),\n+        )\n+\n+        return restored\n",
        "source_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n        )\n\n        return restored\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n        )\n\n        return restored\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]