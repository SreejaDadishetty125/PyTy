[
  {
    "project": "microsoft/msticpy",
    "commit": "4c4b8cac378112117ab1d4622f5302097f1f9853",
    "filename": "msticpy/nbtools/ti_browser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/nbtools/ti_browser.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/nbtools/ti_browser.py:52:47 Incompatible parameter type [6]: Expected `List[str]` for 2nd parameter `severities` to call `get_ti_select_options` but got `Optional[List[str]]`.",
    "message": " Expected `List[str]` for 2nd parameter `severities` to call `get_ti_select_options` but got `Optional[List[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 52,
    "warning_line": "    opts = get_ti_select_options(ti_data=data, severities=severities)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_len": 68,
        "target_code": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_len": 65,
        "diff_format": "@@ -7,3 +7,3 @@\n import pprint\n-from typing import List, Optional\n+from typing import List, Union\n import pandas as pd\n",
        "source_code_with_indent": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_len": 110,
        "target_code": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_len": 118,
        "diff_format": "@@ -19,3 +19,3 @@\n def browse_results(\n-    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n+    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n ) -> SelectItem:\n",
        "source_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\ndef get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_len": 151,
        "diff_format": "@@ -56,3 +59,5 @@\n \n-def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n+def get_ti_select_options(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_len": 141,
        "target_code": "\ndef _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -73,3 +78,5 @@\n \n-def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n+def _create_ti_agg_list(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "4c4b8cac378112117ab1d4622f5302097f1f9853",
    "filename": "msticpy/nbtools/ti_browser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/nbtools/ti_browser.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/nbtools/ti_browser.py:57:49 Incompatible variable type [9]: severities is declared to have type `List[str]` but is used as type `None`.",
    "message": " severities is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 57,
    "warning_line": "def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_len": 68,
        "target_code": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_len": 65,
        "diff_format": "@@ -7,3 +7,3 @@\n import pprint\n-from typing import List, Optional\n+from typing import List, Union\n import pandas as pd\n",
        "source_code_with_indent": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_len": 110,
        "target_code": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_len": 118,
        "diff_format": "@@ -19,3 +19,3 @@\n def browse_results(\n-    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n+    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n ) -> SelectItem:\n",
        "source_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\ndef get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_len": 151,
        "diff_format": "@@ -56,3 +59,5 @@\n \n-def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n+def get_ti_select_options(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_len": 141,
        "target_code": "\ndef _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -73,3 +78,5 @@\n \n-def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n+def _create_ti_agg_list(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/msticpy",
    "commit": "4c4b8cac378112117ab1d4622f5302097f1f9853",
    "filename": "msticpy/nbtools/ti_browser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-msticpy/msticpy/nbtools/ti_browser.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "msticpy/nbtools/ti_browser.py:74:47 Incompatible variable type [9]: severities is declared to have type `List[str]` but is used as type `None`.",
    "message": " severities is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 74,
    "warning_line": "def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_len": 68,
        "target_code": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_len": 65,
        "diff_format": "@@ -7,3 +7,3 @@\n import pprint\n-from typing import List, Optional\n+from typing import List, Union\n import pandas as pd\n",
        "source_code_with_indent": "import pprint\nfrom typing import List, Optional\nimport pandas as pd\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import pprint\nfrom typing import List, Union\nimport pandas as pd\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_len": 110,
        "target_code": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_len": 118,
        "diff_format": "@@ -19,3 +19,3 @@\n def browse_results(\n-    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n+    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n ) -> SelectItem:\n",
        "source_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Optional[List[str]] = None, **kwargs\n) -> SelectItem:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def browse_results(\n    data: pd.DataFrame, severities: Union[List[str], str, None] = None, **kwargs\n) -> SelectItem:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_len": 127,
        "target_code": "\ndef get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_len": 151,
        "diff_format": "@@ -56,3 +59,5 @@\n \n-def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n+def get_ti_select_options(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def get_ti_select_options(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_ti_select_options(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Get SelectItem options for TI data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_len": 141,
        "target_code": "\ndef _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_len": 165,
        "diff_format": "@@ -73,3 +78,5 @@\n \n-def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n+def _create_ti_agg_list(\n+    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n+):\n     \"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def _create_ti_agg_list(ti_data: pd.DataFrame, severities: List[str] = None):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _create_ti_agg_list(\n    ti_data: pd.DataFrame, severities: Union[List[str], str, None] = None\n):\n    <IND>\"\"\"Aggregate ti results on IoC for multiple providers.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]