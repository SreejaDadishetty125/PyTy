[
  {
    "project": "allenai/allennlp",
    "commit": "7cbeb6c281b8f4c3ac6193a49dd003129ef18c92",
    "filename": "allennlp/modules/feedforward.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allennlp/allennlp/modules/feedforward.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "allennlp/modules/feedforward.py:86:33 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T2]]` for 2nd positional only parameter to call `zip.__new__` but got `Union[List[allennlp.nn.activations.Activation], allennlp.nn.activations.Activation]`.",
    "message": " Expected `typing.Iterable[Variable[_T2]]` for 2nd positional only parameter to call `zip.__new__` but got `Union[List[allennlp.nn.activations.Activation], allennlp.nn.activations.Activation]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "            self._linear_layers, self._activations, self._dropout",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            )\n        self._activations = activations\n        input_dims = [input_dim] + hidden_dims[:-1]\n",
        "source_code_len": 106,
        "target_code": "            )\n        self._activations = torch.nn.ModuleList(activations)\n        input_dims = [input_dim] + hidden_dims[:-1]\n",
        "target_code_len": 127,
        "diff_format": "@@ -64,3 +83,3 @@\n             )\n-        self._activations = activations\n+        self._activations = torch.nn.ModuleList(activations)\n         input_dims = [input_dim] + hidden_dims[:-1]\n",
        "source_code_with_indent": "            )\n        <DED>self._activations = activations\n        input_dims = [input_dim] + hidden_dims[:-1]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            )\n        <DED>self._activations = torch.nn.ModuleList(activations)\n        input_dims = [input_dim] + hidden_dims[:-1]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]