[
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:129:92 Incompatible variable type [9]: headers is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " headers is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 129,
    "warning_line": "        self, status_code: int, content_type: Optional[str], body: Union[str, bytes, None], headers: Dict = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(\n        self, status_code: int, content_type: Optional[str], body: Union[str, bytes, None], headers: Dict = None\n    ):\n",
        "source_code_len": 138,
        "target_code": "    def __init__(\n        self,\n        status_code: int,\n        content_type: Optional[str],\n        body: Union[str, bytes, None],\n        headers: Optional[Dict] = None,\n    ):\n",
        "target_code_len": 181,
        "diff_format": "@@ -128,3 +128,7 @@\n     def __init__(\n-        self, status_code: int, content_type: Optional[str], body: Union[str, bytes, None], headers: Dict = None\n+        self,\n+        status_code: int,\n+        content_type: Optional[str],\n+        body: Union[str, bytes, None],\n+        headers: Optional[Dict] = None,\n     ):\n",
        "source_code_with_indent": "    def __init__(\n        self, status_code: int, content_type: Optional[str], body: Union[str, bytes, None], headers: Dict = None\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(\n        self,\n        status_code: int,\n        content_type: Optional[str],\n        body: Union[str, bytes, None],\n        headers: Optional[Dict] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:170:43 Incompatible variable type [9]: route is declared to have type `Route` but is used as type `None`.",
    "message": " route is declared to have type `Route` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 170,
    "warning_line": "    def __init__(self, response: Response, route: Route = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:202:43 Incompatible variable type [9]: cors is declared to have type `CORSConfig` but is used as type `None`.",
    "message": " cors is declared to have type `CORSConfig` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 202,
    "warning_line": "    def build(self, event: BaseProxyEvent, cors: CORSConfig = None) -> Dict[str, Any]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def build(self, event: BaseProxyEvent, cors: CORSConfig = None) -> Dict[str, Any]:\n        \"\"\"Build the full response dict to be returned by the lambda\"\"\"\n",
        "source_code_len": 160,
        "target_code": "\n    def build(self, event: BaseProxyEvent, cors: Optional[CORSConfig] = None) -> Dict[str, Any]:\n        \"\"\"Build the full response dict to be returned by the lambda\"\"\"\n",
        "target_code_len": 170,
        "diff_format": "@@ -201,3 +205,3 @@\n \n-    def build(self, event: BaseProxyEvent, cors: CORSConfig = None) -> Dict[str, Any]:\n+    def build(self, event: BaseProxyEvent, cors: Optional[CORSConfig] = None) -> Dict[str, Any]:\n         \"\"\"Build the full response dict to be returned by the lambda\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def build(self, event: BaseProxyEvent, cors: CORSConfig = None) -> Dict[str, Any]:\n        <IND>\"\"\"Build the full response dict to be returned by the lambda\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def build(self, event: BaseProxyEvent, cors: Optional[CORSConfig] = None) -> Dict[str, Any]:\n        <IND>\"\"\"Build the full response dict to be returned by the lambda\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:253:8 Incompatible variable type [9]: cors is declared to have type `CORSConfig` but is used as type `None`.",
    "message": " cors is declared to have type `CORSConfig` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 253,
    "warning_line": "        cors: CORSConfig = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:273:12 Incompatible parameter type [6]: Expected `bool` for 1st parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "message": " Expected `bool` for 1st parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 273,
    "warning_line": "            choice=debug, env=os.getenv(constants.EVENT_HANDLER_DEBUG_ENV, \"false\")"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:276:29 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 276,
    "warning_line": "    def get(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:276:72 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 276,
    "warning_line": "    def get(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:301:30 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 301,
    "warning_line": "    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Post route decorator with POST `method`\n",
        "source_code_len": 153,
        "target_code": "\n    def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        \"\"\"Post route decorator with POST `method`\n",
        "target_code_len": 173,
        "diff_format": "@@ -300,3 +304,3 @@\n \n-    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n         \"\"\"Post route decorator with POST `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:301:73 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 301,
    "warning_line": "    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Post route decorator with POST `method`\n",
        "source_code_len": 153,
        "target_code": "\n    def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        \"\"\"Post route decorator with POST `method`\n",
        "target_code_len": 173,
        "diff_format": "@@ -300,3 +304,3 @@\n \n-    def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n         \"\"\"Post route decorator with POST `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def post(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def post(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:327:29 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 327,
    "warning_line": "    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Put route decorator with PUT `method`\n",
        "source_code_len": 150,
        "target_code": "\n    def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        \"\"\"Put route decorator with PUT `method`\n",
        "target_code_len": 170,
        "diff_format": "@@ -326,3 +330,3 @@\n \n-    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n         \"\"\"Put route decorator with PUT `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:327:72 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 327,
    "warning_line": "    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Put route decorator with PUT `method`\n",
        "source_code_len": 150,
        "target_code": "\n    def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        \"\"\"Put route decorator with PUT `method`\n",
        "target_code_len": 170,
        "diff_format": "@@ -326,3 +330,3 @@\n \n-    def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n         \"\"\"Put route decorator with PUT `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def put(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def put(self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:353:32 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 353,
    "warning_line": "    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Delete route decorator with DELETE `method`\n",
        "source_code_len": 159,
        "target_code": "\n    def delete(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        \"\"\"Delete route decorator with DELETE `method`\n",
        "target_code_len": 193,
        "diff_format": "@@ -352,3 +356,5 @@\n \n-    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def delete(\n+        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n+    ):\n         \"\"\"Delete route decorator with DELETE `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def delete(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:353:75 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 353,
    "warning_line": "    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Delete route decorator with DELETE `method`\n",
        "source_code_len": 159,
        "target_code": "\n    def delete(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        \"\"\"Delete route decorator with DELETE `method`\n",
        "target_code_len": 193,
        "diff_format": "@@ -352,3 +356,5 @@\n \n-    def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def delete(\n+        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n+    ):\n         \"\"\"Delete route decorator with DELETE `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def delete(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def delete(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:378:31 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 378,
    "warning_line": "    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Patch route decorator with PATCH `method`\n",
        "source_code_len": 156,
        "target_code": "\n    def patch(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        \"\"\"Patch route decorator with PATCH `method`\n",
        "target_code_len": 190,
        "diff_format": "@@ -377,3 +383,5 @@\n \n-    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def patch(\n+        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n+    ):\n         \"\"\"Patch route decorator with PATCH `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:378:74 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 378,
    "warning_line": "    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Patch route decorator with PATCH `method`\n",
        "source_code_len": 156,
        "target_code": "\n    def patch(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        \"\"\"Patch route decorator with PATCH `method`\n",
        "target_code_len": 190,
        "diff_format": "@@ -377,3 +383,5 @@\n \n-    def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def patch(\n+        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n+    ):\n         \"\"\"Patch route decorator with PATCH `method`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, rule: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(\n        self, rule: str, cors: Optional[bool] = None, compress: bool = False, cache_control: Optional[str] = None\n    ):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:406:44 Incompatible variable type [9]: cors is declared to have type `bool` but is used as type `None`.",
    "message": " cors is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 406,
    "warning_line": "    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/api_gateway.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/api_gateway.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/api_gateway.py:406:87 Incompatible variable type [9]: cache_control is declared to have type `str` but is used as type `None`.",
    "message": " cache_control is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 406,
    "warning_line": "    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_len": 174,
        "target_code": "\n    def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_len": 249,
        "diff_format": "@@ -405,3 +413,10 @@\n \n-    def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n+    def route(\n+        self,\n+        rule: str,\n+        method: str,\n+        cors: Optional[bool] = None,\n+        compress: bool = False,\n+        cache_control: Optional[str] = None,\n+    ):\n         \"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def route(self, rule: str, method: str, cors: bool = None, compress: bool = False, cache_control: str = None):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def route(\n        self,\n        rule: str,\n        method: str,\n        cors: Optional[bool] = None,\n        compress: bool = False,\n        cache_control: Optional[str] = None,\n    ):\n        <IND>\"\"\"Route decorator includes parameter `method`\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/event_handler/appsync.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/event_handler/appsync.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/event_handler/appsync.py:47:45 Incompatible variable type [9]: field_name is declared to have type `str` but is used as type `None`.",
    "message": " field_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 47,
    "warning_line": "    def resolver(self, type_name: str = \"*\", field_name: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import Any, Callable\n\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom typing import Any, Callable, Optional\n\n",
        "target_code_len": 59,
        "diff_format": "@@ -1,3 +1,3 @@\n import logging\n-from typing import Any, Callable\n+from typing import Any, Callable, Optional\n \n",
        "source_code_with_indent": "import logging\nfrom typing import Any, Callable\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom typing import Any, Callable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def resolver(self, type_name: str = \"*\", field_name: str = None):\n        \"\"\"Registers the resolver for field_name\n",
        "source_code_len": 120,
        "target_code": "\n    def resolver(self, type_name: str = \"*\", field_name: Optional[str] = None):\n        \"\"\"Registers the resolver for field_name\n",
        "target_code_len": 130,
        "diff_format": "@@ -46,3 +46,3 @@\n \n-    def resolver(self, type_name: str = \"*\", field_name: str = None):\n+    def resolver(self, type_name: str = \"*\", field_name: Optional[str] = None):\n         \"\"\"Registers the resolver for field_name\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def resolver(self, type_name: str = \"*\", field_name: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def resolver(self, type_name: str = \"*\", field_name: Optional[str] = None):\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/formatter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/formatter.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/formatter.py:63:8 Incompatible variable type [9]: datefmt is declared to have type `str` but is used as type `None`.",
    "message": " datefmt is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 63,
    "warning_line": "        datefmt: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: str = None,\n        log_record_order: List[str] = None,\n        utc: bool = False,\n",
        "source_code_len": 161,
        "target_code": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: Optional[str] = None,\n        log_record_order: Optional[List[str]] = None,\n        utc: bool = False,\n",
        "target_code_len": 181,
        "diff_format": "@@ -62,4 +62,4 @@\n         json_default: Optional[Callable[[Any], Any]] = None,\n-        datefmt: str = None,\n-        log_record_order: List[str] = None,\n+        datefmt: Optional[str] = None,\n+        log_record_order: Optional[List[str]] = None,\n         utc: bool = False,\n",
        "source_code_with_indent": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: str = None,\n        log_record_order: List[str] = None,\n        utc: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: Optional[str] = None,\n        log_record_order: Optional[List[str]] = None,\n        utc: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/formatter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/formatter.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/formatter.py:64:8 Incompatible variable type [9]: log_record_order is declared to have type `List[str]` but is used as type `None`.",
    "message": " log_record_order is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 64,
    "warning_line": "        log_record_order: List[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: str = None,\n        log_record_order: List[str] = None,\n        utc: bool = False,\n",
        "source_code_len": 161,
        "target_code": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: Optional[str] = None,\n        log_record_order: Optional[List[str]] = None,\n        utc: bool = False,\n",
        "target_code_len": 181,
        "diff_format": "@@ -62,4 +62,4 @@\n         json_default: Optional[Callable[[Any], Any]] = None,\n-        datefmt: str = None,\n-        log_record_order: List[str] = None,\n+        datefmt: Optional[str] = None,\n+        log_record_order: Optional[List[str]] = None,\n         utc: bool = False,\n",
        "source_code_with_indent": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: str = None,\n        log_record_order: List[str] = None,\n        utc: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        json_default: Optional[Callable[[Any], Any]] = None,\n        datefmt: Optional[str] = None,\n        log_record_order: Optional[List[str]] = None,\n        utc: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:170:8 Incompatible variable type [9]: service is declared to have type `str` but is used as type `None`.",
    "message": " service is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 170,
    "warning_line": "        service: str = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:171:8 Incompatible variable type [9]: level is declared to have type `Union[int, str]` but is used as type `None`.",
    "message": " level is declared to have type `Union[int, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 171,
    "warning_line": "        level: Union[str, int] = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:173:8 Incompatible variable type [9]: sampling_rate is declared to have type `float` but is used as type `None`.",
    "message": " sampling_rate is declared to have type `float` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 173,
    "warning_line": "        sampling_rate: float = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:174:8 Incompatible variable type [9]: stream is declared to have type `IO[str]` but is used as type `None`.",
    "message": " stream is declared to have type `IO[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 174,
    "warning_line": "        stream: IO[str] = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:264:8 Incompatible variable type [9]: lambda_handler is declared to have type `typing.Callable[[Dict[typing.Any, typing.Any], typing.Any], typing.Any]` but is used as type `None`.",
    "message": " lambda_handler is declared to have type `typing.Callable[[Dict[typing.Any, typing.Any], typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 264,
    "warning_line": "        lambda_handler: Callable[[Dict, Any], Any] = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:265:8 Incompatible variable type [9]: log_event is declared to have type `bool` but is used as type `None`.",
    "message": " log_event is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 265,
    "warning_line": "        log_event: bool = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:266:8 Incompatible variable type [9]: correlation_id_path is declared to have type `str` but is used as type `None`.",
    "message": " correlation_id_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 266,
    "warning_line": "        correlation_id_path: str = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:424:44 Incompatible variable type [9]: stream is declared to have type `IO[str]` but is used as type `None`.",
    "message": " stream is declared to have type `IO[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 424,
    "warning_line": "    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def set_package_logger(\n    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n):\n",
        "source_code_len": 131,
        "target_code": "def set_package_logger(\n    level: Union[str, int] = logging.DEBUG,\n    stream: Optional[IO[str]] = None,\n    formatter: Optional[logging.Formatter] = None,\n):\n",
        "target_code_len": 160,
        "diff_format": "@@ -423,3 +423,5 @@\n def set_package_logger(\n-    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n+    level: Union[str, int] = logging.DEBUG,\n+    stream: Optional[IO[str]] = None,\n+    formatter: Optional[logging.Formatter] = None,\n ):\n",
        "source_code_with_indent": "<DED><DED>def set_package_logger(\n    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def set_package_logger(\n    level: Union[str, int] = logging.DEBUG,\n    stream: Optional[IO[str]] = None,\n    formatter: Optional[logging.Formatter] = None,\n):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/logging/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/logging/logger.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/logging/logger.py:424:68 Incompatible variable type [9]: formatter is declared to have type `logging.Formatter` but is used as type `None`.",
    "message": " formatter is declared to have type `logging.Formatter` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 424,
    "warning_line": "    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def set_package_logger(\n    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n):\n",
        "source_code_len": 131,
        "target_code": "def set_package_logger(\n    level: Union[str, int] = logging.DEBUG,\n    stream: Optional[IO[str]] = None,\n    formatter: Optional[logging.Formatter] = None,\n):\n",
        "target_code_len": 160,
        "diff_format": "@@ -423,3 +423,5 @@\n def set_package_logger(\n-    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n+    level: Union[str, int] = logging.DEBUG,\n+    stream: Optional[IO[str]] = None,\n+    formatter: Optional[logging.Formatter] = None,\n ):\n",
        "source_code_with_indent": "<DED><DED>def set_package_logger(\n    level: Union[str, int] = logging.DEBUG, stream: IO[str] = None, formatter: logging.Formatter = None\n):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def set_package_logger(\n    level: Union[str, int] = logging.DEBUG,\n    stream: Optional[IO[str]] = None,\n    formatter: Optional[logging.Formatter] = None,\n):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:79:8 Incompatible variable type [9]: metric_set is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " metric_set is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 79,
    "warning_line": "        metric_set: Dict[str, Any] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_len": 255,
        "diff_format": "@@ -78,7 +78,7 @@\n         self,\n-        metric_set: Dict[str, Any] = None,\n-        dimension_set: Dict = None,\n-        namespace: str = None,\n-        metadata_set: Dict[str, Any] = None,\n-        service: str = None,\n+        metric_set: Optional[Dict[str, Any]] = None,\n+        dimension_set: Optional[Dict] = None,\n+        namespace: Optional[str] = None,\n+        metadata_set: Optional[Dict[str, Any]] = None,\n+        service: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:80:8 Incompatible variable type [9]: dimension_set is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " dimension_set is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 80,
    "warning_line": "        dimension_set: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_len": 255,
        "diff_format": "@@ -78,7 +78,7 @@\n         self,\n-        metric_set: Dict[str, Any] = None,\n-        dimension_set: Dict = None,\n-        namespace: str = None,\n-        metadata_set: Dict[str, Any] = None,\n-        service: str = None,\n+        metric_set: Optional[Dict[str, Any]] = None,\n+        dimension_set: Optional[Dict] = None,\n+        namespace: Optional[str] = None,\n+        metadata_set: Optional[Dict[str, Any]] = None,\n+        service: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:81:8 Incompatible variable type [9]: namespace is declared to have type `str` but is used as type `None`.",
    "message": " namespace is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 81,
    "warning_line": "        namespace: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_len": 255,
        "diff_format": "@@ -78,7 +78,7 @@\n         self,\n-        metric_set: Dict[str, Any] = None,\n-        dimension_set: Dict = None,\n-        namespace: str = None,\n-        metadata_set: Dict[str, Any] = None,\n-        service: str = None,\n+        metric_set: Optional[Dict[str, Any]] = None,\n+        dimension_set: Optional[Dict] = None,\n+        namespace: Optional[str] = None,\n+        metadata_set: Optional[Dict[str, Any]] = None,\n+        service: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:82:8 Incompatible variable type [9]: metadata_set is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "message": " metadata_set is declared to have type `Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 82,
    "warning_line": "        metadata_set: Dict[str, Any] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_len": 255,
        "diff_format": "@@ -78,7 +78,7 @@\n         self,\n-        metric_set: Dict[str, Any] = None,\n-        dimension_set: Dict = None,\n-        namespace: str = None,\n-        metadata_set: Dict[str, Any] = None,\n-        service: str = None,\n+        metric_set: Optional[Dict[str, Any]] = None,\n+        dimension_set: Optional[Dict] = None,\n+        namespace: Optional[str] = None,\n+        metadata_set: Optional[Dict[str, Any]] = None,\n+        service: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:83:8 Incompatible variable type [9]: service is declared to have type `str` but is used as type `None`.",
    "message": " service is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "        service: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_len": 255,
        "diff_format": "@@ -78,7 +78,7 @@\n         self,\n-        metric_set: Dict[str, Any] = None,\n-        dimension_set: Dict = None,\n-        namespace: str = None,\n-        metadata_set: Dict[str, Any] = None,\n-        service: str = None,\n+        metric_set: Optional[Dict[str, Any]] = None,\n+        dimension_set: Optional[Dict] = None,\n+        namespace: Optional[str] = None,\n+        metadata_set: Optional[Dict[str, Any]] = None,\n+        service: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        metric_set: Dict[str, Any] = None,\n        dimension_set: Dict = None,\n        namespace: str = None,\n        metadata_set: Dict[str, Any] = None,\n        service: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        metric_set: Optional[Dict[str, Any]] = None,\n        dimension_set: Optional[Dict] = None,\n        namespace: Optional[str] = None,\n        metadata_set: Optional[Dict[str, Any]] = None,\n        service: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:139:35 Incompatible variable type [9]: metrics is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " metrics is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 139,
    "warning_line": "    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "source_code_len": 163,
        "target_code": "\n    def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "target_code_len": 207,
        "diff_format": "@@ -138,3 +138,5 @@\n \n-    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n+    def serialize_metric_set(\n+        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n+    ) -> Dict:\n         \"\"\"Serializes metric and dimensions set\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:139:57 Incompatible variable type [9]: dimensions is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " dimensions is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 139,
    "warning_line": "    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "source_code_len": 163,
        "target_code": "\n    def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "target_code_len": 207,
        "diff_format": "@@ -138,3 +138,5 @@\n \n-    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n+    def serialize_metric_set(\n+        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n+    ) -> Dict:\n         \"\"\"Serializes metric and dimensions set\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/base.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/base.py:139:82 Incompatible variable type [9]: metadata is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " metadata is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 139,
    "warning_line": "    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_len": 65,
        "target_code": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -7,3 +7,3 @@\n from enum import Enum\n-from typing import Any, Dict, List, Union\n+from typing import Any, Dict, List, Optional, Union\n \n",
        "source_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "source_code_len": 163,
        "target_code": "\n    def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        \"\"\"Serializes metric and dimensions set\n",
        "target_code_len": 207,
        "diff_format": "@@ -138,3 +138,5 @@\n \n-    def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n+    def serialize_metric_set(\n+        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n+    ) -> Dict:\n         \"\"\"Serializes metric and dimensions set\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def serialize_metric_set(self, metrics: Dict = None, dimensions: Dict = None, metadata: Dict = None) -> Dict:\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def serialize_metric_set(\n        self, metrics: Optional[Dict] = None, dimensions: Optional[Dict] = None, metadata: Optional[Dict] = None\n    ) -> Dict:\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metric.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metric.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metric.py:64:61 Incompatible variable type [9]: namespace is declared to have type `str` but is used as type `None`.",
    "message": " namespace is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 64,
    "warning_line": "def single_metric(name: str, unit: MetricUnit, value: float, namespace: str = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metrics.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metrics.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metrics.py:74:23 Incompatible variable type [9]: service is declared to have type `str` but is used as type `None`.",
    "message": " service is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 74,
    "warning_line": "    def __init__(self, service: str = None, namespace: str = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metrics.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metrics.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metrics.py:74:44 Incompatible variable type [9]: namespace is declared to have type `str` but is used as type `None`.",
    "message": " namespace is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 74,
    "warning_line": "    def __init__(self, service: str = None, namespace: str = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metrics.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metrics.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metrics.py:128:8 Incompatible variable type [9]: lambda_handler is declared to have type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "message": " lambda_handler is declared to have type `typing.Callable[[typing.Any, typing.Any], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 128,
    "warning_line": "        lambda_handler: Callable[[Any, Any], Any] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        lambda_handler: Callable[[Any, Any], Any] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Dict[str, str] = None,\n    ):\n",
        "source_code_len": 225,
        "target_code": "        self,\n        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Optional[Dict[str, str]] = None,\n    ):\n",
        "target_code_len": 245,
        "diff_format": "@@ -127,6 +127,6 @@\n         self,\n-        lambda_handler: Callable[[Any, Any], Any] = None,\n+        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n         capture_cold_start_metric: bool = False,\n         raise_on_empty_metrics: bool = False,\n-        default_dimensions: Dict[str, str] = None,\n+        default_dimensions: Optional[Dict[str, str]] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        lambda_handler: Callable[[Any, Any], Any] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Dict[str, str] = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Optional[Dict[str, str]] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metrics.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metrics.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metrics.py:131:8 Incompatible variable type [9]: default_dimensions is declared to have type `Dict[str, str]` but is used as type `None`.",
    "message": " default_dimensions is declared to have type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 131,
    "warning_line": "        default_dimensions: Dict[str, str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        lambda_handler: Callable[[Any, Any], Any] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Dict[str, str] = None,\n    ):\n",
        "source_code_len": 225,
        "target_code": "        self,\n        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Optional[Dict[str, str]] = None,\n    ):\n",
        "target_code_len": 245,
        "diff_format": "@@ -127,6 +127,6 @@\n         self,\n-        lambda_handler: Callable[[Any, Any], Any] = None,\n+        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n         capture_cold_start_metric: bool = False,\n         raise_on_empty_metrics: bool = False,\n-        default_dimensions: Dict[str, str] = None,\n+        default_dimensions: Optional[Dict[str, str]] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        lambda_handler: Callable[[Any, Any], Any] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Dict[str, str] = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        lambda_handler: Optional[Callable[[Any, Any], Any]] = None,\n        capture_cold_start_metric: bool = False,\n        raise_on_empty_metrics: bool = False,\n        default_dimensions: Optional[Dict[str, str]] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/metrics/metrics.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/metrics/metrics.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/metrics/metrics.py:210:81 Incompatible parameter type [6]: Expected `str` for 4th parameter `namespace` to call `single_metric` but got `Optional[str]`.",
    "message": " Expected `str` for 4th parameter `namespace` to call `single_metric` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 210,
    "warning_line": "            with single_metric(name=\"ColdStart\", unit=MetricUnit.Count, value=1, namespace=self.namespace) as metric:"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/middleware_factory/factory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/middleware_factory/factory.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/middleware_factory/factory.py:15:29 Incompatible variable type [9]: decorator is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " decorator is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 15,
    "warning_line": "def lambda_handler_decorator(decorator: Callable = None, trace_execution: bool = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/middleware_factory/factory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/middleware_factory/factory.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/middleware_factory/factory.py:15:57 Incompatible variable type [9]: trace_execution is declared to have type `bool` but is used as type `None`.",
    "message": " trace_execution is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 15,
    "warning_line": "def lambda_handler_decorator(decorator: Callable = None, trace_execution: bool = None):"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/middleware_factory/factory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/middleware_factory/factory.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/middleware_factory/factory.py:113:24 Incompatible variable type [9]: func is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " func is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 113,
    "warning_line": "    def final_decorator(func: Callable = None, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Callable\n\n",
        "source_code_len": 39,
        "target_code": "import os\nfrom typing import Callable, Optional\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -4,3 +4,3 @@\n import os\n-from typing import Callable\n+from typing import Callable, Optional\n \n",
        "source_code_with_indent": "import os\nfrom typing import Callable\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Callable, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @functools.wraps(decorator)\n    def final_decorator(func: Callable = None, **kwargs):\n        # If called with kwargs return new func with kwargs\n",
        "source_code_len": 150,
        "target_code": "    @functools.wraps(decorator)\n    def final_decorator(func: Optional[Callable] = None, **kwargs):\n        # If called with kwargs return new func with kwargs\n",
        "target_code_len": 160,
        "diff_format": "@@ -112,3 +112,3 @@\n     @functools.wraps(decorator)\n-    def final_decorator(func: Callable = None, **kwargs):\n+    def final_decorator(func: Optional[Callable] = None, **kwargs):\n         # If called with kwargs return new func with kwargs\n",
        "source_code_with_indent": "    @functools.wraps(decorator)\n    def final_decorator(func: Callable = None, **kwargs):\n        # If called with kwargs return new func with kwargs\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    @functools.wraps(decorator)\n    def final_decorator(func: Optional[Callable] = None, **kwargs):\n        # If called with kwargs return new func with kwargs\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/shared/functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/shared/functions.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/shared/functions.py:5:44 Incompatible variable type [9]: choice is declared to have type `bool` but is used as type `None`.",
    "message": " choice is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 5,
    "warning_line": "def resolve_truthy_env_var_choice(env: Any, choice: bool = None) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef resolve_truthy_env_var_choice(env: Any, choice: bool = None) -> bool:\n    \"\"\"Pick explicit choice over truthy env value, if available, otherwise return truthy env value\n",
        "source_code_len": 174,
        "target_code": "\ndef resolve_truthy_env_var_choice(env: str, choice: Optional[bool] = None) -> bool:\n    \"\"\"Pick explicit choice over truthy env value, if available, otherwise return truthy env value\n",
        "target_code_len": 184,
        "diff_format": "@@ -4,3 +4,3 @@\n \n-def resolve_truthy_env_var_choice(env: Any, choice: bool = None) -> bool:\n+def resolve_truthy_env_var_choice(env: str, choice: Optional[bool] = None) -> bool:\n     \"\"\"Pick explicit choice over truthy env value, if available, otherwise return truthy env value\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef resolve_truthy_env_var_choice(env: Any, choice: bool = None) -> bool:\n    <IND>",
        "target_code_with_indent": "\ndef resolve_truthy_env_var_choice(env: str, choice: Optional[bool] = None) -> bool:\n    <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/base.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/base.py:84:20 Incompatible variable type [9]: end_time is declared to have type `int` but is used as type `None`.",
    "message": " end_time is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 84,
    "warning_line": "    def close(self, end_time: int = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import contextmanager\nfrom typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Set, Union\n\n",
        "source_code_len": 127,
        "target_code": "from contextlib import contextmanager\nfrom typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Optional, Set, Union\n\n",
        "target_code_len": 137,
        "diff_format": "@@ -4,3 +4,3 @@\n from contextlib import contextmanager\n-from typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Set, Union\n+from typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Optional, Set, Union\n \n",
        "source_code_with_indent": "from contextlib import contextmanager\nfrom typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Set, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import contextmanager\nfrom typing import Any, AsyncContextManager, ContextManager, List, NoReturn, Optional, Set, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def close(self, end_time: int = None):\n        \"\"\"Close the trace entity by setting `end_time`\n",
        "source_code_len": 123,
        "target_code": "    @abc.abstractmethod\n    def close(self, end_time: Optional[int] = None):\n        \"\"\"Close the trace entity by setting `end_time`\n",
        "target_code_len": 133,
        "diff_format": "@@ -83,3 +83,3 @@\n     @abc.abstractmethod\n-    def close(self, end_time: int = None):\n+    def close(self, end_time: Optional[int] = None):\n         \"\"\"Close the trace entity by setting `end_time`\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    @abc.abstractmethod\n    def close(self, end_time: int = None):\n        <IND>",
        "target_code_with_indent": "    @abc.abstractmethod\n    def close(self, end_time: Optional[int] = None):\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:149:8 Incompatible variable type [9]: service is declared to have type `str` but is used as type `None`.",
    "message": " service is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 149,
    "warning_line": "        service: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:150:8 Incompatible variable type [9]: disabled is declared to have type `bool` but is used as type `None`.",
    "message": " disabled is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 150,
    "warning_line": "        disabled: bool = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:151:8 Incompatible variable type [9]: auto_patch is declared to have type `bool` but is used as type `None`.",
    "message": " auto_patch is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 151,
    "warning_line": "        auto_patch: bool = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:153:8 Incompatible variable type [9]: provider is declared to have type `BaseProvider` but is used as type `None`.",
    "message": " provider is declared to have type `BaseProvider` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 153,
    "warning_line": "        provider: BaseProvider = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:156:71 Incompatible parameter type [6]: Expected `Union[List[typing.Any], typing.Tuple[typing.Any, ...]]` for 4th parameter `patch_modules` to call `Tracer._Tracer__build_config` but got `Optional[Tuple[str]]`.",
    "message": " Expected `Union[List[typing.Any], typing.Tuple[typing.Any, ...]]` for 4th parameter `patch_modules` to call `Tracer._Tracer__build_config` but got `Optional[Tuple[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 156,
    "warning_line": "            service=service, disabled=disabled, auto_patch=auto_patch, patch_modules=patch_modules, provider=provider",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:167:23 Incompatible parameter type [6]: Expected `Tuple[str]` for 1st parameter `modules` to call `Tracer.patch` but got `Optional[Tuple[str]]`.",
    "message": " Expected `Tuple[str]` for 1st parameter `modules` to call `Tracer.patch` but got `Optional[Tuple[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 167,
    "warning_line": "            self.patch(modules=patch_modules)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:198:49 Incompatible variable type [9]: namespace is declared to have type `str` but is used as type `None`.",
    "message": " namespace is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 198,
    "warning_line": "    def put_metadata(self, key: str, value: Any, namespace: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def put_metadata(self, key: str, value: Any, namespace: str = None):\n        \"\"\"Adds metadata to existing segment or subsegment\n",
        "source_code_len": 133,
        "target_code": "\n    def put_metadata(self, key: str, value: Any, namespace: Optional[str] = None):\n        \"\"\"Adds metadata to existing segment or subsegment\n",
        "target_code_len": 143,
        "diff_format": "@@ -197,3 +197,3 @@\n \n-    def put_metadata(self, key: str, value: Any, namespace: str = None):\n+    def put_metadata(self, key: str, value: Any, namespace: Optional[str] = None):\n         \"\"\"Adds metadata to existing segment or subsegment\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def put_metadata(self, key: str, value: Any, namespace: str = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def put_metadata(self, key: str, value: Any, namespace: Optional[str] = None):\n        <IND>"
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:226:20 Incompatible variable type [9]: Unable to unpack `None`, expected a tuple.",
    "message": " Unable to unpack `None`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 226,
    "warning_line": "    def patch(self, modules: Tuple[str] = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:247:8 Incompatible variable type [9]: lambda_handler is declared to have type `Union[typing.Callable[[Dict[typing.Any, typing.Any], typing.Any], typing.Any], typing.Callable[[Dict[typing.Any, typing.Any], typing.Any, Optional[Dict[typing.Any, typing.Any]]], typing.Any]]` but is used as type `None`.",
    "message": " lambda_handler is declared to have type `Union[typing.Callable[[Dict[typing.Any, typing.Any], typing.Any], typing.Any], typing.Callable[[Dict[typing.Any, typing.Any], typing.Any, Optional[Dict[typing.Any, typing.Any]]], typing.Any]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 247,
    "warning_line": "        lambda_handler: Union[Callable[[Dict, Any], Any], Callable[[Dict, Any, Optional[Dict]], Any]] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        lambda_handler: Union[Callable[[Dict, Any], Any], Callable[[Dict, Any, Optional[Dict]], Any]] = None,\n        capture_response: Optional[bool] = None,\n",
        "source_code_len": 173,
        "target_code": "        self,\n        lambda_handler: Union[Callable[[Dict, Any], Any], Optional[Callable[[Dict, Any, Optional[Dict]], Any]]] = None,\n        capture_response: Optional[bool] = None,\n",
        "target_code_len": 183,
        "diff_format": "@@ -246,3 +246,3 @@\n         self,\n-        lambda_handler: Union[Callable[[Dict, Any], Any], Callable[[Dict, Any, Optional[Dict]], Any]] = None,\n+        lambda_handler: Union[Callable[[Dict, Any], Any], Optional[Callable[[Dict, Any, Optional[Dict]], Any]]] = None,\n         capture_response: Optional[bool] = None,\n",
        "source_code_with_indent": "        self,\n        lambda_handler: Union[Callable[[Dict, Any], Any], Callable[[Dict, Any, Optional[Dict]], Any]] = None,\n        capture_response: Optional[bool] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        lambda_handler: Union[Callable[[Dict, Any], Any], Optional[Callable[[Dict, Any, Optional[Dict]], Any]]] = None,\n        capture_response: Optional[bool] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:296:74 Incompatible parameter type [6]: Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "message": " Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 296,
    "warning_line": "            env=os.getenv(constants.TRACER_CAPTURE_RESPONSE_ENV, \"true\"), choice=capture_response"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:299:71 Incompatible parameter type [6]: Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "message": " Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 299,
    "warning_line": "            env=os.getenv(constants.TRACER_CAPTURE_ERROR_ENV, \"true\"), choice=capture_error"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:333:14 Incompatible variable type [9]: method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 333,
    "warning_line": "        self, method: Callable = None, capture_response: Optional[bool] = None, capture_error: Optional[bool] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def capture_method(\n        self, method: Callable = None, capture_response: Optional[bool] = None, capture_error: Optional[bool] = None\n    ):\n",
        "source_code_len": 148,
        "target_code": "    def capture_method(\n        self,\n        method: Optional[Callable] = None,\n        capture_response: Optional[bool] = None,\n        capture_error: Optional[bool] = None,\n    ):\n",
        "target_code_len": 183,
        "diff_format": "@@ -332,3 +332,6 @@\n     def capture_method(\n-        self, method: Callable = None, capture_response: Optional[bool] = None, capture_error: Optional[bool] = None\n+        self,\n+        method: Optional[Callable] = None,\n+        capture_response: Optional[bool] = None,\n+        capture_error: Optional[bool] = None,\n     ):\n",
        "source_code_with_indent": "    <DED>def capture_method(\n        self, method: Callable = None, capture_response: Optional[bool] = None, capture_error: Optional[bool] = None\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def capture_method(\n        self,\n        method: Optional[Callable] = None,\n        capture_response: Optional[bool] = None,\n        capture_error: Optional[bool] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:494:74 Incompatible parameter type [6]: Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "message": " Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 494,
    "warning_line": "            env=os.getenv(constants.TRACER_CAPTURE_RESPONSE_ENV, \"true\"), choice=capture_response"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:497:71 Incompatible parameter type [6]: Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "message": " Expected `bool` for 2nd parameter `choice` to call `resolve_truthy_env_var_choice` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 497,
    "warning_line": "            env=os.getenv(constants.TRACER_CAPTURE_ERROR_ENV, \"true\"), choice=capture_error"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:523:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 523,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_len": 98,
        "target_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_len": 108,
        "diff_format": "@@ -522,3 +525,3 @@\n         capture_error: Optional[Union[bool, str]] = None,\n-        method_name: str = None,\n+        method_name: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:550:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 550,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_len": 98,
        "target_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_len": 108,
        "diff_format": "@@ -549,3 +552,3 @@\n         capture_error: Optional[Union[bool, str]] = None,\n-        method_name: str = None,\n+        method_name: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:577:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 577,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_len": 98,
        "target_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_len": 108,
        "diff_format": "@@ -576,3 +579,3 @@\n         capture_error: Optional[Union[bool, str]] = None,\n-        method_name: str = None,\n+        method_name: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:605:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 605,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_len": 98,
        "target_code": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_len": 108,
        "diff_format": "@@ -604,3 +607,3 @@\n         capture_error: Optional[Union[bool, str]] = None,\n-        method_name: str = None,\n+        method_name: Optional[str] = None,\n     ):\n",
        "source_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: str = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        capture_error: Optional[Union[bool, str]] = None,\n        method_name: Optional[str] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:632:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 632,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method_name: str = None,\n        data: Any = None,\n        subsegment: BaseSegment = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 174,
        "target_code": "        self,\n        method_name: Optional[str] = None,\n        data: Optional[Any] = None,\n        subsegment: Optional[BaseSegment] = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 204,
        "diff_format": "@@ -631,5 +634,5 @@\n         self,\n-        method_name: str = None,\n-        data: Any = None,\n-        subsegment: BaseSegment = None,\n+        method_name: Optional[str] = None,\n+        data: Optional[Any] = None,\n+        subsegment: Optional[BaseSegment] = None,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method_name: str = None,\n        data: Any = None,\n        subsegment: BaseSegment = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method_name: Optional[str] = None,\n        data: Optional[Any] = None,\n        subsegment: Optional[BaseSegment] = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:634:8 Incompatible variable type [9]: subsegment is declared to have type `BaseSegment` but is used as type `None`.",
    "message": " subsegment is declared to have type `BaseSegment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 634,
    "warning_line": "        subsegment: BaseSegment = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method_name: str = None,\n        data: Any = None,\n        subsegment: BaseSegment = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 174,
        "target_code": "        self,\n        method_name: Optional[str] = None,\n        data: Optional[Any] = None,\n        subsegment: Optional[BaseSegment] = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 204,
        "diff_format": "@@ -631,5 +634,5 @@\n         self,\n-        method_name: str = None,\n-        data: Any = None,\n-        subsegment: BaseSegment = None,\n+        method_name: Optional[str] = None,\n+        data: Optional[Any] = None,\n+        subsegment: Optional[BaseSegment] = None,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method_name: str = None,\n        data: Any = None,\n        subsegment: BaseSegment = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method_name: Optional[str] = None,\n        data: Optional[Any] = None,\n        subsegment: Optional[BaseSegment] = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:717:8 Incompatible variable type [9]: service is declared to have type `str` but is used as type `None`.",
    "message": " service is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 717,
    "warning_line": "        service: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:718:8 Incompatible variable type [9]: disabled is declared to have type `bool` but is used as type `None`.",
    "message": " disabled is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 718,
    "warning_line": "        disabled: bool = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:719:8 Incompatible variable type [9]: auto_patch is declared to have type `bool` but is used as type `None`.",
    "message": " auto_patch is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 719,
    "warning_line": "        auto_patch: bool = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:720:8 Incompatible variable type [9]: patch_modules is declared to have type `Union[List[typing.Any], typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "message": " patch_modules is declared to have type `Union[List[typing.Any], typing.Tuple[typing.Any, ...]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 720,
    "warning_line": "        patch_modules: Union[List, Tuple] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:721:8 Incompatible variable type [9]: provider is declared to have type `BaseProvider` but is used as type `None`.",
    "message": " provider is declared to have type `BaseProvider` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 721,
    "warning_line": "        provider: BaseProvider = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_len": 80,
        "target_code": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_len": 77,
        "diff_format": "@@ -7,3 +7,3 @@\n import os\n-from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, Optional, Sequence, Union\n \n",
        "source_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, List, Optional, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Any, Callable, Dict, Optional, Sequence, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 205,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -148,7 +148,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Optional[Tuple[str]] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Optional[Tuple[str]] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def patch(self, modules: Tuple[str] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "source_code_len": 96,
        "target_code": "\n    def patch(self, modules: Optional[Sequence[str]] = None):\n        \"\"\"Patch modules for instrumentation.\n",
        "target_code_len": 109,
        "diff_format": "@@ -225,3 +225,3 @@\n \n-    def patch(self, modules: Tuple[str] = None):\n+    def patch(self, modules: Optional[Sequence[str]] = None):\n         \"\"\"Patch modules for instrumentation.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def patch(self, modules: Tuple[str] = None):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def patch(self, modules: Optional[Sequence[str]] = None):\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_len": 203,
        "target_code": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_len": 248,
        "diff_format": "@@ -716,7 +719,7 @@\n         self,\n-        service: str = None,\n-        disabled: bool = None,\n-        auto_patch: bool = None,\n-        patch_modules: Union[List, Tuple] = None,\n-        provider: BaseProvider = None,\n+        service: Optional[str] = None,\n+        disabled: Optional[bool] = None,\n+        auto_patch: Optional[bool] = None,\n+        patch_modules: Optional[Sequence[str]] = None,\n+        provider: Optional[BaseProvider] = None,\n     ):\n",
        "source_code_with_indent": "        self,\n        service: str = None,\n        disabled: bool = None,\n        auto_patch: bool = None,\n        patch_modules: Union[List, Tuple] = None,\n        provider: BaseProvider = None,\n    ):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        service: Optional[str] = None,\n        disabled: Optional[bool] = None,\n        auto_patch: Optional[bool] = None,\n        patch_modules: Optional[Sequence[str]] = None,\n        provider: Optional[BaseProvider] = None,\n    ):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/idempotency/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/idempotency/config.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/idempotency/config.py:9:8 Incompatible variable type [9]: jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 9,
    "warning_line": "        jmespath_options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import Dict\n\n",
        "source_code_len": 25,
        "target_code": "from typing import Dict, Optional\n\n",
        "target_code_len": 35,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import Dict\n+from typing import Dict, Optional\n \n",
        "source_code_with_indent": "from typing import Dict\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import Dict, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        payload_validation_jmespath: str = \"\",\n        jmespath_options: Dict = None,\n        raise_on_no_idempotency_key: bool = False,\n",
        "source_code_len": 137,
        "target_code": "        payload_validation_jmespath: str = \"\",\n        jmespath_options: Optional[Dict] = None,\n        raise_on_no_idempotency_key: bool = False,\n",
        "target_code_len": 147,
        "diff_format": "@@ -8,3 +8,3 @@\n         payload_validation_jmespath: str = \"\",\n-        jmespath_options: Dict = None,\n+        jmespath_options: Optional[Dict] = None,\n         raise_on_no_idempotency_key: bool = False,\n",
        "source_code_with_indent": "        payload_validation_jmespath: str = \"\",\n        jmespath_options: Dict = None,\n        raise_on_no_idempotency_key: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        payload_validation_jmespath: str = \"\",\n        jmespath_options: Optional[Dict] = None,\n        raise_on_no_idempotency_key: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/idempotency/idempotency.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/idempotency/idempotency.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/idempotency/idempotency.py:34:4 Incompatible variable type [9]: config is declared to have type `IdempotencyConfig` but is used as type `None`.",
    "message": " config is declared to have type `IdempotencyConfig` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 34,
    "warning_line": "    config: IdempotencyConfig = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    persistence_store: BasePersistenceLayer,\n    config: IdempotencyConfig = None,\n) -> Any:\n",
        "source_code_len": 93,
        "target_code": "    persistence_store: BasePersistenceLayer,\n    config: Optional[IdempotencyConfig] = None,\n) -> Any:\n",
        "target_code_len": 103,
        "diff_format": "@@ -33,3 +33,3 @@\n     persistence_store: BasePersistenceLayer,\n-    config: IdempotencyConfig = None,\n+    config: Optional[IdempotencyConfig] = None,\n ) -> Any:\n",
        "source_code_with_indent": "    persistence_store: BasePersistenceLayer,\n    config: IdempotencyConfig = None,\n) -> Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    persistence_store: BasePersistenceLayer,\n    config: Optional[IdempotencyConfig] = None,\n) -> Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/idempotency/persistence/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/idempotency/persistence/base.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/idempotency/persistence/base.py:42:8 Incompatible variable type [9]: expiry_timestamp is declared to have type `int` but is used as type `None`.",
    "message": " expiry_timestamp is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 42,
    "warning_line": "        expiry_timestamp: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        status: str = \"\",\n        expiry_timestamp: int = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: str = None,\n    ) -> None:\n",
        "source_code_len": 156,
        "target_code": "        status: str = \"\",\n        expiry_timestamp: Optional[int] = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: Optional[str] = None,\n    ) -> None:\n",
        "target_code_len": 176,
        "diff_format": "@@ -41,5 +41,5 @@\n         status: str = \"\",\n-        expiry_timestamp: int = None,\n+        expiry_timestamp: Optional[int] = None,\n         response_data: Optional[str] = \"\",\n-        payload_hash: str = None,\n+        payload_hash: Optional[str] = None,\n     ) -> None:\n",
        "source_code_with_indent": "        status: str = \"\",\n        expiry_timestamp: int = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: str = None,\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        status: str = \"\",\n        expiry_timestamp: Optional[int] = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: Optional[str] = None,\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/idempotency/persistence/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/idempotency/persistence/base.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/idempotency/persistence/base.py:44:8 Incompatible variable type [9]: payload_hash is declared to have type `str` but is used as type `None`.",
    "message": " payload_hash is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 44,
    "warning_line": "        payload_hash: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        status: str = \"\",\n        expiry_timestamp: int = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: str = None,\n    ) -> None:\n",
        "source_code_len": 156,
        "target_code": "        status: str = \"\",\n        expiry_timestamp: Optional[int] = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: Optional[str] = None,\n    ) -> None:\n",
        "target_code_len": 176,
        "diff_format": "@@ -41,5 +41,5 @@\n         status: str = \"\",\n-        expiry_timestamp: int = None,\n+        expiry_timestamp: Optional[int] = None,\n         response_data: Optional[str] = \"\",\n-        payload_hash: str = None,\n+        payload_hash: Optional[str] = None,\n     ) -> None:\n",
        "source_code_with_indent": "        status: str = \"\",\n        expiry_timestamp: int = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: str = None,\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        status: str = \"\",\n        expiry_timestamp: Optional[int] = None,\n        response_data: Optional[str] = \"\",\n        payload_hash: Optional[str] = None,\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:15:4 Incompatible variable type [9]: inbound_schema is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " inbound_schema is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 15,
    "warning_line": "    inbound_schema: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_len": 245,
        "target_code": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_len": 285,
        "diff_format": "@@ -14,8 +14,8 @@\n     context: Any,\n-    inbound_schema: Dict = None,\n+    inbound_schema: Optional[Dict] = None,\n     inbound_formats: Optional[Dict] = None,\n-    outbound_schema: Dict = None,\n+    outbound_schema: Optional[Dict] = None,\n     outbound_formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ) -> Any:\n",
        "source_code_with_indent": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:17:4 Incompatible variable type [9]: outbound_schema is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " outbound_schema is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 17,
    "warning_line": "    outbound_schema: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_len": 245,
        "target_code": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_len": 285,
        "diff_format": "@@ -14,8 +14,8 @@\n     context: Any,\n-    inbound_schema: Dict = None,\n+    inbound_schema: Optional[Dict] = None,\n     inbound_formats: Optional[Dict] = None,\n-    outbound_schema: Dict = None,\n+    outbound_schema: Optional[Dict] = None,\n     outbound_formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ) -> Any:\n",
        "source_code_with_indent": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:19:4 Incompatible variable type [9]: envelope is declared to have type `str` but is used as type `None`.",
    "message": " envelope is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 19,
    "warning_line": "    envelope: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_len": 245,
        "target_code": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_len": 285,
        "diff_format": "@@ -14,8 +14,8 @@\n     context: Any,\n-    inbound_schema: Dict = None,\n+    inbound_schema: Optional[Dict] = None,\n     inbound_formats: Optional[Dict] = None,\n-    outbound_schema: Dict = None,\n+    outbound_schema: Optional[Dict] = None,\n     outbound_formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ) -> Any:\n",
        "source_code_with_indent": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:20:4 Incompatible variable type [9]: jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 20,
    "warning_line": "    jmespath_options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_len": 245,
        "target_code": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_len": 285,
        "diff_format": "@@ -14,8 +14,8 @@\n     context: Any,\n-    inbound_schema: Dict = None,\n+    inbound_schema: Optional[Dict] = None,\n     inbound_formats: Optional[Dict] = None,\n-    outbound_schema: Dict = None,\n+    outbound_schema: Optional[Dict] = None,\n     outbound_formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ) -> Any:\n",
        "source_code_with_indent": "    context: Any,\n    inbound_schema: Dict = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Dict = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n) -> Any:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    context: Any,\n    inbound_schema: Optional[Dict] = None,\n    inbound_formats: Optional[Dict] = None,\n    outbound_schema: Optional[Dict] = None,\n    outbound_formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n) -> Any:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:138:4 Incompatible variable type [9]: envelope is declared to have type `str` but is used as type `None`.",
    "message": " envelope is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 138,
    "warning_line": "    envelope: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n):\n",
        "source_code_len": 100,
        "target_code": "    formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n):\n",
        "target_code_len": 120,
        "diff_format": "@@ -137,4 +137,4 @@\n     formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ):\n",
        "source_code_with_indent": "    formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "5b87bb195fb154d2a112364a5d1d5c9513898e55",
    "filename": "aws_lambda_powertools/utilities/validation/validator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/utilities/validation/validator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/utilities/validation/validator.py:139:4 Incompatible variable type [9]: jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " jmespath_options is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 139,
    "warning_line": "    jmespath_options: Dict = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n):\n",
        "source_code_len": 100,
        "target_code": "    formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n):\n",
        "target_code_len": 120,
        "diff_format": "@@ -137,4 +137,4 @@\n     formats: Optional[Dict] = None,\n-    envelope: str = None,\n-    jmespath_options: Dict = None,\n+    envelope: Optional[str] = None,\n+    jmespath_options: Optional[Dict] = None,\n ):\n",
        "source_code_with_indent": "    formats: Optional[Dict] = None,\n    envelope: str = None,\n    jmespath_options: Dict = None,\n):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    formats: Optional[Dict] = None,\n    envelope: Optional[str] = None,\n    jmespath_options: Optional[Dict] = None,\n):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]