[
  {
    "project": "actionless/pikaur",
    "commit": "dfcbfdb9f139b19dd8bee60f59a96da7ff7723ff",
    "filename": "pikaur/build.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/actionless-pikaur/pikaur/build.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pikaur/build.py:211:12 Incompatible return type [7]: Expected `CmdTaskWorker` but got `List[str]`.",
    "message": " Expected `CmdTaskWorker` but got `List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 211,
    "warning_line": "            return [",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_task_command(self) -> CmdTaskWorker:\n        if self.pull:\n",
        "source_code_len": 72,
        "target_code": "\n    def get_task_command(self) -> List[str]:\n        if self.pull:\n",
        "target_code_len": 68,
        "diff_format": "@@ -208,3 +208,3 @@\n \n-    def get_task_command(self) -> CmdTaskWorker:\n+    def get_task_command(self) -> List[str]:\n         if self.pull:\n",
        "source_code_with_indent": "\n    <DED>def get_task_command(self) -> CmdTaskWorker:\n        <IND>if self.pull:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_task_command(self) -> List[str]:\n        <IND>if self.pull:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "actionless/pikaur",
    "commit": "dfcbfdb9f139b19dd8bee60f59a96da7ff7723ff",
    "filename": "pikaur/build.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/actionless-pikaur/pikaur/build.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pikaur/build.py:220:12 Incompatible return type [7]: Expected `CmdTaskWorker` but got `List[str]`.",
    "message": " Expected `CmdTaskWorker` but got `List[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 220,
    "warning_line": "            return [",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_task_command(self) -> CmdTaskWorker:\n        if self.pull:\n",
        "source_code_len": 72,
        "target_code": "\n    def get_task_command(self) -> List[str]:\n        if self.pull:\n",
        "target_code_len": 68,
        "diff_format": "@@ -208,3 +208,3 @@\n \n-    def get_task_command(self) -> CmdTaskWorker:\n+    def get_task_command(self) -> List[str]:\n         if self.pull:\n",
        "source_code_with_indent": "\n    <DED>def get_task_command(self) -> CmdTaskWorker:\n        <IND>if self.pull:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_task_command(self) -> List[str]:\n        <IND>if self.pull:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]