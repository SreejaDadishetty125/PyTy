[
  {
    "project": "Ultimaker/Uranium",
    "commit": "f19f64136988856b95ba86888483c150f7c1a076",
    "filename": "UM/Settings/SettingFunction.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Uranium/UM/Settings/SettingFunction.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "UM/Settings/SettingFunction.py:39:8 Incompatible attribute type [8]: Attribute `_valid` declared in class `SettingFunction` has type `str` but is used as type `bool`.",
    "message": " Attribute `_valid` declared in class `SettingFunction` has type `str` but is used as type `bool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 39,
    "warning_line": "        self._valid = False  # type: str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_len": 248,
        "target_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_len": 272,
        "diff_format": "@@ -34,7 +34,7 @@\n         #  Keys of all settings that are referenced to in this function.\n-        self._used_keys = frozenset()  # type: frozenset[str]\n-        self._used_values = frozenset()\n+        self._used_keys = frozenset()  # type: FrozenSet[str]\n+        self._used_values = frozenset() # type: FrozenSet[str]\n \n         self._compiled = None\n-        self._valid = False  # type: str\n+        self._valid = False  # type: bool\n \n",
        "source_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Uranium",
    "commit": "f19f64136988856b95ba86888483c150f7c1a076",
    "filename": "UM/Settings/SettingFunction.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Uranium/UM/Settings/SettingFunction.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "UM/Settings/SettingFunction.py:49:12 Incompatible attribute type [8]: Attribute `_valid` declared in class `SettingFunction` has type `str` but is used as type `bool`.",
    "message": " Attribute `_valid` declared in class `SettingFunction` has type `str` but is used as type `bool`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 49,
    "warning_line": "            self._valid = True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_len": 248,
        "target_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_len": 272,
        "diff_format": "@@ -34,7 +34,7 @@\n         #  Keys of all settings that are referenced to in this function.\n-        self._used_keys = frozenset()  # type: frozenset[str]\n-        self._used_values = frozenset()\n+        self._used_keys = frozenset()  # type: FrozenSet[str]\n+        self._used_values = frozenset() # type: FrozenSet[str]\n \n         self._compiled = None\n-        self._valid = False  # type: str\n+        self._valid = False  # type: bool\n \n",
        "source_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Uranium",
    "commit": "f19f64136988856b95ba86888483c150f7c1a076",
    "filename": "UM/Settings/SettingFunction.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Uranium/UM/Settings/SettingFunction.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "UM/Settings/SettingFunction.py:102:8 Incompatible return type [7]: Expected `bool` but got `str`.",
    "message": " Expected `bool` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 102,
    "warning_line": "        return self._valid",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_len": 248,
        "target_code": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_len": 272,
        "diff_format": "@@ -34,7 +34,7 @@\n         #  Keys of all settings that are referenced to in this function.\n-        self._used_keys = frozenset()  # type: frozenset[str]\n-        self._used_values = frozenset()\n+        self._used_keys = frozenset()  # type: FrozenSet[str]\n+        self._used_values = frozenset() # type: FrozenSet[str]\n \n         self._compiled = None\n-        self._valid = False  # type: str\n+        self._valid = False  # type: bool\n \n",
        "source_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: frozenset[str]\n        self._used_values = frozenset()\n\n        self._compiled = None\n        self._valid = False  # type: str\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        #  Keys of all settings that are referenced to in this function.\n        self._used_keys = frozenset()  # type: FrozenSet[str]\n        self._used_values = frozenset() # type: FrozenSet[str]\n\n        self._compiled = None\n        self._valid = False  # type: bool\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]