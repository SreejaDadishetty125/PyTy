[
  {
    "project": "ehForwarderBot/efb-telegram-master",
    "commit": "ba3d8d85152e2e58a8385a74f19be04c5c7a4fe6",
    "filename": "efb_telegram_master/chat_binding.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-efb-telegram-master/efb_telegram_master/chat_binding.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "efb_telegram_master/chat_binding.py:606:16 Incompatible variable type [9]: chat is declared to have type `ETMChat` but is used as type `Optional[ETMChat]`.",
    "message": " chat is declared to have type `ETMChat` but is used as type `Optional[ETMChat]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 606,
    "warning_line": "                chat: ETMChat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                # TODO: Channel might be gone, add a check here.\n                chat: ETMChat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n                if chat:\n",
        "source_code_len": 182,
        "target_code": "                # TODO: Channel might be gone, add a check here.\n                chat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n                if chat:\n",
        "target_code_len": 173,
        "diff_format": "@@ -605,3 +605,3 @@\n                 # TODO: Channel might be gone, add a check here.\n-                chat: ETMChat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n+                chat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n                 if chat:\n",
        "source_code_with_indent": "                # TODO: Channel might be gone, add a check here.\n                chat: ETMChat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n                if chat:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                # TODO: Channel might be gone, add a check here.\n                chat = self.chat_manager.get_chat(slave_channel_id, slave_chat_id)\n                if chat:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/efb-telegram-master",
    "commit": "ba3d8d85152e2e58a8385a74f19be04c5c7a4fe6",
    "filename": "efb_telegram_master/master_message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-efb-telegram-master/efb_telegram_master/master_message.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "efb_telegram_master/master_message.py:271:12 Incompatible attribute type [8]: Attribute `chat` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "message": " Attribute `chat` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 271,
    "warning_line": "            m.chat = self.chat_manager.get_chat(channel, uid)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            m.author = self.chat_manager.self\n            m.chat = self.chat_manager.get_chat(channel, uid)\n            if not m.chat:\n                # Chat not found anyway, build a fake object\n",
        "source_code_len": 196,
        "target_code": "            m.author = self.chat_manager.self\n            m_chat = self.chat_manager.get_chat(channel, uid)\n            if not m_chat:\n                # Chat not found anyway, build a fake object\n",
        "target_code_len": 196,
        "diff_format": "@@ -270,4 +270,4 @@\n             m.author = self.chat_manager.self\n-            m.chat = self.chat_manager.get_chat(channel, uid)\n-            if not m.chat:\n+            m_chat = self.chat_manager.get_chat(channel, uid)\n+            if not m_chat:\n                 # Chat not found anyway, build a fake object\n",
        "source_code_with_indent": "            m.author = self.chat_manager.self\n            m.chat = self.chat_manager.get_chat(channel, uid)\n            if not m.chat:\n                # Chat not found anyway, build a fake object\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            m.author = self.chat_manager.self\n            m_chat = self.chat_manager.get_chat(channel, uid)\n            if not m_chat:\n                # Chat not found anyway, build a fake object\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/efb-telegram-master",
    "commit": "ba3d8d85152e2e58a8385a74f19be04c5c7a4fe6",
    "filename": "efb_telegram_master/master_message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-efb-telegram-master/efb_telegram_master/master_message.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "efb_telegram_master/master_message.py:289:20 Incompatible attribute type [8]: Attribute `chat` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "message": " Attribute `chat` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 289,
    "warning_line": "                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not m.chat:\n                        # Chat not found anyway, build a fake object\n",
        "source_code_len": 295,
        "target_code": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not trgt_msg_chat:\n                        # Chat not found anyway, build a fake object\n",
        "target_code_len": 302,
        "diff_format": "@@ -288,4 +290,4 @@\n                     target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n-                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n-                    if not m.chat:\n+                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n+                    if not trgt_msg_chat:\n                         # Chat not found anyway, build a fake object\n",
        "source_code_with_indent": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not m.chat:\n                        # Chat not found anyway, build a fake object\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not trgt_msg_chat:\n                        # Chat not found anyway, build a fake object\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/efb-telegram-master",
    "commit": "ba3d8d85152e2e58a8385a74f19be04c5c7a4fe6",
    "filename": "efb_telegram_master/master_message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-efb-telegram-master/efb_telegram_master/master_message.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "efb_telegram_master/master_message.py:296:24 Incompatible attribute type [8]: Attribute `author` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "message": " Attribute `author` declared in class `ETMMsg` has type `efb_telegram_master.chat.ETMChat` but is used as type `Optional[efb_telegram_master.chat.ETMChat]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 296,
    "warning_line": "                        trgt_msg.author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not m.chat:\n                        # Chat not found anyway, build a fake object\n",
        "source_code_len": 295,
        "target_code": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not trgt_msg_chat:\n                        # Chat not found anyway, build a fake object\n",
        "target_code_len": 302,
        "diff_format": "@@ -288,4 +290,4 @@\n                     target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n-                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n-                    if not m.chat:\n+                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n+                    if not trgt_msg_chat:\n                         # Chat not found anyway, build a fake object\n",
        "source_code_with_indent": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg.chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not m.chat:\n                        # Chat not found anyway, build a fake object\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    target_channel, trgt_chat = utils.chat_id_str_to_id(target_log.slave_origin_uid)\n                    trgt_msg_chat = self.chat_manager.get_chat(target_channel, trgt_chat)\n                    if not trgt_msg_chat:\n                        # Chat not found anyway, build a fake object\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                        trgt_msg.chat.chat_uid = trgt_chat\n                    if target_log.slave_member_uid:\n                        trgt_msg.author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n                        if not trgt_msg.author:\n                            # Chat not found anyway, build a fake object\n",
        "source_code_len": 357,
        "target_code": "                        trgt_msg.chat.chat_uid = trgt_chat\n                    else:\n                        trgt_msg.chat = trgt_msg_chat\n                    if target_log.slave_member_uid:\n                        trgt_msg_author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n                        if not trgt_msg_author:\n                            # Chat not found anyway, build a fake object\n",
        "target_code_len": 437,
        "diff_format": "@@ -294,5 +296,7 @@\n                         trgt_msg.chat.chat_uid = trgt_chat\n+                    else:\n+                        trgt_msg.chat = trgt_msg_chat\n                     if target_log.slave_member_uid:\n-                        trgt_msg.author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n-                        if not trgt_msg.author:\n+                        trgt_msg_author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n+                        if not trgt_msg_author:\n                             # Chat not found anyway, build a fake object\n",
        "source_code_with_indent": "                        trgt_msg.chat.chat_uid = trgt_chat\n                    <DED>if target_log.slave_member_uid:\n                        <IND>trgt_msg.author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n                        if not trgt_msg.author:\n                            # Chat not found anyway, build a fake object\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                        trgt_msg.chat.chat_uid = trgt_chat\n                    <DED>else:\n                        <IND>trgt_msg.chat = trgt_msg_chat\n                    <DED>if target_log.slave_member_uid:\n                        <IND>trgt_msg_author = self.chat_manager.get_chat(target_channel, target_log.slave_member_uid, trgt_chat)\n                        if not trgt_msg_author:\n                            # Chat not found anyway, build a fake object\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ehForwarderBot/efb-telegram-master",
    "commit": "ba3d8d85152e2e58a8385a74f19be04c5c7a4fe6",
    "filename": "efb_telegram_master/slave_message.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ehForwarderBot-efb-telegram-master/efb_telegram_master/slave_message.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "efb_telegram_master/slave_message.py:759:61 Incompatible parameter type [6]: Expected `ChatObjectCacheManager` for 2nd parameter `chat_manager` to call `ETMMsg.unpickle` but got `DatabaseManager`.",
    "message": " Expected `ChatObjectCacheManager` for 2nd parameter `chat_manager` to call `ETMMsg.unpickle` but got `DatabaseManager`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 759,
    "warning_line": "        old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.db)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.db)\n        old_msg.reactions = status.reactions\n",
        "source_code_len": 129,
        "target_code": "\n        old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.chat_manager)\n        old_msg.reactions = status.reactions\n",
        "target_code_len": 139,
        "diff_format": "@@ -758,3 +758,3 @@\n \n-        old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.db)\n+        old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.chat_manager)\n         old_msg.reactions = status.reactions\n",
        "source_code_with_indent": "\n        <DED>old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.db)\n        old_msg.reactions = status.reactions\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>old_msg: ETMMsg = ETMMsg.unpickle(old_msg_db.pickle, chat_manager=self.chat_manager)\n        old_msg.reactions = status.reactions\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]