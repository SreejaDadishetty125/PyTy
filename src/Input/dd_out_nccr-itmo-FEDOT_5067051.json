[
  {
    "project": "nccr-itmo/FEDOT",
    "commit": "50670515bb67df2c97a7533eb61dc5df39f2688e",
    "filename": "core/composer/gp_composer/gp_composer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nccr-itmo-FEDOT/core/composer/gp_composer/gp_composer.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/composer/gp_composer/gp_composer.py:63:31 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[List[Node]]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Optional[List[Node]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 63,
    "warning_line": "            for i in range(len(node.nodes_from)):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef flat_nodes_tree(node) -> List[Node]:\n    if node.nodes_from:\n",
        "source_code_len": 66,
        "target_code": "\ndef flat_nodes_tree(node:GPNode) -> List[GPNode]:\n    if node.nodes_from:\n",
        "target_code_len": 75,
        "diff_format": "@@ -69,3 +69,3 @@\n \n-def flat_nodes_tree(node) -> List[Node]:\n+def flat_nodes_tree(node:GPNode) -> List[GPNode]:\n     if node.nodes_from:\n",
        "source_code_with_indent": "\n<DED>def flat_nodes_tree(node) -> List[Node]:\n    <IND>if node.nodes_from:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def flat_nodes_tree(node:GPNode) -> List[GPNode]:\n    <IND>if node.nodes_from:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]