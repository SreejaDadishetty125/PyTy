[
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/asana/operators/asana_tasks.py",
    "min_patch_found": false,
    "full_warning_msg": "airflow/providers/asana/operators/asana_tasks.py:61:47 Incompatible parameter type [6]: Expected `Dict[typing.Any, typing.Any]` for 2nd positional only parameter to call `AsanaHook.create_task` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/asana/operators/asana_tasks.py",
    "min_patch_found": false,
    "full_warning_msg": "airflow/providers/asana/operators/asana_tasks.py:168:34 Incompatible parameter type [6]: Expected `Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `AsanaHook.find_task` but got `Optional[Dict[typing.Any, typing.Any]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/postgres/hooks/postgres.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/postgres/hooks/postgres.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/postgres/hooks/postgres.py:237:8 Incompatible return type [7]: Expected `List[str]` but got `Optional[List[typing.Any]]`.",
    "message": " Expected `List[str]` but got `Optional[List[typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 237,
    "warning_line": "        return pk_columns or None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> List[str]:\n        \"\"\"\n",
        "source_code_len": 109,
        "target_code": "\n    def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> Optional[List[str]]:\n        \"\"\"\n",
        "target_code_len": 119,
        "diff_format": "@@ -213,3 +213,3 @@\n \n-    def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> List[str]:\n+    def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> Optional[List[str]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> List[str]:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def get_table_primary_key(self, table: str, schema: Optional[str] = \"public\") -> Optional[List[str]]:\n        <IND>"
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/slack/operators/slack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/slack/operators/slack.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/slack/operators/slack.py:204:8 Incompatible variable type [9]: filename is declared to have type `str` but is used as type `None`.",
    "message": " filename is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 204,
    "warning_line": "        filename: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_len": 166,
        "target_code": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_len": 196,
        "diff_format": "@@ -203,5 +203,5 @@\n         initial_comment: str = 'No message has been set!',\n-        filename: str = None,\n-        filetype: str = None,\n-        content: str = None,\n+        filename: Optional[str] = None,\n+        filetype: Optional[str] = None,\n+        content: Optional[str] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/slack/operators/slack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/slack/operators/slack.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/slack/operators/slack.py:205:8 Incompatible variable type [9]: filetype is declared to have type `str` but is used as type `None`.",
    "message": " filetype is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 205,
    "warning_line": "        filetype: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_len": 166,
        "target_code": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_len": 196,
        "diff_format": "@@ -203,5 +203,5 @@\n         initial_comment: str = 'No message has been set!',\n-        filename: str = None,\n-        filetype: str = None,\n-        content: str = None,\n+        filename: Optional[str] = None,\n+        filetype: Optional[str] = None,\n+        content: Optional[str] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/slack/operators/slack.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/slack/operators/slack.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/slack/operators/slack.py:206:8 Incompatible variable type [9]: content is declared to have type `str` but is used as type `None`.",
    "message": " content is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 206,
    "warning_line": "        content: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_len": 166,
        "target_code": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_len": 196,
        "diff_format": "@@ -203,5 +203,5 @@\n         initial_comment: str = 'No message has been set!',\n-        filename: str = None,\n-        filetype: str = None,\n-        content: str = None,\n+        filename: Optional[str] = None,\n+        filetype: Optional[str] = None,\n+        content: Optional[str] = None,\n         **kwargs,\n",
        "source_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: str = None,\n        filetype: str = None,\n        content: str = None,\n        **kwargs,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        initial_comment: str = 'No message has been set!',\n        filename: Optional[str] = None,\n        filetype: Optional[str] = None,\n        content: Optional[str] = None,\n        **kwargs,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/telegram/hooks/telegram.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/telegram/hooks/telegram.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/telegram/hooks/telegram.py:69:45 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `TelegramHook._TelegramHook__get_token` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `TelegramHook._TelegramHook__get_token` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 69,
    "warning_line": "        self.token = self.__get_token(token, telegram_conn_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __get_token(self, token: Optional[str], telegram_conn_id: str) -> str:\n        \"\"\"\n",
        "source_code_len": 92,
        "target_code": "\n    def __get_token(self, token: Optional[str], telegram_conn_id: Optional[str]) -> str:\n        \"\"\"\n",
        "target_code_len": 102,
        "diff_format": "@@ -81,3 +81,3 @@\n \n-    def __get_token(self, token: Optional[str], telegram_conn_id: str) -> str:\n+    def __get_token(self, token: Optional[str], telegram_conn_id: Optional[str]) -> str:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def __get_token(self, token: Optional[str], telegram_conn_id: str) -> str:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def __get_token(self, token: Optional[str], telegram_conn_id: Optional[str]) -> str:\n        <IND>"
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/telegram/hooks/telegram.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/telegram/hooks/telegram.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/telegram/hooks/telegram.py:70:51 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `TelegramHook._TelegramHook__get_chat_id` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `TelegramHook._TelegramHook__get_chat_id` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "        self.chat_id = self.__get_chat_id(chat_id, telegram_conn_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: str) -> Optional[str]:\n        \"\"\"\n",
        "source_code_len": 106,
        "target_code": "\n    def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: Optional[str]) -> Optional[str]:\n        \"\"\"\n",
        "target_code_len": 116,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-    def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: str) -> Optional[str]:\n+    def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: Optional[str]) -> Optional[str]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: str) -> Optional[str]:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def __get_chat_id(self, chat_id: Optional[str], telegram_conn_id: Optional[str]) -> Optional[str]:\n        <IND>"
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/telegram/operators/telegram.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/telegram/operators/telegram.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/telegram/operators/telegram.py:73:4 Inconsistent override [14]: `airflow.providers.telegram.operators.telegram.TelegramOperator.execute` overrides method defined in `airflow.models.baseoperator.BaseOperator` inconsistently. Could not find parameter `context` in overriding signature.",
    "message": " `airflow.providers.telegram.operators.telegram.TelegramOperator.execute` overrides method defined in `airflow.models.baseoperator.BaseOperator` inconsistently. Could not find parameter `context` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 73,
    "warning_line": "    def execute(self, **kwargs) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"Operator for Telegram\"\"\"\nfrom typing import Optional\n\n",
        "source_code_len": 57,
        "target_code": "\"\"\"Operator for Telegram\"\"\"\nfrom typing import Dict, Optional\n\n",
        "target_code_len": 63,
        "diff_format": "@@ -18,3 +18,3 @@\n \"\"\"Operator for Telegram\"\"\"\n-from typing import Optional\n+from typing import Dict, Optional\n \n",
        "source_code_with_indent": "\"\"\"Operator for Telegram\"\"\"\nfrom typing import Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"Operator for Telegram\"\"\"\nfrom typing import Dict, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def execute(self, **kwargs) -> None:\n        \"\"\"Calls the TelegramHook to post the provided Telegram message\"\"\"\n",
        "source_code_len": 117,
        "target_code": "\n    def execute(self, context: Dict) -> None:\n        \"\"\"Calls the TelegramHook to post the provided Telegram message\"\"\"\n",
        "target_code_len": 122,
        "diff_format": "@@ -72,3 +72,3 @@\n \n-    def execute(self, **kwargs) -> None:\n+    def execute(self, context: Dict) -> None:\n         \"\"\"Calls the TelegramHook to post the provided Telegram message\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def execute(self, **kwargs) -> None:\n        <IND>\"\"\"Calls the TelegramHook to post the provided Telegram message\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def execute(self, context: Dict) -> None:\n        <IND>\"\"\"Calls the TelegramHook to post the provided Telegram message\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "apache/airflow",
    "commit": "dad2f8103be954afaedf15e9d098ee417b0d5d02",
    "filename": "airflow/providers/trino/hooks/trino.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/providers/trino/hooks/trino.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/providers/trino/hooks/trino.py:141:4 Inconsistent override [14]: `airflow.providers.trino.hooks.trino.TrinoHook.run` overrides method defined in `DbApiHook` inconsistently. Could not find parameter `handler` in overriding signature.",
    "message": " `airflow.providers.trino.hooks.trino.TrinoHook.run` overrides method defined in `DbApiHook` inconsistently. Could not find parameter `handler` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 141,
    "warning_line": "    def run("
  }
]