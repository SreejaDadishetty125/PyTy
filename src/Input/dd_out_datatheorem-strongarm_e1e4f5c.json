[
  {
    "project": "datatheorem/strongarm",
    "commit": "e1e4f5c42879d5e5cb87429d24344cd799a71959",
    "filename": "strongarm/cli/utils.py",
    "min_patch_found": false,
    "full_warning_msg": "strongarm/cli/utils.py:283:51 Incompatible parameter type [6]: Expected `strongarm.macho.macho_definitions.VirtualMemoryPointer` for 1st positional only parameter to call `strongarm.macho.macho_binary.MachoBinary.read_string_at_address` but got `strongarm.macho.macho_definitions._BasePointer`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "datatheorem/strongarm",
    "commit": "e1e4f5c42879d5e5cb87429d24344cd799a71959",
    "filename": "strongarm/macho/macho_analyzer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/datatheorem-strongarm/strongarm/macho/macho_analyzer.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "strongarm/macho/macho_analyzer.py:264:56 Incompatible parameter type [6]: Expected `VirtualMemoryPointer` for 1st positional only parameter to call `MachoAnalyzer.selector_for_selref` but got `int`.",
    "message": " Expected `VirtualMemoryPointer` for 1st positional only parameter to call `MachoAnalyzer.selector_for_selref` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 264,
    "warning_line": "                    selector = self.selector_for_selref(selref)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    # to a locally-implemented Objective-C method *or* C function via the `calls_to` API.\n                    selector = self.selector_for_selref(selref)\n                    if selector and selector.implementation:\n",
        "source_code_len": 231,
        "target_code": "                    # to a locally-implemented Objective-C method *or* C function via the `calls_to` API.\n                    selector = self.selector_for_selref(VirtualMemoryPointer(selref))\n                    if selector and selector.implementation:\n",
        "target_code_len": 253,
        "diff_format": "@@ -263,3 +263,3 @@\n                     # to a locally-implemented Objective-C method *or* C function via the `calls_to` API.\n-                    selector = self.selector_for_selref(selref)\n+                    selector = self.selector_for_selref(VirtualMemoryPointer(selref))\n                     if selector and selector.implementation:\n",
        "source_code_with_indent": "                    # to a locally-implemented Objective-C method *or* C function via the `calls_to` API.\n                    <DED>selector = self.selector_for_selref(selref)\n                    if selector and selector.implementation:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    # to a locally-implemented Objective-C method *or* C function via the `calls_to` API.\n                    <DED>selector = self.selector_for_selref(VirtualMemoryPointer(selref))\n                    if selector and selector.implementation:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "datatheorem/strongarm",
    "commit": "e1e4f5c42879d5e5cb87429d24344cd799a71959",
    "filename": "strongarm/macho/macho_binary.py",
    "min_patch_found": false,
    "full_warning_msg": "strongarm/macho/macho_binary.py:256:12 Incompatible variable type [9]: offset is declared to have type `StaticFilePointer` but is used as type `strongarm.macho.macho_definitions._BasePointer`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]