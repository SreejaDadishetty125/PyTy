[
  {
    "project": "pcah/python-clean-architecture",
    "commit": "3ba523ddb08ebaa7acfd4a453b4faf7365562e4e",
    "filename": "dharma/domain/repos/in_memory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pcah-python-clean-architecture/dharma/domain/repos/in_memory.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dharma/domain/repos/in_memory.py:33:17 Incompatible variable type [9]: klass is declared to have type `t.Type[Variable[T]]` but is used as type `None`.",
    "message": " klass is declared to have type `t.Type[Variable[T]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 33,
    "warning_line": "                 klass: t.Type[T] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self,\n                 klass: t.Type[T] = None,\n                 factory: t.Callable[..., T] = None,\n",
        "source_code_len": 118,
        "target_code": "    def __init__(self,\n                 klass: t.Type[T],\n                 factory: t.Callable[..., T] = None,\n",
        "target_code_len": 111,
        "diff_format": "@@ -32,3 +35,3 @@\n     def __init__(self,\n-                 klass: t.Type[T] = None,\n+                 klass: t.Type[T],\n                  factory: t.Callable[..., T] = None,\n",
        "source_code_with_indent": "    <DED>def __init__(self,\n                 klass: t.Type[T] = None,\n                 factory: t.Callable[..., T] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def __init__(self,\n                 klass: t.Type[T],\n                 factory: t.Callable[..., T] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pcah/python-clean-architecture",
    "commit": "3ba523ddb08ebaa7acfd4a453b4faf7365562e4e",
    "filename": "dharma/domain/repos/in_memory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pcah-python-clean-architecture/dharma/domain/repos/in_memory.py",
    "file_hunks_size": 15,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dharma/domain/repos/in_memory.py:81:21 Incompatible variable type [9]: predicate is declared to have type `dharma.data.formulae.predicate.Predicate` but is used as type `None`.",
    "message": " predicate is declared to have type `dharma.data.formulae.predicate.Predicate` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 81,
    "warning_line": "    def filter(self, predicate: Predicate = None) -> t.List[T]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def filter(self, predicate: Predicate = None) -> t.List[T]:\n        \"\"\"\n",
        "source_code_len": 77,
        "target_code": "\n    def filter(self, predicate: Predicate) -> t.List[T]:\n        \"\"\"\n",
        "target_code_len": 70,
        "diff_format": "@@ -80,3 +122,3 @@\n \n-    def filter(self, predicate: Predicate = None) -> t.List[T]:\n+    def filter(self, predicate: Predicate) -> t.List[T]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def filter(self, predicate: Predicate = None) -> t.List[T]:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def filter(self, predicate: Predicate) -> t.List[T]:\n        <IND>"
      }
    ]
  },
  {
    "project": "pcah/python-clean-architecture",
    "commit": "3ba523ddb08ebaa7acfd4a453b4faf7365562e4e",
    "filename": "dharma/domain/repos/in_memory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pcah-python-clean-architecture/dharma/domain/repos/in_memory.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dharma/domain/repos/in_memory.py:94:4 Inconsistent override [15]: `dharma.domain.repos.in_memory.InMemoryRepository.insert` overrides method defined in `BaseRepository` inconsistently. Returned type `Variable[T]` is not a subtype of the overridden return `bool`.",
    "message": " `dharma.domain.repos.in_memory.InMemoryRepository.insert` overrides method defined in `BaseRepository` inconsistently. Returned type `Variable[T]` is not a subtype of the overridden return `bool`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 94,
    "warning_line": "    def insert(self, obj: T) -> T:"
  },
  {
    "project": "pcah/python-clean-architecture",
    "commit": "3ba523ddb08ebaa7acfd4a453b4faf7365562e4e",
    "filename": "dharma/domain/repos/in_memory.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pcah-python-clean-architecture/dharma/domain/repos/in_memory.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dharma/domain/repos/in_memory.py:138:47 Incompatible parameter type [6]: Expected `Variable[T]` for 1st positional only parameter to call `InMemoryRepository.update` but got `Id`.",
    "message": " Expected `Variable[T]` for 1st positional only parameter to call `InMemoryRepository.update` but got `Id`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 138,
    "warning_line": "        return {self._get_id(obj): self.update(obj) for obj in payload}"
  }
]