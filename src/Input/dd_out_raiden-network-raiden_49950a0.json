[
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:122:8 Incompatible parameter type [6]: Expected `raiden.utils.typing.Address` for 1st positional only parameter to call `typing.Mapping.get` but got `typing.Union[TokenNetworkAddress, TokenNetworkID]`.",
    "message": " Expected `raiden.utils.typing.Address` for 1st positional only parameter to call `typing.Mapping.get` but got `typing.Union[TokenNetworkAddress, TokenNetworkID]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 122,
    "warning_line": "        token_network_address,"
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:128:12 Incompatible parameter type [6]: Expected `PaymentNetworkID` for 1st positional only parameter to call `typing.Mapping.get` but got `raiden.utils.typing.Address`.",
    "message": " Expected `PaymentNetworkID` for 1st positional only parameter to call `typing.Mapping.get` but got `raiden.utils.typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 128,
    "warning_line": "            payment_network_identifier,"
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:134:12 Incompatible parameter type [6]: Expected `TokenNetworkID` for 1st positional only parameter to call `typing.Mapping.get` but got `typing.Union[TokenNetworkAddress, TokenNetworkID]`.",
    "message": " Expected `TokenNetworkID` for 1st positional only parameter to call `typing.Mapping.get` but got `typing.Union[TokenNetworkAddress, TokenNetworkID]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 134,
    "warning_line": "            token_network_address,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        token_network_state = payment_network_state.tokenidentifiers_to_tokennetworks.get(\n            token_network_address,\n        )\n",
        "source_code_len": 136,
        "target_code": "        token_network_state = payment_network_state.tokenidentifiers_to_tokennetworks.get(\n            TokenNetworkID(token_network_address),\n        )\n",
        "target_code_len": 152,
        "diff_format": "@@ -133,3 +133,3 @@\n         token_network_state = payment_network_state.tokenidentifiers_to_tokennetworks.get(\n-            token_network_address,\n+            TokenNetworkID(token_network_address),\n         )\n",
        "source_code_with_indent": "        <IND>token_network_state = payment_network_state.tokenidentifiers_to_tokennetworks.get(\n            token_network_address,\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>token_network_state = payment_network_state.tokenidentifiers_to_tokennetworks.get(\n            TokenNetworkID(token_network_address),\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:475:16 Incompatible parameter type [6]: Expected `raiden.utils.typing.Address` for 1st positional only parameter to call `dict.__setitem__` but got `TokenNetworkID`.",
    "message": " Expected `raiden.utils.typing.Address` for 1st positional only parameter to call `dict.__setitem__` but got `TokenNetworkID`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 475,
    "warning_line": "        mapping[token_network_identifier] = payment_network_identifier"
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:475:44 Incompatible parameter type [6]: Expected `raiden.utils.typing.Address` for 2nd positional only parameter to call `dict.__setitem__` but got `PaymentNetworkID`.",
    "message": " Expected `raiden.utils.typing.Address` for 2nd positional only parameter to call `dict.__setitem__` but got `PaymentNetworkID`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 475,
    "warning_line": "        mapping[token_network_identifier] = payment_network_identifier"
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/transfer/node.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/node.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/node.py:673:51 Incompatible parameter type [6]: Expected `PaymentNetworkID` for 1st positional only parameter to call `dict.__setitem__` but got `raiden.utils.typing.Address`.",
    "message": " Expected `PaymentNetworkID` for 1st positional only parameter to call `dict.__setitem__` but got `raiden.utils.typing.Address`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 673,
    "warning_line": "        chain_state.identifiers_to_paymentnetworks[payment_network_identifier] = payment_network",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    payment_network = state_change.payment_network\n    payment_network_identifier = payment_network.address\n    if payment_network_identifier not in chain_state.identifiers_to_paymentnetworks:\n",
        "source_code_len": 193,
        "target_code": "    payment_network = state_change.payment_network\n    payment_network_identifier = PaymentNetworkID(payment_network.address)\n    if payment_network_identifier not in chain_state.identifiers_to_paymentnetworks:\n",
        "target_code_len": 211,
        "diff_format": "@@ -670,3 +670,3 @@\n     payment_network = state_change.payment_network\n-    payment_network_identifier = payment_network.address\n+    payment_network_identifier = PaymentNetworkID(payment_network.address)\n     if payment_network_identifier not in chain_state.identifiers_to_paymentnetworks:\n",
        "source_code_with_indent": "    payment_network = state_change.payment_network\n    payment_network_identifier = payment_network.address\n    if payment_network_identifier not in chain_state.identifiers_to_paymentnetworks:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    payment_network = state_change.payment_network\n    payment_network_identifier = PaymentNetworkID(payment_network.address)\n    if payment_network_identifier not in chain_state.identifiers_to_paymentnetworks:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/waiting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/waiting.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/waiting.py:269:16 Incompatible parameter type [6]: Expected `typing.TokenAddress` for 3rd positional only parameter to call `wait_for_settle` but got `typing.TokenNetworkID`.",
    "message": " Expected `typing.TokenAddress` for 3rd positional only parameter to call `wait_for_settle` but got `typing.TokenNetworkID`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 269,
    "warning_line": "                token_network_id,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import gevent\n",
        "source_code_len": 14,
        "target_code": "from typing import List, cast\n\nimport gevent\n",
        "target_code_len": 45,
        "diff_format": "@@ -1,1 +1,3 @@\n+from typing import List, cast\n+\n import gevent\n",
        "source_code_with_indent": "import gevent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, cast\n\nimport gevent\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n\n            wait_for_settle(\n                raiden,\n                payment_network_id,\n                token_network_id,\n                channel_ids,\n                retry_timeout,\n            )\n",
        "source_code_len": 357,
        "target_code": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            channel_ids = cast(\n                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n            )\n\n            wait_for_settle(\n                raiden=raiden,\n                payment_network_id=payment_network_id,\n                token_address=typing.TokenAddress(token_network_id),\n                channel_ids=channel_ids,\n                retry_timeout=retry_timeout,\n            )\n",
        "target_code_len": 505,
        "diff_format": "@@ -263,10 +265,12 @@\n         for token_network_id, token_network_state in id_tokennetworkstate:\n-            channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n+            channel_ids = cast(\n+                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n+            )\n \n             wait_for_settle(\n-                raiden,\n-                payment_network_id,\n-                token_network_id,\n-                channel_ids,\n-                retry_timeout,\n+                raiden=raiden,\n+                payment_network_id=payment_network_id,\n+                token_address=typing.TokenAddress(token_network_id),\n+                channel_ids=channel_ids,\n+                retry_timeout=retry_timeout,\n             )\n",
        "source_code_with_indent": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            <IND>channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n\n            wait_for_settle(\n                raiden,\n                payment_network_id,\n                token_network_id,\n                channel_ids,\n                retry_timeout,\n            )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            <IND>channel_ids = cast(\n                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n            )\n\n            wait_for_settle(\n                raiden=raiden,\n                payment_network_id=payment_network_id,\n                token_address=typing.TokenAddress(token_network_id),\n                channel_ids=channel_ids,\n                retry_timeout=retry_timeout,\n            )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "49950a05d286d7647423bcf7b7c4f443bb06be14",
    "filename": "raiden/waiting.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/waiting.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/waiting.py:270:16 Incompatible parameter type [6]: Expected `typing.List[typing.ChannelID]` for 4th positional only parameter to call `wait_for_settle` but got `typing.KeysView[typing.ChannelID]`.",
    "message": " Expected `typing.List[typing.ChannelID]` for 4th positional only parameter to call `wait_for_settle` but got `typing.KeysView[typing.ChannelID]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 270,
    "warning_line": "                channel_ids,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import gevent\n",
        "source_code_len": 14,
        "target_code": "from typing import List, cast\n\nimport gevent\n",
        "target_code_len": 45,
        "diff_format": "@@ -1,1 +1,3 @@\n+from typing import List, cast\n+\n import gevent\n",
        "source_code_with_indent": "import gevent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, cast\n\nimport gevent\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n\n            wait_for_settle(\n                raiden,\n                payment_network_id,\n                token_network_id,\n                channel_ids,\n                retry_timeout,\n            )\n",
        "source_code_len": 357,
        "target_code": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            channel_ids = cast(\n                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n            )\n\n            wait_for_settle(\n                raiden=raiden,\n                payment_network_id=payment_network_id,\n                token_address=typing.TokenAddress(token_network_id),\n                channel_ids=channel_ids,\n                retry_timeout=retry_timeout,\n            )\n",
        "target_code_len": 505,
        "diff_format": "@@ -263,10 +265,12 @@\n         for token_network_id, token_network_state in id_tokennetworkstate:\n-            channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n+            channel_ids = cast(\n+                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n+            )\n \n             wait_for_settle(\n-                raiden,\n-                payment_network_id,\n-                token_network_id,\n-                channel_ids,\n-                retry_timeout,\n+                raiden=raiden,\n+                payment_network_id=payment_network_id,\n+                token_address=typing.TokenAddress(token_network_id),\n+                channel_ids=channel_ids,\n+                retry_timeout=retry_timeout,\n             )\n",
        "source_code_with_indent": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            <IND>channel_ids = token_network_state.channelidentifiers_to_channels.keys()\n\n            wait_for_settle(\n                raiden,\n                payment_network_id,\n                token_network_id,\n                channel_ids,\n                retry_timeout,\n            )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        for token_network_id, token_network_state in id_tokennetworkstate:\n            <IND>channel_ids = cast(\n                List[typing.ChannelID], token_network_state.channelidentifiers_to_channels.keys(),\n            )\n\n            wait_for_settle(\n                raiden=raiden,\n                payment_network_id=payment_network_id,\n                token_address=typing.TokenAddress(token_network_id),\n                channel_ids=channel_ids,\n                retry_timeout=retry_timeout,\n            )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]