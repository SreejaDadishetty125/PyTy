[
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:64:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 64,
    "warning_line": "    grib_keys['longitudeOfFirstGridPointInDegrees'] = lon_start",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:65:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 65,
    "warning_line": "    grib_keys['longitudeOfLastGridPointInDegrees'] = lon_stop",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:66:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 66,
    "warning_line": "    grib_keys['Ni'] = lon_num",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:67:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 67,
    "warning_line": "    grib_keys['iDirectionIncrementInDegrees'] = lon_step",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:68:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 68,
    "warning_line": "    grib_keys['iScansNegatively'] = lon_scan_negatively",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:71:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "    grib_keys['latitudeOfFirstGridPointInDegrees'] = lat_start",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:72:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "    grib_keys['latitudeOfLastGridPointInDegrees'] = lat_stop",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:73:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 73,
    "warning_line": "    grib_keys['Nj'] = lat_num",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:74:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 74,
    "warning_line": "    grib_keys['jDirectionIncrementInDegrees'] = abs(lat_stop - lat_start) / (lat_num - 1.)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:75:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 75,
    "warning_line": "    grib_keys['jScansPositively'] = lat_stop > lat_start",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:76:14 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "    grib_keys['gridType'] = 'regular_ll'",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_len": 154,
        "target_code": "def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_len": 150,
        "diff_format": "@@ -53,4 +53,4 @@\n def detect_regular_ll_grib_keys(lon, lat):\n-    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n-    grib_keys = {}  # type: T.Dict[bytes, T.Any]\n+    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n+    grib_keys = {}  # type: T.Dict[str, T.Any]\n \n",
        "source_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[bytes, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[bytes, T.Any]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def detect_regular_ll_grib_keys(lon, lat):\n    # type: (np.ndarray, np.ndarray) -> T.Dict[str, T.Any]\n    <IND>grib_keys = {}  # type: T.Dict[str, T.Any]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:152:73 Incompatible parameter type [6]: Expected `T.Dict[typing.Any, typing.Any]` for 2nd positional only parameter to call `detect_grib_keys` but got `T.Mapping[str, typing.Any]`.",
    "message": " Expected `T.Dict[typing.Any, typing.Any]` for 2nd positional only parameter to call `detect_grib_keys` but got `T.Mapping[str, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 152,
    "warning_line": "    detected_grib_keys, suggested_grib_keys = detect_grib_keys(data_var, default_grib_keys)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "):\n    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n    \"\"\"\n",
        "source_code_len": 109,
        "target_code": "):\n    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n    \"\"\"\n",
        "target_code_len": 107,
        "diff_format": "@@ -146,3 +146,3 @@\n ):\n-    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n+    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "):\n    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n    <IND>",
        "target_code_with_indent": "):\n    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n    <IND>"
      }
    ]
  },
  {
    "project": "ecmwf/cfgrib",
    "commit": "9fe83f443f8f40abd4fd265f0b1dd58e17454c7d",
    "filename": "cfgrib/xarray_to_grib.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ecmwf-cfgrib/cfgrib/xarray_to_grib.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cfgrib/xarray_to_grib.py:204:40 Incompatible parameter type [6]: Expected `T.BinaryIO` for 1st positional only parameter to call `canonical_dataarray_to_grib` but got `T.IO[typing.Any]`.",
    "message": " Expected `T.BinaryIO` for 1st positional only parameter to call `canonical_dataarray_to_grib` but got `T.IO[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "            canonical_dataarray_to_grib(file, data_var, **kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "):\n    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n    \"\"\"\n",
        "source_code_len": 109,
        "target_code": "):\n    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n    \"\"\"\n",
        "target_code_len": 107,
        "diff_format": "@@ -146,3 +146,3 @@\n ):\n-    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n+    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "):\n    # type: (T.BinaryIO, xr.DataArray, T.Mapping[str, T.Any], T.Mapping[str, T.Any], str) -> None\n    <IND>",
        "target_code_with_indent": "):\n    # type: (T.IO[bytes], xr.DataArray, T.Mapping[str, T.Any], T.Dict[str, T.Any], str) -> None\n    <IND>"
      }
    ]
  }
]