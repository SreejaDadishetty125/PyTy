[
  {
    "project": "TheAlgorithms/Python",
    "commit": "331fe6d3bc075ac2d91af766cf2bdf7df09f1281",
    "filename": "data_structures/binary_tree/lowest_common_ancestor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/data_structures/binary_tree/lowest_common_ancestor.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "data_structures/binary_tree/lowest_common_ancestor.py:50:8 Incompatible return type [7]: Expected `typing.List[typing.List[int]]` but got `int`.",
    "message": " Expected `typing.List[typing.List[int]]` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 50,
    "warning_line": "        return u",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> list[list[int]]:\n    # u must be deeper in the tree than v\n",
        "source_code_len": 126,
        "target_code": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> int:\n    # u must be deeper in the tree than v\n",
        "target_code_len": 114,
        "diff_format": "@@ -39,3 +39,3 @@\n     u: int, v: int, level: list[int], parent: list[list[int]]\n-) -> list[list[int]]:\n+) -> int:\n     # u must be deeper in the tree than v\n",
        "source_code_with_indent": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> list[list[int]]:\n    # u must be deeper in the tree than v\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> int:\n    # u must be deeper in the tree than v\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "331fe6d3bc075ac2d91af766cf2bdf7df09f1281",
    "filename": "data_structures/binary_tree/lowest_common_ancestor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/data_structures/binary_tree/lowest_common_ancestor.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "data_structures/binary_tree/lowest_common_ancestor.py:56:4 Incompatible return type [7]: Expected `typing.List[typing.List[int]]` but got `int`.",
    "message": " Expected `typing.List[typing.List[int]]` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 56,
    "warning_line": "    return parent[0][u]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> list[list[int]]:\n    # u must be deeper in the tree than v\n",
        "source_code_len": 126,
        "target_code": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> int:\n    # u must be deeper in the tree than v\n",
        "target_code_len": 114,
        "diff_format": "@@ -39,3 +39,3 @@\n     u: int, v: int, level: list[int], parent: list[list[int]]\n-) -> list[list[int]]:\n+) -> int:\n     # u must be deeper in the tree than v\n",
        "source_code_with_indent": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> list[list[int]]:\n    # u must be deeper in the tree than v\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    u: int, v: int, level: list[int], parent: list[list[int]]\n) -> int:\n    # u must be deeper in the tree than v\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "331fe6d3bc075ac2d91af766cf2bdf7df09f1281",
    "filename": "data_structures/binary_tree/lowest_common_ancestor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/data_structures/binary_tree/lowest_common_ancestor.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "data_structures/binary_tree/lowest_common_ancestor.py:106:66 Incompatible parameter type [6]: Expected `typing.Dict[int, int]` for 4th positional only parameter to call `breadth_first_search` but got `typing.Dict[int, typing.Union[typing.List[typing.Any], typing.List[int]]]`.",
    "message": " Expected `typing.Dict[int, int]` for 4th positional only parameter to call `breadth_first_search` but got `typing.Dict[int, typing.Union[typing.List[typing.Any], typing.List[int]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 106,
    "warning_line": "    level, parent = breadth_first_search(level, parent, max_node, graph, 1)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    max_node: int,\n    graph: dict[int, int],\n    root=1,\n) -> tuple[list[int], list[list[int]]]:\n",
        "source_code_len": 98,
        "target_code": "    max_node: int,\n    graph: dict[int, list[int]],\n    root: int = 1,\n) -> tuple[list[int], list[list[int]]]:\n",
        "target_code_len": 111,
        "diff_format": "@@ -63,4 +63,4 @@\n     max_node: int,\n-    graph: dict[int, int],\n-    root=1,\n+    graph: dict[int, list[int]],\n+    root: int = 1,\n ) -> tuple[list[int], list[list[int]]]:\n",
        "source_code_with_indent": "    max_node: int,\n    graph: dict[int, int],\n    root=1,\n) -> tuple[list[int], list[list[int]]]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    max_node: int,\n    graph: dict[int, list[int]],\n    root: int = 1,\n) -> tuple[list[int], list[list[int]]]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]