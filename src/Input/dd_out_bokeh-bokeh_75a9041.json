[
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/_version.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/_version.pyi",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/_version.pyi:6:21 Invalid type [31]: Expression `str.__or__(None)` is not a valid type.",
    "message": " Expression `str.__or__(None)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 6,
    "warning_line": "  \"full-revisionid\": str | None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_len": 160,
        "target_code": "\nclass Versions(TypedDict):\n    version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -3,9 +3,7 @@\n \n-Versions = TypedDict(\"Versions\", {\n-  \"version\": str,\n-  \"full-revisionid\": str | None,\n-  \"dirty\": bool | None,\n-  \"error\": str | None,\n-  \"date\": str | None,\n-})\n+class Versions(TypedDict):\n+    version: str\n+    dirty: bool | None\n+    error: str | None\n+    date: str | None\n \n",
        "source_code_with_indent": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass Versions(TypedDict):\n    <IND>version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/_version.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/_version.pyi",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/_version.pyi:7:11 Invalid type [31]: Expression `bool.__or__(None)` is not a valid type.",
    "message": " Expression `bool.__or__(None)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 7,
    "warning_line": "  \"dirty\": bool | None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_len": 160,
        "target_code": "\nclass Versions(TypedDict):\n    version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -3,9 +3,7 @@\n \n-Versions = TypedDict(\"Versions\", {\n-  \"version\": str,\n-  \"full-revisionid\": str | None,\n-  \"dirty\": bool | None,\n-  \"error\": str | None,\n-  \"date\": str | None,\n-})\n+class Versions(TypedDict):\n+    version: str\n+    dirty: bool | None\n+    error: str | None\n+    date: str | None\n \n",
        "source_code_with_indent": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass Versions(TypedDict):\n    <IND>version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/_version.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/_version.pyi",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/_version.pyi:8:11 Invalid type [31]: Expression `str.__or__(None)` is not a valid type.",
    "message": " Expression `str.__or__(None)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 8,
    "warning_line": "  \"error\": str | None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_len": 160,
        "target_code": "\nclass Versions(TypedDict):\n    version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -3,9 +3,7 @@\n \n-Versions = TypedDict(\"Versions\", {\n-  \"version\": str,\n-  \"full-revisionid\": str | None,\n-  \"dirty\": bool | None,\n-  \"error\": str | None,\n-  \"date\": str | None,\n-})\n+class Versions(TypedDict):\n+    version: str\n+    dirty: bool | None\n+    error: str | None\n+    date: str | None\n \n",
        "source_code_with_indent": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass Versions(TypedDict):\n    <IND>version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/_version.pyi",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/_version.pyi",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/_version.pyi:9:10 Invalid type [31]: Expression `str.__or__(None)` is not a valid type.",
    "message": " Expression `str.__or__(None)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 9,
    "warning_line": "  \"date\": str | None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_len": 160,
        "target_code": "\nclass Versions(TypedDict):\n    version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -3,9 +3,7 @@\n \n-Versions = TypedDict(\"Versions\", {\n-  \"version\": str,\n-  \"full-revisionid\": str | None,\n-  \"dirty\": bool | None,\n-  \"error\": str | None,\n-  \"date\": str | None,\n-})\n+class Versions(TypedDict):\n+    version: str\n+    dirty: bool | None\n+    error: str | None\n+    date: str | None\n \n",
        "source_code_with_indent": "\nVersions = TypedDict(\"Versions\", {\n  \"version\": str,\n  \"full-revisionid\": str | None,\n  \"dirty\": bool | None,\n  \"error\": str | None,\n  \"date\": str | None,\n})\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass Versions(TypedDict):\n    <IND>version: str\n    dirty: bool | None\n    error: str | None\n    date: str | None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/document/locking.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/document/locking.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/document/locking.py:136:44 Incompatible parameter type [6]: Expected `bokeh.server.callbacks.NextTickCallback` for 1st positional only parameter to call `Document.remove_next_tick_callback` but got `SessionCallback`.",
    "message": " Expected `bokeh.server.callbacks.NextTickCallback` for 1st positional only parameter to call `Document.remove_next_tick_callback` but got `SessionCallback`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 136,
    "warning_line": "        self._doc.remove_next_tick_callback(callback)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def remove_next_tick_callback(self, callback: SessionCallback) -> None:\n        ''' Remove a \"next tick\" callback.\n",
        "source_code_len": 120,
        "target_code": "\n    def remove_next_tick_callback(self, callback: NextTickCallback) -> None:\n        ''' Remove a \"next tick\" callback.\n",
        "target_code_len": 121,
        "diff_format": "@@ -128,3 +128,3 @@\n \n-    def remove_next_tick_callback(self, callback: SessionCallback) -> None:\n+    def remove_next_tick_callback(self, callback: NextTickCallback) -> None:\n         ''' Remove a \"next tick\" callback.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def remove_next_tick_callback(self, callback: SessionCallback) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def remove_next_tick_callback(self, callback: NextTickCallback) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/document/models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/document/models.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/document/models.py:134:8 Incompatible return type [7]: Expected `None` but got `typing.Generator[None, None, None]`.",
    "message": " Expected `None` but got `typing.Generator[None, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 134,
    "warning_line": "        yield",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Dict,\n    Iterator,\n",
        "source_code_len": 24,
        "target_code": "    Dict,\n    Generator,\n    Iterator,\n",
        "target_code_len": 39,
        "diff_format": "@@ -29,2 +29,3 @@\n     Dict,\n+    Generator,\n     Iterator,\n",
        "source_code_with_indent": "    Dict,\n    Iterator,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Dict,\n    Generator,\n    Iterator,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @contextlib.contextmanager\n    def freeze(self) -> None:\n        ''' Defer expensive model recompuation until intermediate updates are\n",
        "source_code_len": 139,
        "target_code": "    @contextlib.contextmanager\n    def freeze(self) -> Generator[None, None, None]:\n        ''' Defer expensive model recompuation until intermediate updates are\n",
        "target_code_len": 162,
        "diff_format": "@@ -113,3 +114,3 @@\n     @contextlib.contextmanager\n-    def freeze(self) -> None:\n+    def freeze(self) -> Generator[None, None, None]:\n         ''' Defer expensive model recompuation until intermediate updates are\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@contextlib.contextmanager\n    def freeze(self) -> None:\n        <IND>",
        "target_code_with_indent": "    <DED>@contextlib.contextmanager\n    def freeze(self) -> Generator[None, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "bokeh/util/callback_manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bokeh-bokeh/bokeh/util/callback_manager.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bokeh/util/callback_manager.py:86:34 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `typing.Union[Type[Event], str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `typing.Union[Type[Event], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "            self._event_callbacks[event] = [cb for cb in callbacks]"
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "examples/app/gapminder/main.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/app/gapminder/main.py:81:16 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 1st positional only parameter to call `bokeh.models.widgets.buttons.Button.on_click` but got `typing.Callable(animate)[[], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "examples/reference/models/button_server.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/reference/models/button_server.py:24:16 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 1st positional only parameter to call `bokeh.models.widgets.buttons.Button.on_click` but got `typing.Callable(button_click)[[], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/document/test_document.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/document/test_document.py:950:25 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 1st positional only parameter to call `bokeh.models.widgets.buttons.Button.on_click` but got `typing.Callable[[], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/server/test_util.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/server/test_util.py:76:40 Incompatible parameter type [6]: Expected `typing.Sequence[str]` for 1st positional only parameter to call `util.create_hosts_allowlist` but got `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:352:26 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 2nd positional only parameter to call `cbm.EventCallbackManager.on_event` but got `BoundMethod[typing.Callable(_BadEventCallback.method)[[Named(self, _BadEventCallback)], typing.Any], _BadEventCallback]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:359:26 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 2nd positional only parameter to call `cbm.EventCallbackManager.on_event` but got `_BadEventCallback`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:373:30 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 2nd positional only parameter to call `cbm.EventCallbackManager.on_event` but got `typing.Callable[[Named(x, typing.Any), Named(y, typing.Any)], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:398:39 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 3rd positional only parameter to call `cbm.EventCallbackManager.on_event` but got `BoundMethod[typing.Callable(_BadEventCallback.method)[[Named(self, _BadEventCallback)], typing.Any], _BadEventCallback]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:416:26 Incompatible parameter type [6]: Expected `typing.Callable[[bokeh.events.Event], None]` for 2nd positional only parameter to call `cbm.EventCallbackManager.on_event` but got `typing.Callable[[], typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "bokeh/bokeh",
    "commit": "75a904132c77cf11e9d7f9ef2bc363cccfa4cada",
    "filename": "tests/unit/bokeh/util/test_callback_manager.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/unit/bokeh/util/test_callback_manager.py:427:25 Incompatible parameter type [6]: Expected `bokeh.events.Event` for 1st positional only parameter to call `cbm.EventCallbackManager._trigger_event` but got `TestEventCallbackManager.test__trigger_event_wraps_curdoc.ev`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]