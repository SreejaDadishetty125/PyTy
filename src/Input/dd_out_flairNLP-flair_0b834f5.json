[
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/data.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/data.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/data.py:889:31 Incompatible variable type [9]: embedding_names is declared to have type `List[str]` but is used as type `None`.",
    "message": " embedding_names is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 889,
    "warning_line": "    def clear_embeddings(self, embedding_names: List[str] = None):"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/data.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/data.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/data.py:1190:31 Incompatible variable type [9]: embedding_names is declared to have type `List[str]` but is used as type `None`.",
    "message": " embedding_names is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1190,
    "warning_line": "    def clear_embeddings(self, embedding_names: List[str] = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\n    def clear_embeddings(self, embedding_names: List[str] = None):\n        if embedding_names is None:\n            self._embeddings = {}\n        else:\n            for name in embedding_names:\n                if name in self._embeddings.keys():\n                    del self._embeddings[name]\n\n",
        "source_code_len": 293,
        "target_code": "\n\n",
        "target_code_len": 2,
        "diff_format": "@@ -1189,9 +1181,2 @@\n \n-    def clear_embeddings(self, embedding_names: List[str] = None):\n-        if embedding_names is None:\n-            self._embeddings = {}\n-        else:\n-            for name in embedding_names:\n-                if name in self._embeddings.keys():\n-                    del self._embeddings[name]\n \n",
        "source_code_with_indent": "\n    <DED><DED><DED><DED>def clear_embeddings(self, embedding_names: List[str] = None):\n        <IND>if embedding_names is None:\n            <IND>self._embeddings = {}\n        <DED>else:\n            <IND>for name in embedding_names:\n                <IND>if name in self._embeddings.keys():\n                    <IND>del self._embeddings[name]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/base.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/base.py:60:42 Incompatible parameter type [6]: Expected `List[Sentence]` for 1st positional only parameter to call `Embeddings._add_embeddings_internal` but got `Union[List[Union[List[Sentence], Sentence]], List[Sentence]]`.",
    "message": " Expected `List[Sentence]` for 1st positional only parameter to call `Embeddings._add_embeddings_internal` but got `Union[List[Union[List[Sentence], Sentence]], List[Sentence]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 60,
    "warning_line": "            self._add_embeddings_internal(sentences)"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/base.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/base.py:62:8 Incompatible return type [7]: Expected `List[Sentence]` but got `Union[List[Union[List[Sentence], Sentence]], List[Sentence]]`.",
    "message": " Expected `List[Sentence]` but got `Union[List[Union[List[Sentence], Sentence]], List[Sentence]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 62,
    "warning_line": "        return sentences"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:45:4 Inconsistent override [15]: `flair.embeddings.image.IdentityImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "message": " `flair.embeddings.image.IdentityImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 45,
    "warning_line": "    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:49:12 Incompatible return type [7]: Expected `List[Image]` but got implicit return value of `None`.",
    "message": " Expected `List[Image]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 49,
    "warning_line": "            image.set_embedding(self.name, self.transforms(image_data))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        for image in images:\n",
        "source_code_len": 106,
        "target_code": "\n    def _add_embeddings_internal(self, images: List[Image]):\n        for image in images:\n",
        "target_code_len": 91,
        "diff_format": "@@ -44,3 +38,3 @@\n \n-    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n+    def _add_embeddings_internal(self, images: List[Image]):\n         for image in images:\n",
        "source_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        <IND>for image in images:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]):\n        <IND>for image in images:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:67:4 Inconsistent override [15]: `flair.embeddings.image.PrecomputedImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "message": " `flair.embeddings.image.PrecomputedImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 67,
    "warning_line": "    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:72:16 Incompatible return type [7]: Expected `List[Image]` but got implicit return value of `None`.",
    "message": " Expected `List[Image]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 72,
    "warning_line": "                image.set_embedding(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        for image in images:\n",
        "source_code_len": 106,
        "target_code": "\n    def _add_embeddings_internal(self, images: List[Image]):\n        for image in images:\n",
        "target_code_len": 91,
        "diff_format": "@@ -66,3 +60,3 @@\n \n-    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n+    def _add_embeddings_internal(self, images: List[Image]):\n         for image in images:\n",
        "source_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        <IND>for image in images:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]):\n        <IND>for image in images:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:133:4 Inconsistent override [15]: `flair.embeddings.image.NetworkImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "message": " `flair.embeddings.image.NetworkImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 133,
    "warning_line": "    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:146:12 Incompatible return type [7]: Expected `List[Image]` but got implicit return value of `None`.",
    "message": " Expected `List[Image]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 146,
    "warning_line": "            image.set_embedding(self.name, image_embeddings[image_id])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        image_tensor = torch.stack([self.transforms(image.data) for image in images])\n",
        "source_code_len": 163,
        "target_code": "\n    def _add_embeddings_internal(self, images: List[Image]):\n        image_tensor = torch.stack([self.transforms(image.data) for image in images])\n",
        "target_code_len": 148,
        "diff_format": "@@ -132,3 +126,3 @@\n \n-    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n+    def _add_embeddings_internal(self, images: List[Image]):\n         image_tensor = torch.stack([self.transforms(image.data) for image in images])\n",
        "source_code_with_indent": "\n    <DED><DED>def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        <IND>image_tensor = torch.stack([self.transforms(image.data) for image in images])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _add_embeddings_internal(self, images: List[Image]):\n        <IND>image_tensor = torch.stack([self.transforms(image.data) for image in images])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:287:4 Inconsistent override [15]: `flair.embeddings.image.ConvTransformNetworkImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "message": " `flair.embeddings.image.ConvTransformNetworkImageEmbeddings._add_embeddings_internal` overrides method defined in `Embeddings` inconsistently. Returned type `List[Image]` is not a subtype of the overridden return `List[flair.data.Sentence]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 287,
    "warning_line": "    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:"
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/image.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/image.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/image.py:291:12 Incompatible return type [7]: Expected `List[Image]` but got implicit return value of `None`.",
    "message": " Expected `List[Image]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 291,
    "warning_line": "            image.set_embedding(self.name, image_embeddings[image_id])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        image_tensor = torch.stack([image.data for image in images])\n",
        "source_code_len": 146,
        "target_code": "\n    def _add_embeddings_internal(self, images: List[Image]):\n        image_tensor = torch.stack([image.data for image in images])\n",
        "target_code_len": 131,
        "diff_format": "@@ -286,3 +280,3 @@\n \n-    def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n+    def _add_embeddings_internal(self, images: List[Image]):\n         image_tensor = torch.stack([image.data for image in images])\n",
        "source_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]) -> List[Image]:\n        <IND>image_tensor = torch.stack([image.data for image in images])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, images: List[Image]):\n        <IND>image_tensor = torch.stack([image.data for image in images])\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:146:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 146,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/glove.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_len": 170,
        "target_code": "            cached_path(f\"{hu_path}/glove.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_len": 175,
        "diff_format": "@@ -145,3 +135,3 @@\n             cached_path(f\"{hu_path}/glove.gensim.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/glove.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/glove.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/glove.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:151:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 151,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/turian.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n\n",
        "source_code_len": 158,
        "target_code": "            cached_path(f\"{hu_path}/turian.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n\n",
        "target_code_len": 163,
        "diff_format": "@@ -150,3 +140,3 @@\n             cached_path(f\"{hu_path}/turian.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/turian.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/turian.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/turian\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:156:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 156,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/extvec.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_len": 172,
        "target_code": "            cached_path(f\"{hu_path}/extvec.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_len": 177,
        "diff_format": "@@ -155,3 +145,3 @@\n             cached_path(f\"{hu_path}/extvec.gensim.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/extvec.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/extvec.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/extvec.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:161:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 161,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_len": 202,
        "target_code": "            cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_len": 207,
        "diff_format": "@@ -160,3 +150,3 @@\n             cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/pubmed_pmc_wiki_sg_1M.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:166:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 166,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_len": 196,
        "target_code": "            cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_len": 201,
        "diff_format": "@@ -165,3 +155,3 @@\n             cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-crawl-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:171:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 171,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/en-fasttext-news-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_len": 194,
        "target_code": "            cached_path(f\"{hu_path}/en-fasttext-news-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_len": 199,
        "diff_format": "@@ -170,3 +160,3 @@\n             cached_path(f\"{hu_path}/en-fasttext-news-300d-1M.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/en-fasttext-news-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/en-fasttext-news-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/en-fasttext-news-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:176:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 176,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/twitter.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_len": 174,
        "target_code": "            cached_path(f\"{hu_path}/twitter.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_len": 179,
        "diff_format": "@@ -175,3 +165,3 @@\n             cached_path(f\"{hu_path}/twitter.gensim.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/twitter.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/twitter.gensim.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/twitter.gensim\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:181:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 181,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_len": 214,
        "target_code": "            cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_len": 219,
        "diff_format": "@@ -180,3 +170,3 @@\n             cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:186:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 186,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_len": 222,
        "target_code": "            cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_len": 227,
        "diff_format": "@@ -185,3 +175,3 @@\n             cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-wiki-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:191:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 191,
    "warning_line": "            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_len": 224,
        "target_code": "            cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_len": 229,
        "diff_format": "@@ -190,3 +180,3 @@\n             cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n-            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n+            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n \n",
        "source_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M.vectors.npy\", cache_dir=cache_dir)\n            embeddings_path = cached_path(f\"{hu_path}/{embeddings[:2]}-crawl-fasttext-300d-1M\", cache_dir=cache_dir)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:807:8 Incompatible attribute type [8]: Attribute `embedding_length` declared in class `PooledFlairEmbeddings` has type `BoundMethod[typing.Callable(PooledFlairEmbeddings.embedding_length)[[Named(self, PooledFlairEmbeddings)], int], PooledFlairEmbeddings]` but is used as type `int`.",
    "message": " Attribute `embedding_length` declared in class `PooledFlairEmbeddings` has type `BoundMethod[typing.Callable(PooledFlairEmbeddings.embedding_length)[[Named(self, PooledFlairEmbeddings)], int], PooledFlairEmbeddings]` but is used as type `int`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 807,
    "warning_line": "        self.embedding_length = self.context_embeddings.embedding_length * 2",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            self.context_embeddings: FlairEmbeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        self.embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_len": 300,
        "target_code": "        else:\n            self.context_embeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        self.__embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "target_code_len": 285,
        "diff_format": "@@ -803,6 +795,6 @@\n         else:\n-            self.context_embeddings: FlairEmbeddings = contextual_embeddings\n+            self.context_embeddings = contextual_embeddings\n \n         # length is twice the original character LM embedding length\n-        self.embedding_length = self.context_embeddings.embedding_length * 2\n+        self.__embedding_length = self.context_embeddings.embedding_length * 2\n         self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_with_indent": "        <DED>else:\n            <IND>self.context_embeddings: FlairEmbeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        <DED>self.embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>else:\n            <IND>self.context_embeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        <DED>self.__embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:882:8 Incompatible return type [7]: Expected `int` but got `BoundMethod[typing.Callable(PooledFlairEmbeddings.embedding_length)[[Named(self, PooledFlairEmbeddings)], int], PooledFlairEmbeddings]`.",
    "message": " Expected `int` but got `BoundMethod[typing.Callable(PooledFlairEmbeddings.embedding_length)[[Named(self, PooledFlairEmbeddings)], int], PooledFlairEmbeddings]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 882,
    "warning_line": "        return self.embedding_length",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            self.context_embeddings: FlairEmbeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        self.embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_len": 300,
        "target_code": "        else:\n            self.context_embeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        self.__embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "target_code_len": 285,
        "diff_format": "@@ -803,6 +795,6 @@\n         else:\n-            self.context_embeddings: FlairEmbeddings = contextual_embeddings\n+            self.context_embeddings = contextual_embeddings\n \n         # length is twice the original character LM embedding length\n-        self.embedding_length = self.context_embeddings.embedding_length * 2\n+        self.__embedding_length = self.context_embeddings.embedding_length * 2\n         self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_with_indent": "        <DED>else:\n            <IND>self.context_embeddings: FlairEmbeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        <DED>self.embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>else:\n            <IND>self.context_embeddings = contextual_embeddings\n\n        # length is twice the original character LM embedding length\n        <DED>self.__embedding_length = self.context_embeddings.embedding_length * 2\n        self.name = self.context_embeddings.name + \"-context\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def embedding_length(self) -> int:\n        return self.embedding_length\n\n",
        "source_code_len": 77,
        "target_code": "    def embedding_length(self) -> int:\n        return self.__embedding_length\n\n",
        "target_code_len": 79,
        "diff_format": "@@ -881,3 +873,3 @@\n     def embedding_length(self) -> int:\n-        return self.embedding_length\n+        return self.__embedding_length\n \n",
        "source_code_with_indent": "    <DED>def embedding_length(self) -> int:\n        <IND>return self.embedding_length\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def embedding_length(self) -> int:\n        <IND>return self.__embedding_length\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:1216:16 Incompatible return type [7]: Expected `List[Sentence]` but got implicit return value of `None`.",
    "message": " Expected `List[Sentence]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1216,
    "warning_line": "                sentence = original_sentence",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _add_embeddings_internal(self, sentences: List[Sentence]) -> List[Sentence]:\n\n",
        "source_code_len": 87,
        "target_code": "\n    def _add_embeddings_internal(self, sentences: List[Sentence]):\n\n",
        "target_code_len": 69,
        "diff_format": "@@ -1044,3 +1036,3 @@\n \n-    def _add_embeddings_internal(self, sentences: List[Sentence]) -> List[Sentence]:\n+    def _add_embeddings_internal(self, sentences: List[Sentence]):\n \n",
        "source_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, sentences: List[Sentence]) -> List[Sentence]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _add_embeddings_internal(self, sentences: List[Sentence]):\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:1475:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1475,
    "warning_line": "            embeddings = cached_path(f\"{embeddings}\", cache_dir=cache_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if use_local:\n            if not Path(embeddings).exists():\n                raise ValueError(\n",
        "source_code_len": 102,
        "target_code": "        if use_local:\n            embeddings_path = Path(embeddings)\n            if not embeddings_path.exists():\n                raise ValueError(\n",
        "target_code_len": 148,
        "diff_format": "@@ -1469,3 +1459,4 @@\n         if use_local:\n-            if not Path(embeddings).exists():\n+            embeddings_path = Path(embeddings)\n+            if not embeddings_path.exists():\n                 raise ValueError(\n",
        "source_code_with_indent": "        if use_local:\n            <IND>if not Path(embeddings).exists():\n                <IND>raise ValueError(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if use_local:\n            <IND>embeddings_path = Path(embeddings)\n            if not embeddings_path.exists():\n                <IND>raise ValueError(\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        else:\n            embeddings = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n\n        self.embeddings = embeddings\n\n        self.name: str = str(embeddings)\n\n",
        "source_code_len": 170,
        "target_code": "        else:\n            embeddings_path = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n\n        self.embeddings = embeddings_path\n\n        self.name: str = str(embeddings_path)\n\n",
        "target_code_len": 185,
        "diff_format": "@@ -1474,7 +1465,7 @@\n         else:\n-            embeddings = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n-\n-        self.embeddings = embeddings\n-\n-        self.name: str = str(embeddings)\n+            embeddings_path = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n+\n+        self.embeddings = embeddings_path\n+\n+        self.name: str = str(embeddings_path)\n \n",
        "source_code_with_indent": "        <DED><DED>else:\n            <IND>embeddings = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n\n        <DED>self.embeddings = embeddings\n\n        self.name: str = str(embeddings)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>else:\n            <IND>embeddings_path = cached_path(f\"{embeddings}\", cache_dir=cache_dir)\n\n        <DED>self.embeddings = embeddings_path\n\n        self.name: str = str(embeddings_path)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "flair/embeddings/token.py:1862:12 Incompatible variable type [9]: dim is declared to have type `int` but is used as type `None`.",
    "message": " dim is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1862,
    "warning_line": "            dim = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            ), \"Need to specify model_file_path and embedding_file_path if no language is given in BytePairEmbeddings(...)\"\n            dim = None\n\n",
        "source_code_len": 148,
        "target_code": "            ), \"Need to specify model_file_path and embedding_file_path if no language is given in BytePairEmbeddings(...)\"\n            dim = None  # type: ignore\n\n",
        "target_code_len": 164,
        "diff_format": "@@ -1861,3 +1850,3 @@\n             ), \"Need to specify model_file_path and embedding_file_path if no language is given in BytePairEmbeddings(...)\"\n-            dim = None\n+            dim = None  # type: ignore\n \n",
        "source_code_with_indent": "            ), \"Need to specify model_file_path and embedding_file_path if no language is given in BytePairEmbeddings(...)\"\n            dim = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            ), \"Need to specify model_file_path and embedding_file_path if no language is given in BytePairEmbeddings(...)\"\n            dim = None  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:2082:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2082,
    "warning_line": "            embeddings = cached_path(",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            )\n            embeddings = cached_path(\n                f\"{base_path}{embeddings}/{embeddings}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_len": 141,
        "target_code": "            )\n            embeddings_path = cached_path(\n                f\"{base_path}{embeddings}/{embeddings}_s{size}.zip\", cache_dir=cache_dir\n",
        "target_code_len": 146,
        "diff_format": "@@ -2081,3 +2070,3 @@\n             )\n-            embeddings = cached_path(\n+            embeddings_path = cached_path(\n                 f\"{base_path}{embeddings}/{embeddings}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_with_indent": "            )\n            embeddings = cached_path(\n                f\"{base_path}{embeddings}/{embeddings}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            )\n            embeddings_path = cached_path(\n                f\"{base_path}{embeddings}/{embeddings}_s{size}.zip\", cache_dir=cache_dir\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "0b834f5167d11f06037398fcbe1554f244167e18",
    "filename": "flair/embeddings/token.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/embeddings/token.py",
    "file_hunks_size": 51,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/embeddings/token.py:2090:12 Incompatible variable type [9]: embeddings is declared to have type `str` but is used as type `Path`.",
    "message": " embeddings is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2090,
    "warning_line": "            embeddings = cached_path(",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            )\n            embeddings = cached_path(\n                f\"{base_path}{embeddings}/{model}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_len": 136,
        "target_code": "            )\n            embeddings_path = cached_path(\n                f\"{base_path}{embeddings}/{model}_s{size}.zip\", cache_dir=cache_dir\n",
        "target_code_len": 141,
        "diff_format": "@@ -2089,3 +2078,3 @@\n             )\n-            embeddings = cached_path(\n+            embeddings_path = cached_path(\n                 f\"{base_path}{embeddings}/{model}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_with_indent": "            )\n            embeddings = cached_path(\n                f\"{base_path}{embeddings}/{model}_s{size}.zip\", cache_dir=cache_dir\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            )\n            embeddings_path = cached_path(\n                f\"{base_path}{embeddings}/{model}_s{size}.zip\", cache_dir=cache_dir\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]