[
  {
    "project": "robinhood/faust",
    "commit": "69b17f4501b3363f95868d0aab562942b0f89847",
    "filename": "faust/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/robinhood-faust/faust/app.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "faust/app.py:99:27 Incompatible parameter type [6]: Expected `asyncio.tasks.Task[typing.Any]` for 1st positional only parameter to call `Mapping.__getitem__` but got `Optional[asyncio.tasks.Task[typing.Any]]`.",
    "message": " Expected `asyncio.tasks.Task[typing.Any]` for 1st positional only parameter to call `Mapping.__getitem__` but got `Optional[asyncio.tasks.Task[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 99,
    "warning_line": "        return TASK_TO_APP[asyncio.Task.current_task(loop=self.loop)]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\nTASK_TO_APP: MutableMapping[asyncio.Task, AppT] = WeakKeyDictionary()\n\n",
        "source_code_len": 72,
        "target_code": "\n# type: ignore\nTASK_TO_APP: WeakKeyDictionary = WeakKeyDictionary()\n\n",
        "target_code_len": 70,
        "diff_format": "@@ -40,3 +39,4 @@\n \n-TASK_TO_APP: MutableMapping[asyncio.Task, AppT] = WeakKeyDictionary()\n+# type: ignore\n+TASK_TO_APP: WeakKeyDictionary = WeakKeyDictionary()\n \n",
        "source_code_with_indent": "\nTASK_TO_APP: MutableMapping[asyncio.Task, AppT] = WeakKeyDictionary()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n# type: ignore\nTASK_TO_APP: WeakKeyDictionary = WeakKeyDictionary()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "robinhood/faust",
    "commit": "69b17f4501b3363f95868d0aab562942b0f89847",
    "filename": "faust/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/robinhood-faust/faust/app.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/app.py:251:8 Incompatible return type [7]: Expected `asyncio.futures.Future[typing.Any]` but got `typing.Coroutine[typing.Any, typing.Any, None]`.",
    "message": " Expected `asyncio.futures.Future[typing.Any]` but got `typing.Coroutine[typing.Any, typing.Any, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 251,
    "warning_line": "        return fut"
  },
  {
    "project": "robinhood/faust",
    "commit": "69b17f4501b3363f95868d0aab562942b0f89847",
    "filename": "faust/codecs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/robinhood-faust/faust/codecs.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/codecs.py:299:11 Unsupported operand [58]: `|` is not supported for operand types `Union[CodecT, str]` and `CodecT`.",
    "message": " `|` is not supported for operand types `Union[CodecT, str]` and `CodecT`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 299,
    "warning_line": "    return codecs.get(a, a) | codecs[b]"
  },
  {
    "project": "robinhood/faust",
    "commit": "69b17f4501b3363f95868d0aab562942b0f89847",
    "filename": "faust/codecs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/robinhood-faust/faust/codecs.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/codecs.py:299:22 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `typing.Mapping.get` but got `Union[CodecT, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `typing.Mapping.get` but got `Union[CodecT, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 299,
    "warning_line": "    return codecs.get(a, a) | codecs[b]"
  },
  {
    "project": "robinhood/faust",
    "commit": "69b17f4501b3363f95868d0aab562942b0f89847",
    "filename": "faust/codecs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/robinhood-faust/faust/codecs.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/codecs.py:309:38 Incompatible parameter type [6]: Expected `typing.Callable[[Variable[functools._T], Variable[functools._T]], Variable[functools._T]]` for 1st positional only parameter to call `reduce` but got `typing.Callable(_reduce_node)[[Named(a, Union[CodecT, str]), Named(b, str)], CodecT]`.",
    "message": " Expected `typing.Callable[[Variable[functools._T], Variable[functools._T]], Variable[functools._T]]` for 1st positional only parameter to call `reduce` but got `typing.Callable(_reduce_node)[[Named(a, Union[CodecT, str]), Named(b, str)], CodecT]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 309,
    "warning_line": "            return cast(Codec, reduce(_reduce_node, nodes))"
  }
]