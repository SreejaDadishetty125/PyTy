[
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/language_model_trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/language_model_trainer.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/language_model_trainer.py:121:12 Unsupported operand [58]: `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "message": " `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 121,
    "warning_line": "            path / \"train\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if type(path) == str:\n            path = Path(path)\n\n",
        "source_code_len": 62,
        "target_code": "\n        path = Path(path)\n\n",
        "target_code_len": 28,
        "diff_format": "@@ -116,4 +114,3 @@\n \n-        if type(path) == str:\n-            path = Path(path)\n+        path = Path(path)\n \n",
        "source_code_with_indent": "\n        if type(path) == str:\n            <IND>path = Path(path)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        path = Path(path)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/language_model_trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/language_model_trainer.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/language_model_trainer.py:133:12 Unsupported operand [58]: `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "message": " `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 133,
    "warning_line": "            path / \"valid.txt\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if type(path) == str:\n            path = Path(path)\n\n",
        "source_code_len": 62,
        "target_code": "\n        path = Path(path)\n\n",
        "target_code_len": 28,
        "diff_format": "@@ -116,4 +114,3 @@\n \n-        if type(path) == str:\n-            path = Path(path)\n+        path = Path(path)\n \n",
        "source_code_with_indent": "\n        if type(path) == str:\n            <IND>path = Path(path)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        path = Path(path)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/language_model_trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/language_model_trainer.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/language_model_trainer.py:143:12 Unsupported operand [58]: `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "message": " `/` is not supported for operand types `Union[Path, str]` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 143,
    "warning_line": "            path / \"test.txt\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        if type(path) == str:\n            path = Path(path)\n\n",
        "source_code_len": 62,
        "target_code": "\n        path = Path(path)\n\n",
        "target_code_len": 28,
        "diff_format": "@@ -116,4 +114,3 @@\n \n-        if type(path) == str:\n-            path = Path(path)\n+        path = Path(path)\n \n",
        "source_code_with_indent": "\n        if type(path) == str:\n            <IND>path = Path(path)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        path = Path(path)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/trainer.py",
    "file_hunks_size": 30,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/trainer.py:120:12 Incompatible variable type [9]: optimizer_state_dict is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " optimizer_state_dict is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 120,
    "warning_line": "            optimizer_state_dict: Optional = None,"
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/trainer.py",
    "file_hunks_size": 30,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/trainer.py:121:12 Incompatible variable type [9]: scheduler_state_dict is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " scheduler_state_dict is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 121,
    "warning_line": "            scheduler_state_dict: Optional = None,"
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/trainer.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/trainer.py:472:44 Incompatible parameter type [6]: Expected `Union[typing.Type[typing.Any], typing.Tuple[typing.Type[typing.Any], ...]]` for 2nd positional only parameter to call `isinstance` but got `typing._SpecialForm`.",
    "message": " Expected `Union[typing.Type[typing.Any], typing.Tuple[typing.Type[typing.Any], ...]]` for 2nd positional only parameter to call `isinstance` but got `typing._SpecialForm`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 472,
    "warning_line": "                        if isinstance(loss, Tuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n                        if isinstance(loss, Tuple):\n                            average_over += loss[1]\n",
        "source_code_len": 105,
        "target_code": "\n                        if isinstance(loss, tuple):\n                            average_over += loss[1]\n",
        "target_code_len": 105,
        "diff_format": "@@ -471,3 +472,3 @@\n \n-                        if isinstance(loss, Tuple):\n+                        if isinstance(loss, tuple):\n                             average_over += loss[1]\n",
        "source_code_with_indent": "\n                        if isinstance(loss, Tuple):\n                            <IND>average_over += loss[1]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n                        if isinstance(loss, tuple):\n                            <IND>average_over += loss[1]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/trainer.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/trainer.py:778:8 Incompatible attribute type [8]: Attribute `model` declared in class `ModelTrainer` has type `flair.nn.model.Model` but is used as type `Optional[flair.nn.model.Model]`.",
    "message": " Attribute `model` declared in class `ModelTrainer` has type `flair.nn.model.Model` but is used as type `Optional[flair.nn.model.Model]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 778,
    "warning_line": "        self.model = model",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def resume(self,\n               model: Optional[Model],\n               **trainer_args,\n",
        "source_code_len": 91,
        "target_code": "    def resume(self,\n               model: Model,\n               **trainer_args,\n",
        "target_code_len": 81,
        "diff_format": "@@ -773,3 +777,3 @@\n     def resume(self,\n-               model: Optional[Model],\n+               model: Model,\n                **trainer_args,\n",
        "source_code_with_indent": "    <DED>def resume(self,\n               model: Optional[Model],\n               **trainer_args,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def resume(self,\n               model: Model,\n               **trainer_args,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "flairNLP/flair",
    "commit": "61d62a046c45382bc4a016e1acd88959c95f3054",
    "filename": "flair/trainers/trainer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/flairNLP-flair/flair/trainers/trainer.py",
    "file_hunks_size": 30,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "flair/trainers/trainer.py:929:36 Incompatible parameter type [6]: Expected `Union[typing.Type[typing.Any], typing.Tuple[typing.Type[typing.Any], ...]]` for 2nd positional only parameter to call `isinstance` but got `typing._SpecialForm`.",
    "message": " Expected `Union[typing.Type[typing.Any], typing.Tuple[typing.Type[typing.Any], ...]]` for 2nd positional only parameter to call `isinstance` but got `typing._SpecialForm`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 929,
    "warning_line": "                if isinstance(loss, Tuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                loss = self.model.forward_loss(batch)\n                if isinstance(loss, Tuple):\n                    loss = loss[0]\n",
        "source_code_len": 133,
        "target_code": "                loss = self.model.forward_loss(batch)\n                if isinstance(loss, tuple):\n                    loss = loss[0]\n",
        "target_code_len": 133,
        "diff_format": "@@ -928,3 +930,3 @@\n                 loss = self.model.forward_loss(batch)\n-                if isinstance(loss, Tuple):\n+                if isinstance(loss, tuple):\n                     loss = loss[0]\n",
        "source_code_with_indent": "                loss = self.model.forward_loss(batch)\n                if isinstance(loss, Tuple):\n                    <IND>loss = loss[0]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                loss = self.model.forward_loss(batch)\n                if isinstance(loss, tuple):\n                    <IND>loss = loss[0]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]