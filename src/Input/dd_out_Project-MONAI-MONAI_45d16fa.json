[
  {
    "project": "Project-MONAI/MONAI",
    "commit": "45d16fadf8a2bc018dac996ba542790881f88d59",
    "filename": "monai/apps/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Project-MONAI-MONAI/monai/apps/utils.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "monai/apps/utils.py:23:29 Incompatible variable type [9]: md5_value is declared to have type `str` but is used as type `None`.",
    "message": " md5_value is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 23,
    "warning_line": "def check_md5(filepath: str, md5_value: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport os\n",
        "source_code_len": 11,
        "target_code": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_len": 40,
        "diff_format": "@@ -11,2 +11,4 @@\n \n+from typing import Optional\n+\n import os\n",
        "source_code_with_indent": "\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef check_md5(filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    \"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -22,3 +25,3 @@\n \n-def check_md5(filepath: str, md5_value: str = None):\n+def check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef check_md5(filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    <IND>"
      }
    ]
  },
  {
    "project": "Project-MONAI/MONAI",
    "commit": "45d16fadf8a2bc018dac996ba542790881f88d59",
    "filename": "monai/apps/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Project-MONAI-MONAI/monai/apps/utils.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "monai/apps/utils.py:45:42 Incompatible variable type [9]: md5_value is declared to have type `str` but is used as type `None`.",
    "message": " md5_value is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 45,
    "warning_line": "def download_url(url: str, filepath: str, md5_value: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport os\n",
        "source_code_len": 11,
        "target_code": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_len": 40,
        "diff_format": "@@ -11,2 +11,4 @@\n \n+from typing import Optional\n+\n import os\n",
        "source_code_with_indent": "\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef check_md5(filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    \"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -22,3 +25,3 @@\n \n-def check_md5(filepath: str, md5_value: str = None):\n+def check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef check_md5(filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef download_url(url: str, filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 75,
        "target_code": "\ndef download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n    \"\"\"\n",
        "target_code_len": 93,
        "diff_format": "@@ -44,3 +47,3 @@\n \n-def download_url(url: str, filepath: str, md5_value: str = None):\n+def download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def download_url(url: str, filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\n<DED>def download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n    <IND>"
      }
    ]
  },
  {
    "project": "Project-MONAI/MONAI",
    "commit": "45d16fadf8a2bc018dac996ba542790881f88d59",
    "filename": "monai/apps/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Project-MONAI-MONAI/monai/apps/utils.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "monai/apps/utils.py:91:47 Incompatible variable type [9]: md5_value is declared to have type `str` but is used as type `None`.",
    "message": " md5_value is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 91,
    "warning_line": "def extractall(filepath: str, output_dir: str, md5_value: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport os\n",
        "source_code_len": 11,
        "target_code": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_len": 40,
        "diff_format": "@@ -11,2 +11,4 @@\n \n+from typing import Optional\n+\n import os\n",
        "source_code_with_indent": "\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef check_md5(filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    \"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -22,3 +25,3 @@\n \n-def check_md5(filepath: str, md5_value: str = None):\n+def check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef check_md5(filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef extractall(filepath: str, output_dir: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 80,
        "target_code": "\ndef extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    \"\"\"\n",
        "target_code_len": 98,
        "diff_format": "@@ -90,3 +93,3 @@\n \n-def extractall(filepath: str, output_dir: str, md5_value: str = None):\n+def extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def extractall(filepath: str, output_dir: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>def extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    <IND>"
      }
    ]
  },
  {
    "project": "Project-MONAI/MONAI",
    "commit": "45d16fadf8a2bc018dac996ba542790881f88d59",
    "filename": "monai/apps/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Project-MONAI-MONAI/monai/apps/utils.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "monai/apps/utils.py:126:67 Incompatible variable type [9]: md5_value is declared to have type `str` but is used as type `None`.",
    "message": " md5_value is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 126,
    "warning_line": "def download_and_extract(url: str, filepath: str, output_dir: str, md5_value: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nimport os\n",
        "source_code_len": 11,
        "target_code": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_len": 40,
        "diff_format": "@@ -11,2 +11,4 @@\n \n+from typing import Optional\n+\n import os\n",
        "source_code_with_indent": "\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import Optional\n\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef check_md5(filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 62,
        "target_code": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    \"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -22,3 +25,3 @@\n \n-def check_md5(filepath: str, md5_value: str = None):\n+def check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef check_md5(filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\ndef check_md5(filepath: str, md5_value: Optional[str] = None) -> bool:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef download_url(url: str, filepath: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 75,
        "target_code": "\ndef download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n    \"\"\"\n",
        "target_code_len": 93,
        "diff_format": "@@ -44,3 +47,3 @@\n \n-def download_url(url: str, filepath: str, md5_value: str = None):\n+def download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def download_url(url: str, filepath: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\n<DED>def download_url(url: str, filepath: str, md5_value: Optional[str] = None) -> None:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef extractall(filepath: str, output_dir: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 80,
        "target_code": "\ndef extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    \"\"\"\n",
        "target_code_len": 98,
        "diff_format": "@@ -90,3 +93,3 @@\n \n-def extractall(filepath: str, output_dir: str, md5_value: str = None):\n+def extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def extractall(filepath: str, output_dir: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>def extractall(filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef download_and_extract(url: str, filepath: str, output_dir: str, md5_value: str = None):\n    \"\"\"\n",
        "source_code_len": 100,
        "target_code": "\ndef download_and_extract(url: str, filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    \"\"\"\n",
        "target_code_len": 118,
        "diff_format": "@@ -125,3 +128,3 @@\n \n-def download_and_extract(url: str, filepath: str, output_dir: str, md5_value: str = None):\n+def download_and_extract(url: str, filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def download_and_extract(url: str, filepath: str, output_dir: str, md5_value: str = None):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>def download_and_extract(url: str, filepath: str, output_dir: str, md5_value: Optional[str] = None) -> None:\n    <IND>"
      }
    ]
  }
]