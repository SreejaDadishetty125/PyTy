[
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:17:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_object_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_object_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 17,
    "warning_line": "    def visit_object_rtype(self, left: ObjectRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:20:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_user_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_user_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 20,
    "warning_line": "    def visit_user_rtype(self, left: UserRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:23:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_optional_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_optional_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 23,
    "warning_line": "    def visit_optional_rtype(self, left: OptionalRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:27:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_int_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_int_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 27,
    "warning_line": "    def visit_int_rtype(self, left: IntRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:30:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_bool_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_bool_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 30,
    "warning_line": "    def visit_bool_rtype(self, left: BoolRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:33:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 33,
    "warning_line": "    def visit_tuple_rtype(self, left: TupleRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:38:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_sequence_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_sequence_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 38,
    "warning_line": "    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:41:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_none_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_none_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 41,
    "warning_line": "    def visit_none_rtype(self, left: NoneRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:44:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_list_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_list_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 44,
    "warning_line": "    def visit_list_rtype(self, left: ListRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:47:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_dict_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_dict_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 47,
    "warning_line": "    def visit_dict_rtype(self, left: DictRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/sametype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/sametype.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/sametype.py:50:4 Inconsistent override [14]: `mypyc.sametype.SameTypeVisitor.visit_unicode_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.sametype.SameTypeVisitor.visit_unicode_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 50,
    "warning_line": "    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:28:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_object_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_object_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 28,
    "warning_line": "    def visit_object_rtype(self, left: ObjectRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:31:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_user_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_user_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 31,
    "warning_line": "    def visit_user_rtype(self, left: UserRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:35:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_optional_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_optional_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 35,
    "warning_line": "    def visit_optional_rtype(self, left: OptionalRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:39:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_int_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_int_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 39,
    "warning_line": "    def visit_int_rtype(self, left: IntRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:42:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_bool_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_bool_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 42,
    "warning_line": "    def visit_bool_rtype(self, left: BoolRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:45:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 45,
    "warning_line": "    def visit_tuple_rtype(self, left: TupleRType) -> bool:"
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:53:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_sequence_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_sequence_tuple_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 53,
    "warning_line": "    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        return False\n\n    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        return isinstance(self.right, SequenceTupleRType)\n\n    def visit_none_rtype(self, left: NoneRType) -> bool:\n        return isinstance(self.right, NoneRType)\n\n    def visit_list_rtype(self, left: ListRType) -> bool:\n        return isinstance(self.right, ListRType)\n\n    def visit_dict_rtype(self, left: DictRType) -> bool:\n        return isinstance(self.right, DictRType)\n\n    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        return isinstance(self.right, UnicodeRType)\n",
        "source_code_len": 593,
        "target_code": "        return False\n",
        "target_code_len": 21,
        "diff_format": "@@ -51,16 +47,1 @@\n         return False\n-\n-    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n-        return isinstance(self.right, SequenceTupleRType)\n-\n-    def visit_none_rtype(self, left: NoneRType) -> bool:\n-        return isinstance(self.right, NoneRType)\n-\n-    def visit_list_rtype(self, left: ListRType) -> bool:\n-        return isinstance(self.right, ListRType)\n-\n-    def visit_dict_rtype(self, left: DictRType) -> bool:\n-        return isinstance(self.right, DictRType)\n-\n-    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n-        return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent": "        <DED>return False\n\n    <DED>def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        <IND>return isinstance(self.right, SequenceTupleRType)\n\n    <DED>def visit_none_rtype(self, left: NoneRType) -> bool:\n        <IND>return isinstance(self.right, NoneRType)\n\n    <DED>def visit_list_rtype(self, left: ListRType) -> bool:\n        <IND>return isinstance(self.right, ListRType)\n\n    <DED>def visit_dict_rtype(self, left: DictRType) -> bool:\n        <IND>return isinstance(self.right, DictRType)\n\n    <DED>def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        <IND>return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:56:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_none_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_none_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 56,
    "warning_line": "    def visit_none_rtype(self, left: NoneRType) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        return False\n\n    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        return isinstance(self.right, SequenceTupleRType)\n\n    def visit_none_rtype(self, left: NoneRType) -> bool:\n        return isinstance(self.right, NoneRType)\n\n    def visit_list_rtype(self, left: ListRType) -> bool:\n        return isinstance(self.right, ListRType)\n\n    def visit_dict_rtype(self, left: DictRType) -> bool:\n        return isinstance(self.right, DictRType)\n\n    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        return isinstance(self.right, UnicodeRType)\n",
        "source_code_len": 593,
        "target_code": "        return False\n",
        "target_code_len": 21,
        "diff_format": "@@ -51,16 +47,1 @@\n         return False\n-\n-    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n-        return isinstance(self.right, SequenceTupleRType)\n-\n-    def visit_none_rtype(self, left: NoneRType) -> bool:\n-        return isinstance(self.right, NoneRType)\n-\n-    def visit_list_rtype(self, left: ListRType) -> bool:\n-        return isinstance(self.right, ListRType)\n-\n-    def visit_dict_rtype(self, left: DictRType) -> bool:\n-        return isinstance(self.right, DictRType)\n-\n-    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n-        return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent": "        <DED>return False\n\n    <DED>def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        <IND>return isinstance(self.right, SequenceTupleRType)\n\n    <DED>def visit_none_rtype(self, left: NoneRType) -> bool:\n        <IND>return isinstance(self.right, NoneRType)\n\n    <DED>def visit_list_rtype(self, left: ListRType) -> bool:\n        <IND>return isinstance(self.right, ListRType)\n\n    <DED>def visit_dict_rtype(self, left: DictRType) -> bool:\n        <IND>return isinstance(self.right, DictRType)\n\n    <DED>def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        <IND>return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:59:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_list_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_list_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 59,
    "warning_line": "    def visit_list_rtype(self, left: ListRType) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        return False\n\n    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        return isinstance(self.right, SequenceTupleRType)\n\n    def visit_none_rtype(self, left: NoneRType) -> bool:\n        return isinstance(self.right, NoneRType)\n\n    def visit_list_rtype(self, left: ListRType) -> bool:\n        return isinstance(self.right, ListRType)\n\n    def visit_dict_rtype(self, left: DictRType) -> bool:\n        return isinstance(self.right, DictRType)\n\n    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        return isinstance(self.right, UnicodeRType)\n",
        "source_code_len": 593,
        "target_code": "        return False\n",
        "target_code_len": 21,
        "diff_format": "@@ -51,16 +47,1 @@\n         return False\n-\n-    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n-        return isinstance(self.right, SequenceTupleRType)\n-\n-    def visit_none_rtype(self, left: NoneRType) -> bool:\n-        return isinstance(self.right, NoneRType)\n-\n-    def visit_list_rtype(self, left: ListRType) -> bool:\n-        return isinstance(self.right, ListRType)\n-\n-    def visit_dict_rtype(self, left: DictRType) -> bool:\n-        return isinstance(self.right, DictRType)\n-\n-    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n-        return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent": "        <DED>return False\n\n    <DED>def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        <IND>return isinstance(self.right, SequenceTupleRType)\n\n    <DED>def visit_none_rtype(self, left: NoneRType) -> bool:\n        <IND>return isinstance(self.right, NoneRType)\n\n    <DED>def visit_list_rtype(self, left: ListRType) -> bool:\n        <IND>return isinstance(self.right, ListRType)\n\n    <DED>def visit_dict_rtype(self, left: DictRType) -> bool:\n        <IND>return isinstance(self.right, DictRType)\n\n    <DED>def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        <IND>return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:62:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_dict_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_dict_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 62,
    "warning_line": "    def visit_dict_rtype(self, left: DictRType) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        return False\n\n    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        return isinstance(self.right, SequenceTupleRType)\n\n    def visit_none_rtype(self, left: NoneRType) -> bool:\n        return isinstance(self.right, NoneRType)\n\n    def visit_list_rtype(self, left: ListRType) -> bool:\n        return isinstance(self.right, ListRType)\n\n    def visit_dict_rtype(self, left: DictRType) -> bool:\n        return isinstance(self.right, DictRType)\n\n    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        return isinstance(self.right, UnicodeRType)\n",
        "source_code_len": 593,
        "target_code": "        return False\n",
        "target_code_len": 21,
        "diff_format": "@@ -51,16 +47,1 @@\n         return False\n-\n-    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n-        return isinstance(self.right, SequenceTupleRType)\n-\n-    def visit_none_rtype(self, left: NoneRType) -> bool:\n-        return isinstance(self.right, NoneRType)\n-\n-    def visit_list_rtype(self, left: ListRType) -> bool:\n-        return isinstance(self.right, ListRType)\n-\n-    def visit_dict_rtype(self, left: DictRType) -> bool:\n-        return isinstance(self.right, DictRType)\n-\n-    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n-        return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent": "        <DED>return False\n\n    <DED>def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        <IND>return isinstance(self.right, SequenceTupleRType)\n\n    <DED>def visit_none_rtype(self, left: NoneRType) -> bool:\n        <IND>return isinstance(self.right, NoneRType)\n\n    <DED>def visit_list_rtype(self, left: ListRType) -> bool:\n        <IND>return isinstance(self.right, ListRType)\n\n    <DED>def visit_dict_rtype(self, left: DictRType) -> bool:\n        <IND>return isinstance(self.right, DictRType)\n\n    <DED>def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        <IND>return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python/mypy",
    "commit": "bf5a31a1bca7bd72577a28d671a996f0a7668a14",
    "filename": "mypyc/subtype.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-mypy/mypyc/subtype.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mypyc/subtype.py:65:4 Inconsistent override [14]: `mypyc.subtype.SubtypeVisitor.visit_unicode_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "message": " `mypyc.subtype.SubtypeVisitor.visit_unicode_rtype` overrides method defined in `RTypeVisitor` inconsistently. Could not find parameter `typ` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 65,
    "warning_line": "    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        return False\n\n    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        return isinstance(self.right, SequenceTupleRType)\n\n    def visit_none_rtype(self, left: NoneRType) -> bool:\n        return isinstance(self.right, NoneRType)\n\n    def visit_list_rtype(self, left: ListRType) -> bool:\n        return isinstance(self.right, ListRType)\n\n    def visit_dict_rtype(self, left: DictRType) -> bool:\n        return isinstance(self.right, DictRType)\n\n    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        return isinstance(self.right, UnicodeRType)\n",
        "source_code_len": 593,
        "target_code": "        return False\n",
        "target_code_len": 21,
        "diff_format": "@@ -51,16 +47,1 @@\n         return False\n-\n-    def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n-        return isinstance(self.right, SequenceTupleRType)\n-\n-    def visit_none_rtype(self, left: NoneRType) -> bool:\n-        return isinstance(self.right, NoneRType)\n-\n-    def visit_list_rtype(self, left: ListRType) -> bool:\n-        return isinstance(self.right, ListRType)\n-\n-    def visit_dict_rtype(self, left: DictRType) -> bool:\n-        return isinstance(self.right, DictRType)\n-\n-    def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n-        return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent": "        <DED>return False\n\n    <DED>def visit_sequence_tuple_rtype(self, left: SequenceTupleRType) -> bool:\n        <IND>return isinstance(self.right, SequenceTupleRType)\n\n    <DED>def visit_none_rtype(self, left: NoneRType) -> bool:\n        <IND>return isinstance(self.right, NoneRType)\n\n    <DED>def visit_list_rtype(self, left: ListRType) -> bool:\n        <IND>return isinstance(self.right, ListRType)\n\n    <DED>def visit_dict_rtype(self, left: DictRType) -> bool:\n        <IND>return isinstance(self.right, DictRType)\n\n    <DED>def visit_unicode_rtype(self, left: UnicodeRType) -> bool:\n        <IND>return isinstance(self.right, UnicodeRType)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]