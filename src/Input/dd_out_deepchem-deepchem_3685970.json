[
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:283:40 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `_SiteEnvironment._construct_graph` but got `List[typing.Any]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `_SiteEnvironment._construct_graph` but got `List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 283,
    "warning_line": "    self.G = self._construct_graph(pos, sitetypes)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def _construct_graph(self, pos: list, sitetypes: str):\n    \"\"\"\n",
        "source_code_len": 66,
        "target_code": "\n  def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n    \"\"\"\n",
        "target_code_len": 84,
        "diff_format": "@@ -287,3 +287,3 @@\n \n-  def _construct_graph(self, pos: list, sitetypes: str):\n+  def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def _construct_graph(self, pos: list, sitetypes: str):\n    <IND>",
        "target_code_with_indent": "\n  <DED>def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:317:31 Unsupported operand [58]: `-` is not supported for operand types `List[typing.Any]` and `typing.Any`.",
    "message": " `-` is not supported for operand types `List[typing.Any]` and `typing.Any`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 317,
    "warning_line": "    dists = cdist([[0, 0, 0]], pos - np.mean(pos, 0))[0]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def _construct_graph(self, pos: list, sitetypes: str):\n    \"\"\"\n",
        "source_code_len": 66,
        "target_code": "\n  def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n    \"\"\"\n",
        "target_code_len": 84,
        "diff_format": "@@ -287,3 +287,3 @@\n \n-  def _construct_graph(self, pos: list, sitetypes: str):\n+  def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def _construct_graph(self, pos: list, sitetypes: str):\n    <IND>",
        "target_code_with_indent": "\n  <DED>def _construct_graph(self, pos: List[np.ndarray], sitetypes: List[str]):\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:364:42 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `_SiteEnvironment._construct_graph` but got `List[typing.Any]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `_SiteEnvironment._construct_graph` but got `List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 364,
    "warning_line": "    G = self._construct_graph(env['pos'], env['sitetypes'])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n    \"\"\"\n",
        "source_code_len": 87,
        "target_code": "\n  def get_mapping(self,\n                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n                  ) -> Dict[int, int]:\n    \"\"\"\n",
        "target_code_len": 146,
        "diff_format": "@@ -335,3 +335,5 @@\n \n-  def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n+  def get_mapping(self,\n+                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n+                  ) -> Dict[int, int]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def get_mapping(self,\n                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n                  ) -> Dict[int, int]:\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:389:20 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `Tuple[typing.Any, slice]`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `Tuple[typing.Any, slice]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 389,
    "warning_line": "        xyz[i, :] = env['pos'][am[i], :]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n  def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n    \"\"\"\n",
        "source_code_len": 87,
        "target_code": "\n  def get_mapping(self,\n                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n                  ) -> Dict[int, int]:\n    \"\"\"\n",
        "target_code_len": 146,
        "diff_format": "@@ -335,3 +335,5 @@\n \n-  def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n+  def get_mapping(self,\n+                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n+                  ) -> Dict[int, int]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  <DED>def get_mapping(self, env: Dict[str, list]) -> Union[Dict[int, int], None]:\n    <IND>",
        "target_code_with_indent": "\n  <DED>def get_mapping(self,\n                  env: Dict[str, Union[List[int], List[str], np.ndarray]]\n                  ) -> Dict[int, int]:\n    <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:601:26 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `_SiteEnvironments.__init__` but got `List[typing.Any]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `_SiteEnvironments.__init__` but got `List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 601,
    "warning_line": "    return cls(site_envs, ns, na, aos, eigen_tol, pbc, cutoff)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef input_reader(text: str, template: bool = False) -> Iterable[list]:\n  \"\"\"\n",
        "source_code_len": 78,
        "target_code": "\ndef input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n  \"\"\"\n",
        "target_code_len": 118,
        "diff_format": "@@ -127,3 +127,3 @@\n \n-def input_reader(text: str, template: bool = False) -> Iterable[list]:\n+def input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n   \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def input_reader(text: str, template: bool = False) -> Iterable[list]:\n  <IND>",
        "target_code_with_indent": "\n<DED><DED>def input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n  <IND>"
      }
    ]
  },
  {
    "project": "deepchem/deepchem",
    "commit": "3685970b2e95797867a231856c30e8dcbbc3d5a3",
    "filename": "deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepchem-deepchem/deepchem/feat/material_featurizers/lcnn_featurizer.py",
    "file_hunks_size": 17,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deepchem/feat/material_featurizers/lcnn_featurizer.py:601:30 Incompatible parameter type [6]: Expected `int` for 3rd positional only parameter to call `_SiteEnvironments.__init__` but got `List[typing.Any]`.",
    "message": " Expected `int` for 3rd positional only parameter to call `_SiteEnvironments.__init__` but got `List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 601,
    "warning_line": "    return cls(site_envs, ns, na, aos, eigen_tol, pbc, cutoff)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef input_reader(text: str, template: bool = False) -> Iterable[list]:\n  \"\"\"\n",
        "source_code_len": 78,
        "target_code": "\ndef input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n  \"\"\"\n",
        "target_code_len": 118,
        "diff_format": "@@ -127,3 +127,3 @@\n \n-def input_reader(text: str, template: bool = False) -> Iterable[list]:\n+def input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n   \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def input_reader(text: str, template: bool = False) -> Iterable[list]:\n  <IND>",
        "target_code_with_indent": "\n<DED><DED>def input_reader(text: str, template: bool = False) -> Iterable[Union[List[str], np.ndarray, List[int], int]]:\n  <IND>"
      }
    ]
  }
]