[
  {
    "project": "gusutabopb/aioinflux",
    "commit": "278ea407fcedc6dc4c51bd527b4daf5ab489ba1c",
    "filename": "aioinflux/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/gusutabopb-aioinflux/aioinflux/client.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioinflux/client.py:275:18 Incompatible parameter type [6]: Expected `Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `Union[Mapping[typing.Any, typing.Any], Path, str]`.",
    "message": " Expected `Union[os.PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `Union[Mapping[typing.Any, typing.Any], Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 275,
    "warning_line": "        with Path(queries).open() as f:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef set_custom_queries(queries: Optional[Union[Mapping, Path, str]] = None, **kwargs) -> None:\n    \"\"\"Defines custom methods to provide quick access to commonly used query patterns.\n\n    Query patterns are passed as flat mappings (e.g. dictionary), where the key is name name of\n    the desired new method representing the query pattern and the value is the actual query pattern.\n",
        "source_code_len": 381,
        "target_code": "\ndef set_custom_queries(queries: Optional[Union[Path, str, dict]] = None, **kwargs) -> None:\n    \"\"\"Defines custom methods to provide quick access to commonly used query patterns.\n\n    Query patterns are passed as dictionaries, where the key is name name of\n    the desired new method representing the query pattern and the value is the actual query pattern.\n",
        "target_code_len": 359,
        "diff_format": "@@ -256,6 +256,6 @@\n \n-def set_custom_queries(queries: Optional[Union[Mapping, Path, str]] = None, **kwargs) -> None:\n+def set_custom_queries(queries: Optional[Union[Path, str, dict]] = None, **kwargs) -> None:\n     \"\"\"Defines custom methods to provide quick access to commonly used query patterns.\n \n-    Query patterns are passed as flat mappings (e.g. dictionary), where the key is name name of\n+    Query patterns are passed as dictionaries, where the key is name name of\n     the desired new method representing the query pattern and the value is the actual query pattern.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED><DED><DED>def set_custom_queries(queries: Optional[Union[Mapping, Path, str]] = None, **kwargs) -> None:\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED><DED><DED>def set_custom_queries(queries: Optional[Union[Path, str, dict]] = None, **kwargs) -> None:\n    <IND>"
      }
    ]
  }
]