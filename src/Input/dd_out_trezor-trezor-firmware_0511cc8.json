[
  {
    "project": "trezor/trezor-firmware",
    "commit": "0511cc8b8cc1a344c466cf390541876346dd9c95",
    "filename": "core/src/trezor/loop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/trezor/loop.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/trezor/loop.py:389:12 Incompatible return type [7]: Expected `None` but got `Generator[chan.Put, None, None]`.",
    "message": " Expected `None` but got `Generator[chan.Put, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 389,
    "warning_line": "            return (yield put)"
  },
  {
    "project": "trezor/trezor-firmware",
    "commit": "0511cc8b8cc1a344c466cf390541876346dd9c95",
    "filename": "core/src/trezor/loop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/trezor/loop.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/trezor/loop.py:399:12 Incompatible return type [7]: Expected `None` but got `Generator[chan.Take, None, None]`.",
    "message": " Expected `None` but got `Generator[chan.Take, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 399,
    "warning_line": "            return (yield take)"
  },
  {
    "project": "trezor/trezor-firmware",
    "commit": "0511cc8b8cc1a344c466cf390541876346dd9c95",
    "filename": "core/src/trezor/loop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/trezor/loop.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/trezor/loop.py:417:12 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 417,
    "warning_line": "            return True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _schedule_put(self, putter: Task, value: Any) -> None:\n        if self.takers:\n",
        "source_code_len": 88,
        "target_code": "\n    def _schedule_put(self, putter: Task, value: Any) -> bool:\n        if self.takers:\n",
        "target_code_len": 88,
        "diff_format": "@@ -411,3 +411,3 @@\n \n-    def _schedule_put(self, putter: Task, value: Any) -> None:\n+    def _schedule_put(self, putter: Task, value: Any) -> bool:\n         if self.takers:\n",
        "source_code_with_indent": "\n    <DED><DED>def _schedule_put(self, putter: Task, value: Any) -> None:\n        <IND>if self.takers:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _schedule_put(self, putter: Task, value: Any) -> bool:\n        <IND>if self.takers:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "trezor/trezor-firmware",
    "commit": "0511cc8b8cc1a344c466cf390541876346dd9c95",
    "filename": "core/src/trezor/loop.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/trezor-trezor-firmware/core/src/trezor/loop.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "core/src/trezor/loop.py:420:12 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 420,
    "warning_line": "            return False",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _schedule_put(self, putter: Task, value: Any) -> None:\n        if self.takers:\n",
        "source_code_len": 88,
        "target_code": "\n    def _schedule_put(self, putter: Task, value: Any) -> bool:\n        if self.takers:\n",
        "target_code_len": 88,
        "diff_format": "@@ -411,3 +411,3 @@\n \n-    def _schedule_put(self, putter: Task, value: Any) -> None:\n+    def _schedule_put(self, putter: Task, value: Any) -> bool:\n         if self.takers:\n",
        "source_code_with_indent": "\n    <DED><DED>def _schedule_put(self, putter: Task, value: Any) -> None:\n        <IND>if self.takers:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _schedule_put(self, putter: Task, value: Any) -> bool:\n        <IND>if self.takers:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]