[
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:287:8 Incompatible attribute type [8]: Attribute `_raiden_service` declared in class `MatrixTransport` has type `RaidenService` but is used as type `None`.",
    "message": " Attribute `_raiden_service` declared in class `MatrixTransport` has type `RaidenService` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 287,
    "warning_line": "        self._raiden_service: RaidenService = None"
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:376:40 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "message": " Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 376,
    "warning_line": "            room_name = make_room_alias(self.network_id, suffix)  # e.g. raiden_ropsten_discovery",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Callable,\n    Dict,\n",
        "source_code_len": 24,
        "target_code": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_len": 37,
        "diff_format": "@@ -66,2 +67,3 @@\n     Callable,\n+    ChainID,\n     Dict,\n",
        "source_code_with_indent": "    Callable,\n    Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def network_id(self) -> str:\n        return self._raiden_service.chain.network_id\n\n",
        "source_code_len": 101,
        "target_code": "    @property\n    def network_id(self) -> ChainID:\n        assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_len": 162,
        "diff_format": "@@ -600,4 +605,5 @@\n     @property\n-    def network_id(self) -> str:\n-        return self._raiden_service.chain.network_id\n+    def network_id(self) -> ChainID:\n+        assert self._raiden_service is not None\n+        return ChainID(self._raiden_service.chain.network_id)\n \n",
        "source_code_with_indent": "    <DED>@property\n    def network_id(self) -> str:\n        <IND>return self._raiden_service.chain.network_id\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def network_id(self) -> ChainID:\n        <IND>assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:550:36 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "message": " Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 550,
    "warning_line": "        room_name = make_room_alias(self.network_id, room)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Callable,\n    Dict,\n",
        "source_code_len": 24,
        "target_code": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_len": 37,
        "diff_format": "@@ -66,2 +67,3 @@\n     Callable,\n+    ChainID,\n     Dict,\n",
        "source_code_with_indent": "    Callable,\n    Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def network_id(self) -> str:\n        return self._raiden_service.chain.network_id\n\n",
        "source_code_len": 101,
        "target_code": "    @property\n    def network_id(self) -> ChainID:\n        assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_len": 162,
        "diff_format": "@@ -600,4 +605,5 @@\n     @property\n-    def network_id(self) -> str:\n-        return self._raiden_service.chain.network_id\n+    def network_id(self) -> ChainID:\n+        assert self._raiden_service is not None\n+        return ChainID(self._raiden_service.chain.network_id)\n \n",
        "source_code_with_indent": "    <DED>@property\n    def network_id(self) -> str:\n        <IND>return self._raiden_service.chain.network_id\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def network_id(self) -> ChainID:\n        <IND>assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:602:8 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 602,
    "warning_line": "        return self._raiden_service.chain.network_id",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Callable,\n    Dict,\n",
        "source_code_len": 24,
        "target_code": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_len": 37,
        "diff_format": "@@ -66,2 +67,3 @@\n     Callable,\n+    ChainID,\n     Dict,\n",
        "source_code_with_indent": "    Callable,\n    Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def network_id(self) -> str:\n        return self._raiden_service.chain.network_id\n\n",
        "source_code_len": 101,
        "target_code": "    @property\n    def network_id(self) -> ChainID:\n        assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_len": 162,
        "diff_format": "@@ -600,4 +605,5 @@\n     @property\n-    def network_id(self) -> str:\n-        return self._raiden_service.chain.network_id\n+    def network_id(self) -> ChainID:\n+        assert self._raiden_service is not None\n+        return ChainID(self._raiden_service.chain.network_id)\n \n",
        "source_code_with_indent": "    <DED>@property\n    def network_id(self) -> str:\n        <IND>return self._raiden_service.chain.network_id\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def network_id(self) -> ChainID:\n        <IND>assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:834:32 Incompatible parameter type [6]: Expected `SignedMessage` for 1st positional only parameter to call `list.append` but got `Message`.",
    "message": " Expected `SignedMessage` for 1st positional only parameter to call `list.append` but got `Message`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 834,
    "warning_line": "                messages.append(message)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        messages: List[SignedMessage] = list()\n\n",
        "source_code_len": 49,
        "target_code": "\n        messages: List[Message] = list()\n\n",
        "target_code_len": 43,
        "diff_format": "@@ -809,3 +816,3 @@\n \n-        messages: List[SignedMessage] = list()\n+        messages: List[Message] = list()\n \n",
        "source_code_with_indent": "\n        <DED>messages: List[SignedMessage] = list()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>messages: List[Message] = list()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:988:36 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "message": " Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 988,
    "warning_line": "        room_name = make_room_alias(self.network_id, *address_pair)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Callable,\n    Dict,\n",
        "source_code_len": 24,
        "target_code": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_len": 37,
        "diff_format": "@@ -66,2 +67,3 @@\n     Callable,\n+    ChainID,\n     Dict,\n",
        "source_code_with_indent": "    Callable,\n    Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def network_id(self) -> str:\n        return self._raiden_service.chain.network_id\n\n",
        "source_code_len": 101,
        "target_code": "    @property\n    def network_id(self) -> ChainID:\n        assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_len": 162,
        "diff_format": "@@ -600,4 +605,5 @@\n     @property\n-    def network_id(self) -> str:\n-        return self._raiden_service.chain.network_id\n+    def network_id(self) -> ChainID:\n+        assert self._raiden_service is not None\n+        return ChainID(self._raiden_service.chain.network_id)\n \n",
        "source_code_with_indent": "    <DED>@property\n    def network_id(self) -> str:\n        <IND>return self._raiden_service.chain.network_id\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def network_id(self) -> ChainID:\n        <IND>assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "7a7cee20f5ab6543c103ecd8d092db0ecdf61eee",
    "filename": "raiden/network/transport/matrix/transport.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/network/transport/matrix/transport.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/network/transport/matrix/transport.py:1226:28 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "message": " Expected `int` for 1st positional only parameter to call `make_room_alias` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1226,
    "warning_line": "            make_room_alias(self.network_id, DISCOVERY_DEFAULT_ROOM),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    Callable,\n    Dict,\n",
        "source_code_len": 24,
        "target_code": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_len": 37,
        "diff_format": "@@ -66,2 +67,3 @@\n     Callable,\n+    ChainID,\n     Dict,\n",
        "source_code_with_indent": "    Callable,\n    Dict,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    Callable,\n    ChainID,\n    Dict,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def network_id(self) -> str:\n        return self._raiden_service.chain.network_id\n\n",
        "source_code_len": 101,
        "target_code": "    @property\n    def network_id(self) -> ChainID:\n        assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_len": 162,
        "diff_format": "@@ -600,4 +605,5 @@\n     @property\n-    def network_id(self) -> str:\n-        return self._raiden_service.chain.network_id\n+    def network_id(self) -> ChainID:\n+        assert self._raiden_service is not None\n+        return ChainID(self._raiden_service.chain.network_id)\n \n",
        "source_code_with_indent": "    <DED>@property\n    def network_id(self) -> str:\n        <IND>return self._raiden_service.chain.network_id\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def network_id(self) -> ChainID:\n        <IND>assert self._raiden_service is not None\n        return ChainID(self._raiden_service.chain.network_id)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]