[
  {
    "project": "Iapetus-11/Villager-Bot",
    "commit": "c5b261820653bc1e7b9a26c547f65f510638f3bd",
    "filename": "villager-bot/util/cooldowns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Iapetus-11-Villager-Bot/villager-bot/util/cooldowns.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "villager-bot/util/cooldowns.py:30:12 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 30,
    "warning_line": "            return False",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def check(self, command: str, user_id: int) -> None:\n        if (command, user_id) in self.limits:\n",
        "source_code_len": 104,
        "target_code": "\n    def check(self, command: str, user_id: int) -> bool:\n        if (command, user_id) in self.limits:\n",
        "target_code_len": 104,
        "diff_format": "@@ -27,3 +27,3 @@\n \n-    def check(self, command: str, user_id: int) -> None:\n+    def check(self, command: str, user_id: int) -> bool:\n         if (command, user_id) in self.limits:\n",
        "source_code_with_indent": "\n    <DED><DED>def check(self, command: str, user_id: int) -> None:\n        <IND>if (command, user_id) in self.limits:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def check(self, command: str, user_id: int) -> bool:\n        <IND>if (command, user_id) in self.limits:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Iapetus-11/Villager-Bot",
    "commit": "c5b261820653bc1e7b9a26c547f65f510638f3bd",
    "filename": "villager-bot/util/cooldowns.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Iapetus-11-Villager-Bot/villager-bot/util/cooldowns.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "villager-bot/util/cooldowns.py:34:8 Incompatible return type [7]: Expected `None` but got `bool`.",
    "message": " Expected `None` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 34,
    "warning_line": "        return True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def check(self, command: str, user_id: int) -> None:\n        if (command, user_id) in self.limits:\n",
        "source_code_len": 104,
        "target_code": "\n    def check(self, command: str, user_id: int) -> bool:\n        if (command, user_id) in self.limits:\n",
        "target_code_len": 104,
        "diff_format": "@@ -27,3 +27,3 @@\n \n-    def check(self, command: str, user_id: int) -> None:\n+    def check(self, command: str, user_id: int) -> bool:\n         if (command, user_id) in self.limits:\n",
        "source_code_with_indent": "\n    <DED><DED>def check(self, command: str, user_id: int) -> None:\n        <IND>if (command, user_id) in self.limits:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def check(self, command: str, user_id: int) -> bool:\n        <IND>if (command, user_id) in self.limits:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]