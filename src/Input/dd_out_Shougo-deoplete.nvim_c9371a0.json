[
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:74:8 Incompatible return type [7]: Expected `typing.Tuple[typing.Any]` but got `typing.Union[typing.Tuple[typing.Any, typing.Any, typing.Any], typing.Tuple[bool, typing.List[Variable[_T]]]]`.",
    "message": " Expected `typing.Tuple[typing.Any]` but got `typing.Union[typing.Tuple[typing.Any, typing.Any, typing.Any], typing.Tuple[bool, typing.List[Variable[_T]]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 74,
    "warning_line": "        return (results['is_async'], results['is_async'],"
  },
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:153:16 Incompatible return type [7]: Expected `typing.Tuple[typing.Any]` but got `typing.Tuple[bool, bool, typing.List[Variable[_T]]]`.",
    "message": " Expected `typing.Tuple[typing.Any]` but got `typing.Tuple[bool, bool, typing.List[Variable[_T]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 153,
    "warning_line": "                return (False, False, [])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        if (context['event'] == 'Async' and\n",
        "source_code_len": 145,
        "target_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        if (context['event'] == 'Async' and\n",
        "target_code_len": 150,
        "diff_format": "@@ -144,3 +149,3 @@\n     def merge_results(self,\n-                      context: UserContext) -> typing.Tuple[typing.Any]:\n+                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n         if (context['event'] == 'Async' and\n",
        "source_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        <IND>if (context['event'] == 'Async' and\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        <IND>if (context['event'] == 'Async' and\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:160:12 Incompatible return type [7]: Expected `typing.Tuple[typing.Any]` but got `typing.Tuple[bool, bool, typing.List[Variable[_T]]]`.",
    "message": " Expected `typing.Tuple[typing.Any]` but got `typing.Tuple[bool, bool, typing.List[Variable[_T]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 160,
    "warning_line": "            return (True, False, [])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        if (context['event'] == 'Async' and\n",
        "source_code_len": 145,
        "target_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        if (context['event'] == 'Async' and\n",
        "target_code_len": 150,
        "diff_format": "@@ -144,3 +149,3 @@\n     def merge_results(self,\n-                      context: UserContext) -> typing.Tuple[typing.Any]:\n+                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n         if (context['event'] == 'Async' and\n",
        "source_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        <IND>if (context['event'] == 'Async' and\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        <IND>if (context['event'] == 'Async' and\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:163:8 Incompatible return type [7]: Expected `typing.Tuple[typing.Any]` but got `typing.Union[typing.Tuple[typing.Any, typing.Any, typing.Any], typing.Tuple[bool, typing.List[Variable[_T]]]]`.",
    "message": " Expected `typing.Tuple[typing.Any]` but got `typing.Union[typing.Tuple[typing.Any, typing.Any, typing.Any], typing.Tuple[bool, typing.List[Variable[_T]]]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 163,
    "warning_line": "        return (results['is_async'], results['is_async'],",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        if (context['event'] == 'Async' and\n",
        "source_code_len": 145,
        "target_code": "    def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        if (context['event'] == 'Async' and\n",
        "target_code_len": 150,
        "diff_format": "@@ -144,3 +149,3 @@\n     def merge_results(self,\n-                      context: UserContext) -> typing.Tuple[typing.Any]:\n+                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n         if (context['event'] == 'Async' and\n",
        "source_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any]:\n        <IND>if (context['event'] == 'Async' and\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def merge_results(self,\n                      context: UserContext) -> typing.Tuple[typing.Any, ...]:\n        <IND>if (context['event'] == 'Async' and\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:166:4 Inconsistent override [15]: `rplugin.python3.deoplete.parent.AsyncParent._put` overrides method defined in `_Parent` inconsistently. Returned type `typing.Optional[int]` is not a subtype of the overridden return `None`.",
    "message": " `rplugin.python3.deoplete.parent.AsyncParent._put` overrides method defined in `_Parent` inconsistently. Returned type `typing.Optional[int]` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 166,
    "warning_line": "    def _put(self, name: str,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n        pass\n",
        "source_code_len": 103,
        "target_code": "    @abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        pass\n",
        "target_code_len": 132,
        "diff_format": "@@ -61,3 +61,4 @@\n     @abstractmethod\n-    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n+    def _put(self, name: str,\n+             args: typing.List[typing.Any]) -> typing.Optional[str]:\n         pass\n",
        "source_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n        <IND>pass\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        <IND>pass\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        if not self._hnd:\n",
        "source_code_len": 125,
        "target_code": "    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        if not self._hnd:\n",
        "target_code_len": 125,
        "diff_format": "@@ -166,3 +171,3 @@\n     def _put(self, name: str,\n-             args: typing.List[typing.Any]) -> typing.Optional[int]:\n+             args: typing.List[typing.Any]) -> typing.Optional[str]:\n         if not self._hnd:\n",
        "source_code_with_indent": "    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        <IND>if not self._hnd:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        <IND>if not self._hnd:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Shougo/deoplete.nvim",
    "commit": "c9371a0527f314b689ab20dea62c89f5fca3a822",
    "filename": "rplugin/python3/deoplete/parent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Shougo-deoplete.nvim/rplugin/python3/deoplete/parent.py",
    "file_hunks_size": 12,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rplugin/python3/deoplete/parent.py:185:8 Incompatible return type [7]: Expected `typing.Optional[int]` but got `str`.",
    "message": " Expected `typing.Optional[int]` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 185,
    "warning_line": "        return queue_id",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n        pass\n",
        "source_code_len": 103,
        "target_code": "    @abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        pass\n",
        "target_code_len": 132,
        "diff_format": "@@ -61,3 +61,4 @@\n     @abstractmethod\n-    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n+    def _put(self, name: str,\n+             args: typing.List[typing.Any]) -> typing.Optional[str]:\n         pass\n",
        "source_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str, args: typing.List[typing.Any]) -> None:\n        <IND>pass\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abstractmethod\n    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        <IND>pass\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        if not self._hnd:\n",
        "source_code_len": 125,
        "target_code": "    def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        if not self._hnd:\n",
        "target_code_len": 125,
        "diff_format": "@@ -166,3 +171,3 @@\n     def _put(self, name: str,\n-             args: typing.List[typing.Any]) -> typing.Optional[int]:\n+             args: typing.List[typing.Any]) -> typing.Optional[str]:\n         if not self._hnd:\n",
        "source_code_with_indent": "    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[int]:\n        <IND>if not self._hnd:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _put(self, name: str,\n             args: typing.List[typing.Any]) -> typing.Optional[str]:\n        <IND>if not self._hnd:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]