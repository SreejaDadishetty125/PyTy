[
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/assets/show.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/assets/show.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/assets/show.py:35:4 Inconsistent override [15]: `extensions` overrides attribute defined in `Asset` inconsistently. Type `str` is not a subtype of the overridden attribute `typing.Tuple[str, str, str]`.",
    "message": " `extensions` overrides attribute defined in `Asset` inconsistently. Type `str` is not a subtype of the overridden attribute `typing.Tuple[str, str, str]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 35,
    "warning_line": "    extensions = 'yaml'",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    disk_asset_section = 'file_shows'\n    extensions = 'yaml'\n    class_priority = 100\n",
        "source_code_len": 87,
        "target_code": "    disk_asset_section = 'file_shows'\n    extensions = tuple('yaml')\n    class_priority = 100\n",
        "target_code_len": 94,
        "diff_format": "@@ -34,3 +34,3 @@\n     disk_asset_section = 'file_shows'\n-    extensions = 'yaml'\n+    extensions = tuple('yaml')\n     class_priority = 100\n",
        "source_code_with_indent": "    disk_asset_section = 'file_shows'\n    extensions = 'yaml'\n    class_priority = 100\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    disk_asset_section = 'file_shows'\n    extensions = tuple('yaml')\n    class_priority = 100\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode.py:49:8 Incompatible attribute type [8]: Attribute `start_callback` declared in class `Mode` has type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " Attribute `start_callback` declared in class `Mode` has type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 49,
    "warning_line": "        self.start_callback = None              # type: Callable"
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode.py:50:8 Incompatible attribute type [8]: Attribute `stop_callback` declared in class `Mode` has type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " Attribute `stop_callback` declared in class `Mode` has type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 50,
    "warning_line": "        self.stop_callback = None               # type: Callable"
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode.py:51:8 Incompatible attribute type [8]: Attribute `event_handlers` declared in class `Mode` has type `List[EventHandlerKey]` but is used as type `typing.Set[Variable[_T]]`.",
    "message": " Attribute `event_handlers` declared in class `Mode` has type `List[EventHandlerKey]` but is used as type `typing.Set[Variable[_T]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 51,
    "warning_line": "        self.event_handlers = set()             # type: List[EventHandlerKey]"
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode.py:54:8 Incompatible attribute type [8]: Attribute `mode_devices` declared in class `Mode` has type `List[Device]` but is used as type `typing.Set[Variable[_T]]`.",
    "message": " Attribute `mode_devices` declared in class `Mode` has type `List[Device]` but is used as type `typing.Set[Variable[_T]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 54,
    "warning_line": "        self.mode_devices = set()               # type: List[Device]"
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode_controller.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode_controller.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode_controller.py:12:34 Invalid type [31]: Expression `False` is not a valid type.",
    "message": " Expression `False` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 12,
    "warning_line": "                          verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_len": 227,
        "target_code": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "target_code_len": 171,
        "diff_format": "@@ -9,5 +9,3 @@\n \n-RemoteMethod = namedtuple('RemoteMethod',\n-                          'method config_section kwargs priority',\n-                          verbose=False)\n+RemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n \"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n",
        "target_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n"
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode_controller.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode_controller.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode_controller.py:12:34 Invalid type [31]: Expression `False` is not a valid type.",
    "message": " Expression `False` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 12,
    "warning_line": "                          verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_len": 227,
        "target_code": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "target_code_len": 171,
        "diff_format": "@@ -9,5 +9,3 @@\n \n-RemoteMethod = namedtuple('RemoteMethod',\n-                          'method config_section kwargs priority',\n-                          verbose=False)\n+RemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n \"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n",
        "target_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n"
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/mode_controller.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/mode_controller.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/mode_controller.py:12:34 Invalid type [31]: Expression `typing.Final[False]` is not a valid type.",
    "message": " Expression `typing.Final[False]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 12,
    "warning_line": "                          verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_len": 227,
        "target_code": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n\"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "target_code_len": 171,
        "diff_format": "@@ -9,5 +9,3 @@\n \n-RemoteMethod = namedtuple('RemoteMethod',\n-                          'method config_section kwargs priority',\n-                          verbose=False)\n+RemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n \"\"\"RemotedMethod is used by other modules that want to register a method to\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod',\n                          'method config_section kwargs priority',\n                          verbose=False)\n",
        "target_code_with_indent": "\nRemoteMethod = namedtuple('RemoteMethod', ['method', 'config_section', 'kwargs', 'priority'])\n"
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/core/switch_controller.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/core/switch_controller.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/core/switch_controller.py:400:48 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 400,
    "warning_line": "    def wait_for_any_switch(self, switch_names: [str], state: int=1, only_on_change=True, ms=0):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from functools import partial\n\n",
        "source_code_len": 31,
        "target_code": "from functools import partial\n\nfrom typing import List\n\n",
        "target_code_len": 56,
        "diff_format": "@@ -11,2 +11,4 @@\n from functools import partial\n+\n+from typing import List\n \n",
        "source_code_with_indent": "from functools import partial\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from functools import partial\n\nfrom typing import List\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def wait_for_any_switch(self, switch_names: [str], state: int=1, only_on_change=True, ms=0):\n        \"\"\"Wait for the first switch in the list to change into state.\"\"\"\n        future = asyncio.Future(loop=self.machine.clock.loop)\n\n",
        "source_code_len": 235,
        "target_code": "\n    def wait_for_any_switch(self, switch_names: List[str], state: int=1, only_on_change=True, ms=0):\n        \"\"\"Wait for the first switch in the list to change into state.\"\"\"\n        future = asyncio.Future(loop=self.machine.clock.loop)   # type: asyncio.Future\n\n",
        "target_code_len": 264,
        "diff_format": "@@ -399,5 +401,5 @@\n \n-    def wait_for_any_switch(self, switch_names: [str], state: int=1, only_on_change=True, ms=0):\n+    def wait_for_any_switch(self, switch_names: List[str], state: int=1, only_on_change=True, ms=0):\n         \"\"\"Wait for the first switch in the list to change into state.\"\"\"\n-        future = asyncio.Future(loop=self.machine.clock.loop)\n+        future = asyncio.Future(loop=self.machine.clock.loop)   # type: asyncio.Future\n \n",
        "source_code_with_indent": "\n    <DED>def wait_for_any_switch(self, switch_names: [str], state: int=1, only_on_change=True, ms=0):\n        <IND>\"\"\"Wait for the first switch in the list to change into state.\"\"\"\n        future = asyncio.Future(loop=self.machine.clock.loop)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def wait_for_any_switch(self, switch_names: List[str], state: int=1, only_on_change=True, ms=0):\n        <IND>\"\"\"Wait for the first switch in the list to change into state.\"\"\"\n        future = asyncio.Future(loop=self.machine.clock.loop)   # type: asyncio.Future\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/modes/service/code/service.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/modes/service/code/service.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/modes/service/code/service.py:73:39 Invalid type [31]: Expression `[$local_mpf?modes?service?code?service$ServiceMenuEntry]` is not a valid type.",
    "message": " Expression `[$local_mpf?modes?service?code?service$ServiceMenuEntry]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 73,
    "warning_line": "    def _update_main_menu(self, items: [ServiceMenuEntry], position: int):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from collections import namedtuple\n\n",
        "source_code_len": 36,
        "target_code": "from collections import namedtuple\n\nfrom typing import List\n\n",
        "target_code_len": 61,
        "diff_format": "@@ -3,2 +3,4 @@\n from collections import namedtuple\n+\n+from typing import List\n \n",
        "source_code_with_indent": "from collections import namedtuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from collections import namedtuple\n\nfrom typing import List\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _update_main_menu(self, items: [ServiceMenuEntry], position: int):\n        self.machine.events.post(\"service_menu_deselected\")\n",
        "source_code_len": 136,
        "target_code": "\n    def _update_main_menu(self, items: List[ServiceMenuEntry], position: int):\n        self.machine.events.post(\"service_menu_deselected\")\n",
        "target_code_len": 140,
        "diff_format": "@@ -72,3 +74,3 @@\n \n-    def _update_main_menu(self, items: [ServiceMenuEntry], position: int):\n+    def _update_main_menu(self, items: List[ServiceMenuEntry], position: int):\n         self.machine.events.post(\"service_menu_deselected\")\n",
        "source_code_with_indent": "\n    <DED>def _update_main_menu(self, items: [ServiceMenuEntry], position: int):\n        <IND>self.machine.events.post(\"service_menu_deselected\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _update_main_menu(self, items: List[ServiceMenuEntry], position: int):\n        <IND>self.machine.events.post(\"service_menu_deselected\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/tests/test_ConfigPlayers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/tests/test_ConfigPlayers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/tests/test_ConfigPlayers.py:11:30 Invalid type [31]: Expression `False` is not a valid type.",
    "message": " Expression `False` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 11,
    "warning_line": "                      verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_len": 105,
        "target_code": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_len": 79,
        "diff_format": "@@ -9,4 +9,3 @@\n \n-PlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n-                      verbose=False)\n+PlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n \n",
        "source_code_with_indent": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/tests/test_ConfigPlayers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/tests/test_ConfigPlayers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/tests/test_ConfigPlayers.py:11:30 Invalid type [31]: Expression `False` is not a valid type.",
    "message": " Expression `False` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 11,
    "warning_line": "                      verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_len": 105,
        "target_code": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_len": 79,
        "diff_format": "@@ -9,4 +9,3 @@\n \n-PlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n-                      verbose=False)\n+PlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n \n",
        "source_code_with_indent": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "missionpinball/mpf",
    "commit": "15afcda17766968f420d53b885f8eca0cf3b40a7",
    "filename": "mpf/tests/test_ConfigPlayers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/missionpinball-mpf/mpf/tests/test_ConfigPlayers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mpf/tests/test_ConfigPlayers.py:11:30 Invalid type [31]: Expression `typing.Final[False]` is not a valid type.",
    "message": " Expression `typing.Final[False]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 11,
    "warning_line": "                      verbose=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_len": 105,
        "target_code": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_len": 79,
        "diff_format": "@@ -9,4 +9,3 @@\n \n-PlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n-                      verbose=False)\n+PlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n \n",
        "source_code_with_indent": "\nPlayCall = namedtuple('PlayCall', 'settings key priority kwargs',\n                      verbose=False)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nPlayCall = namedtuple('PlayCall', ['settings', 'key', 'priority', 'kwargs'])\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]