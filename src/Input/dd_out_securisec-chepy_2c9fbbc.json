[
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:141:26 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "        return io.BytesIO(self._convert_to_bytes())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:152:8 Incompatible return type [7]: Expected `str` but got `pathlib.Path`.",
    "message": " Expected `str` but got `pathlib.Path`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 152,
    "warning_line": "        return pathlib.Path(path).expanduser().absolute()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _abs_path(self, path: str) -> str:\n        \"\"\"Returns the absolute path by expanding home dir\n",
        "source_code_len": 103,
        "target_code": "\n    def _abs_path(self, path: str):\n        \"\"\"Returns the absolute path by expanding home dir\n",
        "target_code_len": 96,
        "diff_format": "@@ -142,3 +142,3 @@\n \n-    def _abs_path(self, path: str) -> str:\n+    def _abs_path(self, path: str):\n         \"\"\"Returns the absolute path by expanding home dir\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _abs_path(self, path: str) -> str:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _abs_path(self, path: str):\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:441:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 441,
    "warning_line": "            return self.state",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:443:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 443,
    "warning_line": "            return self.state.encode()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:445:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 445,
    "warning_line": "            return str(self.state).encode()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:447:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 447,
    "warning_line": "            return str(self.state).encode()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:449:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 449,
    "warning_line": "            return str(self.state).encode()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:451:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 451,
    "warning_line": "            return str(self.state).encode()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:453:12 Incompatible return type [7]: Expected `None` but got `bytes`.",
    "message": " Expected `None` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 453,
    "warning_line": "            return bytes(self.state)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:552:8 Incompatible return type [7]: Expected `bytes` but got `None`.",
    "message": " Expected `bytes` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 552,
    "warning_line": "        return self._convert_to_bytes()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:625:58 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `binascii.hexlify` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `binascii.hexlify` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 625,
    "warning_line": "            b\"=+$\", \"\", base64.b64encode(binascii.hexlify(self._convert_to_bytes()))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _convert_to_bytes(self) -> None:\n        \"\"\"This method is used to coerce the curret object in \n",
        "source_code_len": 105,
        "target_code": "\n    def _convert_to_bytes(self) -> bytes:\n        \"\"\"This method is used to coerce the curret object in \n",
        "target_code_len": 106,
        "diff_format": "@@ -429,3 +429,3 @@\n \n-    def _convert_to_bytes(self) -> None:\n+    def _convert_to_bytes(self) -> bytes:\n         \"\"\"This method is used to coerce the curret object in \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> None:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def _convert_to_bytes(self) -> bytes:\n        <IND>"
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/core.py",
    "file_hunks_size": 19,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/core.py:640:8 Incompatible return type [7]: Expected `None` but got `ChepyCore`.",
    "message": " Expected `None` but got `ChepyCore`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 640,
    "warning_line": "        return self",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        webbrowser.open_new_tab(url)\n        return self\n\n",
        "source_code_len": 58,
        "target_code": "        webbrowser.open_new_tab(url)\n        return None\n\n",
        "target_code_len": 58,
        "diff_format": "@@ -639,3 +639,3 @@\n         webbrowser.open_new_tab(url)\n-        return self\n+        return None\n \n",
        "source_code_with_indent": "        <DED>webbrowser.open_new_tab(url)\n        return self\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>webbrowser.open_new_tab(url)\n        return None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/compression.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/compression.py:204:28 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `None`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "            info.size = len(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/compression.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/compression.py:205:41 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 205,
    "warning_line": "            tar.addfile(info, io.BytesIO(self._convert_to_bytes()))"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/compression.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/compression.py:227:16 Incompatible parameter type [6]: Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 1st positional only parameter to call `gzip.GzipFile.write` but got `None`.",
    "message": " Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 1st positional only parameter to call `gzip.GzipFile.write` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 227,
    "warning_line": "        g.write(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/compression.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/compression.py:287:35 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `zlib.compress` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `zlib.compress` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 287,
    "warning_line": "        self.state = zlib.compress(self._convert_to_bytes(), level=level)"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:293:33 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `base64.b64encode` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `base64.b64encode` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "            x = base64.b64encode(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:302:42 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `base64.b64encode` but got `None`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `base64.b64encode` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 302,
    "warning_line": "            self.state = base64.b64encode(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:336:46 Incompatible parameter type [6]: Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `base64.b64decode` but got `None`.",
    "message": " Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `base64.b64decode` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 336,
    "warning_line": "                self.state = base64.b64decode(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:341:54 Unsupported operand [58]: `+` is not supported for operand types `None` and `bytes`.",
    "message": " `+` is not supported for operand types `None` and `bytes`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 341,
    "warning_line": "                        self.state = base64.b64decode(self._convert_to_bytes() + b\"=\")"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:344:54 Unsupported operand [58]: `+` is not supported for operand types `None` and `bytes`.",
    "message": " `+` is not supported for operand types `None` and `bytes`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 344,
    "warning_line": "                        self.state = base64.b64decode(self._convert_to_bytes() + b\"==\")"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:434:44 Incompatible parameter type [6]: Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `binascii.unhexlify` but got `None`.",
    "message": " Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `binascii.unhexlify` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 434,
    "warning_line": "            self.state = binascii.unhexlify(self._convert_to_bytes()).decode("
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/dataformat.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/securisec-chepy/chepy/modules/dataformat.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "chepy/modules/dataformat.py:438:44 Incompatible parameter type [6]: Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `binascii.unhexlify` but got `None`.",
    "message": " Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `binascii.unhexlify` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 438,
    "warning_line": "            self.state = binascii.unhexlify(self._convert_to_bytes())"
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/encryptionencoding.py",
    "min_patch_found": false,
    "full_warning_msg": "chepy/modules/encryptionencoding.py:159:37 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T1]]` for 1st positional only parameter to call `zip.__new__` but got `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/forensics.py",
    "min_patch_found": false,
    "full_warning_msg": "chepy/modules/forensics.py:29:20 Incompatible parameter type [6]: Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 1st positional only parameter to call `io.BufferedWriter.write` but got `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "securisec/chepy",
    "commit": "2c9fbbc40df534d2cad22f4cd8c258105a6eac94",
    "filename": "chepy/modules/publickey.py",
    "min_patch_found": false,
    "full_warning_msg": "chepy/modules/publickey.py:207:41 Incompatible parameter type [6]: Expected `typing.Union[bytes, str]` for 1st positional only parameter to call `_pyssl_crypto.load_pkcs12` but got `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]