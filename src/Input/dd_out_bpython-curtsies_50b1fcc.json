[
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/events.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/events.py:103:38 Incompatible variable type [9]: cursor_dy is declared to have type `int` but is used as type `None`.",
    "message": " cursor_dy is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 103,
    "warning_line": "    def __init__(self, rows, columns, cursor_dy=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class WindowChangeEvent(Event):\n    def __init__(self, rows, columns, cursor_dy=None):\n        # type: (int, int, int) -> None\n        self.rows = rows\n",
        "source_code_len": 152,
        "target_code": "class WindowChangeEvent(Event):\n    def __init__(\n        self, rows: int, columns: int, cursor_dy: Optional[int] = None\n    ) -> None:\n        self.rows = rows\n",
        "target_code_len": 161,
        "diff_format": "@@ -102,4 +101,5 @@\n class WindowChangeEvent(Event):\n-    def __init__(self, rows, columns, cursor_dy=None):\n-        # type: (int, int, int) -> None\n+    def __init__(\n+        self, rows: int, columns: int, cursor_dy: Optional[int] = None\n+    ) -> None:\n         self.rows = rows\n",
        "source_code_with_indent": "<DED><DED>class WindowChangeEvent(Event):\n    <IND>def __init__(self, rows, columns, cursor_dy=None):\n        # type: (int, int, int) -> None\n        <IND>self.rows = rows\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>class WindowChangeEvent(Event):\n    <IND>def __init__(\n        self, rows: int, columns: int, cursor_dy: Optional[int] = None\n    ) -> None:\n        <IND>self.rows = rows\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:122:31 Incompatible variable type [9]: atts is declared to have type `Mapping[str, Union[bool, int]]` but is used as type `None`.",
    "message": " atts is declared to have type `Mapping[str, Union[bool, int]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 122,
    "warning_line": "    def __init__(self, string, atts=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, string, atts=None):\n        # type: (Text, Mapping[str, Union[int, bool]]) -> None\n        if not isinstance(string, str):\n            raise ValueError(\"unicode string required, got %r\" % string)\n        self._s = string  # type: Text\n        self._atts = FrozenDict(atts if atts else {})\n",
        "source_code_len": 313,
        "target_code": "\n    def __init__(\n        self, string: str, atts: Optional[Mapping[str, Union[int, bool]]] = None\n    ):\n        if not isinstance(string, str):\n            raise ValueError(\"unicode string required, got %r\" % string)\n        self._s = string  # type: str\n        self._atts = FrozenDict(atts if atts else {})\n",
        "target_code_len": 312,
        "diff_format": "@@ -121,7 +116,8 @@\n \n-    def __init__(self, string, atts=None):\n-        # type: (Text, Mapping[str, Union[int, bool]]) -> None\n+    def __init__(\n+        self, string: str, atts: Optional[Mapping[str, Union[int, bool]]] = None\n+    ):\n         if not isinstance(string, str):\n             raise ValueError(\"unicode string required, got %r\" % string)\n-        self._s = string  # type: Text\n+        self._s = string  # type: str\n         self._atts = FrozenDict(atts if atts else {})\n",
        "source_code_with_indent": "\n    def __init__(self, string, atts=None):\n        # type: (Text, Mapping[str, Union[int, bool]]) -> None\n        <IND>if not isinstance(string, str):\n            <IND>raise ValueError(\"unicode string required, got %r\" % string)\n        <DED>self._s = string  # type: Text\n        self._atts = FrozenDict(atts if atts else {})\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(\n        self, string: str, atts: Optional[Mapping[str, Union[int, bool]]] = None\n    ):\n        <IND>if not isinstance(string, str):\n            <IND>raise ValueError(\"unicode string required, got %r\" % string)\n        <DED>self._s = string  # type: str\n        self._atts = FrozenDict(atts if atts else {})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:385:37 Incompatible variable type [9]: end is declared to have type `int` but is used as type `None`.",
    "message": " end is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 385,
    "warning_line": "    def splice(self, new_str, start, end=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def splice(self, new_str, start, end=None):\n        # type: (Union[Text, FmtStr], int, int) -> FmtStr\n        \"\"\"Returns a new FmtStr with the input string spliced into the\n",
        "source_code_len": 178,
        "target_code": "\n    def splice(\n        self, new_str: Union[str, FmtStr], start: int, end: Optional[int] = None\n    ) -> FmtStr:\n        \"\"\"Returns a new FmtStr with the input string spliced into the\n",
        "target_code_len": 186,
        "diff_format": "@@ -384,4 +362,5 @@\n \n-    def splice(self, new_str, start, end=None):\n-        # type: (Union[Text, FmtStr], int, int) -> FmtStr\n+    def splice(\n+        self, new_str: Union[str, FmtStr], start: int, end: Optional[int] = None\n+    ) -> FmtStr:\n         \"\"\"Returns a new FmtStr with the input string spliced into the\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def splice(self, new_str, start, end=None):\n        # type: (Union[Text, FmtStr], int, int) -> FmtStr\n        <IND>",
        "target_code_with_indent": "\n    <DED>def splice(\n        self, new_str: Union[str, FmtStr], start: int, end: Optional[int] = None\n    ) -> FmtStr:\n        <IND>"
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:462:20 Incompatible variable type [9]: sep is declared to have type `str` but is used as type `None`.",
    "message": " sep is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 462,
    "warning_line": "    def split(self, sep=None, maxsplit=None, regex=False):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # TODO make this split work like str.split\n    def split(self, sep=None, maxsplit=None, regex=False):\n        # type: (Text, int, bool) -> List[FmtStr]\n        \"\"\"Split based on separator, optionally using a regex.\n",
        "source_code_len": 219,
        "target_code": "    # TODO make this split work like str.split\n    def split(\n        self,\n        sep: Optional[str] = None,\n        maxsplit: Optional[int] = None,\n        regex: bool = False,\n    ) -> List[FmtStr]:\n        \"\"\"Split based on separator, optionally using a regex.\n",
        "target_code_len": 266,
        "diff_format": "@@ -461,4 +437,8 @@\n     # TODO make this split work like str.split\n-    def split(self, sep=None, maxsplit=None, regex=False):\n-        # type: (Text, int, bool) -> List[FmtStr]\n+    def split(\n+        self,\n+        sep: Optional[str] = None,\n+        maxsplit: Optional[int] = None,\n+        regex: bool = False,\n+    ) -> List[FmtStr]:\n         \"\"\"Split based on separator, optionally using a regex.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    # TODO make this split work like str.split\n    <DED>def split(self, sep=None, maxsplit=None, regex=False):\n        # type: (Text, int, bool) -> List[FmtStr]\n        <IND>",
        "target_code_with_indent": "    # TODO make this split work like str.split\n    <DED>def split(\n        self,\n        sep: Optional[str] = None,\n        maxsplit: Optional[int] = None,\n        regex: bool = False,\n    ) -> List[FmtStr]:\n        <IND>"
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:462:30 Incompatible variable type [9]: maxsplit is declared to have type `int` but is used as type `None`.",
    "message": " maxsplit is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 462,
    "warning_line": "    def split(self, sep=None, maxsplit=None, regex=False):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # TODO make this split work like str.split\n    def split(self, sep=None, maxsplit=None, regex=False):\n        # type: (Text, int, bool) -> List[FmtStr]\n        \"\"\"Split based on separator, optionally using a regex.\n",
        "source_code_len": 219,
        "target_code": "    # TODO make this split work like str.split\n    def split(\n        self,\n        sep: Optional[str] = None,\n        maxsplit: Optional[int] = None,\n        regex: bool = False,\n    ) -> List[FmtStr]:\n        \"\"\"Split based on separator, optionally using a regex.\n",
        "target_code_len": 266,
        "diff_format": "@@ -461,4 +437,8 @@\n     # TODO make this split work like str.split\n-    def split(self, sep=None, maxsplit=None, regex=False):\n-        # type: (Text, int, bool) -> List[FmtStr]\n+    def split(\n+        self,\n+        sep: Optional[str] = None,\n+        maxsplit: Optional[int] = None,\n+        regex: bool = False,\n+    ) -> List[FmtStr]:\n         \"\"\"Split based on separator, optionally using a regex.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    # TODO make this split work like str.split\n    <DED>def split(self, sep=None, maxsplit=None, regex=False):\n        # type: (Text, int, bool) -> List[FmtStr]\n        <IND>",
        "target_code_with_indent": "    # TODO make this split work like str.split\n    <DED>def split(\n        self,\n        sep: Optional[str] = None,\n        maxsplit: Optional[int] = None,\n        regex: bool = False,\n    ) -> List[FmtStr]:\n        <IND>"
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:497:27 Incompatible variable type [9]: fillchar is declared to have type `str` but is used as type `None`.",
    "message": " fillchar is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 497,
    "warning_line": "    def ljust(self, width, fillchar=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # because we shouldn't drop foreground or formatting info\n    def ljust(self, width, fillchar=None):\n        # type: (int, Text) -> FmtStr\n        \"\"\"S.ljust(width[, fillchar]) -> string\n",
        "source_code_len": 191,
        "target_code": "    # because we shouldn't drop foreground or formatting info\n    def ljust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n        \"\"\"S.ljust(width[, fillchar]) -> string\n",
        "target_code_len": 185,
        "diff_format": "@@ -496,4 +475,3 @@\n     # because we shouldn't drop foreground or formatting info\n-    def ljust(self, width, fillchar=None):\n-        # type: (int, Text) -> FmtStr\n+    def ljust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n         \"\"\"S.ljust(width[, fillchar]) -> string\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    # because we shouldn't drop foreground or formatting info\n    <DED>def ljust(self, width, fillchar=None):\n        # type: (int, Text) -> FmtStr\n        <IND>",
        "target_code_with_indent": "    # because we shouldn't drop foreground or formatting info\n    <DED>def ljust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n        <IND>"
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/formatstring.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/formatstring.py",
    "file_hunks_size": 58,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/formatstring.py:513:27 Incompatible variable type [9]: fillchar is declared to have type `str` but is used as type `None`.",
    "message": " fillchar is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 513,
    "warning_line": "    def rjust(self, width, fillchar=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def rjust(self, width, fillchar=None):\n        # type: (int, Text) -> FmtStr\n        \"\"\"S.rjust(width[, fillchar]) -> string\n",
        "source_code_len": 130,
        "target_code": "\n    def rjust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n        \"\"\"S.rjust(width[, fillchar]) -> string\n",
        "target_code_len": 124,
        "diff_format": "@@ -512,4 +490,3 @@\n \n-    def rjust(self, width, fillchar=None):\n-        # type: (int, Text) -> FmtStr\n+    def rjust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n         \"\"\"S.rjust(width[, fillchar]) -> string\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED><DED>def rjust(self, width, fillchar=None):\n        # type: (int, Text) -> FmtStr\n        <IND>",
        "target_code_with_indent": "\n    <DED><DED>def rjust(self, width: int, fillchar: Optional[str] = None) -> FmtStr:\n        <IND>"
      }
    ]
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/window.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/window.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/window.py:45:23 Incompatible variable type [9]: out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 45,
    "warning_line": "    def __init__(self, out_stream=None, hide_cursor=True):"
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/window.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/window.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/window.py:156:23 Incompatible variable type [9]: out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 156,
    "warning_line": "    def __init__(self, out_stream=None, hide_cursor=True):"
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/window.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/window.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/window.py:253:8 Incompatible variable type [9]: out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " out_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 253,
    "warning_line": "        out_stream=None,"
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/window.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/window.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/window.py:254:8 Incompatible variable type [9]: in_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "message": " in_stream is declared to have type `IO[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 254,
    "warning_line": "        in_stream=None,"
  },
  {
    "project": "bpython/curtsies",
    "commit": "50b1fcc5c1442ea4387b74673c1b7e0d7c1b5413",
    "filename": "curtsies/window.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/bpython-curtsies/curtsies/window.py",
    "file_hunks_size": 28,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "curtsies/window.py:257:8 Incompatible variable type [9]: extra_bytes_callback is declared to have type `typing.Callable[[ByteString], None]` but is used as type `None`.",
    "message": " extra_bytes_callback is declared to have type `typing.Callable[[ByteString], None]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 257,
    "warning_line": "        extra_bytes_callback=None,"
  }
]