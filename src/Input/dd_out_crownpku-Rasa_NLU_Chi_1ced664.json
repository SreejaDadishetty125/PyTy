[
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/__init__.py:7:14 Unbound name [10]: Name `version` is used but not defined in the current scope.",
    "message": " Name `version` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 7,
    "warning_line": "__version__ = version.__version__",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from __future__ import unicode_literals\nfrom __future__ import print_function\nfrom __future__ import division\nfrom __future__ import absolute_import\nimport rasa_nlu.version\n\n__version__ = version.__version__\n",
        "source_code_len": 208,
        "target_code": "from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom __future__ import unicode_literals\n\nimport logging\n\nimport rasa_nlu.version\n\nlogging.getLogger(__name__).addHandler(logging.NullHandler())\n\n__version__ = rasa_nlu.version.__version__\n",
        "target_code_len": 297,
        "diff_format": "@@ -1,7 +1,12 @@\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n from __future__ import unicode_literals\n-from __future__ import print_function\n-from __future__ import division\n-from __future__ import absolute_import\n+\n+import logging\n+\n import rasa_nlu.version\n \n-__version__ = version.__version__\n+logging.getLogger(__name__).addHandler(logging.NullHandler())\n+\n+__version__ = rasa_nlu.version.__version__\n",
        "source_code_with_indent": "from __future__ import unicode_literals\nfrom __future__ import print_function\nfrom __future__ import division\nfrom __future__ import absolute_import\nimport rasa_nlu.version\n\n__version__ = version.__version__\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom __future__ import unicode_literals\n\nimport logging\n\nimport rasa_nlu.version\n\nlogging.getLogger(__name__).addHandler(logging.NullHandler())\n\n__version__ = rasa_nlu.version.__version__\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/components.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/components.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/components.py:94:43 Incompatible variable type [9]: dev_requirements_file is declared to have type `List[str]` but is used as type `str`.",
    "message": " dev_requirements_file is declared to have type `List[str]` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 94,
    "warning_line": "def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):\n    # type: (List[Text]) -> None\n    \"\"\"Ensures that all required python packages are installed to instantiate and used the passed components.\"\"\"\n",
        "source_code_len": 236,
        "target_code": "def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):\n    # type: (List[Text], Text) -> None\n    \"\"\"Ensures that all required python packages are installed to instantiate and used the passed components.\"\"\"\n",
        "target_code_len": 242,
        "diff_format": "@@ -94,3 +101,3 @@\n def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):\n-    # type: (List[Text]) -> None\n+    # type: (List[Text], Text) -> None\n     \"\"\"Ensures that all required python packages are installed to instantiate and used the passed components.\"\"\"\n",
        "source_code_with_indent": "<DED>def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):\n    # type: (List[Text]) -> None\n    <IND>\"\"\"Ensures that all required python packages are installed to instantiate and used the passed components.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def validate_requirements(component_names, dev_requirements_file=\"dev-requirements.txt\"):\n    # type: (List[Text], Text) -> None\n    <IND>\"\"\"Ensures that all required python packages are installed to instantiate and used the passed components.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/converters.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/converters.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/converters.py:73:75 Incompatible parameter type [6]: Expected `Optional[List[Dict[str, typing.Any]]]` for 4th positional only parameter to call `TrainingData.__init__` but got `Dict[typing.Any, typing.Any]`.",
    "message": " Expected `Optional[List[Dict[str, typing.Any]]]` for 4th positional only parameter to call `TrainingData.__init__` but got `Dict[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 73,
    "warning_line": "    return TrainingData(intent_examples, entity_examples, common_examples, entity_synonyms)"
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/extractors/duckling_extractor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/extractors/duckling_extractor.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/extractors/duckling_extractor.py:70:4 Inconsistent override [14]: `rasa_nlu.extractors.duckling_extractor.DucklingExtractor.pipeline_init` overrides method defined in `rasa_nlu.components.Component` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `rasa_nlu.components.Component`.",
    "message": " `rasa_nlu.extractors.duckling_extractor.DucklingExtractor.pipeline_init` overrides method defined in `rasa_nlu.components.Component` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `rasa_nlu.components.Component`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 70,
    "warning_line": "    def pipeline_init(self, language):"
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/extractors/duckling_extractor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/extractors/duckling_extractor.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/extractors/duckling_extractor.py:115:12 Incompatible return type [7]: Expected `DucklingExtractor` but got implicit return value of `None`.",
    "message": " Expected `DucklingExtractor` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 115,
    "warning_line": "            with io.open(persisted, encoding='utf-8') as f:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                return cls.create(persisted_data[\"dimensions\"])\n",
        "source_code_len": 64,
        "target_code": "                return cls.create(persisted_data[\"dimensions\"])\n        else:\n            return cls.create(None)\n",
        "target_code_len": 114,
        "diff_format": "@@ -117,1 +117,3 @@\n                 return cls.create(persisted_data[\"dimensions\"])\n+        else:\n+            return cls.create(None)\n",
        "source_code_with_indent": "                return cls.create(persisted_data[\"dimensions\"])\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                return cls.create(persisted_data[\"dimensions\"])\n        <DED><DED>else:\n            <IND>return cls.create(None)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/persistor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/persistor.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/persistor.py:28:4 Incompatible return type [7]: Expected `Persistor` but got `typing.Union[None, AWSPersistor, GCSPersistor]`.",
    "message": " Expected `Persistor` but got `typing.Union[None, AWSPersistor, GCSPersistor]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 28,
    "warning_line": "    return p",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import botocore\nfrom typing import Text\n",
        "source_code_len": 40,
        "target_code": "import botocore\nfrom typing import Optional\nfrom typing import Text\n",
        "target_code_len": 68,
        "diff_format": "@@ -12,2 +12,3 @@\n import botocore\n+from typing import Optional\n from typing import Text\n",
        "source_code_with_indent": "import botocore\nfrom typing import Text\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import botocore\nfrom typing import Optional\nfrom typing import Text\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def get_persistor(config):\n    # type: (RasaNLUConfig) -> Persistor\n    \"\"\"Returns an instance of the requested persistor. Currently, `aws` and `gcs` are supported\"\"\"\n    p = None\n    if 'storage' not in config:\n",
        "source_code_len": 212,
        "target_code": "def get_persistor(config):\n    # type: (RasaNLUConfig) -> Optional[Persistor]\n    \"\"\"Returns an instance of the requested persistor. Currently, `aws` and `gcs` are supported\"\"\"\n\n    if 'storage' not in config:\n",
        "target_code_len": 210,
        "diff_format": "@@ -17,5 +18,5 @@\n def get_persistor(config):\n-    # type: (RasaNLUConfig) -> Persistor\n+    # type: (RasaNLUConfig) -> Optional[Persistor]\n     \"\"\"Returns an instance of the requested persistor. Currently, `aws` and `gcs` are supported\"\"\"\n-    p = None\n+\n     if 'storage' not in config:\n",
        "source_code_with_indent": "def get_persistor(config):\n    # type: (RasaNLUConfig) -> Persistor\n    <IND>\"\"\"Returns an instance of the requested persistor. Currently, `aws` and `gcs` are supported\"\"\"\n    p = None\n    if 'storage' not in config:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def get_persistor(config):\n    # type: (RasaNLUConfig) -> Optional[Persistor]\n    <IND>\"\"\"Returns an instance of the requested persistor. Currently, `aws` and `gcs` are supported\"\"\"\n\n    if 'storage' not in config:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if config['storage'] == 'aws':\n        p = AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n    elif config['storage'] == 'gcs':\n        p = GCSPersistor(config['path'], config['bucket_name'])\n    return p\n\n",
        "source_code_len": 236,
        "target_code": "    if config['storage'] == 'aws':\n        return AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n    elif config['storage'] == 'gcs':\n        return GCSPersistor(config['path'], config['bucket_name'])\n    else:\n        return None\n\n",
        "target_code_len": 259,
        "diff_format": "@@ -24,6 +25,7 @@\n     if config['storage'] == 'aws':\n-        p = AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n+        return AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n     elif config['storage'] == 'gcs':\n-        p = GCSPersistor(config['path'], config['bucket_name'])\n-    return p\n+        return GCSPersistor(config['path'], config['bucket_name'])\n+    else:\n+        return None\n \n",
        "source_code_with_indent": "    <DED>if config['storage'] == 'aws':\n        <IND>p = AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n    <DED>elif config['storage'] == 'gcs':\n        <IND>p = GCSPersistor(config['path'], config['bucket_name'])\n    <DED>return p\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>if config['storage'] == 'aws':\n        <IND>return AWSPersistor(config['path'], config['aws_region'], config['bucket_name'])\n    <DED>elif config['storage'] == 'gcs':\n        <IND>return GCSPersistor(config['path'], config['bucket_name'])\n    <DED>else:\n        <IND>return None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "crownpku/Rasa_NLU_Chi",
    "commit": "1ced664d366ea27547b5cf8b74e69e49bc478906",
    "filename": "rasa_nlu/utils/mitie_utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/crownpku-Rasa_NLU_Chi/rasa_nlu/utils/mitie_utils.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rasa_nlu/utils/mitie_utils.py:70:4 Inconsistent override [14]: `rasa_nlu.utils.mitie_utils.MitieNLP.load` overrides method defined in `Component` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `typing.Type[Component]`.",
    "message": " `rasa_nlu.utils.mitie_utils.MitieNLP.load` overrides method defined in `Component` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `typing.Type[Component]`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 70,
    "warning_line": "    def load(cls, mitie_file):"
  }
]