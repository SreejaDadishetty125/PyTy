[
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config.py:21:12 Incompatible variable type [9]: source_format is declared to have type `ConfigSource` but is used as type `typing.Type[JSONConfigSource]`.",
    "message": " source_format is declared to have type `ConfigSource` but is used as type `typing.Type[JSONConfigSource]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 21,
    "warning_line": "            source_format: ConfigSource = JSONConfigSource,"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config.py:35:37 Call error [29]: `ConfigSource` is not a function.",
    "message": " `ConfigSource` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 35,
    "warning_line": "        self._source: ConfigSource = self.format(path)"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config.py:44:23 Call error [29]: `ConfigSource` is not a function.",
    "message": " `ConfigSource` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 44,
    "warning_line": "        self._source = self.format(value)"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_json.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_json.py:19:4 Inconsistent override [15]: `micropy.config.config_json.JSONConfigSource.process` overrides method defined in `ConfigSource` inconsistently. Returned type `typing.Dict[typing.Any, typing.Any]` is not a subtype of the overridden return `str`.",
    "message": " `micropy.config.config_json.JSONConfigSource.process` overrides method defined in `ConfigSource` inconsistently. Returned type `typing.Dict[typing.Any, typing.Any]` is not a subtype of the overridden return `str`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 19,
    "warning_line": "    def process(self) -> dict:"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_json.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_json.py:26:4 Inconsistent override [14]: `micropy.config.config_json.JSONConfigSource.save` overrides method defined in `ConfigSource` inconsistently. Could not find parameter `content` in overriding signature.",
    "message": " `micropy.config.config_json.JSONConfigSource.save` overrides method defined in `ConfigSource` inconsistently. Could not find parameter `content` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 26,
    "warning_line": "    def save(self, config: dict) -> dict:"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_json.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_json.py:26:4 Inconsistent override [15]: `micropy.config.config_json.JSONConfigSource.save` overrides method defined in `ConfigSource` inconsistently. Returned type `typing.Dict[typing.Any, typing.Any]` is not a subtype of the overridden return `Path`.",
    "message": " `micropy.config.config_json.JSONConfigSource.save` overrides method defined in `ConfigSource` inconsistently. Returned type `typing.Dict[typing.Any, typing.Any]` is not a subtype of the overridden return `Path`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 26,
    "warning_line": "    def save(self, config: dict) -> dict:"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_json.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_json.py:28:8 Incompatible return type [7]: Expected `typing.Dict[typing.Any, typing.Any]` but got `Path`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` but got `Path`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 28,
    "warning_line": "        return super().save(content)"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_json.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_json.py:28:28 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `ConfigSource.save` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `ConfigSource.save` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 28,
    "warning_line": "        return super().save(content)"
  },
  {
    "project": "BradenM/micropy-cli",
    "commit": "bb803912b3f9caf2241e42ea948940c960a6e89c",
    "filename": "micropy/config/config_source.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BradenM-micropy-cli/micropy/config/config_source.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "micropy/config/config_source.py:98:8 Incompatible return type [7]: Expected `typing.Dict[typing.Any, typing.Any]` but got `str`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "        return self._config",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def process(self) -> str:\n        \"\"\"Read and process config file\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def process(self) -> dict:\n        \"\"\"Read and process config file\n",
        "target_code_len": 95,
        "diff_format": "@@ -82,3 +95,3 @@\n     @abc.abstractmethod\n-    def process(self) -> str:\n+    def process(self) -> dict:\n         \"\"\"Read and process config file\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def process(self) -> str:\n        <IND>",
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def process(self) -> dict:\n        <IND>"
      }
    ]
  }
]