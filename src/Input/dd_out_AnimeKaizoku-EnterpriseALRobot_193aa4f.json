[
  {
    "project": "AnimeKaizoku/EnterpriseALRobot",
    "commit": "193aa4f1fd75cba8e22b8cb969c44811cf1be95c",
    "filename": "tg_bot/modules/helper_funcs/extraction.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/AnimeKaizoku-EnterpriseALRobot/tg_bot/modules/helper_funcs/extraction.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg_bot/modules/helper_funcs/extraction.py:28:6 Invalid type [31]: Expression `(typing.Optional[int], typing.Optional[str])` is not a valid type.",
    "message": " Expression `(typing.Optional[int], typing.Optional[str])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 28,
    "warning_line": ") -> (Optional[int], Optional[str]):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List, Optional\n\n",
        "source_code_len": 35,
        "target_code": "from typing import List, Optional, Tuple\n\n",
        "target_code_len": 42,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import List, Optional\n+from typing import List, Optional, Tuple\n \n",
        "source_code_with_indent": "from typing import List, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: Message, args: List[str]\n) -> (Optional[int], Optional[str]):\n    prev_message = message.reply_to_message\n",
        "source_code_len": 119,
        "target_code": "    message: Message, args: List[str]\n) -> Tuple[Optional[int], Optional[str]]:\n    prev_message = message.reply_to_message\n",
        "target_code_len": 124,
        "diff_format": "@@ -27,3 +27,3 @@\n     message: Message, args: List[str]\n-) -> (Optional[int], Optional[str]):\n+) -> Tuple[Optional[int], Optional[str]]:\n     prev_message = message.reply_to_message\n",
        "source_code_with_indent": "    message: Message, args: List[str]\n) -> (Optional[int], Optional[str]):\n    <IND>prev_message = message.reply_to_message\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    message: Message, args: List[str]\n) -> Tuple[Optional[int], Optional[str]]:\n    <IND>prev_message = message.reply_to_message\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "AnimeKaizoku/EnterpriseALRobot",
    "commit": "193aa4f1fd75cba8e22b8cb969c44811cf1be95c",
    "filename": "tg_bot/modules/helper_funcs/extraction.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/AnimeKaizoku-EnterpriseALRobot/tg_bot/modules/helper_funcs/extraction.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tg_bot/modules/helper_funcs/extraction.py:102:6 Invalid type [31]: Expression `(typing.Optional[int], typing.Optional[str])` is not a valid type.",
    "message": " Expression `(typing.Optional[int], typing.Optional[str])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 102,
    "warning_line": ") -> (Optional[int], Optional[str]):  # sourcery no-metrics",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List, Optional\n\n",
        "source_code_len": 35,
        "target_code": "from typing import List, Optional, Tuple\n\n",
        "target_code_len": 42,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import List, Optional\n+from typing import List, Optional, Tuple\n \n",
        "source_code_with_indent": "from typing import List, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: Message, args: List[str]\n) -> (Optional[int], Optional[str]):  # sourcery no-metrics\n    prev_message = message.reply_to_message\n",
        "source_code_len": 142,
        "target_code": "    message: Message, args: List[str]\n) -> Tuple[Optional[int], Optional[str]]:  # sourcery no-metrics\n    prev_message = message.reply_to_message\n",
        "target_code_len": 147,
        "diff_format": "@@ -101,3 +101,3 @@\n     message: Message, args: List[str]\n-) -> (Optional[int], Optional[str]):  # sourcery no-metrics\n+) -> Tuple[Optional[int], Optional[str]]:  # sourcery no-metrics\n     prev_message = message.reply_to_message\n",
        "source_code_with_indent": "    message: Message, args: List[str]\n) -> (Optional[int], Optional[str]):  # sourcery no-metrics\n    <IND>prev_message = message.reply_to_message\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    message: Message, args: List[str]\n) -> Tuple[Optional[int], Optional[str]]:  # sourcery no-metrics\n    <IND>prev_message = message.reply_to_message\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]