[
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/agents/agent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/agents/agent.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/agents/agent.py:466:8 Incompatible return type [7]: Expected `AgentTestWrapperT` but got `AgentT[typing.Any]`.",
    "message": " Expected `AgentTestWrapperT` but got `AgentT[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 466,
    "warning_line": "        return self.clone(",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                await on_error(agent, exc)\n            await agent.crash_test_agent(exc)\n\n        return self.clone(\n            cls=AgentTestWrapper,\n",
        "source_code_len": 151,
        "target_code": "                await on_error(agent, exc)\n            await cast(AgentTestWrapper, agent).crash_test_agent(exc)\n\n        return cast(AgentTestWrapperT, self.clone(\n            cls=AgentTestWrapper,\n",
        "target_code_len": 199,
        "diff_format": "@@ -463,5 +464,5 @@\n                 await on_error(agent, exc)\n-            await agent.crash_test_agent(exc)\n-\n-        return self.clone(\n+            await cast(AgentTestWrapper, agent).crash_test_agent(exc)\n+\n+        return cast(AgentTestWrapperT, self.clone(\n             cls=AgentTestWrapper,\n",
        "source_code_with_indent": "                <IND>await on_error(agent, exc)\n            <DED>await agent.crash_test_agent(exc)\n\n        <DED>return self.clone(\n            cls=AgentTestWrapper,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>await on_error(agent, exc)\n            <DED>await cast(AgentTestWrapper, agent).crash_test_agent(exc)\n\n        <DED>return cast(AgentTestWrapperT, self.clone(\n            cls=AgentTestWrapper,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            on_error=on_agent_error,\n            **kwargs)\n\n",
        "source_code_len": 60,
        "target_code": "            on_error=on_agent_error,\n            **kwargs))\n\n",
        "target_code_len": 61,
        "diff_format": "@@ -471,3 +472,3 @@\n             on_error=on_agent_error,\n-            **kwargs)\n+            **kwargs))\n \n",
        "source_code_with_indent": "            on_error=on_agent_error,\n            **kwargs)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            on_error=on_agent_error,\n            **kwargs))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/agents/agent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/agents/agent.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/agents/agent.py:561:12 Incompatible parameter type [6]: Expected `int` for 4th parameter `index` to call `Actor.__init__` but got `Optional[int]`.",
    "message": " Expected `int` for 4th parameter `index` to call `Actor.__init__` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 561,
    "warning_line": "            index=actual_stream.concurrency_index,"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/agents/agent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/agents/agent.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/agents/agent.py:562:12 Incompatible parameter type [6]: Expected `Set[faust.types.tuples.TP]` for 5th parameter `active_partitions` to call `Actor.__init__` but got `Optional[Set[faust.types.tuples.TP]]`.",
    "message": " Expected `Set[faust.types.tuples.TP]` for 5th parameter `active_partitions` to call `Actor.__init__` but got `Optional[Set[faust.types.tuples.TP]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 562,
    "warning_line": "            active_partitions=actual_stream.active_partitions,"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/agents/agent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/agents/agent.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/agents/agent.py:1123:21 Call error [29]: `faust.types.streams.StreamT[typing.Any]` is not a function.",
    "message": " `faust.types.streams.StreamT[typing.Any]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 1123,
    "warning_line": "        return aiter(self._stream())",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __aiter__(self) -> AsyncIterator:\n        return aiter(self._stream())\n",
        "source_code_len": 79,
        "target_code": "    def __aiter__(self) -> AsyncIterator:\n        return aiter(self._stream)\n",
        "target_code_len": 77,
        "diff_format": "@@ -1122,2 +1134,2 @@\n     def __aiter__(self) -> AsyncIterator:\n-        return aiter(self._stream())\n+        return aiter(self._stream)\n",
        "source_code_with_indent": "    <DED>def __aiter__(self) -> AsyncIterator:\n        <IND>return aiter(self._stream())\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def __aiter__(self) -> AsyncIterator:\n        <IND>return aiter(self._stream)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/livecheck/app.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/livecheck/app.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/livecheck/app.py:262:28 Incompatible parameter type [6]: Expected `typing.Callable[..., typing.Any]` for 1st positional only parameter to call `venusian.attach` but got `Case`.",
    "message": " Expected `typing.Callable[..., typing.Any]` for 1st positional only parameter to call `venusian.attach` but got `Case`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 262,
    "warning_line": "            venusian.attach(case, category=SCAN_CASE)"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/streams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/streams.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/streams.py:289:4 Inconsistent override [15]: `faust.streams.Stream.events` overrides method defined in `StreamT` inconsistently. Returned type `AsyncIterable[faust.types.events.EventT]` is not a subtype of the overridden return `typing.Coroutine[typing.Any, typing.Any, AsyncIterable[faust.types.events.EventT]]`.",
    "message": " `faust.streams.Stream.events` overrides method defined in `StreamT` inconsistently. Returned type `AsyncIterable[faust.types.events.EventT]` is not a subtype of the overridden return `typing.Coroutine[typing.Any, typing.Any, AsyncIterable[faust.types.events.EventT]]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 289,
    "warning_line": "    async def events(self) -> AsyncIterable[EventT]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/streams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/streams.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/streams.py:717:12 Incompatible variable type [9]: value is declared to have type `Variable[T]` but is used as type `Optional[faust.types.events.EventT]`.",
    "message": " value is declared to have type `Variable[T]` but is used as type `Optional[faust.types.events.EventT]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 717,
    "warning_line": "            value = await join_strategy.process(value)"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/streams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/streams.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/streams.py:717:48 Incompatible parameter type [6]: Expected `faust.types.events.EventT` for 1st positional only parameter to call `JoinT.process` but got `Variable[T]`.",
    "message": " Expected `faust.types.events.EventT` for 1st positional only parameter to call `JoinT.process` but got `Variable[T]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 717,
    "warning_line": "            value = await join_strategy.process(value)"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/streams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/streams.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/streams.py:788:33 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 788,
    "warning_line": "    def _set_current_event(self, event: EventT = None) -> None:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:62:17 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 62,
    "warning_line": "                 event: EventT = None) -> None:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:84:22 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 84,
    "warning_line": "    def current(self, event: EventT = None) -> Iterator[Any]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:90:32 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 90,
    "warning_line": "    def delta(self, d: Seconds, event: EventT = None) -> Iterator[Any]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:102:17 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 102,
    "warning_line": "                 event: EventT = None) -> None:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:119:22 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 119,
    "warning_line": "    def current(self, event: EventT = None) -> Iterator[Tuple[Any, Any]]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:126:14 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 126,
    "warning_line": "              event: EventT = None) -> Iterator[Tuple[Any, Any]]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:137:17 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 137,
    "warning_line": "                 event: EventT = None) -> None:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:156:22 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 156,
    "warning_line": "    def current(self, event: EventT = None) -> Iterator[Any]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:162:32 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 162,
    "warning_line": "    def delta(self, d: Seconds, event: EventT = None) -> Iterator[Any]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:198:17 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 198,
    "warning_line": "                 event: EventT = None) -> None:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:208:14 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 208,
    "warning_line": "              event: EventT = None) -> WindowSetT[KT, VT]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:217:20 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 217,
    "warning_line": "    def value(self, event: EventT = None) -> VT:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:231:22 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 231,
    "warning_line": "    def current(self, event: EventT = None) -> VT:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:237:32 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 237,
    "warning_line": "    def delta(self, d: Seconds, event: EventT = None) -> VT:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:251:12 Incompatible return type [7]: Expected `Variable[VT]` but got `WindowSet[Variable[KT], Variable[VT]]`.",
    "message": " Expected `Variable[VT]` but got `WindowSet[Variable[KT], Variable[VT]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 251,
    "warning_line": "            return type(self)(self.key, self.table, self.wrapper, w)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    @overload\n    def __getitem__(self, w: EventT) -> WindowSetT[KT, VT]: ...  # noqa\n\n    @overload  # noqa\n    def __getitem__(self, w: WindowRange) -> VT: ...  # noqa\n\n    def __getitem__(self, w: Union[EventT, WindowRange]) -> VT:  # noqa\n        # wrapper[key][event] returns WindowSet with event already set.\n        if isinstance(w, EventT):\n            return type(self)(self.key, self.table, self.wrapper, w)\n        # wrapper[key][window_range] returns value for that range.\n",
        "source_code_len": 486,
        "target_code": "\n    def __getitem__(self, w: KT) -> VT:  # noqa\n        # wrapper[key][event] returns WindowSet with event already set.\n        if isinstance(w, EventT):\n            return cast(VT, type(self)(self.key, self.table, self.wrapper, w))\n        # wrapper[key][window_range] returns value for that range.\n",
        "target_code_len": 301,
        "diff_format": "@@ -241,12 +237,6 @@\n \n-    @overload\n-    def __getitem__(self, w: EventT) -> WindowSetT[KT, VT]: ...  # noqa\n-\n-    @overload  # noqa\n-    def __getitem__(self, w: WindowRange) -> VT: ...  # noqa\n-\n-    def __getitem__(self, w: Union[EventT, WindowRange]) -> VT:  # noqa\n+    def __getitem__(self, w: KT) -> VT:  # noqa\n         # wrapper[key][event] returns WindowSet with event already set.\n         if isinstance(w, EventT):\n-            return type(self)(self.key, self.table, self.wrapper, w)\n+            return cast(VT, type(self)(self.key, self.table, self.wrapper, w))\n         # wrapper[key][window_range] returns value for that range.\n",
        "source_code_with_indent": "\n    <DED>@overload\n    def __getitem__(self, w: EventT) -> WindowSetT[KT, VT]: ...  # noqa\n\n    @overload  # noqa\n    def __getitem__(self, w: WindowRange) -> VT: ...  # noqa\n\n    def __getitem__(self, w: Union[EventT, WindowRange]) -> VT:  # noqa\n        # wrapper[key][event] returns WindowSet with event already set.\n        <IND>if isinstance(w, EventT):\n            <IND>return type(self)(self.key, self.table, self.wrapper, w)\n        # wrapper[key][window_range] returns value for that range.\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def __getitem__(self, w: KT) -> VT:  # noqa\n        # wrapper[key][event] returns WindowSet with event already set.\n        <IND>if isinstance(w, EventT):\n            <IND>return cast(VT, type(self)(self.key, self.table, self.wrapper, w))\n        # wrapper[key][window_range] returns value for that range.\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:405:28 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 405,
    "warning_line": "    def get_timestamp(self, event: EventT = None) -> float:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:407:8 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `Optional[faust.types.events.EventT]`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `Optional[faust.types.events.EventT]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 407,
    "warning_line": "        event = event or current_event()"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:426:53 Incompatible parameter type [6]: Expected `faust.types.events.EventT` for 4th positional only parameter to call `WindowSetT.__init__` but got `Optional[faust.types.events.EventT]`.",
    "message": " Expected `faust.types.events.EventT` for 4th positional only parameter to call `WindowSetT.__init__` but got `Optional[faust.types.events.EventT]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 426,
    "warning_line": "        return self.ValueType(key, self.table, self, current_event())"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:489:21 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 489,
    "warning_line": "    def values(self, event: EventT = None) -> ValuesView:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:491:40 Incompatible parameter type [6]: Expected `faust.types.events.EventT` for 2nd positional only parameter to call `WindowedValuesView.__init__` but got `Optional[faust.types.events.EventT]`.",
    "message": " Expected `faust.types.events.EventT` for 2nd positional only parameter to call `WindowedValuesView.__init__` but got `Optional[faust.types.events.EventT]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 491,
    "warning_line": "        return WindowedValuesView(self, event or current_event())"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:493:20 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 493,
    "warning_line": "    def items(self, event: EventT = None) -> ItemsView:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:495:39 Incompatible parameter type [6]: Expected `faust.types.events.EventT` for 2nd positional only parameter to call `WindowedItemsView.__init__` but got `Optional[faust.types.events.EventT]`.",
    "message": " Expected `faust.types.events.EventT` for 2nd positional only parameter to call `WindowedItemsView.__init__` but got `Optional[faust.types.events.EventT]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 495,
    "warning_line": "        return WindowedItemsView(self, event or current_event())"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:497:21 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 497,
    "warning_line": "    def _items(self, event: EventT = None) -> Iterator[Tuple[Any, Any]]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:515:18 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 515,
    "warning_line": "            self, event: EventT = None) -> Iterator[Tuple[Any, Any]]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/tables/wrappers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/tables/wrappers.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/tables/wrappers.py:525:21 Incompatible variable type [9]: event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "message": " event is declared to have type `faust.types.events.EventT` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 525,
    "warning_line": "                     event: EventT = None) -> Iterator[Any]:"
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/transport/consumer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/transport/consumer.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/transport/consumer.py:1088:8 Incompatible attribute type [8]: Attribute `consumer` declared in class `ConsumerThread` has type `ThreadDelegateConsumer` but is used as type `ConsumerT`.",
    "message": " Attribute `consumer` declared in class `ConsumerThread` has type `ThreadDelegateConsumer` but is used as type `ConsumerT`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 1088,
    "warning_line": "        self.consumer = consumer",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, consumer: ConsumerT, **kwargs: Any) -> None:\n        self.consumer = consumer\n",
        "source_code_len": 102,
        "target_code": "\n    def __init__(self, consumer: 'ThreadDelegateConsumer',\n                 **kwargs: Any) -> None:\n        self.consumer = consumer\n",
        "target_code_len": 134,
        "diff_format": "@@ -1086,3 +1089,4 @@\n \n-    def __init__(self, consumer: ConsumerT, **kwargs: Any) -> None:\n+    def __init__(self, consumer: 'ThreadDelegateConsumer',\n+                 **kwargs: Any) -> None:\n         self.consumer = consumer\n",
        "source_code_with_indent": "\n    def __init__(self, consumer: ConsumerT, **kwargs: Any) -> None:\n        <IND>self.consumer = consumer\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, consumer: 'ThreadDelegateConsumer',\n                 **kwargs: Any) -> None:\n        <IND>self.consumer = consumer\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/utils/json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/utils/json.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/utils/json.py:74:0 Incompatible variable type [9]: DATE_TYPES is declared to have type `typing.Tuple[Type[datetime.date], ...]` but is used as type `Tuple[Type[datetime.date], Type[datetime.time]]`.",
    "message": " DATE_TYPES is declared to have type `typing.Tuple[Type[datetime.date], ...]` but is used as type `Tuple[Type[datetime.date], Type[datetime.time]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 74,
    "warning_line": "DATE_TYPES: TypeTuple[datetime.date] = (datetime.date, datetime.time)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n#: Types that we convert o mapping.\n",
        "source_code_len": 37,
        "target_code": "\nDateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\nDatetimeTypeTuple = Tuple[\n    Union[\n        Type[datetime.time],\n        Type[datetime.datetime],\n    ],\n    ...,\n]\n\n#: Types that we convert o mapping.\n",
        "target_code_len": 232,
        "diff_format": "@@ -69,2 +69,11 @@\n \n+DateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\n+DatetimeTypeTuple = Tuple[\n+    Union[\n+        Type[datetime.time],\n+        Type[datetime.datetime],\n+    ],\n+    ...,\n+]\n+\n #: Types that we convert o mapping.\n",
        "source_code_with_indent": "\n#: Types that we convert o mapping.\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nDateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\nDatetimeTypeTuple = Tuple[\n    Union[\n        Type[datetime.time],\n        Type[datetime.datetime],\n    ],\n    ...,\n]\n\n#: Types that we convert o mapping.\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "#: Types that are datetimes and dates (-> .isoformat())\nDATE_TYPES: TypeTuple[datetime.date] = (datetime.date, datetime.time)\n\n",
        "source_code_len": 127,
        "target_code": "#: Types that are datetimes and dates (-> .isoformat())\nDATE_TYPES: DateTypeTuple = (datetime.date, datetime.time)\n\n",
        "target_code_len": 116,
        "diff_format": "@@ -73,3 +82,3 @@\n #: Types that are datetimes and dates (-> .isoformat())\n-DATE_TYPES: TypeTuple[datetime.date] = (datetime.date, datetime.time)\n+DATE_TYPES: DateTypeTuple = (datetime.date, datetime.time)\n \n",
        "source_code_with_indent": "#: Types that are datetimes and dates (-> .isoformat())\nDATE_TYPES: TypeTuple[datetime.date] = (datetime.date, datetime.time)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "#: Types that are datetimes and dates (-> .isoformat())\nDATE_TYPES: DateTypeTuple = (datetime.date, datetime.time)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: TypeTuple[datetime.date] = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: TypeTuple[datetime.time] = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_len": 335,
        "target_code": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: DateTypeTuple = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: DatetimeTypeTuple = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "target_code_len": 317,
        "diff_format": "@@ -110,5 +119,5 @@\n                maps: TypeTuple[Mapping] = MAPPING_TYPES,\n-               dates: TypeTuple[datetime.date] = DATE_TYPES,\n+               dates: DateTypeTuple = DATE_TYPES,\n                value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n-               has_time: TypeTuple[datetime.time] = HAS_TIME,\n+               has_time: DatetimeTypeTuple = HAS_TIME,\n                _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_with_indent": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: TypeTuple[datetime.date] = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: TypeTuple[datetime.time] = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: DateTypeTuple = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: DatetimeTypeTuple = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "faust-streaming/faust",
    "commit": "51de861ada304a1763a4872811274818a8ee0851",
    "filename": "faust/utils/json.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/faust-streaming-faust/faust/utils/json.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "faust/utils/json.py:79:0 Incompatible variable type [9]: HAS_TIME is declared to have type `typing.Tuple[Type[datetime.time], ...]` but is used as type `Tuple[Type[datetime.datetime], Type[datetime.time]]`.",
    "message": " HAS_TIME is declared to have type `typing.Tuple[Type[datetime.time], ...]` but is used as type `Tuple[Type[datetime.datetime], Type[datetime.time]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 79,
    "warning_line": "HAS_TIME: TypeTuple[datetime.time] = (datetime.datetime, datetime.time)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n#: Types that we convert o mapping.\n",
        "source_code_len": 37,
        "target_code": "\nDateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\nDatetimeTypeTuple = Tuple[\n    Union[\n        Type[datetime.time],\n        Type[datetime.datetime],\n    ],\n    ...,\n]\n\n#: Types that we convert o mapping.\n",
        "target_code_len": 232,
        "diff_format": "@@ -69,2 +69,11 @@\n \n+DateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\n+DatetimeTypeTuple = Tuple[\n+    Union[\n+        Type[datetime.time],\n+        Type[datetime.datetime],\n+    ],\n+    ...,\n+]\n+\n #: Types that we convert o mapping.\n",
        "source_code_with_indent": "\n#: Types that we convert o mapping.\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nDateTypeTuple = Tuple[Union[Type[datetime.date], Type[datetime.time]], ...]\nDatetimeTypeTuple = Tuple[\n    Union[\n        Type[datetime.time],\n        Type[datetime.datetime],\n    ],\n    ...,\n]\n\n#: Types that we convert o mapping.\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nHAS_TIME: TypeTuple[datetime.time] = (datetime.datetime, datetime.time)\n\n",
        "source_code_len": 74,
        "target_code": "\nHAS_TIME: DatetimeTypeTuple = (datetime.datetime, datetime.time)\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -78,3 +87,3 @@\n \n-HAS_TIME: TypeTuple[datetime.time] = (datetime.datetime, datetime.time)\n+HAS_TIME: DatetimeTypeTuple = (datetime.datetime, datetime.time)\n \n",
        "source_code_with_indent": "\nHAS_TIME: TypeTuple[datetime.time] = (datetime.datetime, datetime.time)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nHAS_TIME: DatetimeTypeTuple = (datetime.datetime, datetime.time)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: TypeTuple[datetime.date] = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: TypeTuple[datetime.time] = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_len": 335,
        "target_code": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: DateTypeTuple = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: DatetimeTypeTuple = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "target_code_len": 317,
        "diff_format": "@@ -110,5 +119,5 @@\n                maps: TypeTuple[Mapping] = MAPPING_TYPES,\n-               dates: TypeTuple[datetime.date] = DATE_TYPES,\n+               dates: DateTypeTuple = DATE_TYPES,\n                value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n-               has_time: TypeTuple[datetime.time] = HAS_TIME,\n+               has_time: DatetimeTypeTuple = HAS_TIME,\n                _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_with_indent": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: TypeTuple[datetime.date] = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: TypeTuple[datetime.time] = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "               maps: TypeTuple[Mapping] = MAPPING_TYPES,\n               dates: DateTypeTuple = DATE_TYPES,\n               value_delegate: TypeTuple[enum.Enum] = VALUE_DELEGATE_TYPES,\n               has_time: DatetimeTypeTuple = HAS_TIME,\n               _isinstance: Callable[[Any, IsInstanceArg], bool] = isinstance,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]