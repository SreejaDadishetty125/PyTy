[
  {
    "project": "asyml/forte",
    "commit": "2533d9851c9d014905399d53084df0645b0ea27e",
    "filename": "forte/processors/base/data_augment_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/asyml-forte/forte/processors/base/data_augment_processor.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "forte/processors/base/data_augment_processor.py:585:26 Incompatible parameter type [6]: Expected `typing.Optional[Set[Entry[typing.Any]]]` for 2nd positional only parameter to call `Group.__init__` but got `List[Entry[typing.Any]]`.",
    "message": " Expected `typing.Optional[Set[Entry[typing.Any]]]` for 2nd positional only parameter to call `Group.__init__` but got `List[Entry[typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 585,
    "warning_line": "                new_pack, new_children",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            new_entry = type(entry)(\n                new_pack, new_children\n            )  # type: ignore\n        new_pack.add_entry(new_entry)\n",
        "source_code_len": 144,
        "target_code": "            new_entry = type(entry)(\n                new_pack, set(new_children))  # type: ignore\n        new_pack.add_entry(new_entry)\n",
        "target_code_len": 136,
        "diff_format": "@@ -584,4 +582,3 @@\n             new_entry = type(entry)(\n-                new_pack, new_children\n-            )  # type: ignore\n+                new_pack, set(new_children))  # type: ignore\n         new_pack.add_entry(new_entry)\n",
        "source_code_with_indent": "            new_entry = type(entry)(\n                new_pack, new_children\n            )  # type: ignore\n        <DED>new_pack.add_entry(new_entry)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            new_entry = type(entry)(\n                new_pack, set(new_children))  # type: ignore\n        <DED>new_pack.add_entry(new_entry)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]