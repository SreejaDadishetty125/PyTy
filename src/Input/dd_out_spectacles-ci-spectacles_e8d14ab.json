[
  {
    "project": "spectacles-ci/spectacles",
    "commit": "e8d14ab9a71ba0346529908bdf030059b2f09329",
    "filename": "fonz/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spectacles-ci-spectacles/fonz/connection.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fonz/connection.py:57:8 Incompatible attribute type [8]: Attribute `lookml` declared in class `Fonz` has type `Project` but is used as type `None`.",
    "message": " Attribute `lookml` declared in class `Fonz` has type `Project` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 57,
    "warning_line": "        self.lookml: Project = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.session = requests.Session()\n        self.lookml: Project = None\n        self.error_count = 0\n",
        "source_code_len": 107,
        "target_code": "        self.session = requests.Session()\n        self.lookml = Project(project, models=[])\n        self.error_count = 0\n",
        "target_code_len": 121,
        "diff_format": "@@ -56,3 +56,3 @@\n         self.session = requests.Session()\n-        self.lookml: Project = None\n+        self.lookml = Project(project, models=[])\n         self.error_count = 0\n",
        "source_code_with_indent": "        self.session = requests.Session()\n        self.lookml: Project = None\n        self.error_count = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.session = requests.Session()\n        self.lookml = Project(project, models=[])\n        self.error_count = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "spectacles-ci/spectacles",
    "commit": "e8d14ab9a71ba0346529908bdf030059b2f09329",
    "filename": "fonz/connection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spectacles-ci-spectacles/fonz/connection.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fonz/connection.py:136:8 Incompatible return type [7]: Expected `Project` but got implicit return value of `None`.",
    "message": " Expected `Project` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 136,
    "warning_line": "        self.lookml = Project(self.project, models)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def build_project(self) -> Project:\n        \"\"\"Create a representation of the desired project's LookML.\"\"\"\n",
        "source_code_len": 112,
        "target_code": "\n    def build_project(self):\n        \"\"\"Create a representation of the desired project's LookML.\"\"\"\n",
        "target_code_len": 101,
        "diff_format": "@@ -121,3 +121,3 @@\n \n-    def build_project(self) -> Project:\n+    def build_project(self):\n         \"\"\"Create a representation of the desired project's LookML.\"\"\"\n",
        "source_code_with_indent": "\n    <DED><DED>def build_project(self) -> Project:\n        <IND>\"\"\"Create a representation of the desired project's LookML.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def build_project(self):\n        <IND>\"\"\"Create a representation of the desired project's LookML.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "spectacles-ci/spectacles",
    "commit": "e8d14ab9a71ba0346529908bdf030059b2f09329",
    "filename": "fonz/lookml.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spectacles-ci-spectacles/fonz/lookml.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fonz/lookml.py:18:8 Incompatible attribute type [8]: Attribute `error` declared in class `Dimension` has type `SqlError` but is used as type `None`.",
    "message": " Attribute `error` declared in class `Dimension` has type `SqlError` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 18,
    "warning_line": "        self.error: SqlError = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_len": 61,
        "target_code": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_len": 71,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import List\n+from typing import List, Optional\n from fonz.exceptions import SqlError\n",
        "source_code_with_indent": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.errored = False\n        self.error: SqlError = None\n\n",
        "source_code_len": 66,
        "target_code": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_len": 120,
        "diff_format": "@@ -17,3 +17,4 @@\n         self.errored = False\n-        self.error: SqlError = None\n+        self.error: Optional[SqlError] = None\n+        self.query_id: Optional[int] = None\n \n",
        "source_code_with_indent": "        self.errored = False\n        self.error: SqlError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "spectacles-ci/spectacles",
    "commit": "e8d14ab9a71ba0346529908bdf030059b2f09329",
    "filename": "fonz/lookml.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spectacles-ci-spectacles/fonz/lookml.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fonz/lookml.py:51:8 Incompatible attribute type [8]: Attribute `error_message` declared in class `Explore` has type `str` but is used as type `None`.",
    "message": " Attribute `error_message` declared in class `Explore` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 51,
    "warning_line": "        self.error_message: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_len": 61,
        "target_code": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_len": 71,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import List\n+from typing import List, Optional\n from fonz.exceptions import SqlError\n",
        "source_code_with_indent": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.errored = False\n        self.error_message: str = None\n        self.error: SqlError = None\n\n",
        "source_code_len": 105,
        "target_code": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_len": 120,
        "diff_format": "@@ -50,4 +51,4 @@\n         self.errored = False\n-        self.error_message: str = None\n-        self.error: SqlError = None\n+        self.error: Optional[SqlError] = None\n+        self.query_id: Optional[int] = None\n \n",
        "source_code_with_indent": "        self.errored = False\n        self.error_message: str = None\n        self.error: SqlError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "spectacles-ci/spectacles",
    "commit": "e8d14ab9a71ba0346529908bdf030059b2f09329",
    "filename": "fonz/lookml.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/spectacles-ci-spectacles/fonz/lookml.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fonz/lookml.py:52:8 Incompatible attribute type [8]: Attribute `error` declared in class `Explore` has type `SqlError` but is used as type `None`.",
    "message": " Attribute `error` declared in class `Explore` has type `SqlError` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 52,
    "warning_line": "        self.error: SqlError = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_len": 61,
        "target_code": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_len": 71,
        "diff_format": "@@ -1,2 +1,2 @@\n-from typing import List\n+from typing import List, Optional\n from fonz.exceptions import SqlError\n",
        "source_code_with_indent": "from typing import List\nfrom fonz.exceptions import SqlError\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import List, Optional\nfrom fonz.exceptions import SqlError\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.errored = False\n        self.error_message: str = None\n        self.error: SqlError = None\n\n",
        "source_code_len": 105,
        "target_code": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_len": 120,
        "diff_format": "@@ -50,4 +51,4 @@\n         self.errored = False\n-        self.error_message: str = None\n-        self.error: SqlError = None\n+        self.error: Optional[SqlError] = None\n+        self.query_id: Optional[int] = None\n \n",
        "source_code_with_indent": "        self.errored = False\n        self.error_message: str = None\n        self.error: SqlError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.errored = False\n        self.error: Optional[SqlError] = None\n        self.query_id: Optional[int] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]