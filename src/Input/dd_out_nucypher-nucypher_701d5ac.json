[
  {
    "project": "nucypher/nucypher",
    "commit": "701d5ac06be3ee8ee749d7b88cfa66be25c222a4",
    "filename": "nucypher/network/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nucypher-nucypher/nucypher/network/server.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nucypher/network/server.py:103:4 Incompatible return type [7]: Expected `Tuple[flask.app.Flask, Datastore]` but got `Tuple[Tuple[flask.app.Flask, Datastore], Datastore]`.",
    "message": " Expected `Tuple[flask.app.Flask, Datastore]` but got `Tuple[Tuple[flask.app.Flask, Datastore], Datastore]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 103,
    "warning_line": "    return rest_app, datastore",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n\n",
        "source_code_len": 116,
        "target_code": "\ndef _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n\n",
        "target_code_len": 98,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n+def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n \n",
        "source_code_with_indent": "\n<DED>def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nucypher/nucypher",
    "commit": "701d5ac06be3ee8ee749d7b88cfa66be25c222a4",
    "filename": "nucypher/network/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nucypher-nucypher/nucypher/network/server.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nucypher/network/server.py:428:4 Incompatible return type [7]: Expected `Tuple[flask.app.Flask, Datastore]` but got `flask.app.Flask`.",
    "message": " Expected `Tuple[flask.app.Flask, Datastore]` but got `flask.app.Flask`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 428,
    "warning_line": "    return rest_app",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n\n",
        "source_code_len": 116,
        "target_code": "\ndef _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n\n",
        "target_code_len": 98,
        "diff_format": "@@ -105,3 +105,3 @@\n \n-def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n+def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n \n",
        "source_code_with_indent": "\n<DED>def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Tuple[Flask, Datastore]:\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _make_rest_app(datastore: Datastore, this_node, serving_domain: str, log: Logger) -> Flask:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]