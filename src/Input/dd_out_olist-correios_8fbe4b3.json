[
  {
    "project": "olist/correios",
    "commit": "8fbe4b3da9ddeb49f0a69c04ccef5afa37956457",
    "filename": "correios/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/olist-correios/correios/client.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "correios/client.py:325:32 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `ZipCode.__init__` but got `Union[ZipCode, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `ZipCode.__init__` but got `Union[ZipCode, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 325,
    "warning_line": "        from_zip_code = ZipCode(from_zip_code)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        from_zip_code = ZipCode(from_zip_code)\n        to_zip_code = ZipCode(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_len": 236,
        "target_code": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        from_zip_code = ZipCode.create(from_zip_code)\n        to_zip_code = ZipCode.create(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "target_code_len": 250,
        "diff_format": "@@ -324,4 +324,4 @@\n                                     to_zip_code: Union[ZipCode, str]) -> bool:\n-        from_zip_code = ZipCode(from_zip_code)\n-        to_zip_code = ZipCode(to_zip_code)\n+        from_zip_code = ZipCode.create(from_zip_code)\n+        to_zip_code = ZipCode.create(to_zip_code)\n         result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_with_indent": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        <IND>from_zip_code = ZipCode(from_zip_code)\n        to_zip_code = ZipCode(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        <IND>from_zip_code = ZipCode.create(from_zip_code)\n        to_zip_code = ZipCode.create(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "olist/correios",
    "commit": "8fbe4b3da9ddeb49f0a69c04ccef5afa37956457",
    "filename": "correios/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/olist-correios/correios/client.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "correios/client.py:326:30 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `ZipCode.__init__` but got `Union[ZipCode, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `ZipCode.__init__` but got `Union[ZipCode, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 326,
    "warning_line": "        to_zip_code = ZipCode(to_zip_code)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        from_zip_code = ZipCode(from_zip_code)\n        to_zip_code = ZipCode(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_len": 236,
        "target_code": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        from_zip_code = ZipCode.create(from_zip_code)\n        to_zip_code = ZipCode.create(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "target_code_len": 250,
        "diff_format": "@@ -324,4 +324,4 @@\n                                     to_zip_code: Union[ZipCode, str]) -> bool:\n-        from_zip_code = ZipCode(from_zip_code)\n-        to_zip_code = ZipCode(to_zip_code)\n+        from_zip_code = ZipCode.create(from_zip_code)\n+        to_zip_code = ZipCode.create(to_zip_code)\n         result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_with_indent": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        <IND>from_zip_code = ZipCode(from_zip_code)\n        to_zip_code = ZipCode(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                    to_zip_code: Union[ZipCode, str]) -> bool:\n        <IND>from_zip_code = ZipCode.create(from_zip_code)\n        to_zip_code = ZipCode.create(to_zip_code)\n        result = self._auth_call(\"verificaDisponibilidadeServico\",\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]