[
  {
    "project": "twisted/twisted",
    "commit": "f5504e61e8f6cdc1d58442134e49ce490692f452",
    "filename": "src/twisted/test/test_sslverify.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/twisted-twisted/src/twisted/test/test_sslverify.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "src/twisted/test/test_sslverify.py:71:37 Incompatible parameter type [6]: Expected `typing.Callable[[SSL.Connection, typing.List[bytes]], bytes]` for 1st positional only parameter to call `SSL.Context.set_alpn_select_callback` but got `typing.Callable[[Named(c, typing.Any)], None]`.",
    "message": " Expected `typing.Callable[[SSL.Connection, typing.List[bytes]], bytes]` for 1st positional only parameter to call `SSL.Context.set_alpn_select_callback` but got `typing.Callable[[Named(c, typing.Any)], None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "        ctx.set_alpn_select_callback(lambda c: None)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        ctx = SSL.Context(SSL.SSLv23_METHOD)\n        ctx.set_alpn_select_callback(lambda c: None)\n    except NotImplementedError:\n",
        "source_code_len": 130,
        "target_code": "        ctx = SSL.Context(SSL.SSLv23_METHOD)\n        ctx.set_alpn_select_callback(lambda c: None)  # type: ignore[misc,arg-type]\n    except NotImplementedError:\n",
        "target_code_len": 161,
        "diff_format": "@@ -70,3 +70,3 @@\n         ctx = SSL.Context(SSL.SSLv23_METHOD)\n-        ctx.set_alpn_select_callback(lambda c: None)\n+        ctx.set_alpn_select_callback(lambda c: None)  # type: ignore[misc,arg-type]\n     except NotImplementedError:\n",
        "source_code_with_indent": "        <IND>ctx = SSL.Context(SSL.SSLv23_METHOD)\n        ctx.set_alpn_select_callback(lambda c: None)\n    <DED>except NotImplementedError:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>ctx = SSL.Context(SSL.SSLv23_METHOD)\n        ctx.set_alpn_select_callback(lambda c: None)  # type: ignore[misc,arg-type]\n    <DED>except NotImplementedError:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]