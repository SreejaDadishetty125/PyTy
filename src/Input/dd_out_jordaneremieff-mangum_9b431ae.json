[
  {
    "project": "jordaneremieff/mangum",
    "commit": "9b431ae5f018aeb5eafd8fd6e654cf936d82b66a",
    "filename": "mangum/protocols/websockets.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jordaneremieff-mangum/mangum/protocols/websockets.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mangum/protocols/websockets.py:24:4 Incompatible attribute type [8]: Attribute `endpoint_url` declared in class `ASGIWebSocketCycle` has type `str` but is used as type `None`.",
    "message": " Attribute `endpoint_url` declared in class `ASGIWebSocketCycle` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 24,
    "warning_line": "    endpoint_url: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_len": 212,
        "target_code": "    scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_len": 191,
        "diff_format": "@@ -21,7 +22,7 @@\n     scope: Scope\n+    endpoint_url: str\n+    connection_id: str\n+    connection_table: ConnectionTable\n     state: ASGIState = ASGIState.REQUEST\n     response: dict = field(default_factory=dict)\n-    endpoint_url: str = None\n-    connection_id: str = None\n-    connection_table: ConnectionTable = None\n \n",
        "source_code_with_indent": "    <IND>scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jordaneremieff/mangum",
    "commit": "9b431ae5f018aeb5eafd8fd6e654cf936d82b66a",
    "filename": "mangum/protocols/websockets.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jordaneremieff-mangum/mangum/protocols/websockets.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mangum/protocols/websockets.py:25:4 Incompatible attribute type [8]: Attribute `connection_id` declared in class `ASGIWebSocketCycle` has type `str` but is used as type `None`.",
    "message": " Attribute `connection_id` declared in class `ASGIWebSocketCycle` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 25,
    "warning_line": "    connection_id: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_len": 212,
        "target_code": "    scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_len": 191,
        "diff_format": "@@ -21,7 +22,7 @@\n     scope: Scope\n+    endpoint_url: str\n+    connection_id: str\n+    connection_table: ConnectionTable\n     state: ASGIState = ASGIState.REQUEST\n     response: dict = field(default_factory=dict)\n-    endpoint_url: str = None\n-    connection_id: str = None\n-    connection_table: ConnectionTable = None\n \n",
        "source_code_with_indent": "    <IND>scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jordaneremieff/mangum",
    "commit": "9b431ae5f018aeb5eafd8fd6e654cf936d82b66a",
    "filename": "mangum/protocols/websockets.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jordaneremieff-mangum/mangum/protocols/websockets.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mangum/protocols/websockets.py:26:4 Incompatible attribute type [8]: Attribute `connection_table` declared in class `ASGIWebSocketCycle` has type `ConnectionTable` but is used as type `None`.",
    "message": " Attribute `connection_table` declared in class `ASGIWebSocketCycle` has type `ConnectionTable` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 26,
    "warning_line": "    connection_table: ConnectionTable = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_len": 212,
        "target_code": "    scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_len": 191,
        "diff_format": "@@ -21,7 +22,7 @@\n     scope: Scope\n+    endpoint_url: str\n+    connection_id: str\n+    connection_table: ConnectionTable\n     state: ASGIState = ASGIState.REQUEST\n     response: dict = field(default_factory=dict)\n-    endpoint_url: str = None\n-    connection_id: str = None\n-    connection_table: ConnectionTable = None\n \n",
        "source_code_with_indent": "    <IND>scope: Scope\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n    endpoint_url: str = None\n    connection_id: str = None\n    connection_table: ConnectionTable = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>scope: Scope\n    endpoint_url: str\n    connection_id: str\n    connection_table: ConnectionTable\n    state: ASGIState = ASGIState.REQUEST\n    response: dict = field(default_factory=dict)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]