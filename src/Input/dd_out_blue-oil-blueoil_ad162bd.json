[
  {
    "project": "blue-oil/blueoil",
    "commit": "ad162bdccc1b5f133b1be98014d34bd1ebfc2134",
    "filename": "blueoil/converter/core/operators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/blue-oil-blueoil/blueoil/converter/core/operators.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "blueoil/converter/core/operators.py:527:17 Incompatible variable type [9]: transposed_data is declared to have type `List[int]` but is used as type `None`.",
    "message": " transposed_data is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 527,
    "warning_line": "                 transposed_data: List[int] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "source_code_len": 345,
        "target_code": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "target_code_len": 385,
        "diff_format": "@@ -526,7 +526,7 @@\n                  actual_shape: List[int] = [],\n-                 transposed_data: List[int] = None,\n-                 transposed_shape: List[int] = None,\n-                 kn2row_data: List[int] = None,\n+                 transposed_data: Optional[List[int]] = None,\n+                 transposed_shape: Optional[List[int]] = None,\n+                 kn2row_data: Optional[List[int]] = None,\n                  kn2row_dimension_format: str = 'HWOI',\n-                 kn2row_shape: List[int] = None,) -> None:\n+                 kn2row_shape: Optional[List[int]] = None,) -> None:\n         \"\"\"Init the variable.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        <IND>",
        "target_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_data(self) -> List[int]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "source_code_len": 96,
        "target_code": "    @property\n    def transposed_data(self) -> Optional[List[int]]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "target_code_len": 106,
        "diff_format": "@@ -554,3 +554,3 @@\n     @property\n-    def transposed_data(self) -> List[int]:\n+    def transposed_data(self) -> Optional[List[int]]:\n         \"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> List[int]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> Optional[List[int]]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_shape(self) -> List[int]:\n        return self._transposed_shape\n",
        "source_code_len": 97,
        "target_code": "    @property\n    def transposed_shape(self) -> Optional[List[int]]:\n        return self._transposed_shape\n",
        "target_code_len": 107,
        "diff_format": "@@ -563,3 +563,3 @@\n     @property\n-    def transposed_shape(self) -> List[int]:\n+    def transposed_shape(self) -> Optional[List[int]]:\n         return self._transposed_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> List[int]:\n        <IND>return self._transposed_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> Optional[List[int]]:\n        <IND>return self._transposed_shape\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_data(self) -> List[int]:\n        return self._kn2row_data\n",
        "source_code_len": 87,
        "target_code": "    @property\n    def kn2row_data(self) -> Optional[List[int]]:\n        return self._kn2row_data\n",
        "target_code_len": 97,
        "diff_format": "@@ -567,3 +567,3 @@\n     @property\n-    def kn2row_data(self) -> List[int]:\n+    def kn2row_data(self) -> Optional[List[int]]:\n         return self._kn2row_data\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> List[int]:\n        <IND>return self._kn2row_data\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_data\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_shape(self) -> List[int]:\n        return self._kn2row_shape\n",
        "source_code_len": 89,
        "target_code": "    @property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        return self._kn2row_shape\n",
        "target_code_len": 99,
        "diff_format": "@@ -575,3 +575,3 @@\n     @property\n-    def kn2row_shape(self) -> List[int]:\n+    def kn2row_shape(self) -> Optional[List[int]]:\n         return self._kn2row_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> List[int]:\n        <IND>return self._kn2row_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_shape\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "blue-oil/blueoil",
    "commit": "ad162bdccc1b5f133b1be98014d34bd1ebfc2134",
    "filename": "blueoil/converter/core/operators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/blue-oil-blueoil/blueoil/converter/core/operators.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "blueoil/converter/core/operators.py:528:17 Incompatible variable type [9]: transposed_shape is declared to have type `List[int]` but is used as type `None`.",
    "message": " transposed_shape is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 528,
    "warning_line": "                 transposed_shape: List[int] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "source_code_len": 345,
        "target_code": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "target_code_len": 385,
        "diff_format": "@@ -526,7 +526,7 @@\n                  actual_shape: List[int] = [],\n-                 transposed_data: List[int] = None,\n-                 transposed_shape: List[int] = None,\n-                 kn2row_data: List[int] = None,\n+                 transposed_data: Optional[List[int]] = None,\n+                 transposed_shape: Optional[List[int]] = None,\n+                 kn2row_data: Optional[List[int]] = None,\n                  kn2row_dimension_format: str = 'HWOI',\n-                 kn2row_shape: List[int] = None,) -> None:\n+                 kn2row_shape: Optional[List[int]] = None,) -> None:\n         \"\"\"Init the variable.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        <IND>",
        "target_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_data(self) -> List[int]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "source_code_len": 96,
        "target_code": "    @property\n    def transposed_data(self) -> Optional[List[int]]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "target_code_len": 106,
        "diff_format": "@@ -554,3 +554,3 @@\n     @property\n-    def transposed_data(self) -> List[int]:\n+    def transposed_data(self) -> Optional[List[int]]:\n         \"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> List[int]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> Optional[List[int]]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_shape(self) -> List[int]:\n        return self._transposed_shape\n",
        "source_code_len": 97,
        "target_code": "    @property\n    def transposed_shape(self) -> Optional[List[int]]:\n        return self._transposed_shape\n",
        "target_code_len": 107,
        "diff_format": "@@ -563,3 +563,3 @@\n     @property\n-    def transposed_shape(self) -> List[int]:\n+    def transposed_shape(self) -> Optional[List[int]]:\n         return self._transposed_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> List[int]:\n        <IND>return self._transposed_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> Optional[List[int]]:\n        <IND>return self._transposed_shape\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_data(self) -> List[int]:\n        return self._kn2row_data\n",
        "source_code_len": 87,
        "target_code": "    @property\n    def kn2row_data(self) -> Optional[List[int]]:\n        return self._kn2row_data\n",
        "target_code_len": 97,
        "diff_format": "@@ -567,3 +567,3 @@\n     @property\n-    def kn2row_data(self) -> List[int]:\n+    def kn2row_data(self) -> Optional[List[int]]:\n         return self._kn2row_data\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> List[int]:\n        <IND>return self._kn2row_data\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_data\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_shape(self) -> List[int]:\n        return self._kn2row_shape\n",
        "source_code_len": 89,
        "target_code": "    @property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        return self._kn2row_shape\n",
        "target_code_len": 99,
        "diff_format": "@@ -575,3 +575,3 @@\n     @property\n-    def kn2row_shape(self) -> List[int]:\n+    def kn2row_shape(self) -> Optional[List[int]]:\n         return self._kn2row_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> List[int]:\n        <IND>return self._kn2row_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_shape\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "blue-oil/blueoil",
    "commit": "ad162bdccc1b5f133b1be98014d34bd1ebfc2134",
    "filename": "blueoil/converter/core/operators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/blue-oil-blueoil/blueoil/converter/core/operators.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "blueoil/converter/core/operators.py:529:17 Incompatible variable type [9]: kn2row_data is declared to have type `List[int]` but is used as type `None`.",
    "message": " kn2row_data is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 529,
    "warning_line": "                 kn2row_data: List[int] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "source_code_len": 345,
        "target_code": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "target_code_len": 385,
        "diff_format": "@@ -526,7 +526,7 @@\n                  actual_shape: List[int] = [],\n-                 transposed_data: List[int] = None,\n-                 transposed_shape: List[int] = None,\n-                 kn2row_data: List[int] = None,\n+                 transposed_data: Optional[List[int]] = None,\n+                 transposed_shape: Optional[List[int]] = None,\n+                 kn2row_data: Optional[List[int]] = None,\n                  kn2row_dimension_format: str = 'HWOI',\n-                 kn2row_shape: List[int] = None,) -> None:\n+                 kn2row_shape: Optional[List[int]] = None,) -> None:\n         \"\"\"Init the variable.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        <IND>",
        "target_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_data(self) -> List[int]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "source_code_len": 96,
        "target_code": "    @property\n    def transposed_data(self) -> Optional[List[int]]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "target_code_len": 106,
        "diff_format": "@@ -554,3 +554,3 @@\n     @property\n-    def transposed_data(self) -> List[int]:\n+    def transposed_data(self) -> Optional[List[int]]:\n         \"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> List[int]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> Optional[List[int]]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_shape(self) -> List[int]:\n        return self._transposed_shape\n",
        "source_code_len": 97,
        "target_code": "    @property\n    def transposed_shape(self) -> Optional[List[int]]:\n        return self._transposed_shape\n",
        "target_code_len": 107,
        "diff_format": "@@ -563,3 +563,3 @@\n     @property\n-    def transposed_shape(self) -> List[int]:\n+    def transposed_shape(self) -> Optional[List[int]]:\n         return self._transposed_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> List[int]:\n        <IND>return self._transposed_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> Optional[List[int]]:\n        <IND>return self._transposed_shape\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_data(self) -> List[int]:\n        return self._kn2row_data\n",
        "source_code_len": 87,
        "target_code": "    @property\n    def kn2row_data(self) -> Optional[List[int]]:\n        return self._kn2row_data\n",
        "target_code_len": 97,
        "diff_format": "@@ -567,3 +567,3 @@\n     @property\n-    def kn2row_data(self) -> List[int]:\n+    def kn2row_data(self) -> Optional[List[int]]:\n         return self._kn2row_data\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> List[int]:\n        <IND>return self._kn2row_data\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_data\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_shape(self) -> List[int]:\n        return self._kn2row_shape\n",
        "source_code_len": 89,
        "target_code": "    @property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        return self._kn2row_shape\n",
        "target_code_len": 99,
        "diff_format": "@@ -575,3 +575,3 @@\n     @property\n-    def kn2row_shape(self) -> List[int]:\n+    def kn2row_shape(self) -> Optional[List[int]]:\n         return self._kn2row_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> List[int]:\n        <IND>return self._kn2row_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_shape\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "blue-oil/blueoil",
    "commit": "ad162bdccc1b5f133b1be98014d34bd1ebfc2134",
    "filename": "blueoil/converter/core/operators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/blue-oil-blueoil/blueoil/converter/core/operators.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "blueoil/converter/core/operators.py:531:17 Incompatible variable type [9]: kn2row_shape is declared to have type `List[int]` but is used as type `None`.",
    "message": " kn2row_shape is declared to have type `List[int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 531,
    "warning_line": "                 kn2row_shape: List[int] = None,) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "source_code_len": 345,
        "target_code": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        \"\"\"Init the variable.\n",
        "target_code_len": 385,
        "diff_format": "@@ -526,7 +526,7 @@\n                  actual_shape: List[int] = [],\n-                 transposed_data: List[int] = None,\n-                 transposed_shape: List[int] = None,\n-                 kn2row_data: List[int] = None,\n+                 transposed_data: Optional[List[int]] = None,\n+                 transposed_shape: Optional[List[int]] = None,\n+                 kn2row_data: Optional[List[int]] = None,\n                  kn2row_dimension_format: str = 'HWOI',\n-                 kn2row_shape: List[int] = None,) -> None:\n+                 kn2row_shape: Optional[List[int]] = None,) -> None:\n         \"\"\"Init the variable.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: List[int] = None,\n                 transposed_shape: List[int] = None,\n                 kn2row_data: List[int] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: List[int] = None,) -> None:\n        <IND>",
        "target_code_with_indent": "                 actual_shape: List[int] = [],\n                 transposed_data: Optional[List[int]] = None,\n                 transposed_shape: Optional[List[int]] = None,\n                 kn2row_data: Optional[List[int]] = None,\n                 kn2row_dimension_format: str = 'HWOI',\n                 kn2row_shape: Optional[List[int]] = None,) -> None:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_data(self) -> List[int]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "source_code_len": 96,
        "target_code": "    @property\n    def transposed_data(self) -> Optional[List[int]]:\n        \"\"\"Return transposed data.\"\"\"\n",
        "target_code_len": 106,
        "diff_format": "@@ -554,3 +554,3 @@\n     @property\n-    def transposed_data(self) -> List[int]:\n+    def transposed_data(self) -> Optional[List[int]]:\n         \"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> List[int]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_data(self) -> Optional[List[int]]:\n        <IND>\"\"\"Return transposed data.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def transposed_shape(self) -> List[int]:\n        return self._transposed_shape\n",
        "source_code_len": 97,
        "target_code": "    @property\n    def transposed_shape(self) -> Optional[List[int]]:\n        return self._transposed_shape\n",
        "target_code_len": 107,
        "diff_format": "@@ -563,3 +563,3 @@\n     @property\n-    def transposed_shape(self) -> List[int]:\n+    def transposed_shape(self) -> Optional[List[int]]:\n         return self._transposed_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> List[int]:\n        <IND>return self._transposed_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def transposed_shape(self) -> Optional[List[int]]:\n        <IND>return self._transposed_shape\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_data(self) -> List[int]:\n        return self._kn2row_data\n",
        "source_code_len": 87,
        "target_code": "    @property\n    def kn2row_data(self) -> Optional[List[int]]:\n        return self._kn2row_data\n",
        "target_code_len": 97,
        "diff_format": "@@ -567,3 +567,3 @@\n     @property\n-    def kn2row_data(self) -> List[int]:\n+    def kn2row_data(self) -> Optional[List[int]]:\n         return self._kn2row_data\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> List[int]:\n        <IND>return self._kn2row_data\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_data(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_data\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def kn2row_shape(self) -> List[int]:\n        return self._kn2row_shape\n",
        "source_code_len": 89,
        "target_code": "    @property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        return self._kn2row_shape\n",
        "target_code_len": 99,
        "diff_format": "@@ -575,3 +575,3 @@\n     @property\n-    def kn2row_shape(self) -> List[int]:\n+    def kn2row_shape(self) -> Optional[List[int]]:\n         return self._kn2row_shape\n",
        "source_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> List[int]:\n        <IND>return self._kn2row_shape\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def kn2row_shape(self) -> Optional[List[int]]:\n        <IND>return self._kn2row_shape\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]