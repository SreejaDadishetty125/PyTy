[
  {
    "project": "Lookyloo/lookyloo",
    "commit": "d964549e56b9bbf871c032d75ddd674f7729b7e9",
    "filename": "lookyloo/lookyloo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Lookyloo-lookyloo/lookyloo/lookyloo.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lookyloo/lookyloo.py:1006:8 Incompatible variable type [9]: statistics is declared to have type `Dict[str, List[typing.Any]]` but is used as type `Dict[str, Union[Dict[Variable[_KT], Variable[_VT]], List[Variable[_T]]]]`.",
    "message": " statistics is declared to have type `Dict[str, List[typing.Any]]` but is used as type `Dict[str, Union[Dict[Variable[_KT], Variable[_VT]], List[Variable[_T]]]]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1006,
    "warning_line": "        statistics: Dict[str, List] = {'weeks': [], 'years': {}}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_stats(self) -> Dict[str, List]:\n        stats: Dict[int, Dict[int, Dict[str, Any]]] = {}\n",
        "source_code_len": 102,
        "target_code": "\n    def get_stats(self) -> Dict[str, Union[List, Dict]]:\n        stats: Dict[int, Dict[int, Dict[str, Any]]] = {}\n",
        "target_code_len": 115,
        "diff_format": "@@ -999,3 +998,3 @@\n \n-    def get_stats(self) -> Dict[str, List]:\n+    def get_stats(self) -> Dict[str, Union[List, Dict]]:\n         stats: Dict[int, Dict[int, Dict[str, Any]]] = {}\n",
        "source_code_with_indent": "\n    <DED>def get_stats(self) -> Dict[str, List]:\n        <IND>stats: Dict[int, Dict[int, Dict[str, Any]]] = {}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_stats(self) -> Dict[str, Union[List, Dict]]:\n        <IND>stats: Dict[int, Dict[int, Dict[str, Any]]] = {}\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                        calendar_week: {'analysis': 0, 'analysis_with_redirects': 0, 'redirects': 0, 'uniq_urls': set()}}\n        statistics: Dict[str, List] = {'weeks': [], 'years': {}}\n        for uuid in self.capture_uuids:\n",
        "source_code_len": 243,
        "target_code": "                                        calendar_week: {'analysis': 0, 'analysis_with_redirects': 0, 'redirects': 0, 'uniq_urls': set()}}\n        statistics: Dict[str, Union[List, Dict]] = {'weeks': [], 'years': {}}\n        for uuid in self.capture_uuids:\n",
        "target_code_len": 256,
        "diff_format": "@@ -1005,3 +1004,3 @@\n                                         calendar_week: {'analysis': 0, 'analysis_with_redirects': 0, 'redirects': 0, 'uniq_urls': set()}}\n-        statistics: Dict[str, List] = {'weeks': [], 'years': {}}\n+        statistics: Dict[str, Union[List, Dict]] = {'weeks': [], 'years': {}}\n         for uuid in self.capture_uuids:\n",
        "source_code_with_indent": "                                        calendar_week: {'analysis': 0, 'analysis_with_redirects': 0, 'redirects': 0, 'uniq_urls': set()}}\n        statistics: Dict[str, List] = {'weeks': [], 'years': {}}\n        for uuid in self.capture_uuids:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                        calendar_week: {'analysis': 0, 'analysis_with_redirects': 0, 'redirects': 0, 'uniq_urls': set()}}\n        statistics: Dict[str, Union[List, Dict]] = {'weeks': [], 'years': {}}\n        for uuid in self.capture_uuids:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)\n        for year, data in stats.items():\n            years: Dict[str, Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "source_code_len": 247,
        "target_code": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)  # type: ignore\n\n        for year, data in stats.items():\n            years: Dict[Union[int, str], Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "target_code_len": 276,
        "diff_format": "@@ -1036,5 +1036,6 @@\n             week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n-            statistics['weeks'].append(week)\n+            statistics['weeks'].append(week)  # type: ignore\n+\n         for year, data in stats.items():\n-            years: Dict[str, Union[Dict, int]] = {}\n+            years: Dict[Union[int, str], Union[Dict, int]] = {}\n             yearly_analysis = 0\n",
        "source_code_with_indent": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)\n        <DED>for year, data in stats.items():\n            <IND>years: Dict[str, Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)  # type: ignore\n\n        <DED>for year, data in stats.items():\n            <IND>years: Dict[Union[int, str], Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Lookyloo/lookyloo",
    "commit": "d964549e56b9bbf871c032d75ddd674f7729b7e9",
    "filename": "lookyloo/lookyloo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Lookyloo-lookyloo/lookyloo/lookyloo.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lookyloo/lookyloo.py:1055:32 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__setitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1055,
    "warning_line": "            statistics['years'][str(year)] = years",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)\n        for year, data in stats.items():\n            years: Dict[str, Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "source_code_len": 247,
        "target_code": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)  # type: ignore\n\n        for year, data in stats.items():\n            years: Dict[Union[int, str], Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "target_code_len": 276,
        "diff_format": "@@ -1036,5 +1036,6 @@\n             week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n-            statistics['weeks'].append(week)\n+            statistics['weeks'].append(week)  # type: ignore\n+\n         for year, data in stats.items():\n-            years: Dict[str, Union[Dict, int]] = {}\n+            years: Dict[Union[int, str], Union[Dict, int]] = {}\n             yearly_analysis = 0\n",
        "source_code_with_indent": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)\n        <DED>for year, data in stats.items():\n            <IND>years: Dict[str, Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            week['uniq_domains'] = len(uniq_domains(week_stat['uniq_urls']))\n            statistics['weeks'].append(week)  # type: ignore\n\n        <DED>for year, data in stats.items():\n            <IND>years: Dict[Union[int, str], Union[Dict, int]] = {}\n            yearly_analysis = 0\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                yearly_redirects += _stats['redirects']\n                years[str(month)] = mstats\n            years['yearly_analysis'] = yearly_analysis\n            years['yearly_redirects'] = yearly_redirects\n            statistics['years'][str(year)] = years\n        return statistics\n",
        "source_code_len": 288,
        "target_code": "                yearly_redirects += _stats['redirects']\n                years[month] = mstats\n            years['yearly_analysis'] = yearly_analysis\n            years['yearly_redirects'] = yearly_redirects\n            statistics['years'][year] = years\n        return statistics\n",
        "target_code_len": 278,
        "diff_format": "@@ -1051,6 +1052,6 @@\n                 yearly_redirects += _stats['redirects']\n-                years[str(month)] = mstats\n+                years[month] = mstats\n             years['yearly_analysis'] = yearly_analysis\n             years['yearly_redirects'] = yearly_redirects\n-            statistics['years'][str(year)] = years\n+            statistics['years'][year] = years\n         return statistics\n",
        "source_code_with_indent": "                yearly_redirects += _stats['redirects']\n                years[str(month)] = mstats\n            <DED>years['yearly_analysis'] = yearly_analysis\n            years['yearly_redirects'] = yearly_redirects\n            statistics['years'][str(year)] = years\n        <DED>return statistics\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                yearly_redirects += _stats['redirects']\n                years[month] = mstats\n            <DED>years['yearly_analysis'] = yearly_analysis\n            years['yearly_redirects'] = yearly_redirects\n            statistics['years'][year] = years\n        <DED>return statistics\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]