[
  {
    "project": "ReactiveX/RxPY",
    "commit": "e5fb1dcb64757057095f6770fa1fcf3bb71daec5",
    "filename": "rx/core/observer/observer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ReactiveX-RxPY/rx/core/observer/observer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rx/core/observer/observer.py:19:12 Incompatible attribute type [8]: Attribute `_on_next_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_next_core)[[Named(self, Observer), Named(value, typing.Any)], None], Observer]` but is used as type `typing.Callable[[typing.Any], None]`.",
    "message": " Attribute `_on_next_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_next_core)[[Named(self, Observer), Named(value, typing.Any)], None], Observer]` but is used as type `typing.Callable[[typing.Any], None]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 19,
    "warning_line": "            self._on_next_core = on_next",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from .. import typing\n\n",
        "source_code_len": 23,
        "target_code": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -3,2 +3,3 @@\n from .. import typing\n+from rx.internal import noop, default_error\n \n",
        "source_code_with_indent": "from .. import typing\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.is_stopped = False\n        if on_next is not None:\n            self._on_next_core = on_next\n        if on_error is not None:\n            self._on_error_core = on_error\n        if on_completed is not None:\n            self._on_completed_core = on_completed\n\n",
        "source_code_len": 270,
        "target_code": "        self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_len": 198,
        "diff_format": "@@ -17,8 +18,5 @@\n         self.is_stopped = False\n-        if on_next is not None:\n-            self._on_next_core = on_next\n-        if on_error is not None:\n-            self._on_error_core = on_error\n-        if on_completed is not None:\n-            self._on_completed_core = on_completed\n+        self._handler_on_next = on_next or noop\n+        self._handler_on_error = on_error or default_error\n+        self._handler_on_completed = on_completed or noop\n \n",
        "source_code_with_indent": "        <IND>self.is_stopped = False\n        if on_next is not None:\n            <IND>self._on_next_core = on_next\n        <DED>if on_error is not None:\n            <IND>self._on_error_core = on_error\n        <DED>if on_completed is not None:\n            <IND>self._on_completed_core = on_completed\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ReactiveX/RxPY",
    "commit": "e5fb1dcb64757057095f6770fa1fcf3bb71daec5",
    "filename": "rx/core/observer/observer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ReactiveX-RxPY/rx/core/observer/observer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rx/core/observer/observer.py:21:12 Incompatible attribute type [8]: Attribute `_on_error_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_error_core)[[Named(self, Observer), Named(error, Exception)], None], Observer]` but is used as type `typing.Callable[[Exception], None]`.",
    "message": " Attribute `_on_error_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_error_core)[[Named(self, Observer), Named(error, Exception)], None], Observer]` but is used as type `typing.Callable[[Exception], None]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 21,
    "warning_line": "            self._on_error_core = on_error",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from .. import typing\n\n",
        "source_code_len": 23,
        "target_code": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -3,2 +3,3 @@\n from .. import typing\n+from rx.internal import noop, default_error\n \n",
        "source_code_with_indent": "from .. import typing\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.is_stopped = False\n        if on_next is not None:\n            self._on_next_core = on_next\n        if on_error is not None:\n            self._on_error_core = on_error\n        if on_completed is not None:\n            self._on_completed_core = on_completed\n\n",
        "source_code_len": 270,
        "target_code": "        self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_len": 198,
        "diff_format": "@@ -17,8 +18,5 @@\n         self.is_stopped = False\n-        if on_next is not None:\n-            self._on_next_core = on_next\n-        if on_error is not None:\n-            self._on_error_core = on_error\n-        if on_completed is not None:\n-            self._on_completed_core = on_completed\n+        self._handler_on_next = on_next or noop\n+        self._handler_on_error = on_error or default_error\n+        self._handler_on_completed = on_completed or noop\n \n",
        "source_code_with_indent": "        <IND>self.is_stopped = False\n        if on_next is not None:\n            <IND>self._on_next_core = on_next\n        <DED>if on_error is not None:\n            <IND>self._on_error_core = on_error\n        <DED>if on_completed is not None:\n            <IND>self._on_completed_core = on_completed\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ReactiveX/RxPY",
    "commit": "e5fb1dcb64757057095f6770fa1fcf3bb71daec5",
    "filename": "rx/core/observer/observer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ReactiveX-RxPY/rx/core/observer/observer.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rx/core/observer/observer.py:23:12 Incompatible attribute type [8]: Attribute `_on_completed_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_completed_core)[[Named(self, Observer)], None], Observer]` but is used as type `typing.Callable[[], None]`.",
    "message": " Attribute `_on_completed_core` declared in class `Observer` has type `BoundMethod[typing.Callable(Observer._on_completed_core)[[Named(self, Observer)], None], Observer]` but is used as type `typing.Callable[[], None]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 23,
    "warning_line": "            self._on_completed_core = on_completed",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from .. import typing\n\n",
        "source_code_len": 23,
        "target_code": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -3,2 +3,3 @@\n from .. import typing\n+from rx.internal import noop, default_error\n \n",
        "source_code_with_indent": "from .. import typing\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from .. import typing\nfrom rx.internal import noop, default_error\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.is_stopped = False\n        if on_next is not None:\n            self._on_next_core = on_next\n        if on_error is not None:\n            self._on_error_core = on_error\n        if on_completed is not None:\n            self._on_completed_core = on_completed\n\n",
        "source_code_len": 270,
        "target_code": "        self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_len": 198,
        "diff_format": "@@ -17,8 +18,5 @@\n         self.is_stopped = False\n-        if on_next is not None:\n-            self._on_next_core = on_next\n-        if on_error is not None:\n-            self._on_error_core = on_error\n-        if on_completed is not None:\n-            self._on_completed_core = on_completed\n+        self._handler_on_next = on_next or noop\n+        self._handler_on_error = on_error or default_error\n+        self._handler_on_completed = on_completed or noop\n \n",
        "source_code_with_indent": "        <IND>self.is_stopped = False\n        if on_next is not None:\n            <IND>self._on_next_core = on_next\n        <DED>if on_error is not None:\n            <IND>self._on_error_core = on_error\n        <DED>if on_completed is not None:\n            <IND>self._on_completed_core = on_completed\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>self.is_stopped = False\n        self._handler_on_next = on_next or noop\n        self._handler_on_error = on_error or default_error\n        self._handler_on_completed = on_completed or noop\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]