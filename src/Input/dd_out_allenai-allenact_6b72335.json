[
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/object_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/object_nav_models.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/object_nav_models.py:313:12 Unsupported operand [58]: `+` is not supported for operand types `typing.Union[BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU], int]` and `typing.Any`.",
    "message": " `+` is not supported for operand types `typing.Union[BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU], int]` and `typing.Any`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 313,
    "warning_line": "            (0 if self.is_blind else self.recurrent_hidden_state_size)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_len": 209,
        "target_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_len": 194,
        "diff_format": "@@ -290,3 +290,3 @@\n         self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self.recurrent_hidden_state_size)\n            + object_type_embedding_dim,\n            self.recurrent_hidden_state_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_len": 277,
        "target_code": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self._hidden_size)\n            + object_type_embedding_dim,\n            self._hidden_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "target_code_len": 247,
        "diff_format": "@@ -312,5 +312,5 @@\n         self.state_encoder = RNNStateEncoder(\n-            (0 if self.is_blind else self.recurrent_hidden_state_size)\n+            (0 if self.is_blind else self._hidden_size)\n             + object_type_embedding_dim,\n-            self.recurrent_hidden_state_size,\n+            self._hidden_size,\n             trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_with_indent": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self.recurrent_hidden_state_size)\n            + object_type_embedding_dim,\n            self.recurrent_hidden_state_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self._hidden_size)\n            + object_type_embedding_dim,\n            self._hidden_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/object_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/object_nav_models.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/object_nav_models.py:315:12 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 315,
    "warning_line": "            self.recurrent_hidden_state_size,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_len": 209,
        "target_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_len": 194,
        "diff_format": "@@ -290,3 +290,3 @@\n         self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self.recurrent_hidden_state_size)\n            + object_type_embedding_dim,\n            self.recurrent_hidden_state_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_len": 277,
        "target_code": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self._hidden_size)\n            + object_type_embedding_dim,\n            self._hidden_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "target_code_len": 247,
        "diff_format": "@@ -312,5 +312,5 @@\n         self.state_encoder = RNNStateEncoder(\n-            (0 if self.is_blind else self.recurrent_hidden_state_size)\n+            (0 if self.is_blind else self._hidden_size)\n             + object_type_embedding_dim,\n-            self.recurrent_hidden_state_size,\n+            self._hidden_size,\n             trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_with_indent": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self.recurrent_hidden_state_size)\n            + object_type_embedding_dim,\n            self.recurrent_hidden_state_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.state_encoder = RNNStateEncoder(\n            (0 if self.is_blind else self._hidden_size)\n            + object_type_embedding_dim,\n            self._hidden_size,\n            trainable_masked_hidden_state=trainable_masked_hidden_state,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/object_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/object_nav_models.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/object_nav_models.py:322:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 322,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_len": 209,
        "target_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_len": 194,
        "diff_format": "@@ -290,3 +290,3 @@\n         self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_len": 204,
        "target_code": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_len": 174,
        "diff_format": "@@ -321,6 +321,6 @@\n         self.actor = LinearActorHead(\n-            self.recurrent_hidden_state_size, action_space.n\n+            self._hidden_size, action_space.n\n         )\n         self.critic = LinearCriticHead(\n-            self.recurrent_hidden_state_size\n+            self._hidden_size\n         )\n",
        "source_code_with_indent": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/object_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/object_nav_models.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/object_nav_models.py:325:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(ObjectNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, ObjectNavActorCriticTrainResNet50GRU)], typing.Any], ObjectNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 325,
    "warning_line": "            self.recurrent_hidden_state_size",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_len": 209,
        "target_code": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_len": 194,
        "diff_format": "@@ -290,3 +290,3 @@\n         self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self.recurrent_hidden_state_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._n_object_types = self.observation_space.spaces[self.goal_sensor_uuid].n\n        self._hidden_size = hidden_size\n        self.object_type_embedding_size = object_type_embedding_dim\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_len": 204,
        "target_code": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_len": 174,
        "diff_format": "@@ -321,6 +321,6 @@\n         self.actor = LinearActorHead(\n-            self.recurrent_hidden_state_size, action_space.n\n+            self._hidden_size, action_space.n\n         )\n         self.critic = LinearCriticHead(\n-            self.recurrent_hidden_state_size\n+            self._hidden_size\n         )\n",
        "source_code_with_indent": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:50:12 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "            self.recurrent_hidden_state_size,"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:56:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 56,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:59:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticSimpleConvLSTM.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticSimpleConvLSTM)], typing.Any], PointNavActorCriticSimpleConvLSTM]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 59,
    "warning_line": "            self.recurrent_hidden_state_size"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:138:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50)], typing.Any], PointNavActorCriticResNet50]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50)], typing.Any], PointNavActorCriticResNet50]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 138,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:141:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50)], typing.Any], PointNavActorCriticResNet50]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50)], typing.Any], PointNavActorCriticResNet50]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "            self.recurrent_hidden_state_size"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:227:12 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 227,
    "warning_line": "            self.recurrent_hidden_state_size,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_len": 155,
        "target_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_len": 140,
        "diff_format": "@@ -211,3 +211,3 @@\n         self.goal_sensor_uuid = goal_sensor_uuid\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_len": 130,
        "target_code": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_len": 115,
        "diff_format": "@@ -226,3 +226,3 @@\n             + self.coorinate_embedding_size,\n-            self.recurrent_hidden_state_size,\n+            self._hidden_size,\n             num_layers=num_rnn_layers,\n",
        "source_code_with_indent": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:233:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 233,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_len": 155,
        "target_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_len": 140,
        "diff_format": "@@ -211,3 +211,3 @@\n         self.goal_sensor_uuid = goal_sensor_uuid\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_len": 204,
        "target_code": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_len": 174,
        "diff_format": "@@ -232,6 +232,6 @@\n         self.actor = LinearActorHead(\n-            self.recurrent_hidden_state_size, action_space.n\n+            self._hidden_size, action_space.n\n         )\n         self.critic = LinearCriticHead(\n-            self.recurrent_hidden_state_size\n+            self._hidden_size\n         )\n",
        "source_code_with_indent": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:236:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNet50GRU)], typing.Any], PointNavActorCriticResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 236,
    "warning_line": "            self.recurrent_hidden_state_size",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_len": 155,
        "target_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_len": 140,
        "diff_format": "@@ -211,3 +211,3 @@\n         self.goal_sensor_uuid = goal_sensor_uuid\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_len": 204,
        "target_code": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_len": 174,
        "diff_format": "@@ -232,6 +232,6 @@\n         self.actor = LinearActorHead(\n-            self.recurrent_hidden_state_size, action_space.n\n+            self._hidden_size, action_space.n\n         )\n         self.critic = LinearCriticHead(\n-            self.recurrent_hidden_state_size\n+            self._hidden_size\n         )\n",
        "source_code_with_indent": "        self.actor = LinearActorHead(\n            self.recurrent_hidden_state_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self.recurrent_hidden_state_size\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.actor = LinearActorHead(\n            self._hidden_size, action_space.n\n        )\n        self.critic = LinearCriticHead(\n            self._hidden_size\n        )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:335:12 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 335,
    "warning_line": "            self.recurrent_hidden_state_size,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_len": 155,
        "target_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_len": 140,
        "diff_format": "@@ -306,3 +306,3 @@\n         self.goal_sensor_uuid = goal_sensor_uuid\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_len": 130,
        "target_code": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_len": 115,
        "diff_format": "@@ -334,3 +334,3 @@\n             + self.coorinate_embedding_size,\n-            self.recurrent_hidden_state_size,\n+            self._hidden_size,\n             num_layers=num_rnn_layers,\n",
        "source_code_with_indent": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:341:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 341,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:344:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticTrainResNet50GRU.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticTrainResNet50GRU)], typing.Any], PointNavActorCriticTrainResNet50GRU]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 344,
    "warning_line": "            self.recurrent_hidden_state_size"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:458:12 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `RNNStateEncoder.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 458,
    "warning_line": "            self.recurrent_hidden_state_size,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_len": 155,
        "target_code": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_len": 140,
        "diff_format": "@@ -414,3 +414,3 @@\n         self.goal_sensor_uuid = goal_sensor_uuid\n-        self.recurrent_hidden_state_size = hidden_size\n+        self._hidden_size = hidden_size\n         self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self.recurrent_hidden_state_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.goal_sensor_uuid = goal_sensor_uuid\n        self._hidden_size = hidden_size\n        self.embed_coordinates = embed_coordinates\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_len": 130,
        "target_code": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_len": 115,
        "diff_format": "@@ -457,3 +457,3 @@\n             + self.coorinate_embedding_size,\n-            self.recurrent_hidden_state_size,\n+            self._hidden_size,\n             num_layers=num_rnn_layers,\n",
        "source_code_with_indent": "            + self.coorinate_embedding_size,\n            self.recurrent_hidden_state_size,\n            num_layers=num_rnn_layers,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            + self.coorinate_embedding_size,\n            self._hidden_size,\n            num_layers=num_rnn_layers,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:464:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearActorHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 464,
    "warning_line": "            self.recurrent_hidden_state_size, action_space.n"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "models/point_nav_models.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/models/point_nav_models.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "models/point_nav_models.py:467:12 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "message": " Expected `int` for 1st positional only parameter to call `LinearCriticHead.__init__` but got `BoundMethod[typing.Callable(PointNavActorCriticResNeXTPreTrained.recurrent_hidden_state_size)[[Named(self, PointNavActorCriticResNeXTPreTrained)], typing.Any], PointNavActorCriticResNeXTPreTrained]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 467,
    "warning_line": "            self.recurrent_hidden_state_size"
  },
  {
    "project": "allenai/allenact",
    "commit": "6b723350aab127ea8e1a702d88f253aae29bdc3c",
    "filename": "rl_habitat/habitat_preprocessors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/allenai-allenact/rl_habitat/habitat_preprocessors.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rl_habitat/habitat_preprocessors.py:100:4 Inconsistent override [15]: `rl_habitat.habitat_preprocessors.ResnetPreProcessorHabitat.to` overrides method defined in `Preprocessor` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Preprocessor`.",
    "message": " `rl_habitat.habitat_preprocessors.ResnetPreProcessorHabitat.to` overrides method defined in `Preprocessor` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Preprocessor`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 100,
    "warning_line": "    def to(self, device: torch.device) -> \"ResnetPreProcessorThor\":",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def to(self, device: torch.device) -> \"ResnetPreProcessorThor\":\n        if not self.parallel:\n",
        "source_code_len": 99,
        "target_code": "\n    def to(self, device: torch.device) -> \"ResnetPreProcessorHabitat\":\n        if not self.parallel:\n",
        "target_code_len": 102,
        "diff_format": "@@ -99,3 +90,3 @@\n \n-    def to(self, device: torch.device) -> \"ResnetPreProcessorThor\":\n+    def to(self, device: torch.device) -> \"ResnetPreProcessorHabitat\":\n         if not self.parallel:\n",
        "source_code_with_indent": "\n    <DED>def to(self, device: torch.device) -> \"ResnetPreProcessorThor\":\n        <IND>if not self.parallel:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def to(self, device: torch.device) -> \"ResnetPreProcessorHabitat\":\n        <IND>if not self.parallel:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]