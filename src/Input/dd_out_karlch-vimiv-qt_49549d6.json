[
  {
    "project": "karlch/vimiv-qt",
    "commit": "49549d6fdc14164002f3c35a7d0f6870bcc0edf3",
    "filename": "vimiv/commands/external.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlch-vimiv-qt/vimiv/commands/external.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vimiv/commands/external.py:109:8 Incompatible variable type [9]: Unable to unpack `List[typing.Any]`, expected a tuple.",
    "message": " Unable to unpack `List[typing.Any]`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 109,
    "warning_line": "        args = flatten("
  },
  {
    "project": "karlch/vimiv-qt",
    "commit": "49549d6fdc14164002f3c35a7d0f6870bcc0edf3",
    "filename": "vimiv/commands/external.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlch-vimiv-qt/vimiv/commands/external.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vimiv/commands/external.py:110:12 Incompatible parameter type [6]: Expected `List[List[typing.Any]]` for 1st positional only parameter to call `flatten` but got `typing.Generator[typing.Union[List[str], tuple[str]], None, None]`.",
    "message": " Expected `List[List[typing.Any]]` for 1st positional only parameter to call `flatten` but got `typing.Generator[typing.Union[List[str], tuple[str]], None, None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 110,
    "warning_line": "            glob.glob(arg) if contains_any(arg, \"*?[]\") else (arg,) for arg in args"
  },
  {
    "project": "karlch/vimiv-qt",
    "commit": "49549d6fdc14164002f3c35a7d0f6870bcc0edf3",
    "filename": "vimiv/utils/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlch-vimiv-qt/vimiv/utils/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vimiv/utils/__init__.py:81:13 Incompatible parameter type [6]: Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `iter` but got `Union[Iterable[Variable[AnyT]], Variable[AnyT]]`.",
    "message": " Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `iter` but got `Union[Iterable[Variable[AnyT]], Variable[AnyT]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 81,
    "warning_line": "        iter(elems)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n\n",
        "source_code_len": 115,
        "target_code": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -13,3 +13,3 @@\n from contextlib import suppress\n-from typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n+from typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n \n",
        "source_code_with_indent": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        iter(elems)\n",
        "source_code_len": 29,
        "target_code": "    try:\n        elems = cast(Iterable[AnyT], elems)\n        iter(elems)\n",
        "target_code_len": 73,
        "diff_format": "@@ -80,2 +80,3 @@\n     try:\n+        elems = cast(Iterable[AnyT], elems)\n         iter(elems)\n",
        "source_code_with_indent": "    <DED>try:\n        <IND>iter(elems)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>try:\n        <IND>elems = cast(Iterable[AnyT], elems)\n        iter(elems)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "karlch/vimiv-qt",
    "commit": "49549d6fdc14164002f3c35a7d0f6870bcc0edf3",
    "filename": "vimiv/utils/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlch-vimiv-qt/vimiv/utils/__init__.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "vimiv/utils/__init__.py:82:40 Incompatible parameter type [6]: Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `Union[Iterable[Variable[AnyT]], Variable[AnyT]]`.",
    "message": " Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `Union[Iterable[Variable[AnyT]], Variable[AnyT]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "        return bool(set(sequence) & set(elems))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n\n",
        "source_code_len": 115,
        "target_code": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n\n",
        "target_code_len": 121,
        "diff_format": "@@ -13,3 +13,3 @@\n from contextlib import suppress\n-from typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n+from typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n \n",
        "source_code_with_indent": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from contextlib import suppress\nfrom typing import Callable, Optional, List, Any, Iterator, Dict, Iterable, Union, cast\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    try:\n        iter(elems)\n",
        "source_code_len": 29,
        "target_code": "    try:\n        elems = cast(Iterable[AnyT], elems)\n        iter(elems)\n",
        "target_code_len": 73,
        "diff_format": "@@ -80,2 +80,3 @@\n     try:\n+        elems = cast(Iterable[AnyT], elems)\n         iter(elems)\n",
        "source_code_with_indent": "    <DED>try:\n        <IND>iter(elems)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>try:\n        <IND>elems = cast(Iterable[AnyT], elems)\n        iter(elems)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]