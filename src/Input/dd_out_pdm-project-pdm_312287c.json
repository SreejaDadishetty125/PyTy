[
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:89:26 Incompatible parameter type [6]: Expected `Union[PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `Union[None, Path, str]`.",
    "message": " Expected `Union[PathLike[str], str]` for 1st positional only parameter to call `Path.__new__` but got `Union[None, Path, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "        parent_dir = Path(self.filename).parent"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:90:25 Unsupported operand [58]: `/` is not supported for operand types `Path` and `Union[List[str], str]`.",
    "message": " `/` is not supported for operand types `Path` and `Union[List[str], str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 90,
    "warning_line": "        if (parent_dir / module / \"__init__.py\").exists():"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:91:34 Unsupported operand [58]: `/` is not supported for operand types `Path` and `Union[List[str], str]`.",
    "message": " `/` is not supported for operand types `Path` and `Union[List[str], str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 91,
    "warning_line": "            source = parent_dir / module / \"__init__.py\""
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:109:54 Incompatible parameter type [6]: Expected `Dict[str, str]` for 1st positional only parameter to call `make_inline_table` but got `typing.Set[Union[List[str], str]]`.",
    "message": " Expected `Dict[str, str]` for 1st positional only parameter to call `make_inline_table` but got `typing.Set[Union[List[str], str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 109,
    "warning_line": "            self._data[\"license\"] = make_inline_table({\"text\", metadata.pop(\"license\")})"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:121:48 Incompatible parameter type [6]: Expected `Union[List[Dict[str, str]], List[str]]` for 1st positional only parameter to call `make_array` but got `Union[List[str], str]`.",
    "message": " Expected `Union[List[Dict[str, str]], List[str]]` for 1st positional only parameter to call `make_array` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 121,
    "warning_line": "        self._data[\"dependencies\"] = make_array(metadata.pop(\"requires\", []), True)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/flit.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/flit.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/flit.py:148:70 Incompatible parameter type [6]: Expected `Union[None, Path, str]` for 2nd positional only parameter to call `MetaConverter.__init__` but got `PathLike[typing.Any]`.",
    "message": " Expected `Union[None, Path, str]` for 2nd positional only parameter to call `MetaConverter.__init__` but got `PathLike[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 148,
    "warning_line": "                dict(FlitMetaConverter(toml.load(fp)[\"tool\"][\"flit\"], filename)),"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/pipfile.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/pipfile.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/pipfile.py:25:34 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "        markers.append(Marker(req[\"markers\"]))"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/pipfile.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/pipfile.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/pipfile.py:28:40 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 28,
    "warning_line": "            marker = Marker(f\"{key}{req[key]}\")"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/pipfile.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/pipfile.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/pipfile.py:30:20 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 30,
    "warning_line": "            del req[key]"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/pipfile.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/pipfile.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/pipfile.py:35:43 Incompatible parameter type [6]: Expected `Union[Dict[str, Union[bool, str]], str]` for 2nd positional only parameter to call `Requirement.from_req_dict` but got `Union[Dict[str, str], List[str], str]`.",
    "message": " Expected `Union[Dict[str, Union[bool, str]], str]` for 2nd positional only parameter to call `Requirement.from_req_dict` but got `Union[Dict[str, str], List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 35,
    "warning_line": "    return Requirement.from_req_dict(name, req).as_line()"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:70:66 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `_convert_specifier` but got `Union[Dict[str, str], List[str], str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `_convert_specifier` but got `Union[Dict[str, str], List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "        return Requirement.from_req_dict(name, _convert_specifier(req_dict)).as_line()"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:71:20 Incompatible parameter type [6]: Expected `_typeshed.SupportsKeysAndGetItem[Variable[_KT], Variable[_VT]]` for 1st positional only parameter to call `dict.__init__` but got `Union[Dict[str, str], List[str], str]`.",
    "message": " Expected `_typeshed.SupportsKeysAndGetItem[Variable[_KT], Variable[_VT]]` for 1st positional only parameter to call `dict.__init__` but got `Union[Dict[str, str], List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "    req_dict = dict(req_dict)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:86:26 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "        req_dict[\"ref\"] = req_dict.pop("
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:89:43 Incompatible parameter type [6]: Expected `Union[Dict[str, Union[bool, str]], str]` for 2nd positional only parameter to call `Requirement.from_req_dict` but got `Dict[str, str]`.",
    "message": " Expected `Union[Dict[str, Union[bool, str]], str]` for 2nd positional only parameter to call `Requirement.from_req_dict` but got `Dict[str, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "    return Requirement.from_req_dict(name, req_dict).as_line()"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:121:8 Incompatible return type [7]: Expected `Dict[str, str]` but got `Union[Dict[typing.Any, typing.Any], List[str], str]`.",
    "message": " Expected `Dict[str, str]` but got `Union[Dict[typing.Any, typing.Any], List[str], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 121,
    "warning_line": "        return rv",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @convert_from()\n    def urls(self, source: (Dict[str, Union[List[str], str]])) -> Dict[str, str]:\n        rv = source.pop(\"urls\", {})\n",
        "source_code_len": 138,
        "target_code": "    @convert_from()\n    def urls(self, source: Dict[str, Any]) -> Dict[str, str]:\n        rv = source.pop(\"urls\", {})\n",
        "target_code_len": 118,
        "diff_format": "@@ -112,3 +112,3 @@\n     @convert_from()\n-    def urls(self, source: (Dict[str, Union[List[str], str]])) -> Dict[str, str]:\n+    def urls(self, source: Dict[str, Any]) -> Dict[str, str]:\n         rv = source.pop(\"urls\", {})\n",
        "source_code_with_indent": "    <DED>@convert_from()\n    def urls(self, source: (Dict[str, Union[List[str], str]])) -> Dict[str, str]:\n        <IND>rv = source.pop(\"urls\", {})\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@convert_from()\n    def urls(self, source: Dict[str, Any]) -> Dict[str, str]:\n        <IND>rv = source.pop(\"urls\", {})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/poetry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/poetry.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/poetry.py:132:29 Incompatible parameter type [6]: Expected `_typeshed.SupportsKeysAndGetItem[Variable[_KT], Variable[_VT]]` for 1st positional only parameter to call `dict.__init__` but got `Union[List[str], str]`.",
    "message": " Expected `_typeshed.SupportsKeysAndGetItem[Variable[_KT], Variable[_VT]]` for 1st positional only parameter to call `dict.__init__` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 132,
    "warning_line": "        value, extras = dict(source[\"dependencies\"]), source.pop(\"extras\", {})"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/formats/requirements.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/formats/requirements.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/formats/requirements.py:122:40 Incompatible parameter type [6]: Expected `List[typing.Any]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[typing.Any, Union[List[typing.Any], List[str]]]`.",
    "message": " Expected `List[typing.Any]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[typing.Any, Union[List[typing.Any], List[str]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 122,
    "warning_line": "        data[\"optional-dependencies\"] = {options.section: deps}"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:9:4 Incompatible variable type [9]: __file__ is declared to have type `str` but is used as type `Path`.",
    "message": " __file__ is declared to have type `str` but is used as type `Path`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 9,
    "warning_line": "    __file__ = setup_py",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:25:20 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `list.append` but got `Path`.",
    "message": " Expected `str` for 1st positional only parameter to call `list.append` but got `Path`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 25,
    "warning_line": "    sys.path.append(lib_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:31:12 Incompatible parameter type [6]: Expected `Path` for 1st positional only parameter to call `install` but got `str`.",
    "message": " Expected `Path` for 1st positional only parameter to call `install` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 31,
    "warning_line": "    install(setup_py, prefix, lib_dir, bin_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:31:22 Incompatible parameter type [6]: Expected `Path` for 2nd positional only parameter to call `install` but got `str`.",
    "message": " Expected `Path` for 2nd positional only parameter to call `install` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 31,
    "warning_line": "    install(setup_py, prefix, lib_dir, bin_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:31:30 Incompatible parameter type [6]: Expected `Path` for 3rd positional only parameter to call `install` but got `str`.",
    "message": " Expected `Path` for 3rd positional only parameter to call `install` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 31,
    "warning_line": "    install(setup_py, prefix, lib_dir, bin_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/installers/_editable_install.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/installers/_editable_install.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/installers/_editable_install.py:31:39 Incompatible parameter type [6]: Expected `Path` for 4th positional only parameter to call `install` but got `str`.",
    "message": " Expected `Path` for 4th positional only parameter to call `install` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 31,
    "warning_line": "    install(setup_py, prefix, lib_dir, bin_dir)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    __file__ = setup_py\n",
        "source_code_len": 148,
        "target_code": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    __file__ = setup_py\n",
        "target_code_len": 119,
        "diff_format": "@@ -4,6 +4,5 @@\n import tokenize\n-from pathlib import Path\n \n \n-def install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n+def install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n     __file__ = setup_py\n",
        "source_code_with_indent": "import tokenize\nfrom pathlib import Path\n\n\ndef install(setup_py: Path, prefix: Path, lib_dir: Path, bin_dir: Path) -> None:\n    <IND>__file__ = setup_py\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import tokenize\n\n\ndef install(setup_py: str, prefix: str, lib_dir: str, bin_dir: str) -> None:\n    <IND>__file__ = setup_py\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/pep582/sitecustomize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/pep582/sitecustomize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/pep582/sitecustomize.py:35:32 Incompatible parameter type [6]: Expected `Path` for 1st positional only parameter to anonymous call but got `str`.",
    "message": " Expected `Path` for 1st positional only parameter to anonymous call but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 35,
    "warning_line": "        result = find_pypackage(path, version)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        if not os.path.exists(path):\n",
        "source_code_len": 223,
        "target_code": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    def find_pypackage(path, version):\n        if not os.path.exists(path):\n",
        "target_code_len": 126,
        "diff_format": "@@ -3,8 +3,6 @@\n import sys\n-from pathlib import Path\n-from typing import Union\n \n \n-def get_pypackages_path(maxdepth: int = 5) -> Path:\n-    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n+def get_pypackages_path(maxdepth=5):\n+    def find_pypackage(path, version):\n         if not os.path.exists(path):\n",
        "source_code_with_indent": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    <IND>def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        <IND>if not os.path.exists(path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    <IND>def find_pypackage(path, version):\n        <IND>if not os.path.exists(path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/pep582/sitecustomize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/pep582/sitecustomize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/pep582/sitecustomize.py:41:36 Incompatible parameter type [6]: Expected `Path` for 1st positional only parameter to anonymous call but got `str`.",
    "message": " Expected `Path` for 1st positional only parameter to anonymous call but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 41,
    "warning_line": "            result = find_pypackage(path, bare_version)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        if not os.path.exists(path):\n",
        "source_code_len": 223,
        "target_code": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    def find_pypackage(path, version):\n        if not os.path.exists(path):\n",
        "target_code_len": 126,
        "diff_format": "@@ -3,8 +3,6 @@\n import sys\n-from pathlib import Path\n-from typing import Union\n \n \n-def get_pypackages_path(maxdepth: int = 5) -> Path:\n-    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n+def get_pypackages_path(maxdepth=5):\n+    def find_pypackage(path, version):\n         if not os.path.exists(path):\n",
        "source_code_with_indent": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    <IND>def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        <IND>if not os.path.exists(path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    <IND>def find_pypackage(path, version):\n        <IND>if not os.path.exists(path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "312287c375db739caa180500afbc976002515113",
    "filename": "pdm/pep582/sitecustomize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/pep582/sitecustomize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/pep582/sitecustomize.py:43:16 Incompatible return type [7]: Expected `Path` but got implicit return value of `None`.",
    "message": " Expected `Path` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 43,
    "warning_line": "                return result",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        if not os.path.exists(path):\n",
        "source_code_len": 223,
        "target_code": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    def find_pypackage(path, version):\n        if not os.path.exists(path):\n",
        "target_code_len": 126,
        "diff_format": "@@ -3,8 +3,6 @@\n import sys\n-from pathlib import Path\n-from typing import Union\n \n \n-def get_pypackages_path(maxdepth: int = 5) -> Path:\n-    def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n+def get_pypackages_path(maxdepth=5):\n+    def find_pypackage(path, version):\n         if not os.path.exists(path):\n",
        "source_code_with_indent": "import sys\nfrom pathlib import Path\nfrom typing import Union\n\n\ndef get_pypackages_path(maxdepth: int = 5) -> Path:\n    <IND>def find_pypackage(path: Path, version: str) -> Union[None, Path]:\n        <IND>if not os.path.exists(path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import sys\n\n\ndef get_pypackages_path(maxdepth=5):\n    <IND>def find_pypackage(path, version):\n        <IND>if not os.path.exists(path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]