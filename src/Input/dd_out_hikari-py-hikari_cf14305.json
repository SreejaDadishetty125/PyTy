[
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/loggers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/loggers.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/loggers.py:76:8 Incompatible variable type [9]: Unable to unpack `str`, expected a tuple.",
    "message": " Unable to unpack `str`, expected a tuple.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 76,
    "warning_line": "        extras = \", \".join(map(str, extras))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\ndef get_named_logger(obj: typing.Optional[typing.Any] = None, *extras: typing.Any) -> logging.Logger:\n    \"\"\"\n",
        "source_code_len": 112,
        "target_code": "\nfrom hikari.internal_utilities import type_hints\n\n\ndef get_named_logger(obj: type_hints.Nullable[typing.Any] = None, *extra_objs: typing.Any) -> logging.Logger:\n    \"\"\"\n",
        "target_code_len": 170,
        "diff_format": "@@ -26,4 +26,6 @@\n \n+from hikari.internal_utilities import type_hints\n \n-def get_named_logger(obj: typing.Optional[typing.Any] = None, *extras: typing.Any) -> logging.Logger:\n+\n+def get_named_logger(obj: type_hints.Nullable[typing.Any] = None, *extra_objs: typing.Any) -> logging.Logger:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\ndef get_named_logger(obj: typing.Optional[typing.Any] = None, *extras: typing.Any) -> logging.Logger:\n    <IND>",
        "target_code_with_indent": "\nfrom hikari.internal_utilities import type_hints\n\n\ndef get_named_logger(obj: type_hints.Nullable[typing.Any] = None, *extra_objs: typing.Any) -> logging.Logger:\n    <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if extras:\n        extras = \", \".join(map(str, extras))\n        obj = f\"{obj}[{extras}]\"\n",
        "source_code_len": 94,
        "target_code": "\n    if extra_objs:\n        extras = \", \".join(map(str, extra_objs))\n        obj = f\"{obj}[{extras}]\"\n",
        "target_code_len": 102,
        "diff_format": "@@ -74,4 +76,4 @@\n \n-    if extras:\n-        extras = \", \".join(map(str, extras))\n+    if extra_objs:\n+        extras = \", \".join(map(str, extra_objs))\n         obj = f\"{obj}[{extras}]\"\n",
        "source_code_with_indent": "\n    <DED>if extras:\n        <IND>extras = \", \".join(map(str, extras))\n        obj = f\"{obj}[{extras}]\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>if extra_objs:\n        <IND>extras = \", \".join(map(str, extra_objs))\n        obj = f\"{obj}[{extras}]\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:46:11 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 46,
    "warning_line": "    return cast(value)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    \"\"\"\n",
        "source_code_len": 264,
        "target_code": "\nCastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 302,
        "diff_format": "@@ -32,9 +32,10 @@\n \n-ValueT = typing.TypeVar(\"ValueT\")\n+CastInputT = typing.TypeVar(\"CastInputT\")\n+CastOutputT = typing.TypeVar(\"CastOutputT\")\n DefaultT = typing.TypeVar(\"DefaultT\")\n-TypeCastT = typing.Type[ValueT]\n-CastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n-\n-\n-def nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n+TypeCastT = typing.Callable[[CastInputT], CastOutputT]\n+ResultT = typing.Union[CastOutputT, DefaultT]\n+\n+\n+def nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>ValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>CastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    \"\"\"\n",
        "source_code_len": 115,
        "target_code": "\ndef try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 96,
        "diff_format": "@@ -48,3 +49,3 @@\n \n-def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n+def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -62,3 +63,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 295,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 181,
        "diff_format": "@@ -76,6 +77,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not unspecified.UNSPECIFIED:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_len": 156,
        "target_code": "def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_len": 168,
        "diff_format": "@@ -99,4 +99,4 @@\n def cast_if_specified(\n-    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n-    cast: CastT,\n+    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n+    cast: TypeCastT,\n     iterable: bool = False,\n",
        "source_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:55:15 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 55,
    "warning_line": "        return cast(value)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    \"\"\"\n",
        "source_code_len": 264,
        "target_code": "\nCastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 302,
        "diff_format": "@@ -32,9 +32,10 @@\n \n-ValueT = typing.TypeVar(\"ValueT\")\n+CastInputT = typing.TypeVar(\"CastInputT\")\n+CastOutputT = typing.TypeVar(\"CastOutputT\")\n DefaultT = typing.TypeVar(\"DefaultT\")\n-TypeCastT = typing.Type[ValueT]\n-CastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n-\n-\n-def nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n+TypeCastT = typing.Callable[[CastInputT], CastOutputT]\n+ResultT = typing.Union[CastOutputT, DefaultT]\n+\n+\n+def nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>ValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>CastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    \"\"\"\n",
        "source_code_len": 115,
        "target_code": "\ndef try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 96,
        "diff_format": "@@ -48,3 +49,3 @@\n \n-def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n+def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -62,3 +63,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 295,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 181,
        "diff_format": "@@ -76,6 +77,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not unspecified.UNSPECIFIED:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_len": 156,
        "target_code": "def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_len": 168,
        "diff_format": "@@ -99,4 +99,4 @@\n def cast_if_specified(\n-    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n-    cast: CastT,\n+    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n+    cast: TypeCastT,\n     iterable: bool = False,\n",
        "source_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:81:27 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any], unspecified.Unspecified]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any], unspecified.Unspecified]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 81,
    "warning_line": "            mapping[key] = type_after(value)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    \"\"\"\n",
        "source_code_len": 264,
        "target_code": "\nCastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 302,
        "diff_format": "@@ -32,9 +32,10 @@\n \n-ValueT = typing.TypeVar(\"ValueT\")\n+CastInputT = typing.TypeVar(\"CastInputT\")\n+CastOutputT = typing.TypeVar(\"CastOutputT\")\n DefaultT = typing.TypeVar(\"DefaultT\")\n-TypeCastT = typing.Type[ValueT]\n-CastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n-\n-\n-def nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n+TypeCastT = typing.Callable[[CastInputT], CastOutputT]\n+ResultT = typing.Union[CastOutputT, DefaultT]\n+\n+\n+def nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>ValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>CastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    \"\"\"\n",
        "source_code_len": 115,
        "target_code": "\ndef try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 96,
        "diff_format": "@@ -48,3 +49,3 @@\n \n-def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n+def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -62,3 +63,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 295,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 181,
        "diff_format": "@@ -76,6 +77,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not unspecified.UNSPECIFIED:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_len": 156,
        "target_code": "def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_len": 168,
        "diff_format": "@@ -99,4 +99,4 @@\n def cast_if_specified(\n-    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n-    cast: CastT,\n+    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n+    cast: TypeCastT,\n     iterable: bool = False,\n",
        "source_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:127:20 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 127,
    "warning_line": "            data = [cast(value, **kwargs) for value in data]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    \"\"\"\n",
        "source_code_len": 264,
        "target_code": "\nCastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 302,
        "diff_format": "@@ -32,9 +32,10 @@\n \n-ValueT = typing.TypeVar(\"ValueT\")\n+CastInputT = typing.TypeVar(\"CastInputT\")\n+CastOutputT = typing.TypeVar(\"CastOutputT\")\n DefaultT = typing.TypeVar(\"DefaultT\")\n-TypeCastT = typing.Type[ValueT]\n-CastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n-\n-\n-def nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n+TypeCastT = typing.Callable[[CastInputT], CastOutputT]\n+ResultT = typing.Union[CastOutputT, DefaultT]\n+\n+\n+def nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>ValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>CastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    \"\"\"\n",
        "source_code_len": 115,
        "target_code": "\ndef try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 96,
        "diff_format": "@@ -48,3 +49,3 @@\n \n-def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n+def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -62,3 +63,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 295,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 181,
        "diff_format": "@@ -76,6 +77,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not unspecified.UNSPECIFIED:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_len": 156,
        "target_code": "def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_len": 168,
        "diff_format": "@@ -99,4 +99,4 @@\n def cast_if_specified(\n-    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n-    cast: CastT,\n+    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n+    cast: TypeCastT,\n     iterable: bool = False,\n",
        "source_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:129:19 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 129,
    "warning_line": "            data = cast(data, **kwargs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    \"\"\"\n",
        "source_code_len": 264,
        "target_code": "\nCastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 302,
        "diff_format": "@@ -32,9 +32,10 @@\n \n-ValueT = typing.TypeVar(\"ValueT\")\n+CastInputT = typing.TypeVar(\"CastInputT\")\n+CastOutputT = typing.TypeVar(\"CastOutputT\")\n DefaultT = typing.TypeVar(\"DefaultT\")\n-TypeCastT = typing.Type[ValueT]\n-CastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n-\n-\n-def nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n+TypeCastT = typing.Callable[[CastInputT], CastOutputT]\n+ResultT = typing.Union[CastOutputT, DefaultT]\n+\n+\n+def nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>ValueT = typing.TypeVar(\"ValueT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Type[ValueT]\nCastT = typing.Union[TypeCastT, typing.Callable[[typing.Any], ValueT]]\n\n\ndef nullable_cast(value: typing.Any, cast: CastT) -> typing.Optional[ValueT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>CastInputT = typing.TypeVar(\"CastInputT\")\nCastOutputT = typing.TypeVar(\"CastOutputT\")\nDefaultT = typing.TypeVar(\"DefaultT\")\nTypeCastT = typing.Callable[[CastInputT], CastOutputT]\nResultT = typing.Union[CastOutputT, DefaultT]\n\n\ndef nullable_cast(value: CastInputT, cast: TypeCastT) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    \"\"\"\n",
        "source_code_len": 115,
        "target_code": "\ndef try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    \"\"\"\n",
        "target_code_len": 96,
        "diff_format": "@@ -48,3 +49,3 @@\n \n-def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n+def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def try_cast(value: typing.Any, cast: CastT, default: DefaultT = None) -> typing.Union[ValueT, DefaultT]:\n    <IND>",
        "target_code_with_indent": "\n<DED>def try_cast(value: CastInputT, cast: TypeCastT, default: DefaultT = None) -> ResultT:\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -62,3 +63,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 295,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not unspecified.UNSPECIFIED:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 181,
        "diff_format": "@@ -76,6 +77,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not unspecified.UNSPECIFIED:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not unspecified.UNSPECIFIED:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_len": 156,
        "target_code": "def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_len": 168,
        "diff_format": "@@ -99,4 +99,4 @@\n def cast_if_specified(\n-    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n-    cast: CastT,\n+    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n+    cast: TypeCastT,\n     iterable: bool = False,\n",
        "source_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[ValueT, typing.Iterable[ValueT], unspecified.Unspecified, None],\n    cast: CastT,\n    iterable: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def cast_if_specified(\n    data: typing.Union[CastInputT, typing.Iterable[CastInputT], unspecified.Unspecified, None],\n    cast: TypeCastT,\n    iterable: bool = False,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/internal_utilities/transformations.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/internal_utilities/transformations.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/internal_utilities/transformations.py:156:27 Call error [29]: `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any], unspecified.Unspecified]` is not a function.",
    "message": " `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any], unspecified.Unspecified]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 156,
    "warning_line": "            mapping[key] = type_after(value)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_len": 107,
        "target_code": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_len": 89,
        "diff_format": "@@ -137,3 +137,3 @@\n     value: typing.Any,\n-    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n+    type_after: type_hints.Nullable[TypeCastT] = None,\n ) -> None:\n",
        "source_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.NotRequired[CastT] = unspecified.UNSPECIFIED,\n) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    value: typing.Any,\n    type_after: type_hints.Nullable[TypeCastT] = None,\n) -> None:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            Optional type to apply to the value when added.\n            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n    \"\"\"\n    if value is not None:\n        if type_after is not unspecified.UNSPECIFIED:\n            mapping[key] = type_after(value)\n",
        "source_code_len": 276,
        "target_code": "            Optional type to apply to the value when added.\n    \"\"\"\n    if value is not None:\n        if type_after:\n            mapping[key] = type_after(value)\n",
        "target_code_len": 162,
        "diff_format": "@@ -151,6 +151,5 @@\n             Optional type to apply to the value when added.\n-            Defaults to :attr:`hikari.internal_utilities.unspecified.UNSPECIFIED`.\n     \"\"\"\n     if value is not None:\n-        if type_after is not unspecified.UNSPECIFIED:\n+        if type_after:\n             mapping[key] = type_after(value)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    if value is not None:\n        <IND>if type_after is not unspecified.UNSPECIFIED:\n            <IND>mapping[key] = type_after(value)\n",
        "target_code_with_indent": "\n    if value is not None:\n        <IND>if type_after:\n            <IND>mapping[key] = type_after(value)\n"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:238:4 Inconsistent override [14]: `hikari.net.ratelimits.ManualRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.ManualRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 238,
    "warning_line": "    def acquire(self) -> asyncio.Future:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        \"\"\"\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        \"\"\"\n",
        "target_code_len": 77,
        "diff_format": "@@ -152,3 +152,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>",
        "target_code_with_indent": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        ...\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        ...\n",
        "target_code_len": 77,
        "diff_format": "@@ -190,3 +190,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         ...\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>...\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>...\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:238:4 Inconsistent override [14]: `hikari.net.ratelimits.ManualRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.ManualRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 238,
    "warning_line": "    def acquire(self) -> asyncio.Future:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        \"\"\"\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        \"\"\"\n",
        "target_code_len": 77,
        "diff_format": "@@ -152,3 +152,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>",
        "target_code_with_indent": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        ...\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        ...\n",
        "target_code_len": 77,
        "diff_format": "@@ -190,3 +190,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         ...\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>...\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>...\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:296:4 Inconsistent override [14]: `hikari.net.ratelimits.WindowedBurstRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.WindowedBurstRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 296,
    "warning_line": "    def acquire(self) -> asyncio.Future:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        \"\"\"\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        \"\"\"\n",
        "target_code_len": 77,
        "diff_format": "@@ -152,3 +152,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>",
        "target_code_with_indent": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        ...\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        ...\n",
        "target_code_len": 77,
        "diff_format": "@@ -190,3 +190,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         ...\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>...\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>...\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:296:4 Inconsistent override [14]: `hikari.net.ratelimits.WindowedBurstRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.WindowedBurstRateLimiter.acquire` overrides method defined in `BurstRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 296,
    "warning_line": "    def acquire(self) -> asyncio.Future:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        \"\"\"\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        \"\"\"\n",
        "target_code_len": 77,
        "diff_format": "@@ -152,3 +152,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>",
        "target_code_with_indent": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        ...\n",
        "source_code_len": 94,
        "target_code": "    @abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        ...\n",
        "target_code_len": 77,
        "diff_format": "@@ -190,3 +190,3 @@\n     @abc.abstractmethod\n-    def acquire(self, *args, **kwargs) -> asyncio.Future:\n+    def acquire(self) -> asyncio.Future:\n         ...\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self, *args, **kwargs) -> asyncio.Future:\n        <IND>...\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def acquire(self) -> asyncio.Future:\n        <IND>...\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:322:12 Incompatible attribute type [8]: Attribute `reset_at` declared in class `WindowedBurstRateLimiter` has type `int` but is used as type `float`.",
    "message": " Attribute `reset_at` declared in class `WindowedBurstRateLimiter` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 322,
    "warning_line": "            self.reset_at = now + self.period",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__(name)\n        self.reset_at = 0\n        self.remaining = 0\n",
        "source_code_len": 84,
        "target_code": "        super().__init__(name)\n        self.reset_at = 0.0\n        self.remaining = 0\n",
        "target_code_len": 86,
        "diff_format": "@@ -290,3 +290,3 @@\n         super().__init__(name)\n-        self.reset_at = 0\n+        self.reset_at = 0.0\n         self.remaining = 0\n",
        "source_code_with_indent": "        <IND>super().__init__(name)\n        self.reset_at = 0\n        self.remaining = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>super().__init__(name)\n        self.reset_at = 0.0\n        self.remaining = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:390:8 Incompatible attribute type [8]: Attribute `reset_at` declared in class `WindowedBurstRateLimiter` has type `int` but is used as type `float`.",
    "message": " Attribute `reset_at` declared in class `WindowedBurstRateLimiter` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 390,
    "warning_line": "        self.reset_at = reset_at",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        super().__init__(name)\n        self.reset_at = 0\n        self.remaining = 0\n",
        "source_code_len": 84,
        "target_code": "        super().__init__(name)\n        self.reset_at = 0.0\n        self.remaining = 0\n",
        "target_code_len": 86,
        "diff_format": "@@ -290,3 +290,3 @@\n         super().__init__(name)\n-        self.reset_at = 0\n+        self.reset_at = 0.0\n         self.remaining = 0\n",
        "source_code_with_indent": "        <IND>super().__init__(name)\n        self.reset_at = 0\n        self.remaining = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>super().__init__(name)\n        self.reset_at = 0.0\n        self.remaining = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:406:4 Inconsistent override [15]: `__slots__` overrides attribute defined in `IRateLimiter` inconsistently. Type `typing.Tuple[str, str, str, str, str]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `__slots__` overrides attribute defined in `IRateLimiter` inconsistently. Type `typing.Tuple[str, str, str, str, str]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 406,
    "warning_line": "    __slots__ = (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass HTTPBucketRateLimiterManager(IRateLimiter):\n    \"\"\"\n",
        "source_code_len": 59,
        "target_code": "\nclass HTTPBucketRateLimiterManager:\n    \"\"\"\n",
        "target_code_len": 45,
        "diff_format": "@@ -399,3 +399,3 @@\n \n-class HTTPBucketRateLimiterManager(IRateLimiter):\n+class HTTPBucketRateLimiterManager:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager(IRateLimiter):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager:\n    <IND>"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:464:4 Inconsistent override [14]: `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 464,
    "warning_line": "    def acquire(self, compiled_route: routes.CompiledRoute) -> typing.Tuple[asyncio.Future, str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass HTTPBucketRateLimiterManager(IRateLimiter):\n    \"\"\"\n",
        "source_code_len": 59,
        "target_code": "\nclass HTTPBucketRateLimiterManager:\n    \"\"\"\n",
        "target_code_len": 45,
        "diff_format": "@@ -399,3 +399,3 @@\n \n-class HTTPBucketRateLimiterManager(IRateLimiter):\n+class HTTPBucketRateLimiterManager:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager(IRateLimiter):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager:\n    <IND>"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:464:4 Inconsistent override [14]: `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "message": " `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 464,
    "warning_line": "    def acquire(self, compiled_route: routes.CompiledRoute) -> typing.Tuple[asyncio.Future, str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass HTTPBucketRateLimiterManager(IRateLimiter):\n    \"\"\"\n",
        "source_code_len": 59,
        "target_code": "\nclass HTTPBucketRateLimiterManager:\n    \"\"\"\n",
        "target_code_len": 45,
        "diff_format": "@@ -399,3 +399,3 @@\n \n-class HTTPBucketRateLimiterManager(IRateLimiter):\n+class HTTPBucketRateLimiterManager:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager(IRateLimiter):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager:\n    <IND>"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/ratelimits.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/ratelimits.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/ratelimits.py:464:4 Inconsistent override [15]: `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Returned type `typing.Tuple[asyncio.futures.Future[typing.Any], str]` is not a subtype of the overridden return `asyncio.futures.Future[typing.Any]`.",
    "message": " `hikari.net.ratelimits.HTTPBucketRateLimiterManager.acquire` overrides method defined in `IRateLimiter` inconsistently. Returned type `typing.Tuple[asyncio.futures.Future[typing.Any], str]` is not a subtype of the overridden return `asyncio.futures.Future[typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 464,
    "warning_line": "    def acquire(self, compiled_route: routes.CompiledRoute) -> typing.Tuple[asyncio.Future, str]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass HTTPBucketRateLimiterManager(IRateLimiter):\n    \"\"\"\n",
        "source_code_len": 59,
        "target_code": "\nclass HTTPBucketRateLimiterManager:\n    \"\"\"\n",
        "target_code_len": 45,
        "diff_format": "@@ -399,3 +399,3 @@\n \n-class HTTPBucketRateLimiterManager(IRateLimiter):\n+class HTTPBucketRateLimiterManager:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager(IRateLimiter):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>class HTTPBucketRateLimiterManager:\n    <IND>"
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:114:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 114,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:115:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `email` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `email` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 115,
    "warning_line": "            email=payload[\"email\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:116:12 Incompatible parameter type [6]: Expected `str` for 3rd parameter `mode` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 3rd parameter `mode` to call `Subscriber.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 116,
    "warning_line": "            mode=payload[\"mode\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:117:47 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 117,
    "warning_line": "            created_at=dates.parse_iso_8601_ts(payload[\"created_at\"]),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:142:60 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Subscriber.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Subscriber.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 142,
    "warning_line": "        return Subscription(subscriber=Subscriber.from_dict(payload[\"subscriber\"]))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:179:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 179,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:180:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `name` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 180,
    "warning_line": "            name=payload[\"name\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:181:12 Incompatible parameter type [6]: Expected `str` for 3rd parameter `url` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 3rd parameter `url` to call `Page.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 181,
    "warning_line": "            url=payload[\"url\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:182:12 Incompatible parameter type [6]: Expected `datetime.datetime` for 4th parameter `updated_at` to call `Page.__init__` but got `None`.",
    "message": " Expected `datetime.datetime` for 4th parameter `updated_at` to call `Page.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 182,
    "warning_line": "            updated_at=transformations.nullable_cast(payload.get(\"updated_at\"), dates.parse_iso_8601_ts),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:206:22 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 1st parameter `indicator` to call `Status.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Optional[str]` for 1st parameter `indicator` to call `Status.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 206,
    "warning_line": "        return Status(indicator=payload.get(\"indicator\"), description=payload.get(\"description\"))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:206:58 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 2nd parameter `description` to call `Status.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Optional[str]` for 2nd parameter `description` to call `Status.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 206,
    "warning_line": "        return Status(indicator=payload.get(\"indicator\"), description=payload.get(\"description\"))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:266:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 266,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:267:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `name` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 267,
    "warning_line": "            name=payload[\"name\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:268:12 Incompatible parameter type [6]: Expected `datetime.datetime` for 3rd parameter `created_at` to call `Component.__init__` but got `None`.",
    "message": " Expected `datetime.datetime` for 3rd parameter `created_at` to call `Component.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 268,
    "warning_line": "            created_at=transformations.nullable_cast(payload.get(\"created_at\"), dates.parse_iso_8601_ts),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:269:12 Incompatible parameter type [6]: Expected `str` for 4th parameter `page_id` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 4th parameter `page_id` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 269,
    "warning_line": "            page_id=payload[\"page_id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:270:12 Incompatible parameter type [6]: Expected `int` for 5th parameter `position` to call `Component.__init__` but got `None`.",
    "message": " Expected `int` for 5th parameter `position` to call `Component.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 270,
    "warning_line": "            position=transformations.nullable_cast(payload.get(\"position\"), int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:271:12 Incompatible parameter type [6]: Expected `datetime.datetime` for 6th parameter `updated_at` to call `Component.__init__` but got `None`.",
    "message": " Expected `datetime.datetime` for 6th parameter `updated_at` to call `Component.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 271,
    "warning_line": "            updated_at=transformations.nullable_cast(payload.get(\"updated_at\"), dates.parse_iso_8601_ts),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:272:12 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 7th parameter `description` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Optional[str]` for 7th parameter `description` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 272,
    "warning_line": "            description=payload.get(\"description\"),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:273:12 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 8th parameter `status` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Optional[str]` for 8th parameter `status` to call `Component.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 273,
    "warning_line": "            status=payload.get(\"status\"),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:298:32 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 298,
    "warning_line": "            page=Page.from_dict(payload[\"page\"]),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:355:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 355,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:356:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `body` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `body` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 356,
    "warning_line": "            body=payload[\"body\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:357:12 Incompatible parameter type [6]: Expected `datetime.datetime` for 3rd parameter `created_at` to call `IncidentUpdate.__init__` but got `None`.",
    "message": " Expected `datetime.datetime` for 3rd parameter `created_at` to call `IncidentUpdate.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 357,
    "warning_line": "            created_at=transformations.nullable_cast(payload.get(\"created_at\"), dates.parse_iso_8601_ts),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:359:12 Incompatible parameter type [6]: Expected `str` for 5th parameter `incident_id` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 5th parameter `incident_id` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 359,
    "warning_line": "            incident_id=payload[\"incident_id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:360:12 Incompatible parameter type [6]: Expected `str` for 6th parameter `status` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 6th parameter `status` to call `IncidentUpdate.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 360,
    "warning_line": "            status=payload[\"status\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:455:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 455,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:456:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `name` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 456,
    "warning_line": "            name=payload[\"name\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:457:12 Incompatible parameter type [6]: Expected `str` for 3rd parameter `status` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 3rd parameter `status` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 457,
    "warning_line": "            status=payload[\"status\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:465:12 Incompatible parameter type [6]: Expected `str` for 9th parameter `shortlink` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 9th parameter `shortlink` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 465,
    "warning_line": "            shortlink=payload[\"shortlink\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:466:12 Incompatible parameter type [6]: Expected `str` for 10th parameter `page_id` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 10th parameter `page_id` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 466,
    "warning_line": "            page_id=payload[\"page_id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:467:12 Incompatible parameter type [6]: Expected `str` for 11th parameter `impact` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 11th parameter `impact` to call `Incident.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 467,
    "warning_line": "            impact=payload[\"impact\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:492:40 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 492,
    "warning_line": "        return Incidents(Page.from_dict(payload[\"page\"]), [Incident.from_dict(i) for i in payload[\"incidents\"]])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:597:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `id` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `id` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 597,
    "warning_line": "            id=payload[\"id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:598:12 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 2nd parameter `name` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 598,
    "warning_line": "            name=payload[\"name\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:599:12 Incompatible parameter type [6]: Expected `str` for 3rd parameter `impact` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 3rd parameter `impact` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 599,
    "warning_line": "            impact=payload[\"impact\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:604:12 Incompatible parameter type [6]: Expected `str` for 6th parameter `page_id` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 6th parameter `page_id` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 604,
    "warning_line": "            page_id=payload[\"page_id\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:608:12 Incompatible parameter type [6]: Expected `str` for 10th parameter `status` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 10th parameter `status` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 608,
    "warning_line": "            status=payload[\"status\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:611:12 Incompatible parameter type [6]: Expected `str` for 13th parameter `shortlink` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 13th parameter `shortlink` to call `ScheduledMaintenance.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 611,
    "warning_line": "            shortlink=payload[\"shortlink\"],"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:638:32 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 638,
    "warning_line": "            page=Page.from_dict(payload[\"page\"]),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:663:49 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 663,
    "warning_line": "        return OverallStatus(page=Page.from_dict(payload[\"page\"]), status=Status.from_dict(payload[\"status\"]),)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:663:91 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Status.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Status.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 663,
    "warning_line": "        return OverallStatus(page=Page.from_dict(payload[\"page\"]), status=Status.from_dict(payload[\"status\"]),)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/net/status_info_client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/net/status_info_client.py",
    "file_hunks_size": 23,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/net/status_info_client.py:693:32 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `Page.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 693,
    "warning_line": "            page=Page.from_dict(payload[\"page\"]),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/gateway/basic_chunker_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/gateway/basic_chunker_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/gateway/basic_chunker_impl.py:71:23 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "        guild_id = int(chunk_payload[\"guild_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/gateway/basic_chunker_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/gateway/basic_chunker_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/gateway/basic_chunker_impl.py:85:90 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 85,
    "warning_line": "        self.logger.info(\"received a chunk of %s members for guild %s from shard %s\", len(members), guild_id, shard_id)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/base_http_adapter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/base_http_adapter.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/base_http_adapter.py:151:8 Incompatible variable type [9]: user_limit is declared to have type `int` but is used as type `unspecified.Unspecified`.",
    "message": " user_limit is declared to have type `int` but is used as type `unspecified.Unspecified`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 151,
    "warning_line": "        user_limit: int = unspecified.UNSPECIFIED,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        bitrate: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        user_limit: int = unspecified.UNSPECIFIED,\n        permission_overwrites: type_hints.NotRequired[\n",
        "source_code_len": 178,
        "target_code": "        bitrate: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        user_limit: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        permission_overwrites: type_hints.NotRequired[\n",
        "target_code_len": 202,
        "diff_format": "@@ -150,3 +150,3 @@\n         bitrate: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n-        user_limit: int = unspecified.UNSPECIFIED,\n+        user_limit: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n         permission_overwrites: type_hints.NotRequired[\n",
        "source_code_with_indent": "        bitrate: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        user_limit: int = unspecified.UNSPECIFIED,\n        permission_overwrites: type_hints.NotRequired[\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        bitrate: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        user_limit: type_hints.NotRequired[int] = unspecified.UNSPECIFIED,\n        permission_overwrites: type_hints.NotRequired[\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/base_http_adapter.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/base_http_adapter.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/base_http_adapter.py:1140:8 Incompatible variable type [9]: parent_category is declared to have type `typing.Union[_channels.GuildCategory, int, str, unspecified.Unspecified]` but is used as type `typing.Type[unspecified.Unspecified]`.",
    "message": " parent_category is declared to have type `typing.Union[_channels.GuildCategory, int, str, unspecified.Unspecified]` but is used as type `typing.Type[unspecified.Unspecified]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1140,
    "warning_line": "        parent_category: type_hints.NotRequired[_channels.GuildCategoryLikeT] = unspecified.Unspecified,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        ] = unspecified.UNSPECIFIED,\n        parent_category: type_hints.NotRequired[_channels.GuildCategoryLikeT] = unspecified.Unspecified,\n        nsfw: type_hints.NotRequired[bool] = unspecified.UNSPECIFIED,\n",
        "source_code_len": 212,
        "target_code": "        ] = unspecified.UNSPECIFIED,\n        parent_category: type_hints.NullableNotRequired[_channels.GuildCategoryLikeT] = unspecified.UNSPECIFIED,\n        nsfw: type_hints.NotRequired[bool] = unspecified.UNSPECIFIED,\n",
        "target_code_len": 220,
        "diff_format": "@@ -1139,3 +1135,3 @@\n         ] = unspecified.UNSPECIFIED,\n-        parent_category: type_hints.NotRequired[_channels.GuildCategoryLikeT] = unspecified.Unspecified,\n+        parent_category: type_hints.NullableNotRequired[_channels.GuildCategoryLikeT] = unspecified.UNSPECIFIED,\n         nsfw: type_hints.NotRequired[bool] = unspecified.UNSPECIFIED,\n",
        "source_code_with_indent": "        ] = unspecified.UNSPECIFIED,\n        parent_category: type_hints.NotRequired[_channels.GuildCategoryLikeT] = unspecified.Unspecified,\n        nsfw: type_hints.NotRequired[bool] = unspecified.UNSPECIFIED,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        ] = unspecified.UNSPECIFIED,\n        parent_category: type_hints.NullableNotRequired[_channels.GuildCategoryLikeT] = unspecified.UNSPECIFIED,\n        nsfw: type_hints.NotRequired[bool] = unspecified.UNSPECIFIED,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:89:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 2nd parameter `user_id` to call `hikari.net.http_client.HTTPClient.get_guild_audit_log` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 2nd parameter `user_id` to call `hikari.net.http_client.HTTPClient.get_guild_audit_log` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "            user_id=transformations.cast_if_specified(user, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:90:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 3rd parameter `action_type` to call `hikari.net.http_client.HTTPClient.get_guild_audit_log` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 3rd parameter `action_type` to call `hikari.net.http_client.HTTPClient.get_guild_audit_log` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "            action_type=transformations.cast_if_specified(action_type, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:99:81 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 99,
    "warning_line": "            guild_obj = self.fabric.state_registry.get_mandatory_guild_by_id(int(guild_id))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:130:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Sequence[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]], unspecified.Unspecified]` for 8th parameter `permission_overwrites` to call `hikari.net.http_client.HTTPClient.modify_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[typing.Sequence[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]], unspecified.Unspecified]` for 8th parameter `permission_overwrites` to call `hikari.net.http_client.HTTPClient.modify_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 130,
    "warning_line": "            permission_overwrites=transformations.cast_if_specified("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:133:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 9th parameter `parent_id` to call `hikari.net.http_client.HTTPClient.modify_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 9th parameter `parent_id` to call `hikari.net.http_client.HTTPClient.modify_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 133,
    "warning_line": "            parent_id=transformations.cast_if_specified(parent_category, transformations.get_id, nullable=True),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:138:81 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 138,
    "warning_line": "            guild_obj = self.fabric.state_registry.get_mandatory_guild_by_id(int(guild_id))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:184:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Sequence[typing.Tuple[str, typing.Union[bytearray, bytes, io.BufferedRWPair, io.BufferedRandom, io.BufferedReader, io.BytesIO, io.StringIO, memoryview, str]]], unspecified.Unspecified]` for 4th parameter `files` to call `hikari.net.http_client.HTTPClient.create_message` but got `typing.Union[typing.Tuple[typing.Tuple[typing.Union[bytearray, bytes, io.BufferedRWPair, io.BufferedRandom, io.BufferedReader, io.BytesIO, io.StringIO, memoryview, str], str]], unspecified.Unspecified]`.",
    "message": " Expected `typing.Union[typing.Sequence[typing.Tuple[str, typing.Union[bytearray, bytes, io.BufferedRWPair, io.BufferedRandom, io.BufferedReader, io.BytesIO, io.StringIO, memoryview, str]]], unspecified.Unspecified]` for 4th parameter `files` to call `hikari.net.http_client.HTTPClient.create_message` but got `typing.Union[typing.Tuple[typing.Tuple[typing.Union[bytearray, bytes, io.BufferedRWPair, io.BufferedRandom, io.BufferedReader, io.BytesIO, io.StringIO, memoryview, str], str]], unspecified.Unspecified]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 184,
    "warning_line": "            files=await asyncio.gather("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:194:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]], unspecified.Unspecified]` for 5th parameter `embed` to call `hikari.net.http_client.HTTPClient.create_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]], unspecified.Unspecified]` for 5th parameter `embed` to call `hikari.net.http_client.HTTPClient.create_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 194,
    "warning_line": "            embed=transformations.cast_if_specified(embed, lambda obj: obj.to_dict()),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:261:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]], unspecified.Unspecified]` for 4th parameter `embed` to call `hikari.net.http_client.HTTPClient.edit_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]], unspecified.Unspecified]` for 4th parameter `embed` to call `hikari.net.http_client.HTTPClient.edit_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 261,
    "warning_line": "            embed=transformations.cast_if_specified(embed, lambda obj: obj.to_dict(), nullable=True),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:262:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 5th parameter `flags` to call `hikari.net.http_client.HTTPClient.edit_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 5th parameter `flags` to call `hikari.net.http_client.HTTPClient.edit_message` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 262,
    "warning_line": "            flags=transformations.cast_if_specified(flags, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:304:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 5th parameter `type_` to call `hikari.net.http_client.HTTPClient.edit_channel_permissions` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 5th parameter `type_` to call `hikari.net.http_client.HTTPClient.edit_channel_permissions` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 304,
    "warning_line": "            type_=transformations.cast_if_specified(overwrite_type, str),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:423:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Sequence[str], unspecified.Unspecified]` for 4th parameter `roles` to call `hikari.net.http_client.HTTPClient.modify_guild_emoji` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[typing.Sequence[str], unspecified.Unspecified]` for 4th parameter `roles` to call `hikari.net.http_client.HTTPClient.modify_guild_emoji` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 423,
    "warning_line": "            roles=transformations.cast_if_specified(roles, transformations.get_id, iterable=True),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:484:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 4th parameter `verification_level` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 4th parameter `verification_level` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 484,
    "warning_line": "            verification_level=transformations.cast_if_specified(verification_level, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:485:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 5th parameter `default_message_notifications` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 5th parameter `default_message_notifications` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 485,
    "warning_line": "            default_message_notifications=transformations.cast_if_specified(default_message_notifications, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:486:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 6th parameter `explicit_content_filter` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 6th parameter `explicit_content_filter` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 486,
    "warning_line": "            explicit_content_filter=transformations.cast_if_specified(explicit_content_filter, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:487:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 7th parameter `afk_channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 7th parameter `afk_channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 487,
    "warning_line": "            afk_channel_id=transformations.cast_if_specified(afk_channel, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:489:12 Incompatible parameter type [6]: Expected `typing.Union[bytes, unspecified.Unspecified]` for 9th parameter `icon` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[bytes, unspecified.Unspecified]` for 9th parameter `icon` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 489,
    "warning_line": "            icon=transformations.cast_if_specified(icon_data, storage.get_bytes_from_resource),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:490:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 10th parameter `owner_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 10th parameter `owner_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 490,
    "warning_line": "            owner_id=transformations.cast_if_specified(owner, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:491:12 Incompatible parameter type [6]: Expected `typing.Union[bytes, unspecified.Unspecified]` for 11th parameter `splash` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[bytes, unspecified.Unspecified]` for 11th parameter `splash` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 491,
    "warning_line": "            splash=transformations.cast_if_specified(splash_data, storage.get_bytes_from_resource),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:492:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 12th parameter `system_channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 12th parameter `system_channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 492,
    "warning_line": "            system_channel_id=transformations.cast_if_specified(system_channel, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:529:12 Incompatible parameter type [6]: Expected `typing.Union[int, unspecified.Unspecified]` for 3rd parameter `type_` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[int, unspecified.Unspecified]` for 3rd parameter `type_` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 529,
    "warning_line": "            type_=transformations.cast_if_specified(channel_type, int),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:535:12 Incompatible parameter type [6]: Expected `typing.Union[typing.Sequence[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]], unspecified.Unspecified]` for 9th parameter `permission_overwrites` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[typing.Sequence[typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]], unspecified.Unspecified]` for 9th parameter `permission_overwrites` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 535,
    "warning_line": "            permission_overwrites=transformations.cast_if_specified("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:538:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 10th parameter `parent_id` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 10th parameter `parent_id` to call `hikari.net.http_client.HTTPClient.create_guild_channel` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 538,
    "warning_line": "            parent_id=transformations.cast_if_specified(parent_category, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:598:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 4th parameter `roles` to call `hikari.net.http_client.HTTPClient.modify_guild_member` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 4th parameter `roles` to call `hikari.net.http_client.HTTPClient.modify_guild_member` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 598,
    "warning_line": "            roles=transformations.cast_if_specified(roles, transformations.get_id, iterable=True),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:601:12 Incompatible parameter type [6]: Expected `typing.Union[None, str, unspecified.Unspecified]` for 7th parameter `channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild_member` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[None, str, unspecified.Unspecified]` for 7th parameter `channel_id` to call `hikari.net.http_client.HTTPClient.modify_guild_member` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 601,
    "warning_line": "            channel_id=transformations.cast_if_specified(current_voice_channel, transformations.get_id, nullable=True),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:871:52 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 2nd parameter `style` to call `hikari.net.http_client.HTTPClient.get_guild_widget_image_url` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 2nd parameter `style` to call `hikari.net.http_client.HTTPClient.get_guild_widget_image_url` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 871,
    "warning_line": "            guild_id=transformations.get_id(guild), style=transformations.cast_if_specified(style, str)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:902:31 Incompatible parameter type [6]: Expected `typing.Union[None, bytes, unspecified.Unspecified]` for 2nd parameter `avatar` to call `hikari.net.http_client.HTTPClient.modify_current_user` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[None, bytes, unspecified.Unspecified]` for 2nd parameter `avatar` to call `hikari.net.http_client.HTTPClient.modify_current_user` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 902,
    "warning_line": "            username=username, avatar=transformations.cast_if_specified(avatar_data, storage.get_bytes_from_resource)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:940:12 Incompatible parameter type [6]: Expected `typing.Union[bytes, unspecified.Unspecified]` for 3rd parameter `avatar` to call `hikari.net.http_client.HTTPClient.create_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[bytes, unspecified.Unspecified]` for 3rd parameter `avatar` to call `hikari.net.http_client.HTTPClient.create_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 940,
    "warning_line": "            avatar=transformations.cast_if_specified(avatar_data, storage.get_bytes_from_resource),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:973:12 Incompatible parameter type [6]: Expected `typing.Union[None, bytes, unspecified.Unspecified]` for 3rd parameter `avatar` to call `hikari.net.http_client.HTTPClient.modify_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[None, bytes, unspecified.Unspecified]` for 3rd parameter `avatar` to call `hikari.net.http_client.HTTPClient.modify_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 973,
    "warning_line": "            avatar=transformations.cast_if_specified(avatar_data, storage.get_bytes_from_resource),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/http/http_adapter_impl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/http/http_adapter_impl.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/http/http_adapter_impl.py:974:12 Incompatible parameter type [6]: Expected `typing.Union[str, unspecified.Unspecified]` for 4th parameter `channel_id` to call `hikari.net.http_client.HTTPClient.modify_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "message": " Expected `typing.Union[str, unspecified.Unspecified]` for 4th parameter `channel_id` to call `hikari.net.http_client.HTTPClient.modify_webhook` but got `typing.Optional[typing.Sequence[Variable[transformations.DefaultT]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 974,
    "warning_line": "            channel_id=transformations.cast_if_specified(channel, transformations.get_id),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:138:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 138,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:139:8 Incompatible attribute type [8]: Attribute `name` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 139,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:140:8 Incompatible attribute type [8]: Attribute `icon_hash` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `icon_hash` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 140,
    "warning_line": "        self.icon_hash = payload.get(\"icon\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:141:8 Incompatible attribute type [8]: Attribute `description` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `description` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 141,
    "warning_line": "        self.description = payload[\"description\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:143:8 Incompatible attribute type [8]: Attribute `is_bot_public` declared in class `Application` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_bot_public` declared in class `Application` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 143,
    "warning_line": "        self.is_bot_public = payload[\"bot_public\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:144:8 Incompatible attribute type [8]: Attribute `is_bot_code_grant_required` declared in class `Application` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_bot_code_grant_required` declared in class `Application` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 144,
    "warning_line": "        self.is_bot_code_grant_required = payload[\"bot_require_code_grant\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:145:58 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 145,
    "warning_line": "        self.owner = fabric_obj.state_registry.parse_user(payload[\"owner\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:146:8 Incompatible attribute type [8]: Attribute `summary` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `summary` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 146,
    "warning_line": "        self.summary = payload.get(\"summary\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:147:8 Incompatible attribute type [8]: Attribute `verify_key` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `verify_key` declared in class `Application` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 147,
    "warning_line": "        self.verify_key = payload[\"verify_key\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:148:43 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `teams.Team.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `teams.Team.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 148,
    "warning_line": "        self.team = teams.Team(fabric_obj, payload[\"team\"]) if payload.get(\"team\") else None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:151:8 Incompatible attribute type [8]: Attribute `slug_url` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `slug_url` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 151,
    "warning_line": "        self.slug_url = payload.get(\"slug\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/applications.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/applications.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/applications.py:152:8 Incompatible attribute type [8]: Attribute `cover_image_hash` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `cover_image_hash` declared in class `Application` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 152,
    "warning_line": "        self.cover_image_hash = payload.get(\"cover_image\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:128:27 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 128,
    "warning_line": "        self.user_id = int(payload[\"user_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:129:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 129,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:130:8 Incompatible attribute type [8]: Attribute `action_type` declared in class `AuditLogEntry` has type `AuditLogEvent` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], AuditLogEvent, bool, float, int, str]`.",
    "message": " Attribute `action_type` declared in class `AuditLogEntry` has type `AuditLogEvent` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], AuditLogEvent, bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 130,
    "warning_line": "        self.action_type = AuditLogEvent.get_best_effort_from_value(payload[\"action_type\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:131:50 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `parse_audit_log_entry_info` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `parse_audit_log_entry_info` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 131,
    "warning_line": "        self.options = parse_audit_log_entry_info(payload.get(\"options\"), self.action_type)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:132:8 Incompatible attribute type [8]: Attribute `reason` declared in class `AuditLogEntry` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `reason` declared in class `AuditLogEntry` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 132,
    "warning_line": "        self.reason = payload.get(\"reason\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:277:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 277,
    "warning_line": "        self.count = int(payload[\"count\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:278:30 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 278,
    "warning_line": "        self.channel_id = int(payload[\"channel_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:334:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 334,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:335:69 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `bases.NamedEnumMixin.from_discord_name` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `bases.NamedEnumMixin.from_discord_name` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 335,
    "warning_line": "        self.type = overwrites.OverwriteEntityType.from_discord_name(payload[\"type\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:348:42 Incompatible parameter type [6]: Expected `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` for 2nd positional only parameter to call `transformations.nullable_cast` but got `BaseAuditLogEntryInfo`.",
    "message": " Expected `typing.Union[typing.Callable[[typing.Any], typing.Any], typing.Type[typing.Any]]` for 2nd positional only parameter to call `transformations.nullable_cast` but got `BaseAuditLogEntryInfo`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 348,
    "warning_line": "            audit_log_entry_info_payload, BaseAuditLogEntryInfo._implementations[event_type]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/audit_logs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/audit_logs.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/audit_logs.py:498:8 Incompatible attribute type [8]: Attribute `key` declared in class `AuditLogChange` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], AuditLogChangeKey, bool, float, int, str]`.",
    "message": " Attribute `key` declared in class `AuditLogChange` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], AuditLogChangeKey, bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 498,
    "warning_line": "        self.key = AuditLogChangeKey.get_best_effort_from_value(payload[\"key\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:117:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 117,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:167:8 Incompatible attribute type [8]: Attribute `name` declared in class `PartialChannel` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `PartialChannel` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 167,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:168:8 Incompatible attribute type [8]: Attribute `type` declared in class `PartialChannel` has type `typing.Union[ChannelType, int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], ChannelType, bool, float, int, str]`.",
    "message": " Attribute `type` declared in class `PartialChannel` has type `typing.Union[ChannelType, int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], ChannelType, bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 168,
    "warning_line": "        self.type = ChannelType.get_best_effort_from_value(payload[\"type\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:299:28 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 299,
    "warning_line": "        self.guild_id = int(payload[\"guild_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:303:28 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 303,
    "warning_line": "        self.position = int(payload[\"position\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:312:8 Incompatible attribute type [8]: Attribute `name` declared in class `GuildChannel` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `GuildChannel` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 312,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:317:8 Incompatible return type [7]: Expected `_guild.Guild` but got `typing.Optional[_guild.Guild]`.",
    "message": " Expected `_guild.Guild` but got `typing.Optional[_guild.Guild]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 317,
    "warning_line": "        return self._fabric.state_registry.get_guild_by_id(self.guild_id)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:321:8 Incompatible return type [7]: Expected `typing.Optional[GuildCategory]` but got `typing.Optional[GuildChannel]`.",
    "message": " Expected `typing.Optional[GuildCategory]` but got `typing.Optional[GuildChannel]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 321,
    "warning_line": "        return self.guild.channels[self.parent_id] if self.parent_id is not None else None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:358:8 Incompatible attribute type [8]: Attribute `is_nsfw` declared in class `GuildTextChannel` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_nsfw` declared in class `GuildTextChannel` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 358,
    "warning_line": "        self.is_nsfw = payload.get(\"nsfw\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:359:8 Incompatible attribute type [8]: Attribute `topic` declared in class `GuildTextChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `topic` declared in class `GuildTextChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 359,
    "warning_line": "        self.topic = payload.get(\"topic\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:360:8 Incompatible attribute type [8]: Attribute `rate_limit_per_user` declared in class `GuildTextChannel` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `rate_limit_per_user` declared in class `GuildTextChannel` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 360,
    "warning_line": "        self.rate_limit_per_user = payload.get(\"rate_limit_per_user\", 0)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:420:8 Incompatible attribute type [8]: Attribute `bitrate` declared in class `GuildVoiceChannel` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `bitrate` declared in class `GuildVoiceChannel` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 420,
    "warning_line": "        self.bitrate = payload.get(\"bitrate\") or None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:421:8 Incompatible attribute type [8]: Attribute `user_limit` declared in class `GuildVoiceChannel` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `user_limit` declared in class `GuildVoiceChannel` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 421,
    "warning_line": "        self.user_limit = payload.get(\"user_limit\") or None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:460:8 Incompatible attribute type [8]: Attribute `icon_hash` declared in class `GroupDMChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `icon_hash` declared in class `GroupDMChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 460,
    "warning_line": "        self.icon_hash = payload.get(\"icon\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:461:8 Incompatible attribute type [8]: Attribute `name` declared in class `GroupDMChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `GroupDMChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 461,
    "warning_line": "        self.name = payload.get(\"name\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:463:8 Incompatible attribute type [8]: Attribute `owner_id` declared in class `GroupDMChannel` has type `int` but is used as type `None`.",
    "message": " Attribute `owner_id` declared in class `GroupDMChannel` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 463,
    "warning_line": "        self.owner_id = transformations.nullable_cast(payload.get(\"owner_id\"), int)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:514:8 Incompatible attribute type [8]: Attribute `is_nsfw` declared in class `GuildAnnouncementChannel` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_nsfw` declared in class `GuildAnnouncementChannel` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 514,
    "warning_line": "        self.is_nsfw = payload.get(\"nsfw\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:515:8 Incompatible attribute type [8]: Attribute `topic` declared in class `GuildAnnouncementChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `topic` declared in class `GuildAnnouncementChannel` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 515,
    "warning_line": "        self.topic = payload.get(\"topic\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/channels.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/channels.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/channels.py:575:42 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 575,
    "warning_line": "        unknown = bases.UnknownObject(int(payload.get(\"id\", \"-1\")))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/colors.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/colors.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/colors.py:265:19 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `Color.__new__` but got `typing.SupportsInt`.",
    "message": " Expected `int` for 1st positional only parameter to call `Color.__new__` but got `typing.SupportsInt`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 265,
    "warning_line": "        return cls(i)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __new__(cls: typing.Type[Color], raw_rgb: int) -> Color:\n        assertions.assert_in_range(raw_rgb, 0, 0xFF_FF_FF, \"integer value\")\n",
        "source_code_len": 142,
        "target_code": "\n    def __new__(cls: typing.Type[Color], raw_rgb: typing.SupportsInt) -> Color:\n        assertions.assert_in_range(raw_rgb, 0, 0xFF_FF_FF, \"integer value\")\n",
        "target_code_len": 157,
        "diff_format": "@@ -101,3 +101,3 @@\n \n-    def __new__(cls: typing.Type[Color], raw_rgb: int) -> Color:\n+    def __new__(cls: typing.Type[Color], raw_rgb: typing.SupportsInt) -> Color:\n         assertions.assert_in_range(raw_rgb, 0, 0xFF_FF_FF, \"integer value\")\n",
        "source_code_with_indent": "\n    def __new__(cls: typing.Type[Color], raw_rgb: int) -> Color:\n        <IND>assertions.assert_in_range(raw_rgb, 0, 0xFF_FF_FF, \"integer value\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __new__(cls: typing.Type[Color], raw_rgb: typing.SupportsInt) -> Color:\n        <IND>assertions.assert_in_range(raw_rgb, 0, 0xFF_FF_FF, \"integer value\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:110:8 Incompatible attribute type [8]: Attribute `id` declared in class `Connection` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:111:8 Incompatible attribute type [8]: Attribute `name` declared in class `Connection` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:112:8 Incompatible attribute type [8]: Attribute `type` declared in class `Connection` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:113:8 Incompatible attribute type [8]: Attribute `is_revoked` declared in class `Connection` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:117:8 Incompatible attribute type [8]: Attribute `is_verified` declared in class `Connection` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:118:8 Incompatible attribute type [8]: Attribute `is_friend_synced` declared in class `Connection` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/connections.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/connections.py:119:8 Incompatible attribute type [8]: Attribute `is_showing_activity` declared in class `Connection` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:464:12 Call error [29]: `typing.Union[typing.Callable[[], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "message": " `typing.Union[typing.Callable[[], typing.Any], typing.Type[typing.Any]]` is not a function.",
    "rule_id": "Call error [29]",
    "warning_line_no": 464,
    "warning_line": "        d = dict_factory()"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:497:48 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 497,
    "warning_line": "            timestamp = dates.parse_iso_8601_ts(timestamp)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:511:50 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 511,
    "warning_line": "            embed._author = EmbedAuthor.from_dict(payload[\"author\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:513:50 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 513,
    "warning_line": "            embed._footer = EmbedFooter.from_dict(payload[\"footer\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:515:48 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 515,
    "warning_line": "            embed._image = EmbedImage.from_dict(payload[\"image\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:517:52 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 517,
    "warning_line": "            embed._thumbnail = EmbedImage.from_dict(payload[\"thumbnail\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:521:54 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 521,
    "warning_line": "            embed._provider = EmbedProvider.from_dict(payload[\"provider\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:523:48 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `bases.MarshalMixin.from_dict` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 523,
    "warning_line": "            embed._video = EmbedVideo.from_dict(payload[\"video\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:622:8 Incompatible variable type [9]: title is declared to have type `str` but is used as type `None`.",
    "message": " title is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 622,
    "warning_line": "        title: str = None,"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:623:8 Incompatible variable type [9]: description is declared to have type `str` but is used as type `None`.",
    "message": " description is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 623,
    "warning_line": "        description: str = None,"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:625:8 Incompatible variable type [9]: timestamp is declared to have type `datetime.datetime` but is used as type `None`.",
    "message": " timestamp is declared to have type `datetime.datetime` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 625,
    "warning_line": "        timestamp: datetime.datetime = None,"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:626:8 Incompatible variable type [9]: color is declared to have type `typing.Union[colors.Color, int]` but is used as type `None`.",
    "message": " color is declared to have type `typing.Union[colors.Color, int]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 626,
    "warning_line": "        color: typing.Union[int, colors.Color] = None,"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/embeds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/embeds.py",
    "file_hunks_size": 24,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/embeds.py:727:54 Incompatible variable type [9]: url is declared to have type `str` but is used as type `None`.",
    "message": " url is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 727,
    "warning_line": "    def set_author(self: EmbedT, *, name: str = None, url: str = None, icon: FileOrUrlT = None) -> EmbedT:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:69:8 Incompatible attribute type [8]: Attribute `value` declared in class `UnicodeEmoji` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `value` declared in class `UnicodeEmoji` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 69,
    "warning_line": "        self.value = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:108:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:109:8 Incompatible attribute type [8]: Attribute `name` declared in class `UnknownEmoji` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `UnknownEmoji` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 109,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:165:57 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 165,
    "warning_line": "        self.user = fabric_obj.state_registry.parse_user(payload.get(\"user\")) if \"user\" in payload else None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:166:8 Incompatible attribute type [8]: Attribute `is_requiring_colons` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_requiring_colons` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 166,
    "warning_line": "        self.is_requiring_colons = payload.get(\"require_colons\", True)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:167:8 Incompatible attribute type [8]: Attribute `is_animated` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_animated` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 167,
    "warning_line": "        self.is_animated = payload.get(\"animated\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:168:8 Incompatible attribute type [8]: Attribute `is_managed` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_managed` declared in class `GuildEmoji` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 168,
    "warning_line": "        self.is_managed = payload.get(\"managed\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:173:8 Incompatible return type [7]: Expected `guilds.Guild` but got `typing.Optional[guilds.Guild]`.",
    "message": " Expected `guilds.Guild` but got `typing.Optional[guilds.Guild]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 173,
    "warning_line": "        return self._fabric.state_registry.get_guild_by_id(self._guild_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if typing.TYPE_CHECKING:\n    from hikari.orm import fabric\n    from hikari.orm.models import guilds\n\n",
        "source_code_len": 101,
        "target_code": "if typing.TYPE_CHECKING:\n    from hikari.internal_utilities import type_hints\n    from hikari.orm import fabric\n    from hikari.orm.models import guilds\n    from hikari.orm.models import users\n\n",
        "target_code_len": 194,
        "diff_format": "@@ -31,4 +31,6 @@\n if typing.TYPE_CHECKING:\n+    from hikari.internal_utilities import type_hints\n     from hikari.orm import fabric\n     from hikari.orm.models import guilds\n+    from hikari.orm.models import users\n \n",
        "source_code_with_indent": "if typing.TYPE_CHECKING:\n    <IND>from hikari.orm import fabric\n    from hikari.orm.models import guilds\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if typing.TYPE_CHECKING:\n    <IND>from hikari.internal_utilities import type_hints\n    from hikari.orm import fabric\n    from hikari.orm.models import guilds\n    from hikari.orm.models import users\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _role_ids: typing.Sequence[int]\n    _guild_id: typing.Optional[int]\n\n",
        "source_code_len": 73,
        "target_code": "    _role_ids: typing.Sequence[int]\n    _guild_id: int\n\n",
        "target_code_len": 56,
        "diff_format": "@@ -136,3 +138,3 @@\n     _role_ids: typing.Sequence[int]\n-    _guild_id: typing.Optional[int]\n+    _guild_id: int\n \n",
        "source_code_with_indent": "    _role_ids: typing.Sequence[int]\n    _guild_id: typing.Optional[int]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    _role_ids: typing.Sequence[int]\n    _guild_id: int\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def guild(self) -> guilds.Guild:\n        return self._fabric.state_registry.get_guild_by_id(self._guild_id)\n",
        "source_code_len": 126,
        "target_code": "    @property\n    def guild(self) -> type_hints.Nullable[guilds.Guild]:\n        \"\"\"\n        If the guild is not cached, this will return None\n        \"\"\"\n        return self._fabric.state_registry.get_guild_by_id(self._guild_id)\n",
        "target_code_len": 229,
        "diff_format": "@@ -171,3 +173,6 @@\n     @property\n-    def guild(self) -> guilds.Guild:\n+    def guild(self) -> type_hints.Nullable[guilds.Guild]:\n+        \"\"\"\n+        If the guild is not cached, this will return None\n+        \"\"\"\n         return self._fabric.state_registry.get_guild_by_id(self._guild_id)\n",
        "source_code_with_indent": "    <DED>@property\n    def guild(self) -> guilds.Guild:\n        <IND>return self._fabric.state_registry.get_guild_by_id(self._guild_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def guild(self) -> type_hints.Nullable[guilds.Guild]:\n        <IND>\"\"\"\n        If the guild is not cached, this will return None\n        \"\"\"\n        return self._fabric.state_registry.get_guild_by_id(self._guild_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/emojis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/emojis.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/emojis.py:173:59 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.get_guild_by_id` but got `typing.Optional[int]`.",
    "message": " Expected `int` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.get_guild_by_id` but got `typing.Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 173,
    "warning_line": "        return self._fabric.state_registry.get_guild_by_id(self._guild_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _role_ids: typing.Sequence[int]\n    _guild_id: typing.Optional[int]\n\n",
        "source_code_len": 73,
        "target_code": "    _role_ids: typing.Sequence[int]\n    _guild_id: int\n\n",
        "target_code_len": 56,
        "diff_format": "@@ -136,3 +138,3 @@\n     _role_ids: typing.Sequence[int]\n-    _guild_id: typing.Optional[int]\n+    _guild_id: int\n \n",
        "source_code_with_indent": "    _role_ids: typing.Sequence[int]\n    _guild_id: typing.Optional[int]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    _role_ids: typing.Sequence[int]\n    _guild_id: int\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:52:8 Incompatible attribute type [8]: Attribute `url` declared in class `GatewayBot` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:53:26 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:54:53 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `SessionStartLimit.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:85:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:86:29 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/gateway_bot.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/gateway_bot.py:87:28 Incompatible parameter type [6]: Expected `typing.Union[bytearray, bytes, str, typing.SupportsFloat, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `float.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:112:8 Incompatible attribute type [8]: Attribute `id` declared in class `PartialGuild` has type `int` but is used as type `None`.",
    "message": " Attribute `id` declared in class `PartialGuild` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 112,
    "warning_line": "        self.id = transformations.nullable_cast(payload.get(\"id\"), int)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:116:8 Incompatible attribute type [8]: Attribute `name` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 116,
    "warning_line": "        self.name = payload.get(\"name\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:117:8 Incompatible attribute type [8]: Attribute `icon_hash` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `icon_hash` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 117,
    "warning_line": "        self.icon_hash = payload.get(\"icon\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:118:8 Incompatible attribute type [8]: Attribute `splash_hash` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `splash_hash` declared in class `PartialGuild` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 118,
    "warning_line": "        self.splash_hash = payload.get(\"splash\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:124:8 Incompatible attribute type [8]: Attribute `vanity_url_code` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `vanity_url_code` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 124,
    "warning_line": "        self.vanity_url_code = payload.get(\"vanity_url_code\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:125:8 Incompatible attribute type [8]: Attribute `description` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `description` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 125,
    "warning_line": "        self.description = payload.get(\"description\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:126:8 Incompatible attribute type [8]: Attribute `banner_hash` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `banner_hash` declared in class `PartialGuild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 126,
    "warning_line": "        self.banner_hash = payload.get(\"banner\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:320:8 Incompatible attribute type [8]: Attribute `owner_id` declared in class `Guild` has type `int` but is used as type `None`.",
    "message": " Attribute `owner_id` declared in class `Guild` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 320,
    "warning_line": "        self.owner_id = transformations.nullable_cast(payload.get(\"owner_id\"), int)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:321:8 Incompatible attribute type [8]: Attribute `voice_region` declared in class `Guild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `voice_region` declared in class `Guild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 321,
    "warning_line": "        self.voice_region = payload.get(\"region\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:324:8 Incompatible attribute type [8]: Attribute `afk_timeout` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `afk_timeout` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 324,
    "warning_line": "        self.afk_timeout = payload.get(\"afk_timeout\", float(\"inf\"))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:325:8 Incompatible attribute type [8]: Attribute `preferred_locale` declared in class `Guild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `preferred_locale` declared in class `Guild` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 325,
    "warning_line": "        self.preferred_locale = payload.get(\"preferred_locale\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:332:8 Incompatible attribute type [8]: Attribute `roles` declared in class `Guild` has type `typing.MutableMapping[int, roles.Role]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "message": " Attribute `roles` declared in class `Guild` has type `typing.MutableMapping[int, roles.Role]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 332,
    "warning_line": "        self.roles = transformations.id_map("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:335:8 Incompatible attribute type [8]: Attribute `emojis` declared in class `Guild` has type `typing.MutableMapping[int, emojis.GuildEmoji]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "message": " Attribute `emojis` declared in class `Guild` has type `typing.MutableMapping[int, emojis.GuildEmoji]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 335,
    "warning_line": "        self.emojis = transformations.id_map("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:348:8 Incompatible attribute type [8]: Attribute `is_large` declared in class `Guild` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_large` declared in class `Guild` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 348,
    "warning_line": "        self.is_large = payload.get(\"large\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:349:8 Incompatible attribute type [8]: Attribute `is_unavailable` declared in class `Guild` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_unavailable` declared in class `Guild` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 349,
    "warning_line": "        self.is_unavailable = payload.get(\"unavailable\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:350:8 Incompatible attribute type [8]: Attribute `members` declared in class `Guild` has type `typing.MutableMapping[int, members.Member]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "message": " Attribute `members` declared in class `Guild` has type `typing.MutableMapping[int, members.Member]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 350,
    "warning_line": "        self.members = transformations.id_map("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:353:8 Incompatible attribute type [8]: Attribute `channels` declared in class `Guild` has type `typing.MutableMapping[int, channels.GuildChannel]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "message": " Attribute `channels` declared in class `Guild` has type `typing.MutableMapping[int, channels.GuildChannel]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 353,
    "warning_line": "        self.channels = transformations.id_map("
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:357:8 Incompatible attribute type [8]: Attribute `max_members` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `max_members` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 357,
    "warning_line": "        self.max_members = payload.get(\"max_members\", 0)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:359:8 Incompatible attribute type [8]: Attribute `premium_subscription_count` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `premium_subscription_count` declared in class `Guild` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 359,
    "warning_line": "        self.premium_subscription_count = payload.get(\"premium_subscription_count\", 0)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:489:8 Incompatible attribute type [8]: Attribute `reason` declared in class `Ban` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `reason` declared in class `Ban` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 489,
    "warning_line": "        self.reason = payload.get(\"reason\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/guilds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/guilds.py",
    "file_hunks_size": 17,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/guilds.py:490:57 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 490,
    "warning_line": "        self.user = fabric_obj.state_registry.parse_user(payload.get(\"user\"))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:58:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:59:8 Incompatible attribute type [8]: Attribute `name` declared in class `IntegrationAccount` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:92:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:93:8 Incompatible attribute type [8]: Attribute `name` declared in class `PartialIntegration` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:94:8 Incompatible attribute type [8]: Attribute `type` declared in class `PartialIntegration` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:95:42 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `IntegrationAccount.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:146:8 Incompatible attribute type [8]: Attribute `is_enabled` declared in class `Integration` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:147:8 Incompatible attribute type [8]: Attribute `is_syncing` declared in class `Integration` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:148:27 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:149:39 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:150:59 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/integrations.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/models/integrations.py:151:49 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:71:8 Incompatible attribute type [8]: Attribute `code` declared in class `VanityURL` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `code` declared in class `VanityURL` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 71,
    "warning_line": "        self.code = payload[\"code\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:72:24 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "        self.uses = int(payload[\"uses\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:134:8 Incompatible attribute type [8]: Attribute `code` declared in class `Invite` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `code` declared in class `Invite` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 134,
    "warning_line": "        self.code = payload[\"code\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:135:8 Incompatible attribute type [8]: Attribute `guild` declared in class `Invite` has type `guilds.PartialGuild` but is used as type `None`.",
    "message": " Attribute `guild` declared in class `Invite` has type `guilds.PartialGuild` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 135,
    "warning_line": "        self.guild = transformations.nullable_cast(payload.get(\"guild\"), guilds.PartialGuild)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:136:59 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `channels.PartialChannel.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `channels.PartialChannel.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 136,
    "warning_line": "        self.channel = channels.PartialChannel(fabric_obj, payload[\"channel\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:142:8 Incompatible attribute type [8]: Attribute `approximate_presence_count` declared in class `Invite` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `approximate_presence_count` declared in class `Invite` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 142,
    "warning_line": "        self.approximate_presence_count = payload.get(\"approximate_presence_count\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:143:8 Incompatible attribute type [8]: Attribute `approximate_member_count` declared in class `Invite` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `approximate_member_count` declared in class `Invite` has type `typing.Optional[int]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 143,
    "warning_line": "        self.approximate_member_count = payload.get(\"approximate_member_count\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:192:24 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 192,
    "warning_line": "        self.uses = int(payload[\"uses\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:193:28 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 193,
    "warning_line": "        self.max_uses = int(payload[\"max_uses\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:194:27 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 194,
    "warning_line": "        self.max_age = int(payload[\"max_age\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:195:8 Incompatible attribute type [8]: Attribute `is_temporary` declared in class `InviteWithMetadata` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_temporary` declared in class `InviteWithMetadata` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 195,
    "warning_line": "        self.is_temporary = payload.get(\"temporary\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:196:50 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 196,
    "warning_line": "        self.created_at = dates.parse_iso_8601_ts(payload[\"created_at\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/invites.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/invites.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/invites.py:197:8 Incompatible attribute type [8]: Attribute `is_revoked` declared in class `InviteWithMetadata` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_revoked` declared in class `InviteWithMetadata` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 197,
    "warning_line": "        self.is_revoked = payload.get(\"revoked\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/media.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/media.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/media.py:92:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 92,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/media.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/media.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/media.py:93:8 Incompatible attribute type [8]: Attribute `filename` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `filename` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 93,
    "warning_line": "        self.filename = payload[\"filename\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/media.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/media.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/media.py:94:24 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 94,
    "warning_line": "        self.size = int(payload[\"size\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/media.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/media.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/media.py:95:8 Incompatible attribute type [8]: Attribute `url` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `url` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 95,
    "warning_line": "        self.url = payload[\"url\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/media.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/media.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/media.py:96:8 Incompatible attribute type [8]: Attribute `proxy_url` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `proxy_url` declared in class `Attachment` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 96,
    "warning_line": "        self.proxy_url = payload[\"proxy_url\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:101:57 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 101,
    "warning_line": "        self.user = fabric_obj.state_registry.parse_user(payload[\"user\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:103:49 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `dates.parse_iso_8601_ts` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 103,
    "warning_line": "        self.joined_at = dates.parse_iso_8601_ts(payload[\"joined_at\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:116:8 Incompatible attribute type [8]: Attribute `nick` declared in class `Member` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `nick` declared in class `Member` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 116,
    "warning_line": "        self.nick = payload.get(\"nick\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:117:8 Incompatible attribute type [8]: Attribute `is_deaf` declared in class `Member` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_deaf` declared in class `Member` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 117,
    "warning_line": "        self.is_deaf = payload.get(\"deaf\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:118:8 Incompatible attribute type [8]: Attribute `is_mute` declared in class `Member` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_mute` declared in class `Member` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 118,
    "warning_line": "        self.is_mute = payload.get(\"mute\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/members.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/members.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/members.py:120:36 Incompatible variable type [9]: presence_payload is declared to have type `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` but is used as type `None`.",
    "message": " presence_payload is declared to have type `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 120,
    "warning_line": "    def update_presence_state(self, presence_payload: containers.JSONObject = None) -> None:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:237:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 237,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:239:30 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 239,
    "warning_line": "        self.channel_id = int(payload[\"channel_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:242:8 Incompatible attribute type [8]: Attribute `is_tts` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_tts` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 242,
    "warning_line": "        self.is_tts = payload[\"tts\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:243:45 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `MessageCrosspost.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `MessageCrosspost.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 243,
    "warning_line": "        self.crosspost_of = MessageCrosspost(payload[\"message_reference\"]) if \"message_reference\" in payload else None"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:244:8 Incompatible attribute type [8]: Attribute `flags` declared in class `Message` has type `MessageFlag` but is used as type `int`.",
    "message": " Attribute `flags` declared in class `Message` has type `MessageFlag` but is used as type `int`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 244,
    "warning_line": "        self.flags = transformations.try_cast(payload.get(\"flags\"), MessageFlag, 0)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:269:16 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_partial_member` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_partial_member` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 269,
    "warning_line": "                payload[\"member\"], payload[\"author\"], self.guild"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:269:35 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_partial_member` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 2nd positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_partial_member` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 269,
    "warning_line": "                payload[\"member\"], payload[\"author\"], self.guild"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:272:73 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_webhook_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_webhook_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 272,
    "warning_line": "            self.author = self._fabric.state_registry.parse_webhook_user(payload[\"author\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:274:86 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 274,
    "warning_line": "            self.author = typing.cast(AuthorT, self._fabric.state_registry.parse_user(payload[\"author\"]))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:280:12 Incompatible attribute type [8]: Attribute `is_mentioning_everyone` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_mentioning_everyone` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 280,
    "warning_line": "            self.is_mentioning_everyone = payload[\"mention_everyone\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:289:12 Incompatible attribute type [8]: Attribute `is_pinned` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_pinned` declared in class `Message` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 289,
    "warning_line": "            self.is_pinned = payload[\"pinned\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:298:12 Incompatible attribute type [8]: Attribute `content` declared in class `Message` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `content` declared in class `Message` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 298,
    "warning_line": "            self.content = payload.get(\"content\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:322:8 Incompatible return type [7]: Expected `typing.Union[channels.DMChannel, channels.GroupDMChannel, channels.GuildAnnouncementChannel, channels.GuildStoreChannel, channels.GuildTextChannel]` but got `typing.Optional[channels.Channel]`.",
    "message": " Expected `typing.Union[channels.DMChannel, channels.GroupDMChannel, channels.GuildAnnouncementChannel, channels.GuildStoreChannel, channels.GuildTextChannel]` but got `typing.Optional[channels.Channel]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 322,
    "warning_line": "        return self._fabric.state_registry.get_channel_by_id(self.channel_id)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:393:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 393,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:395:8 Incompatible attribute type [8]: Attribute `description` declared in class `MessageApplication` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `description` declared in class `MessageApplication` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 395,
    "warning_line": "        self.description = payload[\"description\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:397:8 Incompatible attribute type [8]: Attribute `name` declared in class `MessageApplication` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `MessageApplication` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 397,
    "warning_line": "        self.name = payload.get(\"name\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/messages.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/messages.py:433:30 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 433,
    "warning_line": "        self.channel_id = int(payload[\"channel_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:121:11 Unsupported operand [58]: `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "message": " `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 121,
    "warning_line": "        if \"web\" in client_status:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:126:11 Unsupported operand [58]: `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "message": " `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 126,
    "warning_line": "        if \"desktop\" in client_status:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:131:11 Unsupported operand [58]: `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "message": " `in` is not supported for right operand type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], typing.Mapping[typing.Any, typing.Any], bool, float, int, str]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 131,
    "warning_line": "        if \"mobile\" in client_status:"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:251:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `name` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `str` for 1st parameter `name` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 251,
    "warning_line": "            name=payload.get(\"name\"),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:252:12 Incompatible parameter type [6]: Expected `ActivityType` for 2nd parameter `type` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], ActivityType, bool, float, int, str]`.",
    "message": " Expected `ActivityType` for 2nd parameter `type` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], ActivityType, bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 252,
    "warning_line": "            type=ActivityType.get_best_effort_from_value(payload.get(\"type\", 0)),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:253:12 Incompatible parameter type [6]: Expected `typing.Optional[str]` for 3rd parameter `url` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Optional[str]` for 3rd parameter `url` to call `Activity.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 253,
    "warning_line": "            url=payload.get(\"url\"),"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:255:8 Incompatible attribute type [8]: Attribute `id` declared in class `RichActivity` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `id` declared in class `RichActivity` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 255,
    "warning_line": "        self.id = payload.get(\"id\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:258:8 Incompatible attribute type [8]: Attribute `details` declared in class `RichActivity` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `details` declared in class `RichActivity` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 258,
    "warning_line": "        self.details = payload.get(\"details\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:259:8 Incompatible attribute type [8]: Attribute `state` declared in class `RichActivity` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `state` declared in class `RichActivity` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 259,
    "warning_line": "        self.state = payload.get(\"state\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:262:8 Incompatible attribute type [8]: Attribute `flags` declared in class `RichActivity` has type `ActivityFlag` but is used as type `int`.",
    "message": " Attribute `flags` declared in class `RichActivity` has type `ActivityFlag` but is used as type `int`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 262,
    "warning_line": "        self.flags = transformations.nullable_cast(payload.get(\"flags\"), ActivityFlag) or 0",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    #: :type: :class:`hikari.orm.models.presences.ActivityFlag`\n    flags: ActivityFlag\n\n",
        "source_code_len": 89,
        "target_code": "    #: :type: :class:`hikari.orm.models.presences.ActivityFlag`\n    flags: typing.Union[ActivityFlag, int]\n\n",
        "target_code_len": 108,
        "diff_format": "@@ -244,3 +247,3 @@\n     #: :type: :class:`hikari.orm.models.presences.ActivityFlag`\n-    flags: ActivityFlag\n+    flags: typing.Union[ActivityFlag, int]\n \n",
        "source_code_with_indent": "    #: :type: :class:`hikari.orm.models.presences.ActivityFlag`\n    flags: ActivityFlag\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    #: :type: :class:`hikari.orm.models.presences.ActivityFlag`\n    flags: typing.Union[ActivityFlag, int]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:319:8 Incompatible attribute type [8]: Attribute `id` declared in class `ActivityParty` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `id` declared in class `ActivityParty` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 319,
    "warning_line": "        self.id = payload.get(\"id\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:354:8 Incompatible attribute type [8]: Attribute `large_image` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `large_image` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 354,
    "warning_line": "        self.large_image = payload.get(\"large_image\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:355:8 Incompatible attribute type [8]: Attribute `large_text` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `large_text` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 355,
    "warning_line": "        self.large_text = payload.get(\"large_text\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:356:8 Incompatible attribute type [8]: Attribute `small_image` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `small_image` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 356,
    "warning_line": "        self.small_image = payload.get(\"small_image\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/presences.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/presences.py",
    "file_hunks_size": 20,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/presences.py:357:8 Incompatible attribute type [8]: Attribute `small_text` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `small_text` declared in class `ActivityAssets` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 357,
    "warning_line": "        self.small_text = payload.get(\"small_text\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:58:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 58,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:59:8 Incompatible attribute type [8]: Attribute `name` declared in class `PartialRole` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `PartialRole` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 59,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:124:34 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `_color.Color.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `int` for 1st positional only parameter to call `_color.Color.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 124,
    "warning_line": "        self.color = _color.Color(payload[\"color\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:125:8 Incompatible attribute type [8]: Attribute `is_hoisted` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_hoisted` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 125,
    "warning_line": "        self.is_hoisted = payload[\"hoist\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:126:8 Incompatible attribute type [8]: Attribute `position` declared in class `Role` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `position` declared in class `Role` has type `int` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 126,
    "warning_line": "        self.position = payload[\"position\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:128:8 Incompatible attribute type [8]: Attribute `is_managed` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_managed` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 128,
    "warning_line": "        self.is_managed = payload[\"managed\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:129:8 Incompatible attribute type [8]: Attribute `is_mentionable` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_mentionable` declared in class `Role` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 129,
    "warning_line": "        self.is_mentionable = payload[\"mentionable\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/roles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/roles.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/roles.py:133:8 Incompatible return type [7]: Expected `_guilds.Guild` but got `typing.Union[bases.UnknownObject[_guilds.Guild], _guilds.Guild]`.",
    "message": " Expected `_guilds.Guild` but got `typing.Union[bases.UnknownObject[_guilds.Guild], _guilds.Guild]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 133,
    "warning_line": "        return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def guild(self) -> _guilds.Guild:\n        return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)\n",
        "source_code_len": 136,
        "target_code": "    @property\n    def guild(self) -> typing.Union[_guilds.Guild, bases.UnknownObject[_guilds.Guild]]:\n        return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)\n",
        "target_code_len": 186,
        "diff_format": "@@ -131,3 +131,3 @@\n     @property\n-    def guild(self) -> _guilds.Guild:\n+    def guild(self) -> typing.Union[_guilds.Guild, bases.UnknownObject[_guilds.Guild]]:\n         return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)\n",
        "source_code_with_indent": "    <DED>@property\n    def guild(self) -> _guilds.Guild:\n        <IND>return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def guild(self) -> typing.Union[_guilds.Guild, bases.UnknownObject[_guilds.Guild]]:\n        <IND>return self._fabric.state_registry.get_mandatory_guild_by_id(self.guild_id)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:69:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 69,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:70:8 Incompatible attribute type [8]: Attribute `icon` declared in class `Team` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `icon` declared in class `Team` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 70,
    "warning_line": "        self.icon = payload.get(\"icon\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:71:8 Incompatible attribute type [8]: Attribute `members` declared in class `Team` has type `typing.Mapping[int, TeamMember]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "message": " Attribute `members` declared in class `Team` has type `typing.Mapping[int, TeamMember]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 71,
    "warning_line": "        self.members = transformations.id_map(TeamMember(fabric_obj, member) for member in payload[\"members\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:72:33 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "        self.owner_user_id = int(payload[\"owner_user_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:108:27 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "        self.team_id = int(payload[\"team_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:109:31 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 109,
    "warning_line": "        self.permissions = set(payload[\"permissions\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/teams.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/teams.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/teams.py:111:57 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_user` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 111,
    "warning_line": "        self.user = fabric_obj.state_registry.parse_user(payload[\"user\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:88:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 88,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:91:8 Incompatible attribute type [8]: Attribute `is_system` declared in class `User` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_system` declared in class `User` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 91,
    "warning_line": "        self.is_system = payload.get(\"system\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:96:33 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 96,
    "warning_line": "        self.discriminator = int(payload[\"discriminator\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:214:8 Incompatible attribute type [8]: Attribute `is_mfa_enabled` declared in class `OAuth2User` has type `typing.Optional[bool]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_mfa_enabled` declared in class `OAuth2User` has type `typing.Optional[bool]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 214,
    "warning_line": "        self.is_mfa_enabled = payload.get(\"mfa_enabled\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:215:8 Incompatible attribute type [8]: Attribute `locale` declared in class `OAuth2User` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `locale` declared in class `OAuth2User` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 215,
    "warning_line": "        self.locale = payload.get(\"locale\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:216:8 Incompatible attribute type [8]: Attribute `is_verified` declared in class `OAuth2User` has type `typing.Optional[bool]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_verified` declared in class `OAuth2User` has type `typing.Optional[bool]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 216,
    "warning_line": "        self.is_verified = payload.get(\"verified\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/users.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/users.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/users.py:217:8 Incompatible attribute type [8]: Attribute `email` declared in class `OAuth2User` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `email` declared in class `OAuth2User` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 217,
    "warning_line": "        self.email = payload.get(\"email\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:62:8 Incompatible attribute type [8]: Attribute `token` declared in class `VoiceServer` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `token` declared in class `VoiceServer` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 62,
    "warning_line": "        self.token = payload[\"token\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:63:28 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 63,
    "warning_line": "        self.guild_id = int(payload[\"guild_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:67:8 Incompatible attribute type [8]: Attribute `endpoint` declared in class `VoiceServer` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `endpoint` declared in class `VoiceServer` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 67,
    "warning_line": "        self.endpoint = payload[\"endpoint\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:149:27 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 149,
    "warning_line": "        self.user_id = int(payload[\"user_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:151:8 Incompatible attribute type [8]: Attribute `session_id` declared in class `VoiceState` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `session_id` declared in class `VoiceState` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 151,
    "warning_line": "        self.session_id = payload[\"session_id\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:155:67 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_member` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `hikari.orm.state.base_registry.BaseRegistry.parse_member` but got `typing.Union[typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 155,
    "warning_line": "            self.member = self._fabric.state_registry.parse_member(member_obj, guild_obj)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:162:30 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 162,
    "warning_line": "        self.channel_id = int(payload[\"channel_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:163:8 Incompatible attribute type [8]: Attribute `is_deaf` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_deaf` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 163,
    "warning_line": "        self.is_deaf = payload.get(\"deaf\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:164:8 Incompatible attribute type [8]: Attribute `is_mute` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_mute` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 164,
    "warning_line": "        self.is_mute = payload.get(\"mute\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:165:8 Incompatible attribute type [8]: Attribute `is_self_deaf` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_self_deaf` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 165,
    "warning_line": "        self.is_self_deaf = payload.get(\"self_deaf\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:166:8 Incompatible attribute type [8]: Attribute `is_self_mute` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_self_mute` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 166,
    "warning_line": "        self.is_self_mute = payload.get(\"self_mute\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:167:8 Incompatible attribute type [8]: Attribute `is_self_stream` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_self_stream` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 167,
    "warning_line": "        self.is_self_stream = payload.get(\"self_stream\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:168:8 Incompatible attribute type [8]: Attribute `is_suppressed` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_suppressed` declared in class `VoiceState` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 168,
    "warning_line": "        self.is_suppressed = payload.get(\"suppress\", False)"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:211:8 Incompatible attribute type [8]: Attribute `id` declared in class `VoiceRegion` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `id` declared in class `VoiceRegion` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 211,
    "warning_line": "        self.id = payload[\"id\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:212:8 Incompatible attribute type [8]: Attribute `name` declared in class `VoiceRegion` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `VoiceRegion` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 212,
    "warning_line": "        self.name = payload[\"name\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:213:8 Incompatible attribute type [8]: Attribute `is_vip` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_vip` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 213,
    "warning_line": "        self.is_vip = payload[\"vip\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:214:8 Incompatible attribute type [8]: Attribute `is_optimal` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_optimal` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 214,
    "warning_line": "        self.is_optimal = payload[\"optimal\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:215:8 Incompatible attribute type [8]: Attribute `is_deprecated` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_deprecated` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 215,
    "warning_line": "        self.is_deprecated = payload[\"deprecated\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/voices.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/voices.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/voices.py:216:8 Incompatible attribute type [8]: Attribute `is_custom` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `is_custom` declared in class `VoiceRegion` has type `bool` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 216,
    "warning_line": "        self.is_custom = payload[\"custom\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:76:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:77:8 Incompatible attribute type [8]: Attribute `username` declared in class `WebhookUser` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `username` declared in class `WebhookUser` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 77,
    "warning_line": "        self.username = payload[\"username\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:78:33 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 78,
    "warning_line": "        self.discriminator = int(payload[\"discriminator\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:79:8 Incompatible attribute type [8]: Attribute `avatar_hash` declared in class `WebhookUser` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `avatar_hash` declared in class `WebhookUser` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 79,
    "warning_line": "        self.avatar_hash = payload[\"avatar\"]"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:142:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 142,
    "warning_line": "        self.id = int(payload[\"id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:144:28 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 144,
    "warning_line": "        self.guild_id = int(payload.get(\"guild_id\", guild_id))"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:145:30 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 145,
    "warning_line": "        self.channel_id = int(payload[\"channel_id\"])"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:147:8 Incompatible attribute type [8]: Attribute `name` declared in class `Webhook` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `name` declared in class `Webhook` has type `str` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 147,
    "warning_line": "        self.name = payload.get(\"name\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:148:8 Incompatible attribute type [8]: Attribute `avatar_hash` declared in class `Webhook` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `avatar_hash` declared in class `Webhook` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 148,
    "warning_line": "        self.avatar_hash = payload.get(\"avatar_hash\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/models/webhooks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hikari-py-hikari/hikari/orm/models/webhooks.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hikari/orm/models/webhooks.py:149:8 Incompatible attribute type [8]: Attribute `token` declared in class `Webhook` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "message": " Attribute `token` declared in class `Webhook` has type `typing.Optional[str]` but is used as type `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 149,
    "warning_line": "        self.token = payload.get(\"token\")"
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:381:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:391:43 Incompatible parameter type [6]: Expected `typing.Union[channels.ChannelType, int]` for 1st positional only parameter to call `channels.is_channel_type_dm` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:434:23 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:460:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:499:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:515:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:516:20 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:517:37 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` for 1st positional only parameter to call `StateRegistryImpl.parse_emoji` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:535:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:541:12 Incompatible variable type [9]: role_payload is declared to have type `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]` but is used as type `roles.Role`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:542:47 Incompatible parameter type [6]: Expected `roles.Role` for 2nd positional only parameter to call `typing.MutableMapping.__setitem__` but got `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:543:12 Incompatible return type [7]: Expected `roles.Role` but got `typing.Dict[str, typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:549:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:592:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:604:23 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:618:8 Incompatible attribute type [8]: Attribute `emojis` declared in class `guilds.Guild` has type `typing.MutableMapping[int, emojis.GuildEmoji]` but is used as type `typing.MutableMapping[int, bases.SnowflakeMixin]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:639:25 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "hikari-py/hikari",
    "commit": "cf143052e1228280ed895c06da9177611d8ea088",
    "filename": "hikari/orm/state/state_registry_impl.py",
    "min_patch_found": false,
    "full_warning_msg": "hikari/orm/state/state_registry_impl.py:652:22 Incompatible parameter type [6]: Expected `typing.Union[_SupportsTrunc, bytes, str, typing.SupportsInt, typing_extensions.SupportsIndex]` for 1st positional only parameter to call `int.__new__` but got `typing.Union[None, typing.Dict[typing.Any, typing.Any], typing.List[typing.Any], bool, float, int, str]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]