[
  {
    "project": "Yelp/paasta",
    "commit": "08000423520b558e041588835073146e4867e63b",
    "filename": "paasta_tools/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Yelp-paasta/paasta_tools/utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "paasta_tools/utils.py:2101:8 Incompatible return type [7]: Expected `Dict[typing.Any, typing.Any]` but got `Union[Dict[Variable[_KT], Variable[_VT]], str]`.",
    "message": " Expected `Dict[typing.Any, typing.Any]` but got `Union[Dict[Variable[_KT], Variable[_VT]], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 2101,
    "warning_line": "        return self.config_dict.get('tron', {})",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_tron_config(self) -> dict:\n        return self.config_dict.get('tron', {})\n",
        "source_code_len": 88,
        "target_code": "\n    def get_tron_config(self) -> Union[str, Any]:\n        return self.config_dict.get('tron', {})\n",
        "target_code_len": 99,
        "diff_format": "@@ -2099,3 +2099,3 @@\n \n-    def get_tron_config(self) -> dict:\n+    def get_tron_config(self) -> Union[str, Any]:\n         return self.config_dict.get('tron', {})\n",
        "source_code_with_indent": "\n    <DED>def get_tron_config(self) -> dict:\n        <IND>return self.config_dict.get('tron', {})\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_tron_config(self) -> Union[str, Any]:\n        <IND>return self.config_dict.get('tron', {})\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]