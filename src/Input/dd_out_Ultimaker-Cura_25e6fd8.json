[
  {
    "project": "Ultimaker/Cura",
    "commit": "25e6fd8becebbb2ddf180daa8a7eb6561bcb4dc0",
    "filename": "cura/Settings/MachineManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/MachineManager.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/MachineManager.py:1186:42 Incompatible variable type [9]: container_node is declared to have type `ContainerNode` but is used as type `None`.",
    "message": " container_node is declared to have type `ContainerNode` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1186,
    "warning_line": "    def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n        if self._global_container_stack is None:\n",
        "source_code_len": 139,
        "target_code": "\n    def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n        if self._global_container_stack is None:\n",
        "target_code_len": 151,
        "diff_format": "@@ -1185,3 +1185,3 @@\n \n-    def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n+    def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n         if self._global_container_stack is None:\n",
        "source_code_with_indent": "\n    <DED><DED>def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n        <IND>if self._global_container_stack is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n        <IND>if self._global_container_stack is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "25e6fd8becebbb2ddf180daa8a7eb6561bcb4dc0",
    "filename": "cura/Settings/MachineManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/MachineManager.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/MachineManager.py:1283:49 Incompatible parameter type [6]: Expected `ContainerNode` for 2nd parameter `container_node` to call `MachineManager._setMaterial` but got `None`.",
    "message": " Expected `ContainerNode` for 2nd parameter `container_node` to call `MachineManager._setMaterial` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1283,
    "warning_line": "                self._setMaterial(position_item, container_node = None)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n        if self._global_container_stack is None:\n",
        "source_code_len": 139,
        "target_code": "\n    def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n        if self._global_container_stack is None:\n",
        "target_code_len": 151,
        "diff_format": "@@ -1185,3 +1185,3 @@\n \n-    def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n+    def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n         if self._global_container_stack is None:\n",
        "source_code_with_indent": "\n    <DED><DED>def _setMaterial(self, position: str, container_node: ContainerNode = None) -> None:\n        <IND>if self._global_container_stack is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def _setMaterial(self, position: str, container_node: Optional[\"ContainerNode\"] = None) -> None:\n        <IND>if self._global_container_stack is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]