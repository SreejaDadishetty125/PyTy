[
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:19:0 Unbound name [10]: Name `s_initialize` is used but not defined in the current scope.",
    "message": " Name `s_initialize` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 19,
    "warning_line": "s_initialize(\"allrandom\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:21:3 Unbound name [10]: Name `s_block_start` is used but not defined in the current scope.",
    "message": " Name `s_block_start` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 21,
    "warning_line": "if s_block_start(\"singlebitmapnaive\"):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:22:4 Unbound name [10]: Name `s_random` is used but not defined in the current scope.",
    "message": " Name `s_random` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 22,
    "warning_line": "    s_random(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:29:0 Unbound name [10]: Name `s_block_end` is used but not defined in the current scope.",
    "message": " Name `s_block_end` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 29,
    "warning_line": "s_block_end()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:35:4 Unbound name [10]: Name `s_binary` is used but not defined in the current scope.",
    "message": " Name `s_binary` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 35,
    "warning_line": "    s_binary(\"30 33 32 37\")  # size + 3byte of header",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:49:4 Unbound name [10]: Name `s_size` is used but not defined in the current scope.",
    "message": " Name `s_size` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 49,
    "warning_line": "    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:94:7 Unbound name [10]: Name `sessions` is used but not defined in the current scope.",
    "message": " Name `sessions` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 94,
    "warning_line": "sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:97:16 Unbound name [10]: Name `pedrpc` is used but not defined in the current scope.",
    "message": " Name `pedrpc` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 97,
    "warning_line": "target.netmon = pedrpc.client(\"127.0.0.1\", 26001)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jtpereyda/boofuzz",
    "commit": "abc06d53104aae25a3ef7362ef9b5d648455f362",
    "filename": "examples/iso8385.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jtpereyda-boofuzz/examples/iso8385.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/iso8385.py:107:13 Unbound name [10]: Name `s_get` is used but not defined in the current scope.",
    "message": " Name `s_get` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 107,
    "warning_line": "sess.connect(s_get(\"allrandom\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_len": 76,
        "target_code": "\nfrom boofuzz import *\nimport os\n",
        "target_code_len": 33,
        "diff_format": "@@ -4,5 +4,3 @@\n \n-from sulley import *\n-from binascii import *\n-from struct import *\n+from boofuzz import *\n import os\n",
        "source_code_with_indent": "\nfrom sulley import *\nfrom binascii import *\nfrom struct import *\nimport os\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom boofuzz import *\nimport os\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "source_code_len": 150,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\ns_block_end()\n",
        "target_code_len": 134,
        "diff_format": "@@ -48,3 +64,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)  # size\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "source_code_len": 142,
        "target_code": "if s_block_start(\"eltsize\", encoder=recordlength):\n    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\ns_block_end()\n",
        "target_code_len": 126,
        "diff_format": "@@ -67,3 +91,3 @@\n if s_block_start(\"eltsize\", encoder=recordlength):\n-    s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n+    s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n s_block_end()\n",
        "source_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", format=\"ascii\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if s_block_start(\"eltsize\", encoder=recordlength):\n    <IND>s_size(\"elements\", length=2, endian=\">\", fuzzable=False)\n<DED>s_block_end()\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_len": 251,
        "target_code": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_len": 241,
        "diff_format": "@@ -93,7 +125,7 @@\n \n-sess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n+sess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n \n-target = sessions.target(target_ip, 6771)\n-target.netmon = pedrpc.client(\"127.0.0.1\", 26001)\n-target.procmon = pedrpc.client(target_ip, 26013)\n+target = Target(target_ip, 6771)\n+target.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\n+target.procmon = pedrpc.Client(target_ip, 26013)\n target.procmon_options = {\n",
        "source_code_with_indent": "\nsess = sessions.session(session_filename=mysession_filename, crash_threshold=20)\n\ntarget = sessions.target(target_ip, 6771)\ntarget.netmon = pedrpc.client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nsess = Session(session_filename=mysession_filename, crash_threshold_element=20)\n\ntarget = Target(target_ip, 6771)\ntarget.netmon = pedrpc.Client(\"127.0.0.1\", 26001)\ntarget.procmon = pedrpc.Client(target_ip, 26013)\ntarget.procmon_options = {\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]