[
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:64:4 Inconsistent override [14]: `src.chia_log.handlers.harvester_activity_handler.TimeSinceLastFarmEvent.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.TimeSinceLastFarmEvent.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 64,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:64:4 Inconsistent override [15]: `src.chia_log.handlers.harvester_activity_handler.TimeSinceLastFarmEvent.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.TimeSinceLastFarmEvent.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 64,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:95:4 Inconsistent override [14]: `src.chia_log.handlers.harvester_activity_handler.NonDecreasingPlots.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.NonDecreasingPlots.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 95,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass NonDecreasingPlots(ConditionChecker):\n    \"\"\"The total number of farmed plots is not expected\n",
        "source_code_len": 101,
        "target_code": "\nclass NonDecreasingPlots(HarvesterConditionChecker):\n    \"\"\"The total number of farmed plots is not expected\n",
        "target_code_len": 110,
        "diff_format": "@@ -85,3 +99,3 @@\n \n-class NonDecreasingPlots(ConditionChecker):\n+class NonDecreasingPlots(HarvesterConditionChecker):\n     \"\"\"The total number of farmed plots is not expected\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class NonDecreasingPlots(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class NonDecreasingPlots(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:95:4 Inconsistent override [15]: `src.chia_log.handlers.harvester_activity_handler.NonDecreasingPlots.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.NonDecreasingPlots.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 95,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass NonDecreasingPlots(ConditionChecker):\n    \"\"\"The total number of farmed plots is not expected\n",
        "source_code_len": 101,
        "target_code": "\nclass NonDecreasingPlots(HarvesterConditionChecker):\n    \"\"\"The total number of farmed plots is not expected\n",
        "target_code_len": 110,
        "diff_format": "@@ -85,3 +99,3 @@\n \n-class NonDecreasingPlots(ConditionChecker):\n+class NonDecreasingPlots(HarvesterConditionChecker):\n     \"\"\"The total number of farmed plots is not expected\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class NonDecreasingPlots(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class NonDecreasingPlots(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:123:4 Inconsistent override [14]: `src.chia_log.handlers.harvester_activity_handler.QuickPlotSearchTime.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.QuickPlotSearchTime.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 123,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass QuickPlotSearchTime(ConditionChecker):\n    \"\"\"Farming challenges need to be responded in 30 or less\n",
        "source_code_len": 107,
        "target_code": "\nclass QuickPlotSearchTime(HarvesterConditionChecker):\n    \"\"\"Farming challenges need to be responded in 30 or less\n",
        "target_code_len": 116,
        "diff_format": "@@ -113,3 +127,3 @@\n \n-class QuickPlotSearchTime(ConditionChecker):\n+class QuickPlotSearchTime(HarvesterConditionChecker):\n     \"\"\"Farming challenges need to be responded in 30 or less\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class QuickPlotSearchTime(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class QuickPlotSearchTime(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:123:4 Inconsistent override [15]: `src.chia_log.handlers.harvester_activity_handler.QuickPlotSearchTime.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.QuickPlotSearchTime.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 123,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass QuickPlotSearchTime(ConditionChecker):\n    \"\"\"Farming challenges need to be responded in 30 or less\n",
        "source_code_len": 107,
        "target_code": "\nclass QuickPlotSearchTime(HarvesterConditionChecker):\n    \"\"\"Farming challenges need to be responded in 30 or less\n",
        "target_code_len": 116,
        "diff_format": "@@ -113,3 +127,3 @@\n \n-class QuickPlotSearchTime(ConditionChecker):\n+class QuickPlotSearchTime(HarvesterConditionChecker):\n     \"\"\"Farming challenges need to be responded in 30 or less\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class QuickPlotSearchTime(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class QuickPlotSearchTime(HarvesterConditionChecker):\n    <IND>"
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:137:4 Inconsistent override [14]: `src.chia_log.handlers.harvester_activity_handler.FoundProofs.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.FoundProofs.check` overrides method defined in `ConditionChecker` inconsistently. Parameter of type `HarvesterActivityMessage` is not a supertype of the overridden parameter `object`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 137,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass FoundProofs(ConditionChecker):\n    \"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_len": 80,
        "target_code": "\nclass FoundProofs(HarvesterConditionChecker):\n    \"\"\"Check if any proofs were found.\"\"\"\n",
        "target_code_len": 89,
        "diff_format": "@@ -133,3 +147,3 @@\n \n-class FoundProofs(ConditionChecker):\n+class FoundProofs(HarvesterConditionChecker):\n     \"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>class FoundProofs(ConditionChecker):\n    <IND>\"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class FoundProofs(HarvesterConditionChecker):\n    <IND>\"\"\"Check if any proofs were found.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "martomi/chiadog",
    "commit": "50ff404f3df8db3ebb978f562db7d92bc4537f44",
    "filename": "src/chia_log/handlers/harvester_activity_handler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/martomi-chiadog/src/chia_log/handlers/harvester_activity_handler.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/chia_log/handlers/harvester_activity_handler.py:137:4 Inconsistent override [15]: `src.chia_log.handlers.harvester_activity_handler.FoundProofs.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "message": " `src.chia_log.handlers.harvester_activity_handler.FoundProofs.check` overrides method defined in `ConditionChecker` inconsistently. Returned type `Optional[Event]` is not a subtype of the overridden return `Event`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 137,
    "warning_line": "    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nfrom typing import List, Optional\n",
        "source_code_len": 49,
        "target_code": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_len": 85,
        "diff_format": "@@ -2,2 +2,3 @@\n import logging\n+from abc import ABC, abstractmethod\n from typing import List, Optional\n",
        "source_code_with_indent": "import logging\nfrom typing import List, Optional\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom abc import ABC, abstractmethod\nfrom typing import List, Optional\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass TimeSinceLastFarmEvent(ConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_len": 118,
        "target_code": "\nclass HarvesterConditionChecker(ABC):\n    \"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        pass\n\n\nclass TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    \"\"\"Check that elapsed time since last eligible farming event was\n",
        "target_code_len": 332,
        "diff_format": "@@ -49,3 +55,11 @@\n \n-class TimeSinceLastFarmEvent(ConditionChecker):\n+class HarvesterConditionChecker(ABC):\n+    \"\"\"Common interface for harvester condition checkers\"\"\"\n+\n+    @abstractmethod\n+    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n+        pass\n+\n+\n+class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n     \"\"\"Check that elapsed time since last eligible farming event was\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class TimeSinceLastFarmEvent(ConditionChecker):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class HarvesterConditionChecker(ABC):\n    <IND>\"\"\"Common interface for harvester condition checkers\"\"\"\n\n    @abstractmethod\n    def check(self, obj: HarvesterActivityMessage) -> Optional[Event]:\n        <IND>pass\n\n\n<DED><DED>class TimeSinceLastFarmEvent(HarvesterConditionChecker):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass FoundProofs(ConditionChecker):\n    \"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_len": 80,
        "target_code": "\nclass FoundProofs(HarvesterConditionChecker):\n    \"\"\"Check if any proofs were found.\"\"\"\n",
        "target_code_len": 89,
        "diff_format": "@@ -133,3 +147,3 @@\n \n-class FoundProofs(ConditionChecker):\n+class FoundProofs(HarvesterConditionChecker):\n     \"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_with_indent": "\n<DED><DED>class FoundProofs(ConditionChecker):\n    <IND>\"\"\"Check if any proofs were found.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class FoundProofs(HarvesterConditionChecker):\n    <IND>\"\"\"Check if any proofs were found.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]