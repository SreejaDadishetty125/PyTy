[
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:32:29 Invalid type [31]: Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "message": " Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "def array_to_npy(array_like):  # type: (np.array or Iterable or int or float) -> object",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef array_to_npy(array_like):  # type: (np.array or Iterable or int or float) -> object\n    \"\"\"Convert an array-like object to the NPY format.\n",
        "source_code_len": 144,
        "target_code": "\ndef array_to_npy(array_like):\n    \"\"\"Convert an array-like object to the NPY format.\n",
        "target_code_len": 86,
        "diff_format": "@@ -31,3 +30,3 @@\n \n-def array_to_npy(array_like):  # type: (np.array or Iterable or int or float) -> object\n+def array_to_npy(array_like):\n     \"\"\"Convert an array-like object to the NPY format.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\ndef array_to_npy(array_like):  # type: (np.array or Iterable or int or float) -> object\n    <IND>",
        "target_code_with_indent": "\ndef array_to_npy(array_like):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:57:21 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `object`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `io.BytesIO.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "    stream = BytesIO(npy_array)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef npy_to_numpy(npy_array):  # type: (object) -> np.array\n    \"\"\"Convert an NPY array into numpy.\n",
        "source_code_len": 100,
        "target_code": "\ndef npy_to_numpy(npy_array):\n    \"\"\"Convert an NPY array into numpy.\n",
        "target_code_len": 70,
        "diff_format": "@@ -48,3 +47,3 @@\n \n-def npy_to_numpy(npy_array):  # type: (object) -> np.array\n+def npy_to_numpy(npy_array):\n     \"\"\"Convert an NPY array into numpy.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def npy_to_numpy(npy_array):  # type: (object) -> np.array\n    <IND>",
        "target_code_with_indent": "\n<DED>def npy_to_numpy(npy_array):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:61:30 Invalid type [31]: Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "message": " Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 61,
    "warning_line": "def array_to_json(array_like):  # type: (np.array or Iterable or int or float) -> str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef array_to_json(array_like):  # type: (np.array or Iterable or int or float) -> str\n    \"\"\"Convert an array-like object to JSON.\n",
        "source_code_len": 132,
        "target_code": "\ndef array_to_json(array_like):\n    \"\"\"Convert an array-like object to JSON.\n",
        "target_code_len": 77,
        "diff_format": "@@ -60,3 +59,3 @@\n \n-def array_to_json(array_like):  # type: (np.array or Iterable or int or float) -> str\n+def array_to_json(array_like):\n     \"\"\"Convert an array-like object to JSON.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def array_to_json(array_like):  # type: (np.array or Iterable or int or float) -> str\n    <IND>",
        "target_code_with_indent": "\n<DED>def array_to_json(array_like):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:83:31 Incompatible variable type [9]: dtype is declared to have type `str` but is used as type `None`.",
    "message": " dtype is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "def json_to_numpy(string_like, dtype=None):  # type: (str) -> np.array",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef json_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n    \"\"\"Convert a JSON object to a numpy array.\n",
        "source_code_len": 119,
        "target_code": "\ndef json_to_numpy(string_like, dtype=None):\n    \"\"\"Convert a JSON object to a numpy array.\n",
        "target_code_len": 92,
        "diff_format": "@@ -82,3 +81,3 @@\n \n-def json_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n+def json_to_numpy(string_like, dtype=None):\n     \"\"\"Convert a JSON object to a numpy array.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def json_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n    <IND>",
        "target_code_with_indent": "\n<DED>def json_to_numpy(string_like, dtype=None):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:101:30 Incompatible variable type [9]: dtype is declared to have type `str` but is used as type `None`.",
    "message": " dtype is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 101,
    "warning_line": "def csv_to_numpy(string_like, dtype=None):  # type: (str) -> np.array",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef csv_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n    \"\"\"Convert a CSV object to a numpy array.\n",
        "source_code_len": 117,
        "target_code": "\ndef csv_to_numpy(string_like, dtype=None):\n    \"\"\"Convert a CSV object to a numpy array.\n",
        "target_code_len": 90,
        "diff_format": "@@ -100,3 +99,3 @@\n \n-def csv_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n+def csv_to_numpy(string_like, dtype=None):\n     \"\"\"Convert a CSV object to a numpy array.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def csv_to_numpy(string_like, dtype=None):  # type: (str) -> np.array\n    <IND>",
        "target_code_with_indent": "\n<DED>def csv_to_numpy(string_like, dtype=None):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:129:29 Invalid type [31]: Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "message": " Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 129,
    "warning_line": "def array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n    \"\"\"Convert an array like object to CSV.\n",
        "source_code_len": 130,
        "target_code": "\ndef array_to_csv(array_like):\n    \"\"\"Convert an array like object to CSV.\n",
        "target_code_len": 75,
        "diff_format": "@@ -128,3 +127,3 @@\n \n-def array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n+def array_to_csv(array_like):\n     \"\"\"Convert an array like object to CSV.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n    <IND>",
        "target_code_with_indent": "\n<DED>def array_to_csv(array_like):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:148:12 Incompatible parameter type [6]: Expected `_csv._Writer` for 1st positional only parameter to call `_csv.writer` but got `io.StringIO`.",
    "message": " Expected `_csv._Writer` for 1st positional only parameter to call `_csv.writer` but got `io.StringIO`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 148,
    "warning_line": "            stream, lineterminator=\"\\n\", delimiter=\",\", quotechar='\"', doublequote=True, strict=True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n    \"\"\"Convert an array like object to CSV.\n",
        "source_code_len": 130,
        "target_code": "\ndef array_to_csv(array_like):\n    \"\"\"Convert an array like object to CSV.\n",
        "target_code_len": 75,
        "diff_format": "@@ -128,3 +127,3 @@\n \n-def array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n+def array_to_csv(array_like):\n     \"\"\"Convert an array like object to CSV.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def array_to_csv(array_like):  # type: (np.array or Iterable or int or float) -> str\n    <IND>",
        "target_code_with_indent": "\n<DED>def array_to_csv(array_like):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:198:30 Invalid type [31]: Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "message": " Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 198,
    "warning_line": "def decode(obj, content_type):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def decode(obj, content_type):\n    # type: (np.array or Iterable or int or float, str) -> np.array\n    \"\"\"Decode an object of one of the default content types to a numpy array.\n",
        "source_code_len": 177,
        "target_code": "def decode(obj, content_type):\n    \"\"\"Decode an object of one of the default content types to a numpy array.\n",
        "target_code_len": 109,
        "diff_format": "@@ -198,3 +197,2 @@\n def decode(obj, content_type):\n-    # type: (np.array or Iterable or int or float, str) -> np.array\n     \"\"\"Decode an object of one of the default content types to a numpy array.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "def decode(obj, content_type):\n    # type: (np.array or Iterable or int or float, str) -> np.array\n    <IND>",
        "target_code_with_indent": "def decode(obj, content_type):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/encoders.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/encoders.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/encoders.py:216:37 Invalid type [31]: Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "message": " Expression `\"numpy.array or typing.Iterable or int or float\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 216,
    "warning_line": "def encode(array_like, content_type):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def encode(array_like, content_type):\n    # type: (np.array or Iterable or int or float, str) -> np.array\n    \"\"\"Encode an array-like object in a specific content_type to a numpy array.\n",
        "source_code_len": 186,
        "target_code": "def encode(array_like, content_type):\n    \"\"\"Encode an array-like object in a specific content_type to a numpy array.\n",
        "target_code_len": 118,
        "diff_format": "@@ -216,3 +214,2 @@\n def encode(array_like, content_type):\n-    # type: (np.array or Iterable or int or float, str) -> np.array\n     \"\"\"Encode an array-like object in a specific content_type to a numpy array.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED><DED>def encode(array_like, content_type):\n    # type: (np.array or Iterable or int or float, str) -> np.array\n    <IND>",
        "target_code_with_indent": "<DED><DED>def encode(array_like, content_type):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/entry_point.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/entry_point.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/entry_point.py:32:4 Incompatible variable type [9]: env_vars is declared to have type `Dict[str, str]` but is used as type `None`.",
    "message": " env_vars is declared to have type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 32,
    "warning_line": "    env_vars=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "):\n    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n    \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "source_code_len": 258,
        "target_code": "):\n    \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "target_code_len": 102,
        "diff_format": "@@ -37,3 +36,2 @@\n ):\n-    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n     \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "):\n    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n    <IND>",
        "target_code_with_indent": "):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/entry_point.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/entry_point.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/entry_point.py:36:4 Incompatible variable type [9]: extra_opts is declared to have type `Dict[str, str]` but is used as type `None`.",
    "message": " extra_opts is declared to have type `Dict[str, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 36,
    "warning_line": "    extra_opts=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "):\n    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n    \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "source_code_len": 258,
        "target_code": "):\n    \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "target_code_len": 102,
        "diff_format": "@@ -37,3 +36,2 @@\n ):\n-    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n     \"\"\"Download, prepare and execute a compressed tar file from S3 or provided directory as a user\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "):\n    # type: (str, str, List[str], Dict[str, str], bool, bool, runner.RunnerType,Dict[str, str]) -> None  # pylint: disable=line-too-long # noqa ignore=E501\n    <IND>",
        "target_code_with_indent": "):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/functions.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/functions.py:78:8 Incompatible return type [7]: Expected `inspect.ArgSpec` but got implicit return value of `None`.",
    "message": " Expected `inspect.ArgSpec` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 78,
    "warning_line": "        return inspect.ArgSpec(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef getargspec(  # pylint: disable=inconsistent-return-statements\n    fn\n):  # type: (Callable) -> inspect.ArgSpec\n    \"\"\"Get the names and default values of a function's arguments.\n",
        "source_code_len": 183,
        "target_code": "\ndef getargspec(fn):  # pylint: disable=inconsistent-return-statements\n    \"\"\"Get the names and default values of a function's arguments.\n",
        "target_code_len": 138,
        "diff_format": "@@ -56,5 +55,3 @@\n \n-def getargspec(  # pylint: disable=inconsistent-return-statements\n-    fn\n-):  # type: (Callable) -> inspect.ArgSpec\n+def getargspec(fn):  # pylint: disable=inconsistent-return-statements\n     \"\"\"Get the names and default values of a function's arguments.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def getargspec(  # pylint: disable=inconsistent-return-statements\n    fn\n):  # type: (Callable) -> inspect.ArgSpec\n    <IND>",
        "target_code_with_indent": "\n<DED>def getargspec(fn):  # pylint: disable=inconsistent-return-statements\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/functions.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/functions.py:79:76 Incompatible parameter type [6]: Expected `typing.Tuple[typing.Any, ...]` for 4th positional only parameter to call `inspect.ArgSpec.__init__` but got `typing.Optional[typing.Tuple[typing.Any, ...]]`.",
    "message": " Expected `typing.Tuple[typing.Any, ...]` for 4th positional only parameter to call `inspect.ArgSpec.__init__` but got `typing.Optional[typing.Tuple[typing.Any, ...]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 79,
    "warning_line": "            full_arg_spec.args, full_arg_spec.varargs, full_arg_spec.varkw, full_arg_spec.defaults",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef getargspec(  # pylint: disable=inconsistent-return-statements\n    fn\n):  # type: (Callable) -> inspect.ArgSpec\n    \"\"\"Get the names and default values of a function's arguments.\n",
        "source_code_len": 183,
        "target_code": "\ndef getargspec(fn):  # pylint: disable=inconsistent-return-statements\n    \"\"\"Get the names and default values of a function's arguments.\n",
        "target_code_len": 138,
        "diff_format": "@@ -56,5 +55,3 @@\n \n-def getargspec(  # pylint: disable=inconsistent-return-statements\n-    fn\n-):  # type: (Callable) -> inspect.ArgSpec\n+def getargspec(fn):  # pylint: disable=inconsistent-return-statements\n     \"\"\"Get the names and default values of a function's arguments.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def getargspec(  # pylint: disable=inconsistent-return-statements\n    fn\n):  # type: (Callable) -> inspect.ArgSpec\n    <IND>",
        "target_code_with_indent": "\n<DED>def getargspec(fn):  # pylint: disable=inconsistent-return-statements\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/functions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/functions.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/functions.py:83:35 Invalid type [31]: Expression `\"typing.Callable or None\"` is not a valid type.",
    "message": " Expression `\"typing.Callable or None\"` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 83,
    "warning_line": "def error_wrapper(fn, error_class):  # type: (Callable or None, Exception) -> ...",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef error_wrapper(fn, error_class):  # type: (Callable or None, Exception) -> ...\n    \"\"\"Wraps function fn in a try catch block that re-raises error_class.\n",
        "source_code_len": 157,
        "target_code": "\ndef error_wrapper(fn, error_class):\n    \"\"\"Wraps function fn in a try catch block that re-raises error_class.\n",
        "target_code_len": 111,
        "diff_format": "@@ -82,3 +79,3 @@\n \n-def error_wrapper(fn, error_class):  # type: (Callable or None, Exception) -> ...\n+def error_wrapper(fn, error_class):\n     \"\"\"Wraps function fn in a try catch block that re-raises error_class.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>def error_wrapper(fn, error_class):  # type: (Callable or None, Exception) -> ...\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>def error_wrapper(fn, error_class):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/runner.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/runner.py:35:20 Incompatible variable type [9]: user_entry_point is declared to have type `RunnerType` but is used as type `None`.",
    "message": " user_entry_point is declared to have type `RunnerType` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 35,
    "warning_line": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    \"\"\"Get the process runner based on the runner type.\n",
        "source_code_len": 213,
        "target_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    \"\"\"Get the process runner based on the runner type.\n",
        "target_code_len": 143,
        "diff_format": "@@ -35,3 +34,2 @@\n def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n-    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n     \"\"\"Get the process runner based on the runner type.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    <IND>",
        "target_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/runner.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/runner.py:35:43 Incompatible variable type [9]: args is declared to have type `str` but is used as type `None`.",
    "message": " args is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 35,
    "warning_line": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    \"\"\"Get the process runner based on the runner type.\n",
        "source_code_len": 213,
        "target_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    \"\"\"Get the process runner based on the runner type.\n",
        "target_code_len": 143,
        "diff_format": "@@ -35,3 +34,2 @@\n def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n-    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n     \"\"\"Get the process runner based on the runner type.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    <IND>",
        "target_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/runner.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/runner.py:35:54 Incompatible variable type [9]: env_vars is declared to have type `List[str]` but is used as type `None`.",
    "message": " env_vars is declared to have type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 35,
    "warning_line": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    \"\"\"Get the process runner based on the runner type.\n",
        "source_code_len": 213,
        "target_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    \"\"\"Get the process runner based on the runner type.\n",
        "target_code_len": 143,
        "diff_format": "@@ -35,3 +34,2 @@\n def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n-    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n     \"\"\"Get the process runner based on the runner type.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    <IND>",
        "target_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    <IND>"
      }
    ]
  },
  {
    "project": "aws/sagemaker-training-toolkit",
    "commit": "8281b567dbf848c4482be78c4b009e9a619d081c",
    "filename": "src/sagemaker_training/runner.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aws-sagemaker-training-toolkit/src/sagemaker_training/runner.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/sagemaker_training/runner.py:35:69 Incompatible variable type [9]: extra_opts is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " extra_opts is declared to have type `Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 35,
    "warning_line": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    \"\"\"Get the process runner based on the runner type.\n",
        "source_code_len": 213,
        "target_code": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    \"\"\"Get the process runner based on the runner type.\n",
        "target_code_len": 143,
        "diff_format": "@@ -35,3 +34,2 @@\n def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n-    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n     \"\"\"Get the process runner based on the runner type.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    # type: (RunnerType, str, List[str], Dict[str]) -> process.Runner\n    <IND>",
        "target_code_with_indent": "def get(identifier, user_entry_point=None, args=None, env_vars=None, extra_opts=None):\n    <IND>"
      }
    ]
  }
]