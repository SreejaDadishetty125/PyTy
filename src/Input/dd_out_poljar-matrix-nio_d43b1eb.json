[
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:133:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 133,
    "warning_line": "        return \"POST\", path, Api.to_json(content_dict)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def login(user, password, device_name=\"\", device_id=\"\"):\n        # type: (str, str, Optional[str], Optional[str]) -> Tuple[str, str]\n        path = Api._build_path(\"login\")\n",
        "source_code_len": 195,
        "target_code": "    @staticmethod\n    def login(\n        user,            # type: str\n        password,        # type: str\n        device_name=\"\",  # type: Optional[str]\n        device_id=\"\"     # type: Optional[str]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        path = Api._build_path(\"login\")\n",
        "target_code_len": 294,
        "diff_format": "@@ -116,4 +116,9 @@\n     @staticmethod\n-    def login(user, password, device_name=\"\", device_id=\"\"):\n-        # type: (str, str, Optional[str], Optional[str]) -> Tuple[str, str]\n+    def login(\n+        user,            # type: str\n+        password,        # type: str\n+        device_name=\"\",  # type: Optional[str]\n+        device_id=\"\"     # type: Optional[str]\n+    ):\n+        # type: (...) -> Tuple[str, str, str]\n         path = Api._build_path(\"login\")\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def login(user, password, device_name=\"\", device_id=\"\"):\n        # type: (str, str, Optional[str], Optional[str]) -> Tuple[str, str]\n        <IND>path = Api._build_path(\"login\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@staticmethod\n    def login(\n        user,            # type: str\n        password,        # type: str\n        device_name=\"\",  # type: Optional[str]\n        device_id=\"\"     # type: Optional[str]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        <IND>path = Api._build_path(\"login\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:155:8 Incompatible return type [7]: Expected `str` but got `Tuple[str, str]`.",
    "message": " Expected `str` but got `Tuple[str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 155,
    "warning_line": "        return \"GET\", Api._build_path(\"sync\", query_parameters)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def sync(\n        access_token,  # type: str\n        next_batch=None,  # type: Optional[str]\n        timeout=None,  # type: Optional[int]\n        filter=None,  # type: Optional[Dict[Any, Any]]\n    ):\n        # type: (...) -> str\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 291,
        "target_code": "    def sync(\n        access_token,     # type: str\n        next_batch=None,  # type: Optional[str]\n        timeout=None,     # type: Optional[int]\n        filter=None,      # type: Optional[Dict[Any, Any]]\n    ):\n        # type: (...) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 313,
        "diff_format": "@@ -136,8 +141,8 @@\n     def sync(\n-        access_token,  # type: str\n+        access_token,     # type: str\n         next_batch=None,  # type: Optional[str]\n-        timeout=None,  # type: Optional[int]\n-        filter=None,  # type: Optional[Dict[Any, Any]]\n+        timeout=None,     # type: Optional[int]\n+        filter=None,      # type: Optional[Dict[Any, Any]]\n     ):\n-        # type: (...) -> str\n+        # type: (...) -> Tuple[str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def sync(\n        access_token,  # type: str\n        next_batch=None,  # type: Optional[str]\n        timeout=None,  # type: Optional[int]\n        filter=None,  # type: Optional[Dict[Any, Any]]\n    ):\n        # type: (...) -> str\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def sync(\n        access_token,     # type: str\n        next_batch=None,  # type: Optional[str]\n        timeout=None,     # type: Optional[int]\n        filter=None,      # type: Optional[Dict[Any, Any]]\n    ):\n        # type: (...) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:314:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 314,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def keys_query(access_token, user_set):\n        # type: (str, Set[str]) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 153,
        "target_code": "    def keys_query(access_token, user_set):\n        # type: (str, Set[str]) -> Tuple[str, str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 158,
        "diff_format": "@@ -305,3 +310,3 @@\n     def keys_query(access_token, user_set):\n-        # type: (str, Set[str]) -> Tuple[str, str]\n+        # type: (str, Set[str]) -> Tuple[str, str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def keys_query(access_token, user_set):\n        # type: (str, Set[str]) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def keys_query(access_token, user_set):\n        # type: (str, Set[str]) -> Tuple[str, str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:336:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 336,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def keys_claim(access_token, user_set):\n        # type: (str, Dict[str, List[str]]) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 165,
        "target_code": "    def keys_claim(access_token, user_set):\n        # type: (str, Dict[str, List[str]]) -> Tuple[str, str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 170,
        "diff_format": "@@ -321,3 +326,3 @@\n     def keys_claim(access_token, user_set):\n-        # type: (str, Dict[str, List[str]]) -> Tuple[str, str]\n+        # type: (str, Dict[str, List[str]]) -> Tuple[str, str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def keys_claim(access_token, user_set):\n        # type: (str, Dict[str, List[str]]) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def keys_claim(access_token, user_set):\n        # type: (str, Dict[str, List[str]]) -> Tuple[str, str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:351:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 351,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def to_device(access_token, event_type, content, tx_id):\n        # type: (str, str, Dict[Any, Any], Union[str, UUID]) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 217,
        "target_code": "    @staticmethod\n    def to_device(\n        access_token,  # type: str\n        event_type,    # type: str\n        content,       # type: Dict[Any, Any]\n        tx_id          # type: Union[str, UUID]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 312,
        "diff_format": "@@ -342,4 +347,9 @@\n     @staticmethod\n-    def to_device(access_token, event_type, content, tx_id):\n-        # type: (str, str, Dict[Any, Any], Union[str, UUID]) -> Tuple[str, str]\n+    def to_device(\n+        access_token,  # type: str\n+        event_type,    # type: str\n+        content,       # type: Dict[Any, Any]\n+        tx_id          # type: Union[str, UUID]\n+    ):\n+        # type: (...) -> Tuple[str, str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def to_device(access_token, event_type, content, tx_id):\n        # type: (str, str, Dict[Any, Any], Union[str, UUID]) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@staticmethod\n    def to_device(\n        access_token,  # type: str\n        event_type,    # type: str\n        content,       # type: Dict[Any, Any]\n        tx_id          # type: Union[str, UUID]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:362:8 Incompatible return type [7]: Expected `str` but got `Tuple[str, str]`.",
    "message": " Expected `str` but got `Tuple[str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 362,
    "warning_line": "        return \"GET\", Api._build_path(path, query_parameters)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def devices(access_token):\n        # type: (str) -> str\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 118,
        "target_code": "    def devices(access_token):\n        # type: (str) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 130,
        "diff_format": "@@ -358,3 +368,3 @@\n     def devices(access_token):\n-        # type: (str) -> str\n+        # type: (str) -> Tuple[str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def devices(access_token):\n        # type: (str) -> str\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def devices(access_token):\n        # type: (str) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:370:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 370,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def update_device(access_token, device_id, content):\n        # type: (str, Dict[str, str]) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 172,
        "target_code": "    def update_device(access_token, device_id, content):\n        # type: (str, Dict[str, str]) -> Tuple[str, str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 177,
        "diff_format": "@@ -365,3 +375,3 @@\n     def update_device(access_token, device_id, content):\n-        # type: (str, Dict[str, str]) -> Tuple[str, str]\n+        # type: (str, Dict[str, str]) -> Tuple[str, str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def update_device(access_token, device_id, content):\n        # type: (str, Dict[str, str]) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def update_device(access_token, device_id, content):\n        # type: (str, Dict[str, str]) -> Tuple[str, str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:389:8 Incompatible return type [7]: Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "message": " Expected `Tuple[str, str]` but got `Tuple[str, str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 389,
    "warning_line": "        return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def delete_devices(access_token, devices, auth_dict=None):\n        # type: (str, List[str], Optional[Dict[str, str]]) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 217,
        "target_code": "    @staticmethod\n    def delete_devices(\n        access_token,   # type: str\n        devices,        # type: List[str]\n        auth_dict=None  # type: Optional[Dict[str, str]]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 288,
        "diff_format": "@@ -376,4 +386,8 @@\n     @staticmethod\n-    def delete_devices(access_token, devices, auth_dict=None):\n-        # type: (str, List[str], Optional[Dict[str, str]]) -> Tuple[str, str]\n+    def delete_devices(\n+        access_token,   # type: str\n+        devices,        # type: List[str]\n+        auth_dict=None  # type: Optional[Dict[str, str]]\n+    ):\n+        # type: (...) -> Tuple[str, str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def delete_devices(access_token, devices, auth_dict=None):\n        # type: (str, List[str], Optional[Dict[str, str]]) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@staticmethod\n    def delete_devices(\n        access_token,   # type: str\n        devices,        # type: List[str]\n        auth_dict=None  # type: Optional[Dict[str, str]]\n    ):\n        # type: (...) -> Tuple[str, str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "poljar/matrix-nio",
    "commit": "d43b1eb7c1e0603dea98153f582e137c8b7128b8",
    "filename": "nio/api.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/api.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/api.py:401:8 Incompatible return type [7]: Expected `str` but got `Tuple[str, str]`.",
    "message": " Expected `str` but got `Tuple[str, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 401,
    "warning_line": "        return \"GET\", Api._build_path(path, query_parameters)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def joined_members(access_token, room_id):\n        # type: (str, str) -> str\n        query_parameters = {\"access_token\": access_token}\n",
        "source_code_len": 139,
        "target_code": "    def joined_members(access_token, room_id):\n        # type: (str, str) -> Tuple[str, str]\n        query_parameters = {\"access_token\": access_token}\n",
        "target_code_len": 151,
        "diff_format": "@@ -396,3 +410,3 @@\n     def joined_members(access_token, room_id):\n-        # type: (str, str) -> str\n+        # type: (str, str) -> Tuple[str, str]\n         query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent": "    def joined_members(access_token, room_id):\n        # type: (str, str) -> str\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def joined_members(access_token, room_id):\n        # type: (str, str) -> Tuple[str, str]\n        <IND>query_parameters = {\"access_token\": access_token}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]