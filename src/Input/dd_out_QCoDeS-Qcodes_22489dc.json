[
  {
    "project": "QCoDeS/Qcodes",
    "commit": "22489dcaf9fe9ba87879703ece40dda3b79d0528",
    "filename": "qcodes/tests/test_station.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/QCoDeS-Qcodes/qcodes/tests/test_station.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qcodes/tests/test_station.py:308:4 Incompatible return type [7]: Expected `Station` but got `typing.Generator[Station, None, None]`.",
    "message": " Expected `Station` but got `typing.Generator[Station, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 308,
    "warning_line": "    yield station_from_config_str(SIMPLE_MOCK_CONFIG)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@pytest.fixture\ndef simple_mock_station(example_station_config) -> Station:\n    yield station_from_config_str(SIMPLE_MOCK_CONFIG)\n",
        "source_code_len": 130,
        "target_code": "@pytest.fixture\ndef simple_mock_station(example_station_config):\n    yield station_from_config_str(SIMPLE_MOCK_CONFIG)\n",
        "target_code_len": 119,
        "diff_format": "@@ -306,3 +306,3 @@\n @pytest.fixture\n-def simple_mock_station(example_station_config) -> Station:\n+def simple_mock_station(example_station_config):\n     yield station_from_config_str(SIMPLE_MOCK_CONFIG)\n",
        "source_code_with_indent": "@pytest.fixture\ndef simple_mock_station(example_station_config) -> Station:\n    <IND>yield station_from_config_str(SIMPLE_MOCK_CONFIG)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "@pytest.fixture\ndef simple_mock_station(example_station_config):\n    <IND>yield station_from_config_str(SIMPLE_MOCK_CONFIG)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]