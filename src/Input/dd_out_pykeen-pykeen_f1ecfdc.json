[
  {
    "project": "pykeen/pykeen",
    "commit": "f1ecfdcc18abeea1943c96e4ba394c9f4d46396d",
    "filename": "src/pykeen/hpo/hpo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pykeen-pykeen/src/pykeen/hpo/hpo.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pykeen/hpo/hpo.py:178:12 Incompatible parameter type [6]: Expected `Union[None, Type[src.pykeen.datasets.dataset.DataSet], str]` for 1st parameter `dataset` to call `pipeline` but got `Union[None, src.pykeen.datasets.dataset.DataSet, str]`.",
    "message": " Expected `Union[None, Type[src.pykeen.datasets.dataset.DataSet], str]` for 1st parameter `dataset` to call `pipeline` but got `Union[None, src.pykeen.datasets.dataset.DataSet, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 178,
    "warning_line": "            dataset=self.dataset,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    dataset: Union[None, str, DataSet]  # 1.\n    model: Type[Model]  # 2.\n",
        "source_code_len": 75,
        "target_code": "\n    dataset: Union[None, str, Type[DataSet]]  # 1.\n    model: Type[Model]  # 2.\n",
        "target_code_len": 81,
        "diff_format": "@@ -50,3 +50,3 @@\n \n-    dataset: Union[None, str, DataSet]  # 1.\n+    dataset: Union[None, str, Type[DataSet]]  # 1.\n     model: Type[Model]  # 2.\n",
        "source_code_with_indent": "\n    dataset: Union[None, str, DataSet]  # 1.\n    model: Type[Model]  # 2.\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    dataset: Union[None, str, Type[DataSet]]  # 1.\n    model: Type[Model]  # 2.\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pykeen/pykeen",
    "commit": "f1ecfdcc18abeea1943c96e4ba394c9f4d46396d",
    "filename": "src/pykeen/hpo/hpo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pykeen-pykeen/src/pykeen/hpo/hpo.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pykeen/hpo/hpo.py:280:4 Inconsistent override [14]: `src.pykeen.hpo.hpo.HpoPipelineResult.save_to_directory` overrides method defined in `Result` inconsistently. Could not find parameter `directory` in overriding signature.",
    "message": " `src.pykeen.hpo.hpo.HpoPipelineResult.save_to_directory` overrides method defined in `Result` inconsistently. Could not find parameter `directory` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 280,
    "warning_line": "    def save_to_directory(self, output_directory: str) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def save_to_directory(self, output_directory: str) -> None:\n        \"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(output_directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n            json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_len": 359,
        "target_code": "\n    def save_to_directory(self, directory: str, **kwargs) -> None:\n        \"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(directory, 'study.json'), 'w') as file:\n            json.dump(self.study.user_attrs, file, indent=2)\n",
        "target_code_len": 348,
        "diff_format": "@@ -279,8 +279,8 @@\n \n-    def save_to_directory(self, output_directory: str) -> None:\n+    def save_to_directory(self, directory: str, **kwargs) -> None:\n         \"\"\"Dump the results of a study to the given directory.\"\"\"\n-        os.makedirs(output_directory, exist_ok=True)\n+        os.makedirs(directory, exist_ok=True)\n \n         # Output study information\n-        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n+        with open(os.path.join(directory, 'study.json'), 'w') as file:\n             json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_with_indent": "\n    <DED>def save_to_directory(self, output_directory: str) -> None:\n        <IND>\"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(output_directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n            <IND>json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def save_to_directory(self, directory: str, **kwargs) -> None:\n        <IND>\"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(directory, 'study.json'), 'w') as file:\n            <IND>json.dump(self.study.user_attrs, file, indent=2)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_len": 273,
        "target_code": "        df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "target_code_len": 259,
        "diff_format": "@@ -289,5 +289,5 @@\n         df = self.study.trials_dataframe()\n-        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n-\n-        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n+        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n+\n+        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n         os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_with_indent": "        <DED>df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pykeen/pykeen",
    "commit": "f1ecfdcc18abeea1943c96e4ba394c9f4d46396d",
    "filename": "src/pykeen/hpo/hpo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pykeen-pykeen/src/pykeen/hpo/hpo.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/pykeen/hpo/hpo.py:280:4 Inconsistent override [14]: `src.pykeen.hpo.hpo.HpoPipelineResult.save_to_directory` overrides method defined in `Result` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "message": " `src.pykeen.hpo.hpo.HpoPipelineResult.save_to_directory` overrides method defined in `Result` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 280,
    "warning_line": "    def save_to_directory(self, output_directory: str) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def save_to_directory(self, output_directory: str) -> None:\n        \"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(output_directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n            json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_len": 359,
        "target_code": "\n    def save_to_directory(self, directory: str, **kwargs) -> None:\n        \"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(directory, 'study.json'), 'w') as file:\n            json.dump(self.study.user_attrs, file, indent=2)\n",
        "target_code_len": 348,
        "diff_format": "@@ -279,8 +279,8 @@\n \n-    def save_to_directory(self, output_directory: str) -> None:\n+    def save_to_directory(self, directory: str, **kwargs) -> None:\n         \"\"\"Dump the results of a study to the given directory.\"\"\"\n-        os.makedirs(output_directory, exist_ok=True)\n+        os.makedirs(directory, exist_ok=True)\n \n         # Output study information\n-        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n+        with open(os.path.join(directory, 'study.json'), 'w') as file:\n             json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_with_indent": "\n    <DED>def save_to_directory(self, output_directory: str) -> None:\n        <IND>\"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(output_directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(output_directory, 'study.json'), 'w') as file:\n            <IND>json.dump(self.study.user_attrs, file, indent=2)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def save_to_directory(self, directory: str, **kwargs) -> None:\n        <IND>\"\"\"Dump the results of a study to the given directory.\"\"\"\n        os.makedirs(directory, exist_ok=True)\n\n        # Output study information\n        with open(os.path.join(directory, 'study.json'), 'w') as file:\n            <IND>json.dump(self.study.user_attrs, file, indent=2)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_len": 273,
        "target_code": "        df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "target_code_len": 259,
        "diff_format": "@@ -289,5 +289,5 @@\n         df = self.study.trials_dataframe()\n-        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n-\n-        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n+        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n+\n+        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n         os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_with_indent": "        <DED>df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(output_directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(output_directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>df = self.study.trials_dataframe()\n        df.to_csv(os.path.join(directory, 'trials.tsv'), sep='\\t', index=False)\n\n        best_pipeline_directory = os.path.join(directory, 'best_pipeline')\n        os.makedirs(best_pipeline_directory, exist_ok=True)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]