[
  {
    "project": "DLR-RM/stable-baselines3",
    "commit": "9003a09d5bb48c8b9e94d862d7303f62764427a7",
    "filename": "stable_baselines3/common/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/DLR-RM-stable-baselines3/stable_baselines3/common/callbacks.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stable_baselines3/common/callbacks.py:130:44 Incompatible parameter type [6]: Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "message": " Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 130,
    "warning_line": "            self.callback.on_training_start(self.locals, self.globals)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_len": 181,
        "target_code": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_len": 141,
        "diff_format": "@@ -35,4 +35,4 @@\n         self.verbose = verbose\n-        self.locals = None  # type: Optional[Dict[str, Any]]\n-        self.globals = None  # type: Optional[Dict[str, Any]]\n+        self.locals: Dict[str, Any] = {}\n+        self.globals: Dict[str, Any] = {}\n         self.logger = None\n",
        "source_code_with_indent": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "DLR-RM/stable-baselines3",
    "commit": "9003a09d5bb48c8b9e94d862d7303f62764427a7",
    "filename": "stable_baselines3/common/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/DLR-RM-stable-baselines3/stable_baselines3/common/callbacks.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stable_baselines3/common/callbacks.py:130:57 Incompatible parameter type [6]: Expected `Dict[str, typing.Any]` for 2nd positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "message": " Expected `Dict[str, typing.Any]` for 2nd positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 130,
    "warning_line": "            self.callback.on_training_start(self.locals, self.globals)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_len": 181,
        "target_code": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_len": 141,
        "diff_format": "@@ -35,4 +35,4 @@\n         self.verbose = verbose\n-        self.locals = None  # type: Optional[Dict[str, Any]]\n-        self.globals = None  # type: Optional[Dict[str, Any]]\n+        self.locals: Dict[str, Any] = {}\n+        self.globals: Dict[str, Any] = {}\n         self.logger = None\n",
        "source_code_with_indent": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "DLR-RM/stable-baselines3",
    "commit": "9003a09d5bb48c8b9e94d862d7303f62764427a7",
    "filename": "stable_baselines3/common/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/DLR-RM-stable-baselines3/stable_baselines3/common/callbacks.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stable_baselines3/common/callbacks.py:160:39 Incompatible parameter type [6]: Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "message": " Expected `Dict[str, typing.Any]` for 1st positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 160,
    "warning_line": "            callback.on_training_start(self.locals, self.globals)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_len": 181,
        "target_code": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_len": 141,
        "diff_format": "@@ -35,4 +35,4 @@\n         self.verbose = verbose\n-        self.locals = None  # type: Optional[Dict[str, Any]]\n-        self.globals = None  # type: Optional[Dict[str, Any]]\n+        self.locals: Dict[str, Any] = {}\n+        self.globals: Dict[str, Any] = {}\n         self.logger = None\n",
        "source_code_with_indent": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "DLR-RM/stable-baselines3",
    "commit": "9003a09d5bb48c8b9e94d862d7303f62764427a7",
    "filename": "stable_baselines3/common/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/DLR-RM-stable-baselines3/stable_baselines3/common/callbacks.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stable_baselines3/common/callbacks.py:160:52 Incompatible parameter type [6]: Expected `Dict[str, typing.Any]` for 2nd positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "message": " Expected `Dict[str, typing.Any]` for 2nd positional only parameter to call `BaseCallback.on_training_start` but got `Optional[Dict[str, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 160,
    "warning_line": "            callback.on_training_start(self.locals, self.globals)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_len": 181,
        "target_code": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_len": 141,
        "diff_format": "@@ -35,4 +35,4 @@\n         self.verbose = verbose\n-        self.locals = None  # type: Optional[Dict[str, Any]]\n-        self.globals = None  # type: Optional[Dict[str, Any]]\n+        self.locals: Dict[str, Any] = {}\n+        self.globals: Dict[str, Any] = {}\n         self.logger = None\n",
        "source_code_with_indent": "        self.verbose = verbose\n        self.locals = None  # type: Optional[Dict[str, Any]]\n        self.globals = None  # type: Optional[Dict[str, Any]]\n        self.logger = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.verbose = verbose\n        self.locals: Dict[str, Any] = {}\n        self.globals: Dict[str, Any] = {}\n        self.logger = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]