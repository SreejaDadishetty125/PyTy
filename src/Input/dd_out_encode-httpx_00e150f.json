[
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:27:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:112:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:150:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:188:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:231:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:272:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:313:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/api.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/api.py:351:4 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[httpx.models.Request], httpx.models.Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], httpx.middleware.base.BaseMiddleware]` but is used as type `None`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:104:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 104,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:243:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 243,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:308:49 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 308,
    "warning_line": "        self, request: Request, trust_env: bool, auth: AuthTypes = None"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:407:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 407,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:437:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 437,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:467:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 467,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:500:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 500,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:536:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 536,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:572:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 572,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:605:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 605,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:639:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 639,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:673:8 Incompatible variable type [9]: auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "message": " auth is declared to have type `typing.Union[typing.Callable[[Request], Request], typing.Tuple[typing.Union[bytes, str], typing.Union[bytes, str]], BaseMiddleware]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 673,
    "warning_line": "        auth: AuthTypes = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/client.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/client.py",
    "file_hunks_size": 15,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/client.py:678:8 Incompatible variable type [9]: trust_env is declared to have type `bool` but is used as type `None`.",
    "message": " trust_env is declared to have type `bool` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 678,
    "warning_line": "        trust_env: bool = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/middleware/digest_auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/auth.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "httpx/middleware/digest_auth.py:142:8 Incompatible variable type [9]: algorithm is declared to have type `str` but is used as type `None`.",
    "message": " algorithm is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 142,
    "warning_line": "        algorithm: str = None,"
  },
  {
    "project": "encode/httpx",
    "commit": "00e150f6a5f8d295faeadc34cfe53de254b3f264",
    "filename": "httpx/middleware/redirect.py",
    "min_patch_found": false,
    "full_warning_msg": "httpx/middleware/redirect.py:51:26 Incompatible parameter type [6]: Expected `typing.Union[typing.Dict[str, str], Cookies, http.cookiejar.CookieJar]` for 1st positional only parameter to call `Cookies.__init__` but got `typing.Optional[Cookies]`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpx/httpx/middleware/redirect.py'",
    "dd_fail": true
  }
]