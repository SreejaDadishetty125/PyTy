[
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_core/field/bit_field.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/field/bit_field.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_core/field/bit_field.py:54:4 Inconsistent override [15]: `static_size` overrides attribute defined in `RawBits` inconsistently. Type `int` is not a subtype of the overridden attribute `typing.Callable[..., typing.Any]`.",
    "message": " `static_size` overrides attribute defined in `RawBits` inconsistently. Type `int` is not a subtype of the overridden attribute `typing.Callable[..., typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 54,
    "warning_line": "    static_size = 1"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_core/field/float.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/field/float.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_core/field/float.py:8:27 Incompatible parameter type [6]: Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 2nd positional only parameter to call `struct.unpack` but got `str`.",
    "message": " Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 2nd positional only parameter to call `struct.unpack` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 8,
    "warning_line": "assert struct.unpack(\"<d\", \"\\x1f\\x85\\xebQ\\xb8\\x1e\\t@\")[0] == 3.14"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_core/field/float.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/field/float.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_core/field/float.py:9:27 Incompatible parameter type [6]: Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 2nd positional only parameter to call `struct.unpack` but got `str`.",
    "message": " Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 2nd positional only parameter to call `struct.unpack` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 9,
    "warning_line": "assert struct.unpack(\">d\", \"\\xc0\\0\\0\\0\\0\\0\\0\\0\")[0] == -2.0"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_core/tools.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/core/tools.py",
    "file_hunks_size": 36,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_core/tools.py:252:16 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 252,
    "warning_line": "    for code in xrange(128)"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/audio/midi.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/audio/midi.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/audio/midi.py:83:19 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 83,
    "warning_line": "    for channel in xrange(16):"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/common/tracker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/common/tracker.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/common/tracker.py:7:14 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 7,
    "warning_line": "for octave in xrange(10):"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/container/swf.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/container/swf.py",
    "file_hunks_size": 26,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/container/swf.py:368:25 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 368,
    "warning_line": "    VALID_VERSIONS = set(xrange(1, 10+1))"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/image/exif.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/image/exif.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/image/exif.py:357:4 Inconsistent override [15]: `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[ExifIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "message": " `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[ExifIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 357,
    "warning_line": "    EntryClass = ExifIFDEntry"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/image/exif.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/image/exif.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/image/exif.py:360:4 Inconsistent override [15]: `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[GPSIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "message": " `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[GPSIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 360,
    "warning_line": "    EntryClass = GPSIFDEntry"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/image/exif.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/image/exif.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/image/exif.py:363:4 Inconsistent override [15]: `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[InteropIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "message": " `EntryClass` overrides attribute defined in `IFD` inconsistently. Type `typing.Type[InteropIFDEntry]` is not a subtype of the overridden attribute `typing.Type[IFDEntry]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 363,
    "warning_line": "    EntryClass = InteropIFDEntry"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/misc/pifv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/misc/pifv.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/misc/pifv.py:75:9 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 75,
    "warning_line": "for x in xrange(0xc0, 0xe0):"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/misc/torrent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/misc/torrent.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/misc/torrent.py:131:13 Unbound name [10]: Name `xrange` is used but not defined in the current scope.",
    "message": " Name `xrange` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 131,
    "warning_line": "for index in xrange(0, 9+1):"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/misc/torrent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/misc/torrent.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/misc/torrent.py:132:23 Incompatible parameter type [6]: Expected `typing.Type[typing.Union[Dictionary, Integer, List]]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Type[TorrentString]`.",
    "message": " Expected `typing.Type[typing.Union[Dictionary, Integer, List]]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.Type[TorrentString]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 132,
    "warning_line": "    TAGS[str(index)] = TorrentString"
  },
  {
    "project": "SickGear/SickGear",
    "commit": "980e05cc99bb728781c8cd7836d81e0220d39981",
    "filename": "lib/hachoir_parser/video/asf.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SickGear-SickGear/lib/hachoir/parser/video/asf.py",
    "file_hunks_size": 32,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "lib/hachoir_parser/video/asf.py:300:0 Incompatible attribute type [8]: Attribute `TAG_INFO` declared in class `Object` has type `typing.Tuple[typing.Tuple[str, typing.Type[Header], str], typing.Tuple[str, typing.Type[FileProperty], str], typing.Tuple[str, typing.Type[HeaderExtension], str], typing.Tuple[str, typing.Type[CodecList], str], typing.Tuple[str, typing.Type[SimpleIndex], str], typing.Tuple[str, typing.Type[Data], str], typing.Tuple[str, typing.Type[StreamProperty], str], typing.Tuple[str, typing.Type[BitRateList], str], typing.Tuple[str, typing.Type[ExtendedContentDescription], str], typing.Tuple[str, typing.Type[Metadata], str], typing.Tuple[str, typing.Type[VideoHeader], str], typing.Tuple[str, typing.Type[AudioHeader], str], typing.Tuple[str, typing.Type[BitrateMutualExclusion], str]]` but is used as type `typing.Dict[str, typing.Union[typing.Tuple[str, typing.Type[AudioHeader], str], typing.Tuple[str, typing.Type[BitRateList], str], typing.Tuple[str, typing.Type[BitrateMutualExclusion], str], typing.Tuple[str, typing.Type[CodecList], str], typing.Tuple[str, typing.Type[Data], str], typing.Tuple[str, typing.Type[ExtendedContentDescription], str], typing.Tuple[str, typing.Type[FileProperty], str], typing.Tuple[str, typing.Type[Header], str], typing.Tuple[str, typing.Type[HeaderExtension], str], typing.Tuple[str, typing.Type[Metadata], str], typing.Tuple[str, typing.Type[SimpleIndex], str], typing.Tuple[str, typing.Type[StreamProperty], str], typing.Tuple[str, typing.Type[VideoHeader], str]]]`.",
    "message": " Attribute `TAG_INFO` declared in class `Object` has type `typing.Tuple[typing.Tuple[str, typing.Type[Header], str], typing.Tuple[str, typing.Type[FileProperty], str], typing.Tuple[str, typing.Type[HeaderExtension], str], typing.Tuple[str, typing.Type[CodecList], str], typing.Tuple[str, typing.Type[SimpleIndex], str], typing.Tuple[str, typing.Type[Data], str], typing.Tuple[str, typing.Type[StreamProperty], str], typing.Tuple[str, typing.Type[BitRateList], str], typing.Tuple[str, typing.Type[ExtendedContentDescription], str], typing.Tuple[str, typing.Type[Metadata], str], typing.Tuple[str, typing.Type[VideoHeader], str], typing.Tuple[str, typing.Type[AudioHeader], str], typing.Tuple[str, typing.Type[BitrateMutualExclusion], str]]` but is used as type `typing.Dict[str, typing.Union[typing.Tuple[str, typing.Type[AudioHeader], str], typing.Tuple[str, typing.Type[BitRateList], str], typing.Tuple[str, typing.Type[BitrateMutualExclusion], str], typing.Tuple[str, typing.Type[CodecList], str], typing.Tuple[str, typing.Type[Data], str], typing.Tuple[str, typing.Type[ExtendedContentDescription], str], typing.Tuple[str, typing.Type[FileProperty], str], typing.Tuple[str, typing.Type[Header], str], typing.Tuple[str, typing.Type[HeaderExtension], str], typing.Tuple[str, typing.Type[Metadata], str], typing.Tuple[str, typing.Type[SimpleIndex], str], typing.Tuple[str, typing.Type[StreamProperty], str], typing.Tuple[str, typing.Type[VideoHeader], str]]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 300,
    "warning_line": "Object.TAG_INFO = dict( (parser[1].guid, parser) for parser in tag_info_list )"
  }
]