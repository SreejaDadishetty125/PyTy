[
  {
    "project": "microsoft/torchgeo",
    "commit": "e399a51ce3777126f93fa9e906572d648af53d8e",
    "filename": "train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-torchgeo/train.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "train.py:158:8 Incompatible variable type [9]: datamodule is declared to have type `None` but is used as type `torchgeo.trainers.cyclone.CycloneDataModule`.",
    "message": " datamodule is declared to have type `None` but is used as type `torchgeo.trainers.cyclone.CycloneDataModule`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 158,
    "warning_line": "        datamodule = CycloneDataModule(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_len": 128,
        "target_code": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_len": 94,
        "diff_format": "@@ -154,4 +153,4 @@\n \n-    datamodule: Optional[LightningDataModule] = None\n-    task: Optional[LightningModule] = None\n+    datamodule: LightningDataModule\n+    task: LightningModule\n     if args.task == \"cyclone\":\n",
        "source_code_with_indent": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/torchgeo",
    "commit": "e399a51ce3777126f93fa9e906572d648af53d8e",
    "filename": "train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-torchgeo/train.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "train.py:165:8 Incompatible variable type [9]: task is declared to have type `None` but is used as type `torchgeo.trainers.cyclone.CycloneSimpleRegressionTask`.",
    "message": " task is declared to have type `None` but is used as type `torchgeo.trainers.cyclone.CycloneSimpleRegressionTask`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 165,
    "warning_line": "        task = CycloneSimpleRegressionTask(model, **dict_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_len": 128,
        "target_code": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_len": 94,
        "diff_format": "@@ -154,4 +153,4 @@\n \n-    datamodule: Optional[LightningDataModule] = None\n-    task: Optional[LightningModule] = None\n+    datamodule: LightningDataModule\n+    task: LightningModule\n     if args.task == \"cyclone\":\n",
        "source_code_with_indent": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/torchgeo",
    "commit": "e399a51ce3777126f93fa9e906572d648af53d8e",
    "filename": "train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-torchgeo/train.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "train.py:169:8 Incompatible variable type [9]: datamodule is declared to have type `None` but is used as type `torchgeo.trainers.sen12ms.SEN12MSDataModule`.",
    "message": " datamodule is declared to have type `None` but is used as type `torchgeo.trainers.sen12ms.SEN12MSDataModule`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 169,
    "warning_line": "        datamodule = SEN12MSDataModule(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_len": 128,
        "target_code": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_len": 94,
        "diff_format": "@@ -154,4 +153,4 @@\n \n-    datamodule: Optional[LightningDataModule] = None\n-    task: Optional[LightningModule] = None\n+    datamodule: LightningDataModule\n+    task: LightningModule\n     if args.task == \"cyclone\":\n",
        "source_code_with_indent": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "microsoft/torchgeo",
    "commit": "e399a51ce3777126f93fa9e906572d648af53d8e",
    "filename": "train.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-torchgeo/train.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "train.py:182:8 Incompatible variable type [9]: task is declared to have type `None` but is used as type `torchgeo.trainers.sen12ms.SEN12MSSegmentationTask`.",
    "message": " task is declared to have type `None` but is used as type `torchgeo.trainers.sen12ms.SEN12MSSegmentationTask`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 182,
    "warning_line": "        task = SEN12MSSegmentationTask(model, loss, **dict_args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_len": 128,
        "target_code": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_len": 94,
        "diff_format": "@@ -154,4 +153,4 @@\n \n-    datamodule: Optional[LightningDataModule] = None\n-    task: Optional[LightningModule] = None\n+    datamodule: LightningDataModule\n+    task: LightningModule\n     if args.task == \"cyclone\":\n",
        "source_code_with_indent": "\n    datamodule: Optional[LightningDataModule] = None\n    task: Optional[LightningModule] = None\n    if args.task == \"cyclone\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    datamodule: LightningDataModule\n    task: LightningModule\n    if args.task == \"cyclone\":\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]