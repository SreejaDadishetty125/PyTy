[
  {
    "project": "activeloopai/Hub",
    "commit": "d6d4dc837d7b9e8ac4e935af543b64467475574f",
    "filename": "hub/core/chunk_engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/activeloopai-Hub/hub/core/chunk_engine.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hub/core/chunk_engine.py:186:12 Incompatible return type [7]: Expected `CommitChunkSet` but got `None`.",
    "message": " Expected `CommitChunkSet` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 186,
    "warning_line": "            return None"
  },
  {
    "project": "activeloopai/Hub",
    "commit": "d6d4dc837d7b9e8ac4e935af543b64467475574f",
    "filename": "hub/core/chunk_engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/activeloopai-Hub/hub/core/chunk_engine.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hub/core/chunk_engine.py:242:70 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `get_tensor_commit_chunk_set_key` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `get_tensor_commit_chunk_set_key` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 242,
    "warning_line": "            chunk_set_key = get_tensor_commit_chunk_set_key(self.key, commit_id)"
  },
  {
    "project": "activeloopai/Hub",
    "commit": "d6d4dc837d7b9e8ac4e935af543b64467475574f",
    "filename": "hub/core/chunk_engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/activeloopai-Hub/hub/core/chunk_engine.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hub/core/chunk_engine.py:254:16 Incompatible return type [7]: Expected `str` but got `Optional[str]`.",
    "message": " Expected `str` but got `Optional[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 254,
    "warning_line": "                return commit_id"
  },
  {
    "project": "activeloopai/Hub",
    "commit": "d6d4dc837d7b9e8ac4e935af543b64467475574f",
    "filename": "hub/core/chunk_engine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/activeloopai-Hub/hub/core/chunk_engine.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "hub/core/chunk_engine.py:255:12 Incompatible variable type [9]: cur_node is declared to have type `CommitNode` but is used as type `Optional[CommitNode]`.",
    "message": " cur_node is declared to have type `CommitNode` but is used as type `Optional[CommitNode]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 255,
    "warning_line": "            cur_node = cur_node.parent",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "                return commit_id\n            cur_node = cur_node.parent\n        # the first commit doesn't have a commit chunk set, so any chunk that wasn't found belongs to the first commit\n",
        "source_code_len": 191,
        "target_code": "                return commit_id\n            cur_node = cur_node.parent  # type: ignore\n        # the first commit doesn't have a commit chunk set, so any chunk that wasn't found belongs to the first commit\n",
        "target_code_len": 207,
        "diff_format": "@@ -254,3 +254,3 @@\n                 return commit_id\n-            cur_node = cur_node.parent\n+            cur_node = cur_node.parent  # type: ignore\n         # the first commit doesn't have a commit chunk set, so any chunk that wasn't found belongs to the first commit\n",
        "source_code_with_indent": "                <IND>return commit_id\n            <DED>cur_node = cur_node.parent\n        # the first commit doesn't have a commit chunk set, so any chunk that wasn't found belongs to the first commit\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>return commit_id\n            <DED>cur_node = cur_node.parent  # type: ignore\n        # the first commit doesn't have a commit chunk set, so any chunk that wasn't found belongs to the first commit\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]