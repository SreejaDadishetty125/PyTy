[
  {
    "project": "tracim/tracim",
    "commit": "2d01e3508fbfd09ca940a149b0c3c9d97a9e96d8",
    "filename": "backend/tracim_backend/lib/core/content.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tracim-tracim/backend/tracim_backend/lib/core/content.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend/tracim_backend/lib/core/content.py:792:79 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 792,
    "warning_line": "        self, content_label: str, workspace: Workspace, content_parent_labels: [str] = None"
  },
  {
    "project": "tracim/tracim",
    "commit": "2d01e3508fbfd09ca940a149b0c3c9d97a9e96d8",
    "filename": "backend/tracim_backend/lib/core/content.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tracim-tracim/backend/tracim_backend/lib/core/content.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend/tracim_backend/lib/core/content.py:836:27 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 836,
    "warning_line": "        self, path_labels: [str], workspace: Workspace",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def get_folder_with_workspace_path_labels(\n        self, path_labels: [str], workspace: Workspace\n    ) -> Content:\n",
        "source_code_len": 120,
        "target_code": "    def get_folder_with_workspace_path_labels(\n        self, path_labels: typing.List[str], workspace: Workspace\n    ) -> Content:\n",
        "target_code_len": 131,
        "diff_format": "@@ -835,3 +835,3 @@\n     def get_folder_with_workspace_path_labels(\n-        self, path_labels: [str], workspace: Workspace\n+        self, path_labels: typing.List[str], workspace: Workspace\n     ) -> Content:\n",
        "source_code_with_indent": "    <DED><DED>def get_folder_with_workspace_path_labels(\n        self, path_labels: [str], workspace: Workspace\n    ) -> Content:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED><DED>def get_folder_with_workspace_path_labels(\n        self, path_labels: typing.List[str], workspace: Workspace\n    ) -> Content:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tracim/tracim",
    "commit": "2d01e3508fbfd09ca940a149b0c3c9d97a9e96d8",
    "filename": "backend/tracim_backend/lib/core/content.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tracim-tracim/backend/tracim_backend/lib/core/content.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "backend/tracim_backend/lib/core/content.py:2127:24 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 2127,
    "warning_line": "        self, keywords: [str], content_types: typing.Optional[typing.List[str]] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def _search_query(\n        self, keywords: [str], content_types: typing.Optional[typing.List[str]] = None\n    ) -> Query:\n",
        "source_code_len": 126,
        "target_code": "    def _search_query(\n        self, keywords: typing.List[str], content_types: typing.Optional[typing.List[str]] = None\n    ) -> Query:\n",
        "target_code_len": 137,
        "diff_format": "@@ -2126,3 +2126,3 @@\n     def _search_query(\n-        self, keywords: [str], content_types: typing.Optional[typing.List[str]] = None\n+        self, keywords: typing.List[str], content_types: typing.Optional[typing.List[str]] = None\n     ) -> Query:\n",
        "source_code_with_indent": "    <DED>def _search_query(\n        self, keywords: [str], content_types: typing.Optional[typing.List[str]] = None\n    ) -> Query:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>def _search_query(\n        self, keywords: typing.List[str], content_types: typing.Optional[typing.List[str]] = None\n    ) -> Query:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]