[
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:25:8 Incompatible return type [7]: Expected `int` but got `str`.",
    "message": " Expected `int` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 25,
    "warning_line": "        return \"1 byte\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    try:\n",
        "source_code_len": 77,
        "target_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-def _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n+def _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n     try:\n",
        "source_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:27:8 Incompatible return type [7]: Expected `int` but got `str`.",
    "message": " Expected `int` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 27,
    "warning_line": "        return \"{:,} bytes\".format(size)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    try:\n",
        "source_code_len": 77,
        "target_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-def _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n+def _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n     try:\n",
        "source_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:33:4 Incompatible return type [7]: Expected `int` but got `str`.",
    "message": " Expected `int` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 33,
    "warning_line": "    return \"{:,.1f} {}\".format((base * size / unit), suffix)"
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:58:4 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 58,
    "warning_line": "    return _to_str(size, (\"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"), 1024)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    try:\n",
        "source_code_len": 77,
        "target_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-def _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n+def _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n     try:\n",
        "source_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:83:4 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 83,
    "warning_line": "    return _to_str(size, (\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"), 1024)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    try:\n",
        "source_code_len": 77,
        "target_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-def _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n+def _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n     try:\n",
        "source_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/filesize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/filesize.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/filesize.py:107:4 Incompatible return type [7]: Expected `str` but got `int`.",
    "message": " Expected `str` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 107,
    "warning_line": "    return _to_str(size, (\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"), 1000)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    try:\n",
        "source_code_len": 77,
        "target_code": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    try:\n",
        "target_code_len": 77,
        "diff_format": "@@ -18,3 +18,3 @@\n \n-def _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n+def _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n     try:\n",
        "source_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> int:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _to_str(size: int, suffixes: Iterable[str], base: int) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:93:12 Incompatible return type [7]: Expected `str` but got `Text`.",
    "message": " Expected `str` but got `Text`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 93,
    "warning_line": "            return Text(\"?\", style=\"progress.remaining\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show time remaining.\"\"\"\n",
        "source_code_len": 79,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show time remaining.\"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -88,3 +88,3 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show time remaining.\"\"\"\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show time remaining.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show time remaining.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:95:8 Incompatible return type [7]: Expected `str` but got `Text`.",
    "message": " Expected `str` but got `Text`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 95,
    "warning_line": "        return Text(str(remaining_delta), style=\"progress.remaining\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show time remaining.\"\"\"\n",
        "source_code_len": 79,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show time remaining.\"\"\"\n",
        "target_code_len": 80,
        "diff_format": "@@ -88,3 +88,3 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show time remaining.\"\"\"\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show time remaining.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show time remaining.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:103:37 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `filesize.decimal` but got `float`.",
    "message": " Expected `int` for 1st positional only parameter to call `filesize.decimal` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 103,
    "warning_line": "        data_size = filesize.decimal(task.completed)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(task.completed)\n        return Text(data_size, style=\"progress.data\")\n",
        "source_code_len": 186,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(int(task.completed))\n        return Text(data_size, style=\"progress.data\")\n",
        "target_code_len": 192,
        "diff_format": "@@ -100,5 +100,5 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show data completed.\"\"\"\n-        data_size = filesize.decimal(task.completed)\n+        data_size = filesize.decimal(int(task.completed))\n         return Text(data_size, style=\"progress.data\")\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(task.completed)\n        return Text(data_size, style=\"progress.data\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(int(task.completed))\n        return Text(data_size, style=\"progress.data\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:104:8 Incompatible return type [7]: Expected `str` but got `Text`.",
    "message": " Expected `str` but got `Text`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 104,
    "warning_line": "        return Text(data_size, style=\"progress.data\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(task.completed)\n        return Text(data_size, style=\"progress.data\")\n",
        "source_code_len": 186,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(int(task.completed))\n        return Text(data_size, style=\"progress.data\")\n",
        "target_code_len": 192,
        "diff_format": "@@ -100,5 +100,5 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show data completed.\"\"\"\n-        data_size = filesize.decimal(task.completed)\n+        data_size = filesize.decimal(int(task.completed))\n         return Text(data_size, style=\"progress.data\")\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(task.completed)\n        return Text(data_size, style=\"progress.data\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show data completed.\"\"\"\n        data_size = filesize.decimal(int(task.completed))\n        return Text(data_size, style=\"progress.data\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:114:12 Incompatible return type [7]: Expected `str` but got `Text`.",
    "message": " Expected `str` but got `Text`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 114,
    "warning_line": "            return Text(\"?\", style=\"progress.data.speed\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_len": 84,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show data transfer speed.\"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -109,3 +109,3 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show data transfer speed.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "willmcgugan/rich",
    "commit": "d4388412ef8a2b0babb5dbb2aae3ac2426616d3e",
    "filename": "rich/progress.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/willmcgugan-rich/rich/progress.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rich/progress.py:116:8 Incompatible return type [7]: Expected `str` but got `Text`.",
    "message": " Expected `str` but got `Text`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 116,
    "warning_line": "        return Text(f\"{data_speed}/s\", style=\"progress.data.speed\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def render(self, task: \"Task\") -> str:\n        \"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_len": 84,
        "target_code": "\n    def render(self, task: \"Task\") -> Text:\n        \"\"\"Show data transfer speed.\"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -109,3 +109,3 @@\n \n-    def render(self, task: \"Task\") -> str:\n+    def render(self, task: \"Task\") -> Text:\n         \"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_with_indent": "\n    def render(self, task: \"Task\") -> str:\n        <IND>\"\"\"Show data transfer speed.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def render(self, task: \"Task\") -> Text:\n        <IND>\"\"\"Show data transfer speed.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]