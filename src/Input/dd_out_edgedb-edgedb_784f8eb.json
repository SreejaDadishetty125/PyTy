[
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:461:35 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 461,
    "warning_line": "    bold = property(_is_opt_getter('bold'), _set_opt_setter('bold'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:461:60 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 461,
    "warning_line": "    bold = property(_is_opt_getter('bold'), _set_opt_setter('bold'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:462:36 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 462,
    "warning_line": "    faint = property(_is_opt_getter('faint'), _set_opt_setter('faint'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:462:62 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 462,
    "warning_line": "    faint = property(_is_opt_getter('faint'), _set_opt_setter('faint'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:463:37 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 463,
    "warning_line": "    italic = property(_is_opt_getter('italic'), _set_opt_setter('italic'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:463:64 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 463,
    "warning_line": "    italic = property(_is_opt_getter('italic'), _set_opt_setter('italic'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:465:23 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 465,
    "warning_line": "        _is_opt_getter('underline'), _set_opt_setter('underline'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:465:53 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 465,
    "warning_line": "        _is_opt_getter('underline'), _set_opt_setter('underline'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:466:36 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 466,
    "warning_line": "    blink = property(_is_opt_getter('blink'), _set_opt_setter('blink'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:466:62 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 466,
    "warning_line": "    blink = property(_is_opt_getter('blink'), _set_opt_setter('blink'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:468:23 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 468,
    "warning_line": "        _is_opt_getter('overline'), _set_opt_setter('overline'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:468:52 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 468,
    "warning_line": "        _is_opt_getter('overline'), _set_opt_setter('overline'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:469:38 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._is_opt_getter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 469,
    "warning_line": "    reverse = property(_is_opt_getter('reverse'), _set_opt_setter('reverse'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def _is_opt(self, name):\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    def _is_opt_getter(name):\n        return lambda self: self._is_opt(name)\n\n",
        "source_code_len": 201,
        "target_code": "\n    def _is_opt(self, name: str) -> bool:\n        assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_len": 136,
        "diff_format": "@@ -437,8 +447,5 @@\n \n-    def _is_opt(self, name):\n+    def _is_opt(self, name: str) -> bool:\n         assert name in self._opts_table\n         return self._opts_table[name] in self._opts\n-\n-    def _is_opt_getter(name):\n-        return lambda self: self._is_opt(name)\n \n",
        "source_code_with_indent": "\n    <DED>def _is_opt(self, name):\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n    <DED>def _is_opt_getter(name):\n        <IND>return lambda self: self._is_opt(name)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def _is_opt(self, name: str) -> bool:\n        <IND>assert name in self._opts_table\n        return self._opts_table[name] in self._opts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/term.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/term.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/term.py:469:66 Incompatible parameter type [6]: Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "message": " Expected `AbstractStyle` for 1st positional only parameter to call `AbstractStyle._set_opt_setter` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 469,
    "warning_line": "    reverse = property(_is_opt_getter('reverse'), _set_opt_setter('reverse'))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass AbstractStyle:\n",
        "source_code_len": 22,
        "target_code": "\ndef _is_opt_getter(name: str):\n    return lambda self: self._is_opt(name)\n\n\ndef _set_opt_setter(name: str):\n    return lambda self, value: self._set_opt(name, value)\n\n\nclass AbstractStyle:\n",
        "target_code_len": 190,
        "diff_format": "@@ -370,2 +372,10 @@\n \n+def _is_opt_getter(name: str):\n+    return lambda self: self._is_opt(name)\n+\n+\n+def _set_opt_setter(name: str):\n+    return lambda self, value: self._set_opt(name, value)\n+\n+\n class AbstractStyle:\n",
        "source_code_with_indent": "\nclass AbstractStyle:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef _is_opt_getter(name: str):\n    <IND>return lambda self: self._is_opt(name)\n\n\n<DED>def _set_opt_setter(name: str):\n    <IND>return lambda self, value: self._set_opt(name, value)\n\n\n<DED>class AbstractStyle:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._recalc()\n\n    def _set_opt_setter(name):\n        return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_len": 118,
        "target_code": "        self._recalc()\n\n",
        "target_code_len": 24,
        "diff_format": "@@ -456,5 +463,2 @@\n         self._recalc()\n-\n-    def _set_opt_setter(name):\n-        return lambda self, value: self._set_opt(name, value)\n \n",
        "source_code_with_indent": "        <DED><DED>self._recalc()\n\n    <DED>def _set_opt_setter(name):\n        <IND>return lambda self, value: self._set_opt(name, value)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED><DED>self._recalc()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/common/windowedsum.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/common/windowedsum.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/common/windowedsum.py:67:12 Incompatible attribute type [8]: Attribute `_last_shift_at` declared in class `WindowedSum` has type `int` but is used as type `float`.",
    "message": " Attribute `_last_shift_at` declared in class `WindowedSum` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 67,
    "warning_line": "            self._last_shift_at = now",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._maxlen = 60\n        self._buckets = collections.deque([0], maxlen=self._maxlen)\n        self._last_shift_at = 0\n\n",
        "source_code_len": 127,
        "target_code": "        self._maxlen = 60\n        init: float = 0\n        self._buckets = collections.deque([init], maxlen=self._maxlen)\n        self._last_shift_at = 0.0\n\n",
        "target_code_len": 156,
        "diff_format": "@@ -45,4 +45,5 @@\n         self._maxlen = 60\n-        self._buckets = collections.deque([0], maxlen=self._maxlen)\n-        self._last_shift_at = 0\n+        init: float = 0\n+        self._buckets = collections.deque([init], maxlen=self._maxlen)\n+        self._last_shift_at = 0.0\n \n",
        "source_code_with_indent": "        <IND>self._maxlen = 60\n        self._buckets = collections.deque([0], maxlen=self._maxlen)\n        self._last_shift_at = 0\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>self._maxlen = 60\n        init: float = 0\n        self._buckets = collections.deque([init], maxlen=self._maxlen)\n        self._last_shift_at = 0.0\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/edgeql/ast.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/ast.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/edgeql/ast.py:327:4 Inconsistent override [15]: `value` overrides attribute defined in `BaseConstant` inconsistently. Type `bytes` is not a subtype of the overridden attribute `str`.",
    "message": " `value` overrides attribute defined in `BaseConstant` inconsistently. Type `bytes` is not a subtype of the overridden attribute `str`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 327,
    "warning_line": "    value: bytes"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/edgeql/parser/grammar/statements.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/parser/grammar/statements.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/edgeql/parser/grammar/statements.py:139:4 Incompatible attribute type [8]: Attribute `options` declared in class `DescribeFmt` has type `qlast.Options` but is used as type `None`.",
    "message": " Attribute `options` declared in class `DescribeFmt` has type `qlast.Options` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 139,
    "warning_line": "    options: qlast.Options = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    language: typing.Optional[qltypes.DescribeLanguage] = None\n    options: qlast.Options = None\n\n",
        "source_code_len": 98,
        "target_code": "    language: typing.Optional[qltypes.DescribeLanguage] = None\n    options: typing.Optional[qlast.Options] = None\n\n",
        "target_code_len": 115,
        "diff_format": "@@ -138,3 +138,3 @@\n     language: typing.Optional[qltypes.DescribeLanguage] = None\n-    options: qlast.Options = None\n+    options: typing.Optional[qlast.Options] = None\n \n",
        "source_code_with_indent": "    <IND>language: typing.Optional[qltypes.DescribeLanguage] = None\n    options: qlast.Options = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>language: typing.Optional[qltypes.DescribeLanguage] = None\n    options: typing.Optional[qlast.Options] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/edgeql/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/edgeql/utils.py:60:31 Incompatible parameter type [6]: Expected `typing.Dict[str, qlast.Base]` for 1st positional only parameter to call `ParameterInliner.__init__` but got `typing.Mapping[str, qlast.Base]`.",
    "message": " Expected `typing.Dict[str, qlast.Base]` for 1st positional only parameter to call `ParameterInliner.__init__` but got `typing.Mapping[str, qlast.Base]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 60,
    "warning_line": "    inliner = ParameterInliner(args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, args_map: Dict[str, qlast.Base]) -> None:\n        super().__init__()\n",
        "source_code_len": 93,
        "target_code": "\n    def __init__(self, args_map: Mapping[str, qlast.Base]) -> None:\n        super().__init__()\n",
        "target_code_len": 96,
        "diff_format": "@@ -34,3 +34,3 @@\n \n-    def __init__(self, args_map: Dict[str, qlast.Base]) -> None:\n+    def __init__(self, args_map: Mapping[str, qlast.Base]) -> None:\n         super().__init__()\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, args_map: Dict[str, qlast.Base]) -> None:\n        <IND>super().__init__()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, args_map: Mapping[str, qlast.Base]) -> None:\n        <IND>super().__init__()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/edgeql/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/edgeql/utils.py:110:28 Incompatible parameter type [6]: Expected `typing.Union[qlast.Expr, qlast.ObjectRef, qlast.Ptr, qlast.TypeIntersection]` for 2nd positional only parameter to call `list.__setitem__` but got `qlast.Base`.",
    "message": " Expected `typing.Union[qlast.Expr, qlast.ObjectRef, qlast.Ptr, qlast.TypeIntersection]` for 2nd positional only parameter to call `list.__setitem__` but got `qlast.Base`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 110,
    "warning_line": "            node.steps[0] = self.anchors[step0.name]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if isinstance(step0, qlast.Anchor):\n            node.steps[0] = self.anchors[step0.name]\n        elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            node.steps[0] = self.anchors[step0.name]\n\n",
        "source_code_len": 231,
        "target_code": "        if isinstance(step0, qlast.Anchor):\n            node.steps[0] = self.anchors[step0.name]  # type: ignore\n        elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            node.steps[0] = self.anchors[step0.name]  # type: ignore\n\n",
        "target_code_len": 263,
        "diff_format": "@@ -109,5 +111,5 @@\n         if isinstance(step0, qlast.Anchor):\n-            node.steps[0] = self.anchors[step0.name]\n+            node.steps[0] = self.anchors[step0.name]  # type: ignore\n         elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n-            node.steps[0] = self.anchors[step0.name]\n+            node.steps[0] = self.anchors[step0.name]  # type: ignore\n \n",
        "source_code_with_indent": "        if isinstance(step0, qlast.Anchor):\n            <IND>node.steps[0] = self.anchors[step0.name]\n        <DED>elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            <IND>node.steps[0] = self.anchors[step0.name]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if isinstance(step0, qlast.Anchor):\n            <IND>node.steps[0] = self.anchors[step0.name]  # type: ignore\n        <DED>elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            <IND>node.steps[0] = self.anchors[step0.name]  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/edgeql/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/edgeql/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/edgeql/utils.py:112:28 Incompatible parameter type [6]: Expected `typing.Union[qlast.Expr, qlast.ObjectRef, qlast.Ptr, qlast.TypeIntersection]` for 2nd positional only parameter to call `list.__setitem__` but got `qlast.Base`.",
    "message": " Expected `typing.Union[qlast.Expr, qlast.ObjectRef, qlast.Ptr, qlast.TypeIntersection]` for 2nd positional only parameter to call `list.__setitem__` but got `qlast.Base`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 112,
    "warning_line": "            node.steps[0] = self.anchors[step0.name]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "        if isinstance(step0, qlast.Anchor):\n            node.steps[0] = self.anchors[step0.name]\n        elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            node.steps[0] = self.anchors[step0.name]\n\n",
        "source_code_len": 231,
        "target_code": "        if isinstance(step0, qlast.Anchor):\n            node.steps[0] = self.anchors[step0.name]  # type: ignore\n        elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            node.steps[0] = self.anchors[step0.name]  # type: ignore\n\n",
        "target_code_len": 263,
        "diff_format": "@@ -109,5 +111,5 @@\n         if isinstance(step0, qlast.Anchor):\n-            node.steps[0] = self.anchors[step0.name]\n+            node.steps[0] = self.anchors[step0.name]  # type: ignore\n         elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n-            node.steps[0] = self.anchors[step0.name]\n+            node.steps[0] = self.anchors[step0.name]  # type: ignore\n \n",
        "source_code_with_indent": "        if isinstance(step0, qlast.Anchor):\n            <IND>node.steps[0] = self.anchors[step0.name]\n        <DED>elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            <IND>node.steps[0] = self.anchors[step0.name]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if isinstance(step0, qlast.Anchor):\n            <IND>node.steps[0] = self.anchors[step0.name]  # type: ignore\n        <DED>elif isinstance(step0, qlast.ObjectRef) and step0.name in self.anchors:\n            <IND>node.steps[0] = self.anchors[step0.name]  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/errors/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/errors/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/errors/__init__.py:13:10 Unbound name [10]: Name `base` is used but not defined in the current scope.",
    "message": " Name `base` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 13,
    "warning_line": "__all__ = base.__all__ + (",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n__all__ = base.__all__ + (\n    'InternalServerError',\n",
        "source_code_len": 55,
        "target_code": "\n__all__ = base.__all__ + (  # type: ignore\n    'InternalServerError',\n",
        "target_code_len": 71,
        "diff_format": "@@ -12,3 +12,3 @@\n \n-__all__ = base.__all__ + (\n+__all__ = base.__all__ + (  # type: ignore\n     'InternalServerError',\n",
        "source_code_with_indent": "\n__all__ = base.__all__ + (\n    'InternalServerError',\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n__all__ = base.__all__ + (  # type: ignore\n    'InternalServerError',\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/graphql/translator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/graphql/translator.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/graphql/translator.py:1722:4 Incompatible variable type [9]: variables is declared to have type `typing.Dict[str, typing.Any]` but is used as type `None`.",
    "message": " variables is declared to have type `typing.Dict[str, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1722,
    "warning_line": "    variables: Dict[str, Any]=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    operation_name: Optional[str]=None,\n    variables: Dict[str, Any]=None,\n    substitutions: Optional[Dict[str, Tuple[str, int, int]]],\n",
        "source_code_len": 138,
        "target_code": "    operation_name: Optional[str]=None,\n    variables: Optional[Mapping[str, Any]]=None,\n    substitutions: Optional[Dict[str, Tuple[str, int, int]]],\n",
        "target_code_len": 151,
        "diff_format": "@@ -1721,3 +1723,3 @@\n     operation_name: Optional[str]=None,\n-    variables: Dict[str, Any]=None,\n+    variables: Optional[Mapping[str, Any]]=None,\n     substitutions: Optional[Dict[str, Tuple[str, int, int]]],\n",
        "source_code_with_indent": "    operation_name: Optional[str]=None,\n    variables: Dict[str, Any]=None,\n    substitutions: Optional[Dict[str, Tuple[str, int, int]]],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    operation_name: Optional[str]=None,\n    variables: Optional[Mapping[str, Any]]=None,\n    substitutions: Optional[Dict[str, Tuple[str, int, int]]],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/pgsql/deltadbops.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/pgsql/deltadbops.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/pgsql/deltadbops.py:31:42 Invalid type [31]: Expression `type(edb.schema.objects.Object)` is not a valid type.",
    "message": " Expression `type(edb.schema.objects.Object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "class SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\nclass SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):\n    def __init__(cls, name, bases, dct, *, adapts=None):\n",
        "source_code_len": 121,
        "target_code": "\nclass SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):  # type: ignore\n    def __init__(cls, name, bases, dct, *, adapts=None):\n",
        "target_code_len": 137,
        "diff_format": "@@ -30,3 +30,3 @@\n \n-class SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):\n+class SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):  # type: ignore\n     def __init__(cls, name, bases, dct, *, adapts=None):\n",
        "source_code_with_indent": "\nclass SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):\n    <IND>def __init__(cls, name, bases, dct, *, adapts=None):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass SchemaDBObjectMeta(adapter.Adapter, type(s_obj.Object)):  # type: ignore\n    <IND>def __init__(cls, name, bases, dct, *, adapts=None):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/buildmeta.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/buildmeta.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/server/buildmeta.py:102:8 Incompatible return type [7]: Expected `pathlib.Path` but got `os.PathLike[typing.Any]`.",
    "message": " Expected `pathlib.Path` but got `os.PathLike[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 102,
    "warning_line": "        return devmode.get_dev_mode_cache_dir()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    if devmode.is_in_dev_mode():\n        return devmode.get_dev_mode_cache_dir()\n    else:\n",
        "source_code_len": 91,
        "target_code": "    if devmode.is_in_dev_mode():\n        return devmode.get_dev_mode_cache_dir()  # type: ignore[return-value]\n    else:\n",
        "target_code_len": 121,
        "diff_format": "@@ -101,3 +101,3 @@\n     if devmode.is_in_dev_mode():\n-        return devmode.get_dev_mode_cache_dir()\n+        return devmode.get_dev_mode_cache_dir()  # type: ignore[return-value]\n     else:\n",
        "source_code_with_indent": "    <IND>if devmode.is_in_dev_mode():\n        <IND>return devmode.get_dev_mode_cache_dir()\n    <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>if devmode.is_in_dev_mode():\n        <IND>return devmode.get_dev_mode_cache_dir()  # type: ignore[return-value]\n    <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/compiler.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:337:35 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `BaseCompiler._wrap_schema` but got `bytes`.",
    "message": " Expected `int` for 1st positional only parameter to call `BaseCompiler._wrap_schema` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 337,
    "warning_line": "            db = self._wrap_schema(dbver, schema, cached_reflection)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        dbver: int,\n        schema: s_schema.Schema,\n",
        "source_code_len": 67,
        "target_code": "        self,\n        dbver: bytes,\n        schema: s_schema.Schema,\n",
        "target_code_len": 69,
        "diff_format": "@@ -273,3 +275,3 @@\n         self,\n-        dbver: int,\n+        dbver: bytes,\n         schema: s_schema.Schema,\n",
        "source_code_with_indent": "        self,\n        dbver: int,\n        schema: s_schema.Schema,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        dbver: bytes,\n        schema: s_schema.Schema,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/compiler.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:721:16 Incompatible parameter type [6]: Expected `bytes` for 5th parameter `in_type_data` to call `dbstate.Query.__init__` but got `int`.",
    "message": " Expected `bytes` for 5th parameter `in_type_data` to call `dbstate.Query.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 721,
    "warning_line": "                in_type_data=in_type_data,"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/compiler.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:724:16 Incompatible parameter type [6]: Expected `bytes` for 8th parameter `out_type_data` to call `dbstate.Query.__init__` but got `int`.",
    "message": " Expected `bytes` for 8th parameter `out_type_data` to call `dbstate.Query.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 724,
    "warning_line": "                out_type_data=out_type_data,"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/compiler.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:2099:12 Incompatible parameter type [6]: Expected `uuid.UUID` for 4th parameter `type_desc_id` to call `DumpBlockDescriptor.__init__` but got `int`.",
    "message": " Expected `uuid.UUID` for 4th parameter `type_desc_id` to call `DumpBlockDescriptor.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 2099,
    "warning_line": "            type_desc_id=type_id,"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/compiler.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/compiler.py:2100:12 Incompatible parameter type [6]: Expected `bytes` for 5th parameter `type_desc` to call `DumpBlockDescriptor.__init__` but got `int`.",
    "message": " Expected `bytes` for 5th parameter `type_desc` to call `DumpBlockDescriptor.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 2100,
    "warning_line": "            type_desc=type_data,"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/dbstate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/dbstate.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/dbstate.py:273:16 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "message": " Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 273,
    "warning_line": "                name=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_len": 54,
        "target_code": "    id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_len": 64,
        "diff_format": "@@ -241,3 +241,3 @@\n     id: int\n-    name: str\n+    name: Optional[str]\n     schema: s_schema.Schema\n",
        "source_code_with_indent": "    <IND>id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/dbstate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/dbstate.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/dbstate.py:283:16 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "message": " Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 283,
    "warning_line": "                name=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_len": 54,
        "target_code": "    id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_len": 64,
        "diff_format": "@@ -241,3 +241,3 @@\n     id: int\n-    name: str\n+    name: Optional[str]\n     schema: s_schema.Schema\n",
        "source_code_with_indent": "    <IND>id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/dbstate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/dbstate.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/dbstate.py:334:16 Incompatible parameter type [6]: Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "message": " Expected `str` for 2nd parameter `name` to call `TransactionState.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 334,
    "warning_line": "                name=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_len": 54,
        "target_code": "    id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_len": 64,
        "diff_format": "@@ -241,3 +241,3 @@\n     id: int\n-    name: str\n+    name: Optional[str]\n     schema: s_schema.Schema\n",
        "source_code_with_indent": "    <IND>id: int\n    name: str\n    schema: s_schema.Schema\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>id: int\n    name: Optional[str]\n    schema: s_schema.Schema\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: code is declared to have type `PGErrorCode` but is used as type `None`.",
    "message": " code is declared to have type `PGErrorCode` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: code is declared to have type `PGErrorCode` but is used as type `None`.",
    "message": " code is declared to have type `PGErrorCode` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: column_name is declared to have type `str` but is used as type `None`.",
    "message": " column_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: column_name is declared to have type `str` but is used as type `None`.",
    "message": " column_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: constraint_name is declared to have type `str` but is used as type `None`.",
    "message": " constraint_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: constraint_name is declared to have type `str` but is used as type `None`.",
    "message": " constraint_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: detail is declared to have type `str` but is used as type `None`.",
    "message": " detail is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: detail is declared to have type `str` but is used as type `None`.",
    "message": " detail is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: detail_json is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " detail_json is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: detail_json is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " detail_json is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: errcls is declared to have type `errors.base.EdgeDBError` but is used as type `None`.",
    "message": " errcls is declared to have type `errors.base.EdgeDBError` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: errcls is declared to have type `errors.base.EdgeDBError` but is used as type `None`.",
    "message": " errcls is declared to have type `errors.base.EdgeDBError` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: schema_name is declared to have type `str` but is used as type `None`.",
    "message": " schema_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: schema_name is declared to have type `str` but is used as type `None`.",
    "message": " schema_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: table_name is declared to have type `str` but is used as type `None`.",
    "message": " table_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/errormech.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/errormech.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/errormech.py:83:0 Incompatible variable type [9]: table_name is declared to have type `str` but is used as type `None`.",
    "message": " table_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 83,
    "warning_line": "class ErrorDetails(NamedTuple):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_len": 252,
        "target_code": "    message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_len": 342,
        "diff_format": "@@ -84,10 +84,10 @@\n     message: str\n-    detail: str = None\n-    detail_json: dict = None\n-    code: PGErrorCode = None\n-    schema_name: str = None\n-    table_name: str = None\n-    column_name: str = None\n-    constraint_name: str = None\n-    errcls: errors.EdgeDBError = None\n+    detail: Optional[str] = None\n+    detail_json: Optional[Dict[str, Any]] = None\n+    code: Optional[PGErrorCode] = None\n+    schema_name: Optional[str] = None\n+    table_name: Optional[str] = None\n+    column_name: Optional[str] = None\n+    constraint_name: Optional[str] = None\n+    errcls: Optional[errors.EdgeDBError] = None\n \n",
        "source_code_with_indent": "    <IND>message: str\n    detail: str = None\n    detail_json: dict = None\n    code: PGErrorCode = None\n    schema_name: str = None\n    table_name: str = None\n    column_name: str = None\n    constraint_name: str = None\n    errcls: errors.EdgeDBError = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>message: str\n    detail: Optional[str] = None\n    detail_json: Optional[Dict[str, Any]] = None\n    code: Optional[PGErrorCode] = None\n    schema_name: Optional[str] = None\n    table_name: Optional[str] = None\n    column_name: Optional[str] = None\n    constraint_name: Optional[str] = None\n    errcls: Optional[errors.EdgeDBError] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/compiler/sertypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/compiler/sertypes.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/compiler/sertypes.py:379:8 Incompatible return type [7]: Expected `bytes` but got `typing.Tuple[bytes, typing.Any]`.",
    "message": " Expected `bytes` but got `typing.Tuple[bytes, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 379,
    "warning_line": "        return out, type_id",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        inline_typenames: bool = False,\n    ) -> bytes:\n        builder = cls(\n",
        "source_code_len": 79,
        "target_code": "        inline_typenames: bool = False,\n    ) -> typing.Tuple[bytes, uuid.UUID]:\n        builder = cls(\n",
        "target_code_len": 104,
        "diff_format": "@@ -369,3 +371,3 @@\n         inline_typenames: bool = False,\n-    ) -> bytes:\n+    ) -> typing.Tuple[bytes, uuid.UUID]:\n         builder = cls(\n",
        "source_code_with_indent": "        inline_typenames: bool = False,\n    ) -> bytes:\n        <IND>builder = cls(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        inline_typenames: bool = False,\n    ) -> typing.Tuple[bytes, uuid.UUID]:\n        <IND>builder = cls(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/config/ops.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/config/ops.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/server/config/ops.py:95:33 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T_co](covariant)]` for 1st positional only parameter to call `frozenset.__init__` but got `typing.Union[None, bool, int, str]`.",
    "message": " Expected `typing.Iterable[Variable[_T_co](covariant)]` for 1st positional only parameter to call `frozenset.__init__` but got `typing.Union[None, bool, int, str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 95,
    "warning_line": "                return frozenset(self.value)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\n                return frozenset(self.value)\n        else:\n",
        "source_code_len": 60,
        "target_code": "\n                return frozenset(self.value)  # type: ignore\n        else:\n",
        "target_code_len": 76,
        "diff_format": "@@ -94,3 +94,3 @@\n \n-                return frozenset(self.value)\n+                return frozenset(self.value)  # type: ignore\n         else:\n",
        "source_code_with_indent": "\n                <DED><DED>return frozenset(self.value)\n        <DED><DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n                <DED><DED>return frozenset(self.value)  # type: ignore\n        <DED><DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/config/ops.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/config/ops.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/config/ops.py:200:8 Incompatible return type [7]: Expected `Variable[Mapping_T (bound to typing.Mapping[str, SettingValue])]` but got `typing.Mapping[str, SettingValue]`.",
    "message": " Expected `Variable[Mapping_T (bound to typing.Mapping[str, SettingValue])]` but got `typing.Mapping[str, SettingValue]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 200,
    "warning_line": "        return set_value(storage, self.setting_name, value, source=source)"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/config/spec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/config/spec.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/config/spec.py:44:4 Incompatible attribute type [8]: Attribute `backend_setting` declared in class `Setting` has type `str` but is used as type `None`.",
    "message": " Attribute `backend_setting` declared in class `Setting` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 44,
    "warning_line": "    backend_setting: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    requires_restart: bool = False\n    backend_setting: str = None\n\n",
        "source_code_len": 68,
        "target_code": "    requires_restart: bool = False\n    backend_setting: Optional[str] = None\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -43,3 +43,3 @@\n     requires_restart: bool = False\n-    backend_setting: str = None\n+    backend_setting: Optional[str] = None\n \n",
        "source_code_with_indent": "    requires_restart: bool = False\n    backend_setting: str = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    requires_restart: bool = False\n    backend_setting: Optional[str] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/http_graphql_port/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/http_graphql_port/compiler.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/http_graphql_port/compiler.py:83:38 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `compiler.compiler.BaseCompiler._get_database` but got `int`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `compiler.compiler.BaseCompiler._get_database` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 83,
    "warning_line": "        db = await self._get_database(dbver)"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/http_graphql_port/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/http_graphql_port/compiler.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/http_graphql_port/compiler.py:92:12 Incompatible parameter type [6]: Expected `typing.Dict[str, typing.Any]` for 3rd parameter `variables` to call `graphql.translator.translate_ast` but got `typing.Optional[typing.Mapping[str, object]]`.",
    "message": " Expected `typing.Dict[str, typing.Any]` for 3rd parameter `variables` to call `graphql.translator.translate_ast` but got `typing.Optional[typing.Mapping[str, object]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 92,
    "warning_line": "            variables=variables,"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/http_graphql_port/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/http_graphql_port/compiler.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/http_graphql_port/compiler.py:112:12 Incompatible parameter type [6]: Expected `bool` for 2nd parameter `pretty` to call `pg_compiler.compile_ir_to_sql` but got `debug.Flag`.",
    "message": " Expected `bool` for 2nd parameter `pretty` to call `pg_compiler.compile_ir_to_sql` but got `debug.Flag`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 112,
    "warning_line": "            pretty=debug.flags.edgeql_compile,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            ir,\n            pretty=debug.flags.edgeql_compile,\n            expected_cardinality_one=True,\n",
        "source_code_len": 106,
        "target_code": "            ir,\n            pretty=bool(debug.flags.edgeql_compile),\n            expected_cardinality_one=True,\n",
        "target_code_len": 112,
        "diff_format": "@@ -111,3 +113,3 @@\n             ir,\n-            pretty=debug.flags.edgeql_compile,\n+            pretty=bool(debug.flags.edgeql_compile),\n             expected_cardinality_one=True,\n",
        "source_code_with_indent": "            ir,\n            pretty=debug.flags.edgeql_compile,\n            expected_cardinality_one=True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            ir,\n            pretty=bool(debug.flags.edgeql_compile),\n            expected_cardinality_one=True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/http_graphql_port/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/http_graphql_port/compiler.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/http_graphql_port/compiler.py:118:36 Incompatible parameter type [6]: Expected `None` for 2nd positional only parameter to call `list.__setitem__` but got `str`.",
    "message": " Expected `None` for 2nd positional only parameter to call `list.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 118,
    "warning_line": "            args[param.index - 1] = argname"
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/http_graphql_port/compiler.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/http_graphql_port/compiler.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/server/http_graphql_port/compiler.py:126:12 Incompatible parameter type [6]: Expected `typing.List[str]` for 3rd parameter `sql_args` to call `CompiledOperation.__init__` but got `typing.List[None]`.",
    "message": " Expected `typing.List[str]` for 3rd parameter `sql_args` to call `CompiledOperation.__init__` but got `typing.List[None]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 126,
    "warning_line": "            sql_args=args,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            sql_hash=sql_hash,\n            sql_args=args,\n            dbver=dbver,\n",
        "source_code_len": 83,
        "target_code": "            sql_hash=sql_hash,\n            sql_args=args,  # type: ignore[arg-type]  # XXX: optional bug?\n            dbver=dbver,\n",
        "target_code_len": 131,
        "diff_format": "@@ -125,3 +127,3 @@\n             sql_hash=sql_hash,\n-            sql_args=args,\n+            sql_args=args,  # type: ignore[arg-type]  # XXX: optional bug?\n             dbver=dbver,\n",
        "source_code_with_indent": "            sql_hash=sql_hash,\n            sql_args=args,\n            dbver=dbver,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            sql_hash=sql_hash,\n            sql_args=args,  # type: ignore[arg-type]  # XXX: optional bug?\n            dbver=dbver,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/main.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/server/main.py:115:8 Incompatible return type [7]: Expected `pathlib.Path` but got `typing.Generator[pathlib.Path, None, None]`.",
    "message": " Expected `pathlib.Path` but got `typing.Generator[pathlib.Path, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 115,
    "warning_line": "        yield runstate_dir",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    specified_runstate_dir: Optional[pathlib.Path]\n) -> pathlib.Path:\n    temp_runstate_dir = None\n",
        "source_code_len": 99,
        "target_code": "    specified_runstate_dir: Optional[pathlib.Path]\n) -> Iterator[pathlib.Path]:\n    temp_runstate_dir = None\n",
        "target_code_len": 109,
        "diff_format": "@@ -75,3 +75,3 @@\n     specified_runstate_dir: Optional[pathlib.Path]\n-) -> pathlib.Path:\n+) -> Iterator[pathlib.Path]:\n     temp_runstate_dir = None\n",
        "source_code_with_indent": "    specified_runstate_dir: Optional[pathlib.Path]\n) -> pathlib.Path:\n    <IND>temp_runstate_dir = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    specified_runstate_dir: Optional[pathlib.Path]\n) -> Iterator[pathlib.Path]:\n    <IND>temp_runstate_dir = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/server/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/server/main.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "edb/server/main.py:482:4 Incompatible return type [7]: Expected `str` but got `typing.Tuple[int, int]`.",
    "message": " Expected `str` but got `typing.Tuple[int, int]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 482,
    "warning_line": "    return ver",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "def _protocol_version(\n        ctx: click.Context, param: click.Param, value: str\n) -> str:\n    try:\n",
        "source_code_len": 101,
        "target_code": "def _protocol_version(\n    ctx: click.Context,\n    param: click.Param,  # type: ignore[name-defined]\n    value: str,\n) -> Tuple[int, int]:\n    try:\n",
        "target_code_len": 148,
        "diff_format": "@@ -468,4 +470,6 @@\n def _protocol_version(\n-        ctx: click.Context, param: click.Param, value: str\n-) -> str:\n+    ctx: click.Context,\n+    param: click.Param,  # type: ignore[name-defined]\n+    value: str,\n+) -> Tuple[int, int]:\n     try:\n",
        "source_code_with_indent": "<DED><DED>def _protocol_version(\n        ctx: click.Context, param: click.Param, value: str\n) -> str:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def _protocol_version(\n    ctx: click.Context,\n    param: click.Param,  # type: ignore[name-defined]\n    value: str,\n) -> Tuple[int, int]:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/tools/mypy/plugin.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/tools/mypy/plugin.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/tools/mypy/plugin.py:65:20 Incompatible parameter type [6]: Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "message": " Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 65,
    "warning_line": "                    field_makers={'edb.schema.objects.SchemaField'},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_len": 95,
        "target_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_len": 97,
        "diff_format": "@@ -127,3 +128,3 @@\n         ctx: mypy_plugin.ClassDefContext,\n-        field_makers: FrozenSet[str],\n+        field_makers: AbstractSet[str],\n     ) -> None:\n",
        "source_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/tools/mypy/plugin.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/tools/mypy/plugin.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/tools/mypy/plugin.py:71:20 Incompatible parameter type [6]: Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "message": " Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 71,
    "warning_line": "                    field_makers={'edb.schema.objects.Field'},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_len": 95,
        "target_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_len": 97,
        "diff_format": "@@ -127,3 +128,3 @@\n         ctx: mypy_plugin.ClassDefContext,\n-        field_makers: FrozenSet[str],\n+        field_makers: AbstractSet[str],\n     ) -> None:\n",
        "source_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/tools/mypy/plugin.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/tools/mypy/plugin.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/tools/mypy/plugin.py:79:20 Incompatible parameter type [6]: Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "message": " Expected `frozenset[str]` for 2nd parameter `field_makers` to call `BaseStructTransformer.__init__` but got `typing.Set[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 79,
    "warning_line": "                    field_makers={'edb.common.struct.Field'},",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_len": 95,
        "target_code": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_len": 97,
        "diff_format": "@@ -127,3 +128,3 @@\n         ctx: mypy_plugin.ClassDefContext,\n-        field_makers: FrozenSet[str],\n+        field_makers: AbstractSet[str],\n     ) -> None:\n",
        "source_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: FrozenSet[str],\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        ctx: mypy_plugin.ClassDefContext,\n        field_makers: AbstractSet[str],\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "edgedb/edgedb",
    "commit": "784f8eb8181cb7f0e01f16202f28f39af243612d",
    "filename": "edb/tools/wipe.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/edgedb-edgedb/edb/tools/wipe.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "edb/tools/wipe.py:166:36 Incompatible parameter type [6]: Expected `typing.Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `edbcompiler.compiler.Compiler.__init__` but got `None`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` for 1st positional only parameter to call `edbcompiler.compiler.Compiler.__init__` but got `None`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "    compiler = edbcompiler.Compiler(None)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "async def _get_dbs_and_roles(pgconn) -> Tuple[List[str], List[str]]:\n    compiler = edbcompiler.Compiler(None)\n    await compiler.ensure_initialized(pgconn)\n",
        "source_code_len": 157,
        "target_code": "async def _get_dbs_and_roles(pgconn) -> Tuple[List[str], List[str]]:\n    compiler = edbcompiler.Compiler({})\n    await compiler.ensure_initialized(pgconn)\n",
        "target_code_len": 155,
        "diff_format": "@@ -165,3 +165,3 @@\n async def _get_dbs_and_roles(pgconn) -> Tuple[List[str], List[str]]:\n-    compiler = edbcompiler.Compiler(None)\n+    compiler = edbcompiler.Compiler({})\n     await compiler.ensure_initialized(pgconn)\n",
        "source_code_with_indent": "<DED><DED>async def _get_dbs_and_roles(pgconn) -> Tuple[List[str], List[str]]:\n    <IND>compiler = edbcompiler.Compiler(None)\n    await compiler.ensure_initialized(pgconn)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>async def _get_dbs_and_roles(pgconn) -> Tuple[List[str], List[str]]:\n    <IND>compiler = edbcompiler.Compiler({})\n    await compiler.ensure_initialized(pgconn)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]