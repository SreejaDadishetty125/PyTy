[
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:74:25 Unbound name [10]: Name `List` is used but not defined in the current scope.",
    "message": " Name `List` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 74,
    "warning_line": "    def run(self, input: List(Sentence)) -> MatrixContinuousDense():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:74:25 Invalid type [31]: Expression `List(autogoal.kb.Sentence)` is not a valid type.",
    "message": " Expression `List(autogoal.kb.Sentence)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 74,
    "warning_line": "    def run(self, input: List(Sentence)) -> MatrixContinuousDense():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:74:44 Invalid type [31]: Expression `autogoal.kb.MatrixContinuousDense()` is not a valid type.",
    "message": " Expression `autogoal.kb.MatrixContinuousDense()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 74,
    "warning_line": "    def run(self, input: List(Sentence)) -> MatrixContinuousDense():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:153:25 Invalid type [31]: Expression `autogoal.kb.Word($parameter$domain = \"general\", $parameter$language = \"english\")` is not a valid type.",
    "message": " Expression `autogoal.kb.Word($parameter$domain = \"general\", $parameter$language = \"english\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 153,
    "warning_line": "    def run(self, input: Word(domain=\"general\", language=\"english\")) -> Synset():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:153:72 Unbound name [10]: Name `Synset` is used but not defined in the current scope.",
    "message": " Name `Synset` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 153,
    "warning_line": "    def run(self, input: Word(domain=\"general\", language=\"english\")) -> Synset():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:153:72 Invalid type [31]: Expression `Synset()` is not a valid type.",
    "message": " Expression `Synset()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 153,
    "warning_line": "    def run(self, input: Word(domain=\"general\", language=\"english\")) -> Synset():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:189:25 Invalid type [31]: Expression `Synset($parameter$domain = \"general\", $parameter$language = \"english\")` is not a valid type.",
    "message": " Expression `Synset($parameter$domain = \"general\", $parameter$language = \"english\")` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 189,
    "warning_line": "    def run(self, input: Synset(domain=\"general\", language=\"english\")) -> Sentiment():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:189:74 Unbound name [10]: Name `Sentiment` is used but not defined in the current scope.",
    "message": " Name `Sentiment` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 189,
    "warning_line": "    def run(self, input: Synset(domain=\"general\", language=\"english\")) -> Sentiment():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:189:74 Invalid type [31]: Expression `Sentiment()` is not a valid type.",
    "message": " Expression `Sentiment()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 189,
    "warning_line": "    def run(self, input: Synset(domain=\"general\", language=\"english\")) -> Sentiment():"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:211:25 Invalid type [31]: Expression `List(List(autogoal.kb.Postag()))` is not a valid type.",
    "message": " Expression `List(List(autogoal.kb.Postag()))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 211,
    "warning_line": "    def run(self, input: List(List(Postag()))) -> List(List(Chunktag())):"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:211:50 Invalid type [31]: Expression `List(List(autogoal.kb.Chunktag()))` is not a valid type.",
    "message": " Expression `List(List(autogoal.kb.Chunktag()))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 211,
    "warning_line": "    def run(self, input: List(List(Postag()))) -> List(List(Chunktag())):"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:219:34 Invalid type [31]: Expression `autogoal.kb.algorithm(autogoal.kb.Seq[autogoal.kb.Word], List(autogoal.kb.Postag()))` is not a valid type.",
    "message": " Expression `autogoal.kb.algorithm(autogoal.kb.Seq[autogoal.kb.Word], List(autogoal.kb.Postag()))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 219,
    "warning_line": "        inner_trained_pos_tagger: algorithm(Seq[Word], List(Postag())),"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:220:23 Invalid type [31]: Expression `autogoal.kb.algorithm(List(List(autogoal.kb.Postag())), List(List(autogoal.kb.Chunktag())))` is not a valid type.",
    "message": " Expression `autogoal.kb.algorithm(List(List(autogoal.kb.Postag())), List(List(autogoal.kb.Chunktag())))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 220,
    "warning_line": "        inner_chunker: algorithm(List(List(Postag())), List(List(Chunktag())))"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:278:25 Invalid type [31]: Expression `List(autogoal.kb.Seq[autogoal.kb.Word])` is not a valid type.",
    "message": " Expression `List(autogoal.kb.Seq[autogoal.kb.Word])` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 278,
    "warning_line": "    def run(self, input: List(Seq[Word])) -> List(List(Chunktag())):"
  },
  {
    "project": "autogoal/autogoal",
    "commit": "d84dc4719a147f5fffbc1f666709ba0c5f2707b9",
    "filename": "autogoal/contrib/nltk/_manual.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/autogoal-autogoal/autogoal/contrib/nltk/_manual.py",
    "file_hunks_size": 7,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "autogoal/contrib/nltk/_manual.py:278:45 Invalid type [31]: Expression `List(List(autogoal.kb.Chunktag()))` is not a valid type.",
    "message": " Expression `List(List(autogoal.kb.Chunktag()))` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 278,
    "warning_line": "    def run(self, input: List(Seq[Word])) -> List(List(Chunktag())):"
  }
]