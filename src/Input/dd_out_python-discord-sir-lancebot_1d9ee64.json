[
  {
    "project": "python-discord/sir-lancebot",
    "commit": "1d9ee64755736b715896e90c9b359b490f08e547",
    "filename": "bot/exts/evergreen/fun.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-discord-sir-lancebot/bot/exts/evergreen/fun.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bot/exts/evergreen/fun.py:127:20 Incompatible return type [7]: Expected `str` but got `typing.Generator[str, None, None]`.",
    "message": " Expected `str` but got `typing.Generator[str, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 127,
    "warning_line": "                    yield char",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Callable, Tuple, Union\n\n",
        "source_code_len": 68,
        "target_code": "from pathlib import Path\nfrom typing import Callable, Iterable, Tuple, Union\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -5,3 +5,3 @@\n from pathlib import Path\n-from typing import Callable, Tuple, Union\n+from typing import Callable, Iterable, Tuple, Union\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Callable, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Callable, Iterable, Tuple, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        def caesar_func(text: str) -> str:\n            \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "source_code_len": 116,
        "target_code": "        \"\"\"\n        def caesar_func(text: str) -> Iterable[str]:\n            \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "target_code_len": 126,
        "diff_format": "@@ -122,3 +122,3 @@\n         \"\"\"\n-        def caesar_func(text: str) -> str:\n+        def caesar_func(text: str) -> Iterable[str]:\n             \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        def caesar_func(text: str) -> str:\n            <IND>\"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "target_code_with_indent": "\n        def caesar_func(text: str) -> Iterable[str]:\n            <IND>\"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n"
      }
    ]
  },
  {
    "project": "python-discord/sir-lancebot",
    "commit": "1d9ee64755736b715896e90c9b359b490f08e547",
    "filename": "bot/exts/evergreen/fun.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-discord-sir-lancebot/bot/exts/evergreen/fun.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "bot/exts/evergreen/fun.py:130:16 Incompatible return type [7]: Expected `str` but got `typing.Generator[str, None, None]`.",
    "message": " Expected `str` but got `typing.Generator[str, None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 130,
    "warning_line": "                yield chr((ord(char) - case_start + offset) % 26 + case_start)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from pathlib import Path\nfrom typing import Callable, Tuple, Union\n\n",
        "source_code_len": 68,
        "target_code": "from pathlib import Path\nfrom typing import Callable, Iterable, Tuple, Union\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -5,3 +5,3 @@\n from pathlib import Path\n-from typing import Callable, Tuple, Union\n+from typing import Callable, Iterable, Tuple, Union\n \n",
        "source_code_with_indent": "from pathlib import Path\nfrom typing import Callable, Tuple, Union\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from pathlib import Path\nfrom typing import Callable, Iterable, Tuple, Union\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        def caesar_func(text: str) -> str:\n            \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "source_code_len": 116,
        "target_code": "        \"\"\"\n        def caesar_func(text: str) -> Iterable[str]:\n            \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "target_code_len": 126,
        "diff_format": "@@ -122,3 +122,3 @@\n         \"\"\"\n-        def caesar_func(text: str) -> str:\n+        def caesar_func(text: str) -> Iterable[str]:\n             \"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        def caesar_func(text: str) -> str:\n            <IND>\"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n",
        "target_code_with_indent": "\n        def caesar_func(text: str) -> Iterable[str]:\n            <IND>\"\"\"Implements a lazy Caesar Cipher algorithm.\"\"\"\n"
      }
    ]
  }
]