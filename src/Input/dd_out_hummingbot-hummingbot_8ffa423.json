[
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_helpers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_helpers.py:215:4 Incompatible return type [7]: Expected `str` but got `None`.",
    "message": " Expected `str` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 215,
    "warning_line": "    return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef validate_strategy_file(file_path: str) -> str:\n    if not exists(file_path):\n",
        "source_code_len": 82,
        "target_code": "\ndef validate_strategy_file(file_path: str) -> Optional[str]:\n    if not exists(file_path):\n",
        "target_code_len": 92,
        "diff_format": "@@ -206,3 +206,3 @@\n \n-def validate_strategy_file(file_path: str) -> str:\n+def validate_strategy_file(file_path: str) -> Optional[str]:\n     if not exists(file_path):\n",
        "source_code_with_indent": "\n<DED>def validate_strategy_file(file_path: str) -> str:\n    <IND>if not exists(file_path):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def validate_strategy_file(file_path: str) -> Optional[str]:\n    <IND>if not exists(file_path):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_validators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_validators.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_validators.py:12:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 12,
    "warning_line": "        return f\"Invalid exchange, please choose value from {EXCHANGES}\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\n\n",
        "source_code_len": 29,
        "target_code": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_len": 57,
        "diff_format": "@@ -6,2 +6,3 @@\n from decimal import Decimal\n+from typing import Optional\n \n",
        "source_code_with_indent": "from decimal import Decimal\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# Validators\ndef validate_exchange(value: str) -> str:\n    if value not in EXCHANGES:\n",
        "source_code_len": 86,
        "target_code": "# Validators\ndef validate_exchange(value: str) -> Optional[str]:\n    if value not in EXCHANGES:\n",
        "target_code_len": 96,
        "diff_format": "@@ -9,3 +10,3 @@\n # Validators\n-def validate_exchange(value: str) -> str:\n+def validate_exchange(value: str) -> Optional[str]:\n     if value not in EXCHANGES:\n",
        "source_code_with_indent": "# Validators\ndef validate_exchange(value: str) -> str:\n    <IND>if value not in EXCHANGES:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# Validators\ndef validate_exchange(value: str) -> Optional[str]:\n    <IND>if value not in EXCHANGES:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_validators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_validators.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_validators.py:17:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 17,
    "warning_line": "        return f\"Invalid strategy, please choose value from {STRATEGIES}\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\n\n",
        "source_code_len": 29,
        "target_code": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_len": 57,
        "diff_format": "@@ -6,2 +6,3 @@\n from decimal import Decimal\n+from typing import Optional\n \n",
        "source_code_with_indent": "from decimal import Decimal\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef validate_strategy(value: str) -> str:\n    if value not in STRATEGIES:\n",
        "source_code_len": 75,
        "target_code": "\ndef validate_strategy(value: str) -> Optional[str]:\n    if value not in STRATEGIES:\n",
        "target_code_len": 85,
        "diff_format": "@@ -14,3 +15,3 @@\n \n-def validate_strategy(value: str) -> str:\n+def validate_strategy(value: str) -> Optional[str]:\n     if value not in STRATEGIES:\n",
        "source_code_with_indent": "\n<DED><DED>def validate_strategy(value: str) -> str:\n    <IND>if value not in STRATEGIES:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def validate_strategy(value: str) -> Optional[str]:\n    <IND>if value not in STRATEGIES:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_validators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_validators.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_validators.py:40:12 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 40,
    "warning_line": "            return f\"Value has to be less than {max_value}.\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\n\n",
        "source_code_len": 29,
        "target_code": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_len": 57,
        "diff_format": "@@ -6,2 +6,3 @@\n from decimal import Decimal\n+from typing import Optional\n \n",
        "source_code_with_indent": "from decimal import Decimal\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> str:\n    try:\n",
        "source_code_len": 121,
        "target_code": "\ndef validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> Optional[str]:\n    try:\n",
        "target_code_len": 131,
        "diff_format": "@@ -19,3 +20,3 @@\n \n-def validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> str:\n+def validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> Optional[str]:\n     try:\n",
        "source_code_with_indent": "\n<DED><DED>def validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> str:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def validate_decimal(value: str, min_value: Decimal = None, max_value: Decimal = None, inclusive=True) -> Optional[str]:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_validators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_validators.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_validators.py:49:12 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 49,
    "warning_line": "            return f\"{value} is not an active market on {market}.\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\n\n",
        "source_code_len": 29,
        "target_code": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_len": 57,
        "diff_format": "@@ -6,2 +6,3 @@\n from decimal import Decimal\n+from typing import Optional\n \n",
        "source_code_with_indent": "from decimal import Decimal\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef validate_market_trading_pair(market: str, value: str) -> str:\n    # Since trading pair validation and autocomplete are UI optimizations that do not impact bot performances,\n",
        "source_code_len": 178,
        "target_code": "\ndef validate_market_trading_pair(market: str, value: str) -> Optional[str]:\n    # Since trading pair validation and autocomplete are UI optimizations that do not impact bot performances,\n",
        "target_code_len": 188,
        "diff_format": "@@ -42,3 +43,3 @@\n \n-def validate_market_trading_pair(market: str, value: str) -> str:\n+def validate_market_trading_pair(market: str, value: str) -> Optional[str]:\n     # Since trading pair validation and autocomplete are UI optimizations that do not impact bot performances,\n",
        "source_code_with_indent": "\n<DED><DED><DED>def validate_market_trading_pair(market: str, value: str) -> str:\n    # Since trading pair validation and autocomplete are UI optimizations that do not impact bot performances,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED><DED>def validate_market_trading_pair(market: str, value: str) -> Optional[str]:\n    # Since trading pair validation and autocomplete are UI optimizations that do not impact bot performances,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "hummingbot/hummingbot",
    "commit": "8ffa423dcd19501bab19d918b4b9a6ebba4b2af2",
    "filename": "hummingbot/client/config/config_validators.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/hummingbot-hummingbot/hummingbot/client/config/config_validators.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "hummingbot/client/config/config_validators.py:55:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 55,
    "warning_line": "        return f\"Invalid value, please choose value from {valid_values}\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from decimal import Decimal\n\n",
        "source_code_len": 29,
        "target_code": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_len": 57,
        "diff_format": "@@ -6,2 +6,3 @@\n from decimal import Decimal\n+from typing import Optional\n \n",
        "source_code_with_indent": "from decimal import Decimal\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from decimal import Decimal\nfrom typing import Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef validate_bool(value: str) -> str:\n    valid_values = ('true', 'yes', 'y', 'false', 'no', 'n')\n",
        "source_code_len": 99,
        "target_code": "\ndef validate_bool(value: str) -> Optional[str]:\n    valid_values = ('true', 'yes', 'y', 'false', 'no', 'n')\n",
        "target_code_len": 109,
        "diff_format": "@@ -51,3 +52,3 @@\n \n-def validate_bool(value: str) -> str:\n+def validate_bool(value: str) -> Optional[str]:\n     valid_values = ('true', 'yes', 'y', 'false', 'no', 'n')\n",
        "source_code_with_indent": "\n<DED><DED><DED>def validate_bool(value: str) -> str:\n    <IND>valid_values = ('true', 'yes', 'y', 'false', 'no', 'n')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED><DED>def validate_bool(value: str) -> Optional[str]:\n    <IND>valid_values = ('true', 'yes', 'y', 'false', 'no', 'n')\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]