[
  {
    "project": "python-poetry/poetry",
    "commit": "269e91c65e26edb382a8d3e50d96c1a83001012d",
    "filename": "poetry/version/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-poetry-poetry/poetry/version/utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "poetry/version/utils.py:30:0 Incompatible variable type [9]: Infinity is declared to have type `typing.Type[Infinity]` but is used as type `Infinity`.",
    "message": " Infinity is declared to have type `typing.Type[Infinity]` but is used as type `Infinity`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 30,
    "warning_line": "Infinity = Infinity()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\nInfinity = Infinity()\n\n",
        "source_code_len": 24,
        "target_code": "\nInfinity = Infinity()  # type: ignore\n\n",
        "target_code_len": 40,
        "diff_format": "@@ -29,3 +29,3 @@\n \n-Infinity = Infinity()\n+Infinity = Infinity()  # type: ignore\n \n",
        "source_code_with_indent": "\n<DED><DED>Infinity = Infinity()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>Infinity = Infinity()  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-poetry/poetry",
    "commit": "269e91c65e26edb382a8d3e50d96c1a83001012d",
    "filename": "poetry/version/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-poetry-poetry/poetry/version/utils.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "poetry/version/utils.py:62:0 Incompatible variable type [9]: NegativeInfinity is declared to have type `typing.Type[NegativeInfinity]` but is used as type `NegativeInfinity`.",
    "message": " NegativeInfinity is declared to have type `typing.Type[NegativeInfinity]` but is used as type `NegativeInfinity`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 62,
    "warning_line": "NegativeInfinity = NegativeInfinity()",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\nNegativeInfinity = NegativeInfinity()\n",
        "source_code_len": 39,
        "target_code": "\nNegativeInfinity = NegativeInfinity()  # type: ignore\n",
        "target_code_len": 55,
        "diff_format": "@@ -61,2 +61,2 @@\n \n-NegativeInfinity = NegativeInfinity()\n+NegativeInfinity = NegativeInfinity()  # type: ignore\n",
        "source_code_with_indent": "\n<DED><DED>NegativeInfinity = NegativeInfinity()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>NegativeInfinity = NegativeInfinity()  # type: ignore\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]