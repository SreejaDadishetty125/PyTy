[
  {
    "project": "karlicoss/HPI",
    "commit": "e9152d055c46b0bdf6f4a7b03a0e15a935e3a9ad",
    "filename": "my/coding/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlicoss-HPI/my/coding/github.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "my/coding/github.py:44:8 Incompatible return type [7]: Expected `Tuple[str, Optional[str]]` but got `Tuple[str, None, str]`.",
    "message": " Expected `Tuple[str, Optional[str]]` but got `Tuple[str, None, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 44,
    "warning_line": "        return f\"created {rname}\", None, f'created_{rname}'",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    tp = e['type']\n",
        "source_code_len": 101,
        "target_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    tp = e['type']\n",
        "target_code_len": 116,
        "diff_format": "@@ -30,3 +30,3 @@\n # TODO split further, title too\n-def _get_summary(e) -> Tuple[str, Optional[str]]:\n+def _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n     tp = e['type']\n",
        "source_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    <IND>tp = e['type']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    <IND>tp = e['type']\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None\n    elif tp == 'CreateEvent':\n",
        "source_code_len": 257,
        "target_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None, None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None, None\n    elif tp == 'CreateEvent':\n",
        "target_code_len": 275,
        "diff_format": "@@ -36,7 +36,7 @@\n         url = e['payload']['forkee']['html_url']\n-        return f\"forked {rname}\", url\n+        return f\"forked {rname}\", url, None\n     elif tp == 'PushEvent':\n-        return f\"pushed to {rname}\", None\n+        return f\"pushed to {rname}\", None, None\n     elif tp == 'WatchEvent':\n-        return f\"watching {rname}\", None\n+        return f\"watching {rname}\", None, None\n     elif tp == 'CreateEvent':\n",
        "source_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None\n    <DED>elif tp == 'CreateEvent':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None, None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None, None\n    <DED>elif tp == 'CreateEvent':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    elif tp == \"IssueCommentEvent\":\n",
        "source_code_len": 112,
        "target_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    elif tp == \"IssueCommentEvent\":\n",
        "target_code_len": 118,
        "diff_format": "@@ -55,3 +55,3 @@\n         title = iss['title']\n-        return f\"{action} issue {title}\", link\n+        return f\"{action} issue {title}\", link, None\n     elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    elif tp in (\n",
        "source_code_len": 97,
        "target_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    elif tp in (\n",
        "target_code_len": 103,
        "diff_format": "@@ -67,3 +67,3 @@\n         link = rel['html_url']\n-        return f\"{action} {rname} [{tag}]\", link\n+        return f\"{action} {rname} [{tag}]\", link, None\n     elif tp in (\n",
        "source_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    <DED>elif tp in (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    <DED>elif tp in (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ):\n        return tp, None # TODO ???\n    else:\n        return tp, None\n\n",
        "source_code_len": 77,
        "target_code": "    ):\n        return tp, None, None # TODO ???\n    else:\n        return tp, None, None\n\n",
        "target_code_len": 89,
        "diff_format": "@@ -72,5 +72,5 @@\n     ):\n-        return tp, None # TODO ???\n+        return tp, None, None # TODO ???\n     else:\n-        return tp, None\n+        return tp, None, None\n \n",
        "source_code_with_indent": "    ):\n        <IND>return tp, None # TODO ???\n    <DED>else:\n        <IND>return tp, None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ):\n        <IND>return tp, None, None # TODO ???\n    <DED>else:\n        <IND>return tp, None, None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "karlicoss/HPI",
    "commit": "e9152d055c46b0bdf6f4a7b03a0e15a935e3a9ad",
    "filename": "my/coding/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlicoss-HPI/my/coding/github.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "my/coding/github.py:50:8 Incompatible return type [7]: Expected `Tuple[str, Optional[str]]` but got `Tuple[str, typing.Any, str]`.",
    "message": " Expected `Tuple[str, Optional[str]]` but got `Tuple[str, typing.Any, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 50,
    "warning_line": "        return f\"{action} PR {title}\", link, f'pull_request_{link}'",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    tp = e['type']\n",
        "source_code_len": 101,
        "target_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    tp = e['type']\n",
        "target_code_len": 116,
        "diff_format": "@@ -30,3 +30,3 @@\n # TODO split further, title too\n-def _get_summary(e) -> Tuple[str, Optional[str]]:\n+def _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n     tp = e['type']\n",
        "source_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    <IND>tp = e['type']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    <IND>tp = e['type']\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None\n    elif tp == 'CreateEvent':\n",
        "source_code_len": 257,
        "target_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None, None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None, None\n    elif tp == 'CreateEvent':\n",
        "target_code_len": 275,
        "diff_format": "@@ -36,7 +36,7 @@\n         url = e['payload']['forkee']['html_url']\n-        return f\"forked {rname}\", url\n+        return f\"forked {rname}\", url, None\n     elif tp == 'PushEvent':\n-        return f\"pushed to {rname}\", None\n+        return f\"pushed to {rname}\", None, None\n     elif tp == 'WatchEvent':\n-        return f\"watching {rname}\", None\n+        return f\"watching {rname}\", None, None\n     elif tp == 'CreateEvent':\n",
        "source_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None\n    <DED>elif tp == 'CreateEvent':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None, None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None, None\n    <DED>elif tp == 'CreateEvent':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    elif tp == \"IssueCommentEvent\":\n",
        "source_code_len": 112,
        "target_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    elif tp == \"IssueCommentEvent\":\n",
        "target_code_len": 118,
        "diff_format": "@@ -55,3 +55,3 @@\n         title = iss['title']\n-        return f\"{action} issue {title}\", link\n+        return f\"{action} issue {title}\", link, None\n     elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    elif tp in (\n",
        "source_code_len": 97,
        "target_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    elif tp in (\n",
        "target_code_len": 103,
        "diff_format": "@@ -67,3 +67,3 @@\n         link = rel['html_url']\n-        return f\"{action} {rname} [{tag}]\", link\n+        return f\"{action} {rname} [{tag}]\", link, None\n     elif tp in (\n",
        "source_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    <DED>elif tp in (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    <DED>elif tp in (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ):\n        return tp, None # TODO ???\n    else:\n        return tp, None\n\n",
        "source_code_len": 77,
        "target_code": "    ):\n        return tp, None, None # TODO ???\n    else:\n        return tp, None, None\n\n",
        "target_code_len": 89,
        "diff_format": "@@ -72,5 +72,5 @@\n     ):\n-        return tp, None # TODO ???\n+        return tp, None, None # TODO ???\n     else:\n-        return tp, None\n+        return tp, None, None\n \n",
        "source_code_with_indent": "    ):\n        <IND>return tp, None # TODO ???\n    <DED>else:\n        <IND>return tp, None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ):\n        <IND>return tp, None, None # TODO ???\n    <DED>else:\n        <IND>return tp, None, None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "karlicoss/HPI",
    "commit": "e9152d055c46b0bdf6f4a7b03a0e15a935e3a9ad",
    "filename": "my/coding/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlicoss-HPI/my/coding/github.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "my/coding/github.py:62:8 Incompatible return type [7]: Expected `Tuple[str, Optional[str]]` but got `Tuple[str, typing.Any, str]`.",
    "message": " Expected `Tuple[str, Optional[str]]` but got `Tuple[str, typing.Any, str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 62,
    "warning_line": "        return f\"commented on issue {title}\", link, f'issue_comment_' + link",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    tp = e['type']\n",
        "source_code_len": 101,
        "target_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    tp = e['type']\n",
        "target_code_len": 116,
        "diff_format": "@@ -30,3 +30,3 @@\n # TODO split further, title too\n-def _get_summary(e) -> Tuple[str, Optional[str]]:\n+def _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n     tp = e['type']\n",
        "source_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    <IND>tp = e['type']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    <IND>tp = e['type']\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None\n    elif tp == 'CreateEvent':\n",
        "source_code_len": 257,
        "target_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None, None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None, None\n    elif tp == 'CreateEvent':\n",
        "target_code_len": 275,
        "diff_format": "@@ -36,7 +36,7 @@\n         url = e['payload']['forkee']['html_url']\n-        return f\"forked {rname}\", url\n+        return f\"forked {rname}\", url, None\n     elif tp == 'PushEvent':\n-        return f\"pushed to {rname}\", None\n+        return f\"pushed to {rname}\", None, None\n     elif tp == 'WatchEvent':\n-        return f\"watching {rname}\", None\n+        return f\"watching {rname}\", None, None\n     elif tp == 'CreateEvent':\n",
        "source_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None\n    <DED>elif tp == 'CreateEvent':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None, None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None, None\n    <DED>elif tp == 'CreateEvent':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    elif tp == \"IssueCommentEvent\":\n",
        "source_code_len": 112,
        "target_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    elif tp == \"IssueCommentEvent\":\n",
        "target_code_len": 118,
        "diff_format": "@@ -55,3 +55,3 @@\n         title = iss['title']\n-        return f\"{action} issue {title}\", link\n+        return f\"{action} issue {title}\", link, None\n     elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    elif tp in (\n",
        "source_code_len": 97,
        "target_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    elif tp in (\n",
        "target_code_len": 103,
        "diff_format": "@@ -67,3 +67,3 @@\n         link = rel['html_url']\n-        return f\"{action} {rname} [{tag}]\", link\n+        return f\"{action} {rname} [{tag}]\", link, None\n     elif tp in (\n",
        "source_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    <DED>elif tp in (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    <DED>elif tp in (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ):\n        return tp, None # TODO ???\n    else:\n        return tp, None\n\n",
        "source_code_len": 77,
        "target_code": "    ):\n        return tp, None, None # TODO ???\n    else:\n        return tp, None, None\n\n",
        "target_code_len": 89,
        "diff_format": "@@ -72,5 +72,5 @@\n     ):\n-        return tp, None # TODO ???\n+        return tp, None, None # TODO ???\n     else:\n-        return tp, None\n+        return tp, None, None\n \n",
        "source_code_with_indent": "    ):\n        <IND>return tp, None # TODO ???\n    <DED>else:\n        <IND>return tp, None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ):\n        <IND>return tp, None, None # TODO ???\n    <DED>else:\n        <IND>return tp, None, None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "karlicoss/HPI",
    "commit": "e9152d055c46b0bdf6f4a7b03a0e15a935e3a9ad",
    "filename": "my/coding/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlicoss-HPI/my/coding/github.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "my/coding/github.py:168:8 Incompatible parameter type [6]: Expected `str` for 2nd parameter `summary` to call `Event.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd parameter `summary` to call `Event.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 168,
    "warning_line": "        summary=summary,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    tp = e['type']\n",
        "source_code_len": 101,
        "target_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    tp = e['type']\n",
        "target_code_len": 116,
        "diff_format": "@@ -30,3 +30,3 @@\n # TODO split further, title too\n-def _get_summary(e) -> Tuple[str, Optional[str]]:\n+def _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n     tp = e['type']\n",
        "source_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    <IND>tp = e['type']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    <IND>tp = e['type']\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None\n    elif tp == 'CreateEvent':\n",
        "source_code_len": 257,
        "target_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None, None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None, None\n    elif tp == 'CreateEvent':\n",
        "target_code_len": 275,
        "diff_format": "@@ -36,7 +36,7 @@\n         url = e['payload']['forkee']['html_url']\n-        return f\"forked {rname}\", url\n+        return f\"forked {rname}\", url, None\n     elif tp == 'PushEvent':\n-        return f\"pushed to {rname}\", None\n+        return f\"pushed to {rname}\", None, None\n     elif tp == 'WatchEvent':\n-        return f\"watching {rname}\", None\n+        return f\"watching {rname}\", None, None\n     elif tp == 'CreateEvent':\n",
        "source_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None\n    <DED>elif tp == 'CreateEvent':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None, None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None, None\n    <DED>elif tp == 'CreateEvent':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    elif tp == \"IssueCommentEvent\":\n",
        "source_code_len": 112,
        "target_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    elif tp == \"IssueCommentEvent\":\n",
        "target_code_len": 118,
        "diff_format": "@@ -55,3 +55,3 @@\n         title = iss['title']\n-        return f\"{action} issue {title}\", link\n+        return f\"{action} issue {title}\", link, None\n     elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    elif tp in (\n",
        "source_code_len": 97,
        "target_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    elif tp in (\n",
        "target_code_len": 103,
        "diff_format": "@@ -67,3 +67,3 @@\n         link = rel['html_url']\n-        return f\"{action} {rname} [{tag}]\", link\n+        return f\"{action} {rname} [{tag}]\", link, None\n     elif tp in (\n",
        "source_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    <DED>elif tp in (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    <DED>elif tp in (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ):\n        return tp, None # TODO ???\n    else:\n        return tp, None\n\n",
        "source_code_len": 77,
        "target_code": "    ):\n        return tp, None, None # TODO ???\n    else:\n        return tp, None, None\n\n",
        "target_code_len": 89,
        "diff_format": "@@ -72,5 +72,5 @@\n     ):\n-        return tp, None # TODO ???\n+        return tp, None, None # TODO ???\n     else:\n-        return tp, None\n+        return tp, None, None\n \n",
        "source_code_with_indent": "    ):\n        <IND>return tp, None # TODO ???\n    <DED>else:\n        <IND>return tp, None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ):\n        <IND>return tp, None, None # TODO ???\n    <DED>else:\n        <IND>return tp, None, None\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def _parse_event(d: Dict) -> Event:\n    xx = _get_summary(d)\n    if len(xx) != 3:\n        xx += (d['id'], )\n    summary, link, eid = xx\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_len": 199,
        "target_code": "def _parse_event(d: Dict) -> Event:\n    summary, link, eid = _get_summary(d)\n    if eid is None:\n        eid = d['id']\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "target_code_len": 182,
        "diff_format": "@@ -160,6 +160,5 @@\n def _parse_event(d: Dict) -> Event:\n-    xx = _get_summary(d)\n-    if len(xx) != 3:\n-        xx += (d['id'], )\n-    summary, link, eid = xx\n+    summary, link, eid = _get_summary(d)\n+    if eid is None:\n+        eid = d['id']\n     body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_with_indent": "<DED>def _parse_event(d: Dict) -> Event:\n    <IND>xx = _get_summary(d)\n    if len(xx) != 3:\n        <IND>xx += (d['id'], )\n    <DED>summary, link, eid = xx\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def _parse_event(d: Dict) -> Event:\n    <IND>summary, link, eid = _get_summary(d)\n    if eid is None:\n        <IND>eid = d['id']\n    <DED>body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "karlicoss/HPI",
    "commit": "e9152d055c46b0bdf6f4a7b03a0e15a935e3a9ad",
    "filename": "my/coding/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/karlicoss-HPI/my/coding/github.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "my/coding/github.py:170:8 Incompatible parameter type [6]: Expected `str` for 4th parameter `eid` to call `Event.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 4th parameter `eid` to call `Event.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 170,
    "warning_line": "        eid=eid,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    tp = e['type']\n",
        "source_code_len": 101,
        "target_code": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    tp = e['type']\n",
        "target_code_len": 116,
        "diff_format": "@@ -30,3 +30,3 @@\n # TODO split further, title too\n-def _get_summary(e) -> Tuple[str, Optional[str]]:\n+def _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n     tp = e['type']\n",
        "source_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str]]:\n    <IND>tp = e['type']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "# TODO split further, title too\ndef _get_summary(e) -> Tuple[str, Optional[str], Optional[str]]:\n    <IND>tp = e['type']\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None\n    elif tp == 'CreateEvent':\n",
        "source_code_len": 257,
        "target_code": "        url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    elif tp == 'PushEvent':\n        return f\"pushed to {rname}\", None, None\n    elif tp == 'WatchEvent':\n        return f\"watching {rname}\", None, None\n    elif tp == 'CreateEvent':\n",
        "target_code_len": 275,
        "diff_format": "@@ -36,7 +36,7 @@\n         url = e['payload']['forkee']['html_url']\n-        return f\"forked {rname}\", url\n+        return f\"forked {rname}\", url, None\n     elif tp == 'PushEvent':\n-        return f\"pushed to {rname}\", None\n+        return f\"pushed to {rname}\", None, None\n     elif tp == 'WatchEvent':\n-        return f\"watching {rname}\", None\n+        return f\"watching {rname}\", None, None\n     elif tp == 'CreateEvent':\n",
        "source_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None\n    <DED>elif tp == 'CreateEvent':\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>url = e['payload']['forkee']['html_url']\n        return f\"forked {rname}\", url, None\n    <DED>elif tp == 'PushEvent':\n        <IND>return f\"pushed to {rname}\", None, None\n    <DED>elif tp == 'WatchEvent':\n        <IND>return f\"watching {rname}\", None, None\n    <DED>elif tp == 'CreateEvent':\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    elif tp == \"IssueCommentEvent\":\n",
        "source_code_len": 112,
        "target_code": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    elif tp == \"IssueCommentEvent\":\n",
        "target_code_len": 118,
        "diff_format": "@@ -55,3 +55,3 @@\n         title = iss['title']\n-        return f\"{action} issue {title}\", link\n+        return f\"{action} issue {title}\", link, None\n     elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        title = iss['title']\n        return f\"{action} issue {title}\", link, None\n    <DED>elif tp == \"IssueCommentEvent\":\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    elif tp in (\n",
        "source_code_len": 97,
        "target_code": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    elif tp in (\n",
        "target_code_len": 103,
        "diff_format": "@@ -67,3 +67,3 @@\n         link = rel['html_url']\n-        return f\"{action} {rname} [{tag}]\", link\n+        return f\"{action} {rname} [{tag}]\", link, None\n     elif tp in (\n",
        "source_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link\n    <DED>elif tp in (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        link = rel['html_url']\n        return f\"{action} {rname} [{tag}]\", link, None\n    <DED>elif tp in (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ):\n        return tp, None # TODO ???\n    else:\n        return tp, None\n\n",
        "source_code_len": 77,
        "target_code": "    ):\n        return tp, None, None # TODO ???\n    else:\n        return tp, None, None\n\n",
        "target_code_len": 89,
        "diff_format": "@@ -72,5 +72,5 @@\n     ):\n-        return tp, None # TODO ???\n+        return tp, None, None # TODO ???\n     else:\n-        return tp, None\n+        return tp, None, None\n \n",
        "source_code_with_indent": "    ):\n        <IND>return tp, None # TODO ???\n    <DED>else:\n        <IND>return tp, None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ):\n        <IND>return tp, None, None # TODO ???\n    <DED>else:\n        <IND>return tp, None, None\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def _parse_event(d: Dict) -> Event:\n    xx = _get_summary(d)\n    if len(xx) != 3:\n        xx += (d['id'], )\n    summary, link, eid = xx\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_len": 199,
        "target_code": "def _parse_event(d: Dict) -> Event:\n    summary, link, eid = _get_summary(d)\n    if eid is None:\n        eid = d['id']\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "target_code_len": 182,
        "diff_format": "@@ -160,6 +160,5 @@\n def _parse_event(d: Dict) -> Event:\n-    xx = _get_summary(d)\n-    if len(xx) != 3:\n-        xx += (d['id'], )\n-    summary, link, eid = xx\n+    summary, link, eid = _get_summary(d)\n+    if eid is None:\n+        eid = d['id']\n     body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_with_indent": "<DED>def _parse_event(d: Dict) -> Event:\n    <IND>xx = _get_summary(d)\n    if len(xx) != 3:\n        <IND>xx += (d['id'], )\n    <DED>summary, link, eid = xx\n    body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>def _parse_event(d: Dict) -> Event:\n    <IND>summary, link, eid = _get_summary(d)\n    if eid is None:\n        <IND>eid = d['id']\n    <DED>body = d.get('payload', {}).get('comment', {}).get('body')\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]