[
  {
    "project": "QCoDeS/Qcodes",
    "commit": "4babe012f72f2e9c91f6be5c75d9471134f050ff",
    "filename": "qcodes/tests/dataset/test_guid_helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/QCoDeS-Qcodes/qcodes/tests/dataset/test_guid_helpers.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qcodes/tests/dataset/test_guid_helpers.py:64:18 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_typeshed.SupportsLessThanT (bound to _typeshed.SupportsLessThan)]]` for 1st positional only parameter to call `sorted` but got `typing.Optional[typing.Tuple[str, ...]]`.",
    "message": " Expected `typing.Iterable[Variable[_typeshed.SupportsLessThanT (bound to _typeshed.SupportsLessThan)]]` for 1st positional only parameter to call `sorted` but got `typing.Optional[typing.Tuple[str, ...]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 64,
    "warning_line": "    assert sorted(guids_from_list_str(str(set(guids)))) == sorted(tuple(guids))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    assert guids_from_list_str(str([guids[0]])) == (guids[0],)\n    assert guids_from_list_str(str(tuple(guids))) == tuple(guids)\n    assert sorted(guids_from_list_str(str(set(guids)))) == sorted(tuple(guids))\n    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n\n",
        "source_code_len": 271,
        "target_code": "    assert guids_from_list_str(str([guids[0]])) == (guids[0],)\n    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n    assert guids_from_list_str(str(tuple(guids))) == tuple(guids)\n    extracted_guids = guids_from_list_str(str(set(guids)))\n    assert extracted_guids is not None\n    assert sorted(extracted_guids) == sorted(tuple(guids))\n\n",
        "target_code_len": 348,
        "diff_format": "@@ -62,5 +62,7 @@\n     assert guids_from_list_str(str([guids[0]])) == (guids[0],)\n+    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n     assert guids_from_list_str(str(tuple(guids))) == tuple(guids)\n-    assert sorted(guids_from_list_str(str(set(guids)))) == sorted(tuple(guids))\n-    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n+    extracted_guids = guids_from_list_str(str(set(guids)))\n+    assert extracted_guids is not None\n+    assert sorted(extracted_guids) == sorted(tuple(guids))\n \n",
        "source_code_with_indent": "    assert guids_from_list_str(str([guids[0]])) == (guids[0],)\n    assert guids_from_list_str(str(tuple(guids))) == tuple(guids)\n    assert sorted(guids_from_list_str(str(set(guids)))) == sorted(tuple(guids))\n    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    assert guids_from_list_str(str([guids[0]])) == (guids[0],)\n    assert guids_from_list_str(str(guids[0])) == (guids[0],)\n    assert guids_from_list_str(str(tuple(guids))) == tuple(guids)\n    extracted_guids = guids_from_list_str(str(set(guids)))\n    assert extracted_guids is not None\n    assert sorted(extracted_guids) == sorted(tuple(guids))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]