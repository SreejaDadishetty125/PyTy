[
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/cli/util/project.py",
    "min_patch_found": false,
    "full_warning_msg": "datumaro/cli/util/project.py:50:45 Incompatible parameter type [6]: Expected `Environment` for 3rd parameter `env` to call `Dataset.import_from` but got `Optional[Environment]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:610:12 Incompatible variable type [9]: categories is declared to have type `Union[Dict[AnnotationType, datumaro.components.annotation.Categories], List[str]]` but is used as type `None`.",
    "message": " categories is declared to have type `Union[Dict[AnnotationType, datumaro.components.annotation.Categories], List[str]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 610,
    "warning_line": "            categories: Union[CategoriesInfo, List[str]] = None,"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:611:12 Incompatible variable type [9]: env is declared to have type `Environment` but is used as type `None`.",
    "message": " env is declared to have type `Environment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 611,
    "warning_line": "            env: Environment = None):"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:635:12 Incompatible variable type [9]: env is declared to have type `Environment` but is used as type `None`.",
    "message": " env is declared to have type `Environment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 635,
    "warning_line": "            env: Environment = None) -> 'Dataset':"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:647:23 Incompatible variable type [9]: source is declared to have type `IExtractor` but is used as type `None`.",
    "message": " source is declared to have type `IExtractor` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 647,
    "warning_line": "    def __init__(self, source: IDataset = None,"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:648:12 Incompatible variable type [9]: categories is declared to have type `Dict[AnnotationType, datumaro.components.annotation.Categories]` but is used as type `None`.",
    "message": " categories is declared to have type `Dict[AnnotationType, datumaro.components.annotation.Categories]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 648,
    "warning_line": "            categories: CategoriesInfo = None, env: Environment = None):"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:648:47 Incompatible variable type [9]: env is declared to have type `Environment` but is used as type `None`.",
    "message": " env is declared to have type `Environment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 648,
    "warning_line": "            categories: CategoriesInfo = None, env: Environment = None):"
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:854:19 Incompatible variable type [9]: save_dir is declared to have type `str` but is used as type `None`.",
    "message": " save_dir is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 854,
    "warning_line": "    def save(self, save_dir: str = None, **kwargs):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def save(self, save_dir: str = None, **kwargs):\n        options = dict(self._options)\n",
        "source_code_len": 91,
        "target_code": "\n    def save(self, save_dir: Optional[str] = None, **kwargs) -> None:\n        options = dict(self._options)\n",
        "target_code_len": 109,
        "diff_format": "@@ -853,3 +857,3 @@\n \n-    def save(self, save_dir: str = None, **kwargs):\n+    def save(self, save_dir: Optional[str] = None, **kwargs) -> None:\n         options = dict(self._options)\n",
        "source_code_with_indent": "\n    <DED><DED>def save(self, save_dir: str = None, **kwargs):\n        <IND>options = dict(self._options)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def save(self, save_dir: Optional[str] = None, **kwargs) -> None:\n        <IND>options = dict(self._options)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:866:36 Incompatible variable type [9]: format is declared to have type `str` but is used as type `None`.",
    "message": " format is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 866,
    "warning_line": "    def import_from(cls, path: str, format: str = None, env: Environment = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def import_from(cls, path: str, format: str = None, env: Environment = None,\n            **kwargs) -> 'Dataset':\n        from datumaro.components.config_model import Source\n",
        "source_code_len": 194,
        "target_code": "    @classmethod\n    def import_from(cls, path: str, format: Optional[str] = None,\n            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n        from datumaro.components.config_model import Source\n",
        "target_code_len": 214,
        "diff_format": "@@ -865,4 +869,4 @@\n     @classmethod\n-    def import_from(cls, path: str, format: str = None, env: Environment = None,\n-            **kwargs) -> 'Dataset':\n+    def import_from(cls, path: str, format: Optional[str] = None,\n+            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n         from datumaro.components.config_model import Source\n",
        "source_code_with_indent": "    <DED>@classmethod\n    def import_from(cls, path: str, format: str = None, env: Environment = None,\n            **kwargs) -> 'Dataset':\n        <IND>from datumaro.components.config_model import Source\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    def import_from(cls, path: str, format: Optional[str] = None,\n            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n        <IND>from datumaro.components.config_model import Source\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:866:56 Incompatible variable type [9]: env is declared to have type `Environment` but is used as type `None`.",
    "message": " env is declared to have type `Environment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 866,
    "warning_line": "    def import_from(cls, path: str, format: str = None, env: Environment = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def import_from(cls, path: str, format: str = None, env: Environment = None,\n            **kwargs) -> 'Dataset':\n        from datumaro.components.config_model import Source\n",
        "source_code_len": 194,
        "target_code": "    @classmethod\n    def import_from(cls, path: str, format: Optional[str] = None,\n            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n        from datumaro.components.config_model import Source\n",
        "target_code_len": 214,
        "diff_format": "@@ -865,4 +869,4 @@\n     @classmethod\n-    def import_from(cls, path: str, format: str = None, env: Environment = None,\n-            **kwargs) -> 'Dataset':\n+    def import_from(cls, path: str, format: Optional[str] = None,\n+            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n         from datumaro.components.config_model import Source\n",
        "source_code_with_indent": "    <DED>@classmethod\n    def import_from(cls, path: str, format: str = None, env: Environment = None,\n            **kwargs) -> 'Dataset':\n        <IND>from datumaro.components.config_model import Source\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    def import_from(cls, path: str, format: Optional[str] = None,\n            env: Optional[Environment] = None, **kwargs) -> 'Dataset':\n        <IND>from datumaro.components.config_model import Source\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:902:26 Incompatible variable type [9]: env is declared to have type `Environment` but is used as type `None`.",
    "message": " env is declared to have type `Environment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 902,
    "warning_line": "    def detect(path: str, env: Environment = None) -> str:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @staticmethod\n    def detect(path: str, env: Environment = None) -> str:\n        if env is None:\n",
        "source_code_len": 101,
        "target_code": "    @staticmethod\n    def detect(path: str, env: Optional[Environment] = None) -> str:\n        if env is None:\n",
        "target_code_len": 111,
        "diff_format": "@@ -901,3 +905,3 @@\n     @staticmethod\n-    def detect(path: str, env: Environment = None) -> str:\n+    def detect(path: str, env: Optional[Environment] = None) -> str:\n         if env is None:\n",
        "source_code_with_indent": "    <DED>@staticmethod\n    def detect(path: str, env: Environment = None) -> str:\n        <IND>if env is None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@staticmethod\n    def detect(path: str, env: Optional[Environment] = None) -> str:\n        <IND>if env is None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "openvinotoolkit/datumaro",
    "commit": "2958776bc1790cf1db61fff2cbccf284755dbb9d",
    "filename": "datumaro/components/dataset.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-datumaro/datumaro/components/dataset.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "datumaro/components/dataset.py:914:30 Incompatible variable type [9]: dataset is declared to have type `Dataset` but is used as type `None`.",
    "message": " dataset is declared to have type `Dataset` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 914,
    "warning_line": "def eager_mode(new_mode=True, dataset: Dataset = None):"
  }
]