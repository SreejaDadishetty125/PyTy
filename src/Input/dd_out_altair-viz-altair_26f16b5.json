[
  {
    "project": "altair-viz/altair",
    "commit": "26f16b5452ff604be32435cdb09112d775271720",
    "filename": "altair/utils/plugin_registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/altair-viz-altair/altair/utils/plugin_registry.py",
    "file_hunks_size": 16,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "altair/utils/plugin_registry.py:75:8 Incompatible attribute type [8]: Attribute `_active` declared in class `PluginRegistry` has type `str` but is used as type `None`.",
    "message": " Attribute `_active` declared in class `PluginRegistry` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 75,
    "warning_line": "        self._active = None     # type: str"
  },
  {
    "project": "altair-viz/altair",
    "commit": "26f16b5452ff604be32435cdb09112d775271720",
    "filename": "altair/utils/plugin_registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/altair-viz-altair/altair/utils/plugin_registry.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "altair/utils/plugin_registry.py:105:12 Incompatible return type [7]: Expected `Variable[PluginType]` but got `typing.Optional[Variable[PluginType]]`.",
    "message": " Expected `Variable[PluginType]` but got `typing.Optional[Variable[PluginType]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 105,
    "warning_line": "            return value",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        =======\n        plugin: PluginType\n            The plugin that was registered or unregistered.\n        \"\"\"\n        if value is None and name in self._plugins:\n            return self._plugins.pop(name)\n        else:\n",
        "source_code_len": 224,
        "target_code": "        =======\n        plugin: PluginType or None\n            The plugin that was registered or unregistered.\n        \"\"\"\n        if value is None:\n            return self._plugins.pop(name, None)\n        else:\n",
        "target_code_len": 212,
        "diff_format": "@@ -96,7 +97,7 @@\n         =======\n-        plugin: PluginType\n+        plugin: PluginType or None\n             The plugin that was registered or unregistered.\n         \"\"\"\n-        if value is None and name in self._plugins:\n-            return self._plugins.pop(name)\n+        if value is None:\n+            return self._plugins.pop(name, None)\n         else:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        if value is None and name in self._plugins:\n            <IND>return self._plugins.pop(name)\n        <DED>else:\n",
        "target_code_with_indent": "\n        if value is None:\n            <IND>return self._plugins.pop(name, None)\n        <DED>else:\n"
      }
    ]
  },
  {
    "project": "altair-viz/altair",
    "commit": "26f16b5452ff604be32435cdb09112d775271720",
    "filename": "altair/utils/plugin_registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/altair-viz-altair/altair/utils/plugin_registry.py",
    "file_hunks_size": 16,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "altair/utils/plugin_registry.py:149:21 Incompatible variable type [9]: name is declared to have type `str` but is used as type `None`.",
    "message": " name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 149,
    "warning_line": "    def enable(self, name=None, **options):"
  },
  {
    "project": "altair-viz/altair",
    "commit": "26f16b5452ff604be32435cdb09112d775271720",
    "filename": "altair/utils/plugin_registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/altair-viz-altair/altair/utils/plugin_registry.py",
    "file_hunks_size": 16,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "altair/utils/plugin_registry.py:184:8 Incompatible return type [7]: Expected `str` but got `typing.Dict[typing.Any, typing.Any]`.",
    "message": " Expected `str` but got `typing.Dict[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 184,
    "warning_line": "        return self._options"
  },
  {
    "project": "altair-viz/altair",
    "commit": "26f16b5452ff604be32435cdb09112d775271720",
    "filename": "altair/utils/plugin_registry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/altair-viz-altair/altair/utils/plugin_registry.py",
    "file_hunks_size": 16,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "altair/utils/plugin_registry.py:192:12 Incompatible return type [7]: Expected `Variable[PluginType]` but got `str`.",
    "message": " Expected `Variable[PluginType]` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 192,
    "warning_line": "            return self._active"
  }
]