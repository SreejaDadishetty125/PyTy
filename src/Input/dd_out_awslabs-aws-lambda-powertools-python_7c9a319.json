[
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:156:71 Incompatible parameter type [6]: Expected `List[typing.Any]` for 4th parameter `patch_modules` to call `Tracer._Tracer__build_config` but got `Optional[Tuple[str]]`.",
    "message": " Expected `List[typing.Any]` for 4th parameter `patch_modules` to call `Tracer._Tracer__build_config` but got `Optional[Tuple[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 156,
    "warning_line": "            service=service, disabled=disabled, auto_patch=auto_patch, patch_modules=patch_modules, provider=provider"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:247:8 Incompatible variable type [9]: lambda_handler is declared to have type `typing.Callable[[Dict[typing.Any, typing.Any], typing.Any, Optional[Dict[typing.Any, typing.Any]]], typing.Any]` but is used as type `None`.",
    "message": " lambda_handler is declared to have type `typing.Callable[[Dict[typing.Any, typing.Any], typing.Any, Optional[Dict[typing.Any, typing.Any]]], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 247,
    "warning_line": "        lambda_handler: Callable[[Dict, Any, Optional[Dict]], Any] = None,"
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:520:8 Incompatible variable type [9]: method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 520,
    "warning_line": "        method: Callable = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 108,
        "target_code": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 101,
        "diff_format": "@@ -519,3 +519,3 @@\n         self,\n-        method: Callable = None,\n+        method: Callable,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:547:8 Incompatible variable type [9]: method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 547,
    "warning_line": "        method: Callable = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 108,
        "target_code": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 101,
        "diff_format": "@@ -546,3 +546,3 @@\n         self,\n-        method: Callable = None,\n+        method: Callable,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:574:8 Incompatible variable type [9]: method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 574,
    "warning_line": "        method: Callable = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 108,
        "target_code": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 101,
        "diff_format": "@@ -573,3 +573,3 @@\n         self,\n-        method: Callable = None,\n+        method: Callable,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:602:8 Incompatible variable type [9]: method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "message": " method is declared to have type `typing.Callable[..., typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 602,
    "warning_line": "        method: Callable = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_len": 108,
        "target_code": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_len": 101,
        "diff_format": "@@ -601,3 +601,3 @@\n         self,\n-        method: Callable = None,\n+        method: Callable,\n         capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent": "        self,\n        method: Callable = None,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method: Callable,\n        capture_response: Optional[Union[bool, str]] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:657:8 Incompatible variable type [9]: method_name is declared to have type `str` but is used as type `None`.",
    "message": " method_name is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 657,
    "warning_line": "        method_name: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_len": 166,
        "target_code": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_len": 145,
        "diff_format": "@@ -656,5 +656,5 @@\n         self,\n-        method_name: str = None,\n-        error: Exception = None,\n-        subsegment: BaseSegment = None,\n+        method_name: str,\n+        error: Exception,\n+        subsegment: BaseSegment,\n         capture_error: Optional[bool] = None,\n",
        "source_code_with_indent": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:658:8 Incompatible variable type [9]: error is declared to have type `Exception` but is used as type `None`.",
    "message": " error is declared to have type `Exception` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 658,
    "warning_line": "        error: Exception = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_len": 166,
        "target_code": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_len": 145,
        "diff_format": "@@ -656,5 +656,5 @@\n         self,\n-        method_name: str = None,\n-        error: Exception = None,\n-        subsegment: BaseSegment = None,\n+        method_name: str,\n+        error: Exception,\n+        subsegment: BaseSegment,\n         capture_error: Optional[bool] = None,\n",
        "source_code_with_indent": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:659:8 Incompatible variable type [9]: subsegment is declared to have type `BaseSegment` but is used as type `None`.",
    "message": " subsegment is declared to have type `BaseSegment` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 659,
    "warning_line": "        subsegment: BaseSegment = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_len": 166,
        "target_code": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_len": 145,
        "diff_format": "@@ -656,5 +656,5 @@\n         self,\n-        method_name: str = None,\n-        error: Exception = None,\n-        subsegment: BaseSegment = None,\n+        method_name: str,\n+        error: Exception,\n+        subsegment: BaseSegment,\n         capture_error: Optional[bool] = None,\n",
        "source_code_with_indent": "        self,\n        method_name: str = None,\n        error: Exception = None,\n        subsegment: BaseSegment = None,\n        capture_error: Optional[bool] = None,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        method_name: str,\n        error: Exception,\n        subsegment: BaseSegment,\n        capture_error: Optional[bool] = None,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "awslabs/aws-lambda-powertools-python",
    "commit": "7c9a319ac5f6ad915b0a4bed7d7236ce03c4de86",
    "filename": "aws_lambda_powertools/tracing/tracer.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/awslabs-aws-lambda-powertools-python/aws_lambda_powertools/tracing/tracer.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aws_lambda_powertools/tracing/tracer.py:720:8 Incompatible variable type [9]: patch_modules is declared to have type `List[typing.Any]` but is used as type `None`.",
    "message": " patch_modules is declared to have type `List[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 720,
    "warning_line": "        patch_modules: List = None,"
  }
]