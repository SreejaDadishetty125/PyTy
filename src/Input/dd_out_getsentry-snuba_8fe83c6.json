[
  {
    "project": "getsentry/snuba",
    "commit": "8fe83c60b97fd31efe891ba2ea64199082166f36",
    "filename": "snuba/snapshots/postgres_snapshot.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/snapshots/postgres_snapshot.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/snapshots/postgres_snapshot.py:132:39 Incompatible parameter type [6]: Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `typing.Optional[Sequence[str]]`.",
    "message": " Expected `Iterable[Variable[_T]]` for 1st positional only parameter to call `set.__init__` but got `typing.Optional[Sequence[str]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 132,
    "warning_line": "                    existing_set = set(columns)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                    expected_set = set(expected_columns)\n                    existing_set = set(columns)\n",
        "source_code_len": 105,
        "target_code": "                    expected_set = set(expected_columns)\n                    assert isinstance(columns, Iterable)\n                    existing_set = set(columns)\n",
        "target_code_len": 162,
        "diff_format": "@@ -131,2 +131,3 @@\n                     expected_set = set(expected_columns)\n+                    assert isinstance(columns, Iterable)\n                     existing_set = set(columns)\n",
        "source_code_with_indent": "                    <IND>expected_set = set(expected_columns)\n                    existing_set = set(columns)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                    <IND>expected_set = set(expected_columns)\n                    assert isinstance(columns, Iterable)\n                    existing_set = set(columns)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]