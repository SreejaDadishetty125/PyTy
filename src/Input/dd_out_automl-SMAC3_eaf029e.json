[
  {
    "project": "automl/SMAC3",
    "commit": "eaf029e33f738c9e48e7fbab4a3295e4c60ae5e8",
    "filename": "smac/intensification/successive_halving.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/automl-SMAC3/smac/intensification/successive_halving.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "smac/intensification/successive_halving.py:122:29 Incompatible parameter type [6]: Expected `float` for 1st positional only parameter to call `SuccessiveHalving._init_sh_params` but got `typing.Optional[float]`.",
    "message": " Expected `float` for 1st positional only parameter to call `SuccessiveHalving._init_sh_params` but got `typing.Optional[float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 122,
    "warning_line": "        self._init_sh_params(min_budget, max_budget, eta, num_initial_challengers)"
  },
  {
    "project": "automl/SMAC3",
    "commit": "eaf029e33f738c9e48e7fbab4a3295e4c60ae5e8",
    "filename": "smac/intensification/successive_halving.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/automl-SMAC3/smac/intensification/successive_halving.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "smac/intensification/successive_halving.py:122:58 Incompatible parameter type [6]: Expected `int` for 4th positional only parameter to call `SuccessiveHalving._init_sh_params` but got `typing.Optional[int]`.",
    "message": " Expected `int` for 4th positional only parameter to call `SuccessiveHalving._init_sh_params` but got `typing.Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 122,
    "warning_line": "        self._init_sh_params(min_budget, max_budget, eta, num_initial_challengers)"
  },
  {
    "project": "automl/SMAC3",
    "commit": "eaf029e33f738c9e48e7fbab4a3295e4c60ae5e8",
    "filename": "smac/intensification/successive_halving.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/automl-SMAC3/smac/intensification/successive_halving.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "smac/intensification/successive_halving.py:149:11 Unsupported operand [58]: `<=` is not supported for operand types `typing.Optional[float]` and `int`.",
    "message": " `<=` is not supported for operand types `typing.Optional[float]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 149,
    "warning_line": "        if eta <= 1:"
  },
  {
    "project": "automl/SMAC3",
    "commit": "eaf029e33f738c9e48e7fbab4a3295e4c60ae5e8",
    "filename": "smac/intensification/successive_halving.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/automl-SMAC3/smac/intensification/successive_halving.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "smac/intensification/successive_halving.py:404:24 Incompatible parameter type [6]: Expected `int` for 3rd parameter `seed` to call `ExecuteTARun.start` but got `str`.",
    "message": " Expected `int` for 3rd parameter `seed` to call `ExecuteTARun.start` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 404,
    "warning_line": "                        seed=seed,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                          incumbent: Configuration,\n                          instances: typing.List[str],\n                          run_history: RunHistory,\n",
        "source_code_len": 158,
        "target_code": "                          incumbent: Configuration,\n                          instances: typing.List[typing.Tuple[str, int]],\n                          run_history: RunHistory,\n",
        "target_code_len": 177,
        "diff_format": "@@ -341,3 +341,3 @@\n                           incumbent: Configuration,\n-                          instances: typing.List[str],\n+                          instances: typing.List[typing.Tuple[str, int]],\n                           run_history: RunHistory,\n",
        "source_code_with_indent": "                          incumbent: Configuration,\n                          instances: typing.List[str],\n                          run_history: RunHistory,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                          incumbent: Configuration,\n                          instances: typing.List[typing.Tuple[str, int]],\n                          run_history: RunHistory,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]