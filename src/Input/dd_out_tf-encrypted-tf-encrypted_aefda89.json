[
  {
    "project": "tf-encrypted/tf-encrypted",
    "commit": "aefda89c56bb1d59dc8c6871567bf58830c67020",
    "filename": "tensorflow_encrypted/protocol/securenn.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tf-encrypted-tf-encrypted/tensorflow_encrypted/protocol/securenn.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_encrypted/protocol/securenn.py:90:54 Incompatible parameter type [6]: Expected `typing.List[int]` for 2nd positional only parameter to call `PondPrivateTensor.zero` but got `BoundMethod[typing.Callable(PondTensor.shape)[[Named(self, PondTensor)], typing.Any], PondTensor]`.",
    "message": " Expected `typing.List[int]` for 2nd positional only parameter to call `PondPrivateTensor.zero` but got `BoundMethod[typing.Callable(PondTensor.shape)[[Named(self, PondTensor)], typing.Any], PondTensor]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "        return x + c + PondPrivateTensor.zero(x.prot, x.shape)"
  }
]