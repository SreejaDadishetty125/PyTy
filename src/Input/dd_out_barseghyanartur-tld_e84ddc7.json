[
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/base.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/base.py:20:4 Incompatible attribute type [8]: Attribute `uid` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "message": " Attribute `uid` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 20,
    "warning_line": "    uid: str = None"
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/base.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/base.py:21:4 Incompatible attribute type [8]: Attribute `source_url` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "message": " Attribute `source_url` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 21,
    "warning_line": "    source_url: str = None"
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/base.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/base.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/base.py:22:4 Incompatible attribute type [8]: Attribute `local_path` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "message": " Attribute `local_path` declared in class `BaseTLDSourceParser` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 22,
    "warning_line": "    local_path: str = None"
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:444:7 Unsupported operand [58]: `<` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `<` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 444,
    "warning_line": "    if non_zero_i < 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if non_zero_i < 0:\n",
        "source_code_len": 24,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n    if non_zero_i < 0:\n",
        "target_code_len": 173,
        "diff_format": "@@ -443,2 +442,5 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n     if non_zero_i < 0:\n",
        "source_code_with_indent": "\n    <DED>if non_zero_i < 0:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n    if non_zero_i < 0:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:448:33 Unsupported operand [58]: `-` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `-` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 448,
    "warning_line": "    return \".\".join(domain_parts[non_zero_i-1:])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if non_zero_i < 0:\n",
        "source_code_len": 24,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n    if non_zero_i < 0:\n",
        "target_code_len": 173,
        "diff_format": "@@ -443,2 +442,5 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n     if non_zero_i < 0:\n",
        "source_code_with_indent": "\n    <DED>if non_zero_i < 0:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n    if non_zero_i < 0:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:501:11 Unsupported operand [58]: `<` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `<` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 501,
    "warning_line": "        if non_zero_i < 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if not as_object:\n",
        "source_code_len": 23,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_len": 173,
        "diff_format": "@@ -499,2 +501,6 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n+\n     if not as_object:\n",
        "source_code_with_indent": "\n    <DED>if not as_object:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:506:7 Unsupported operand [58]: `<` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `<` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 506,
    "warning_line": "    if non_zero_i < 0:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if not as_object:\n",
        "source_code_len": 23,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_len": 173,
        "diff_format": "@@ -499,2 +501,6 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n+\n     if not as_object:\n",
        "source_code_with_indent": "\n    <DED>if not as_object:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:512:43 Unsupported operand [58]: `-` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `-` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 512,
    "warning_line": "        subdomain = \".\".join(domain_parts[:non_zero_i-1])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if not as_object:\n",
        "source_code_len": 23,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_len": 173,
        "diff_format": "@@ -499,2 +501,6 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n+\n     if not as_object:\n",
        "source_code_with_indent": "\n    <DED>if not as_object:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:514:25 Unsupported operand [58]: `-` is not supported for operand types `Optional[int]` and `int`.",
    "message": " `-` is not supported for operand types `Optional[int]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 514,
    "warning_line": "            domain_parts[non_zero_i-1:non_zero_i]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    if not as_object:\n",
        "source_code_len": 23,
        "target_code": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_len": 173,
        "diff_format": "@@ -499,2 +501,6 @@\n \n+    # This should be None when domain_parts is None\n+    # but mypy isn't quite smart enough to figure that out yet\n+    assert non_zero_i is not None\n+\n     if not as_object:\n",
        "source_code_with_indent": "\n    <DED>if not as_object:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    # This should be None when domain_parts is None\n    # but mypy isn't quite smart enough to figure that out yet\n    <DED>assert non_zero_i is not None\n\n    if not as_object:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "barseghyanartur/tld",
    "commit": "e84ddc74d504b874c9589f1d31635b0175b54e30",
    "filename": "src/tld/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/barseghyanartur-tld/src/tld/utils.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/tld/utils.py:521:8 Incompatible parameter type [6]: Expected `str` for 3rd parameter `tld` to call `Result.__init__` but got `Optional[str]`.",
    "message": " Expected `str` for 3rd parameter `tld` to call `Result.__init__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 521,
    "warning_line": "        tld=_tld,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        domain = \"\"\n        _tld = parsed_url.hostname\n",
        "source_code_len": 55,
        "target_code": "        domain = \"\"\n        # This is checked in process_url but the type is ambiguous (Optional[str])\n        # so this assertion is just to satisfy mypy\n        assert parsed_url.hostname is not None, \"No hostname in URL\"\n        _tld = parsed_url.hostname\n",
        "target_code_len": 259,
        "diff_format": "@@ -509,2 +515,5 @@\n         domain = \"\"\n+        # This is checked in process_url but the type is ambiguous (Optional[str])\n+        # so this assertion is just to satisfy mypy\n+        assert parsed_url.hostname is not None, \"No hostname in URL\"\n         _tld = parsed_url.hostname\n",
        "source_code_with_indent": "        domain = \"\"\n        _tld = parsed_url.hostname\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        domain = \"\"\n        # This is checked in process_url but the type is ambiguous (Optional[str])\n        # so this assertion is just to satisfy mypy\n        assert parsed_url.hostname is not None, \"No hostname in URL\"\n        _tld = parsed_url.hostname\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]