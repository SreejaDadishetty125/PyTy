[
  {
    "project": "openvinotoolkit/nncf",
    "commit": "a61279c6c2ef5edd293eb426cb4418f4ad0d54af",
    "filename": "nncf/api/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-nncf/nncf/api/compression.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nncf/api/compression.py:132:8 Incompatible attribute type [8]: Attribute `current_step` declared in class `CompressionScheduler` has type `int` but is used as type `object`.",
    "message": " Attribute `current_step` declared in class `CompressionScheduler` has type `int` but is used as type `object`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 132,
    "warning_line": "        self.current_step = state['current_step']",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\n\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "source_code_len": 53,
        "target_code": "\"\"\"\nfrom abc import ABC, abstractmethod\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "target_code_len": 88,
        "diff_format": "@@ -12,3 +12,3 @@\n \"\"\"\n-\n+from abc import ABC, abstractmethod\n from typing import Any, Dict, Optional, TypeVar\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "target_code_with_indent": "\nfrom abc import ABC, abstractmethod\nfrom typing import Any, Dict, Optional, TypeVar\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        self.current_step = state['current_step']\n        self.current_epoch = state['current_epoch']\n\n    def get_state(self) -> Dict[str, object]:\n",
        "source_code_len": 161,
        "target_code": "        \"\"\"\n\n    @abstractmethod\n    def get_state(self) -> Dict[str, object]:\n",
        "target_code_len": 79,
        "diff_format": "@@ -131,5 +106,4 @@\n         \"\"\"\n-        self.current_step = state['current_step']\n-        self.current_epoch = state['current_epoch']\n-\n+\n+    @abstractmethod\n     def get_state(self) -> Dict[str, object]:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        self.current_step = state['current_step']\n        self.current_epoch = state['current_epoch']\n\n    <DED>def get_state(self) -> Dict[str, object]:\n",
        "target_code_with_indent": "\n\n    <DED>@abstractmethod\n    def get_state(self) -> Dict[str, object]:\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._model = target_model\n        self._loss = CompressionLoss()\n        self._scheduler = CompressionScheduler()\n\n",
        "source_code_len": 124,
        "target_code": "        self._model = target_model\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -192,4 +162,2 @@\n         self._model = target_model\n-        self._loss = CompressionLoss()\n-        self._scheduler = CompressionScheduler()\n \n",
        "source_code_with_indent": "        self._model = target_model\n        self._loss = CompressionLoss()\n        self._scheduler = CompressionScheduler()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._model = target_model\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def loss(self) -> CompressionLoss:\n        return self._loss\n\n    @property\n    def scheduler(self) -> CompressionScheduler:\n        return self._scheduler\n\n",
        "source_code_len": 175,
        "target_code": "    @property\n    @abstractmethod\n    def loss(self) -> CompressionLoss:\n        \"\"\"\n        :return: The instance of the `CompressionLoss`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scheduler(self) -> CompressionScheduler:\n        \"\"\"\n        :return: The instance of the `CompressionScheduler`.\n        \"\"\"\n\n",
        "target_code_len": 323,
        "diff_format": "@@ -200,8 +171,14 @@\n     @property\n+    @abstractmethod\n     def loss(self) -> CompressionLoss:\n-        return self._loss\n+        \"\"\"\n+        :return: The instance of the `CompressionLoss`.\n+        \"\"\"\n \n     @property\n+    @abstractmethod\n     def scheduler(self) -> CompressionScheduler:\n-        return self._scheduler\n+        \"\"\"\n+        :return: The instance of the `CompressionScheduler`.\n+        \"\"\"\n \n",
        "source_code_with_indent": "    <DED>@property\n    def loss(self) -> CompressionLoss:\n        <IND>return self._loss\n\n    <DED>@property\n    def scheduler(self) -> CompressionScheduler:\n        <IND>return self._scheduler\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    @abstractmethod\n    def loss(self) -> CompressionLoss:\n        <IND>\"\"\"\n        :return: The instance of the `CompressionLoss`.\n        \"\"\"\n\n    <DED>@property\n    @abstractmethod\n    def scheduler(self) -> CompressionScheduler:\n        <IND>\"\"\"\n        :return: The instance of the `CompressionScheduler`.\n        \"\"\"\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        return self._loss.statistics(quickly_collected_only)\n\n",
        "source_code_len": 74,
        "target_code": "        \"\"\"\n        return self.loss.statistics(quickly_collected_only)\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -226,3 +202,3 @@\n         \"\"\"\n-        return self._loss.statistics(quickly_collected_only)\n+        return self.loss.statistics(quickly_collected_only)\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        return self._loss.statistics(quickly_collected_only)\n\n",
        "target_code_with_indent": "\n        return self.loss.statistics(quickly_collected_only)\n\n"
      }
    ]
  },
  {
    "project": "openvinotoolkit/nncf",
    "commit": "a61279c6c2ef5edd293eb426cb4418f4ad0d54af",
    "filename": "nncf/api/compression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-nncf/nncf/api/compression.py",
    "file_hunks_size": 24,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nncf/api/compression.py:133:8 Incompatible attribute type [8]: Attribute `current_epoch` declared in class `CompressionScheduler` has type `int` but is used as type `object`.",
    "message": " Attribute `current_epoch` declared in class `CompressionScheduler` has type `int` but is used as type `object`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 133,
    "warning_line": "        self.current_epoch = state['current_epoch']",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"\n\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "source_code_len": 53,
        "target_code": "\"\"\"\nfrom abc import ABC, abstractmethod\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "target_code_len": 88,
        "diff_format": "@@ -12,3 +12,3 @@\n \"\"\"\n-\n+from abc import ABC, abstractmethod\n from typing import Any, Dict, Optional, TypeVar\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\nfrom typing import Any, Dict, Optional, TypeVar\n",
        "target_code_with_indent": "\nfrom abc import ABC, abstractmethod\nfrom typing import Any, Dict, Optional, TypeVar\n"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        self.current_step = state['current_step']\n        self.current_epoch = state['current_epoch']\n\n    def get_state(self) -> Dict[str, object]:\n",
        "source_code_len": 161,
        "target_code": "        \"\"\"\n\n    @abstractmethod\n    def get_state(self) -> Dict[str, object]:\n",
        "target_code_len": 79,
        "diff_format": "@@ -131,5 +106,4 @@\n         \"\"\"\n-        self.current_step = state['current_step']\n-        self.current_epoch = state['current_epoch']\n-\n+\n+    @abstractmethod\n     def get_state(self) -> Dict[str, object]:\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        self.current_step = state['current_step']\n        self.current_epoch = state['current_epoch']\n\n    <DED>def get_state(self) -> Dict[str, object]:\n",
        "target_code_with_indent": "\n\n    <DED>@abstractmethod\n    def get_state(self) -> Dict[str, object]:\n"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "        self._model = target_model\n        self._loss = CompressionLoss()\n        self._scheduler = CompressionScheduler()\n\n",
        "source_code_len": 124,
        "target_code": "        self._model = target_model\n\n",
        "target_code_len": 36,
        "diff_format": "@@ -192,4 +162,2 @@\n         self._model = target_model\n-        self._loss = CompressionLoss()\n-        self._scheduler = CompressionScheduler()\n \n",
        "source_code_with_indent": "        self._model = target_model\n        self._loss = CompressionLoss()\n        self._scheduler = CompressionScheduler()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._model = target_model\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def loss(self) -> CompressionLoss:\n        return self._loss\n\n    @property\n    def scheduler(self) -> CompressionScheduler:\n        return self._scheduler\n\n",
        "source_code_len": 175,
        "target_code": "    @property\n    @abstractmethod\n    def loss(self) -> CompressionLoss:\n        \"\"\"\n        :return: The instance of the `CompressionLoss`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scheduler(self) -> CompressionScheduler:\n        \"\"\"\n        :return: The instance of the `CompressionScheduler`.\n        \"\"\"\n\n",
        "target_code_len": 323,
        "diff_format": "@@ -200,8 +171,14 @@\n     @property\n+    @abstractmethod\n     def loss(self) -> CompressionLoss:\n-        return self._loss\n+        \"\"\"\n+        :return: The instance of the `CompressionLoss`.\n+        \"\"\"\n \n     @property\n+    @abstractmethod\n     def scheduler(self) -> CompressionScheduler:\n-        return self._scheduler\n+        \"\"\"\n+        :return: The instance of the `CompressionScheduler`.\n+        \"\"\"\n \n",
        "source_code_with_indent": "    <DED>@property\n    def loss(self) -> CompressionLoss:\n        <IND>return self._loss\n\n    <DED>@property\n    def scheduler(self) -> CompressionScheduler:\n        <IND>return self._scheduler\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    @abstractmethod\n    def loss(self) -> CompressionLoss:\n        <IND>\"\"\"\n        :return: The instance of the `CompressionLoss`.\n        \"\"\"\n\n    <DED>@property\n    @abstractmethod\n    def scheduler(self) -> CompressionScheduler:\n        <IND>\"\"\"\n        :return: The instance of the `CompressionScheduler`.\n        \"\"\"\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        return self._loss.statistics(quickly_collected_only)\n\n",
        "source_code_len": 74,
        "target_code": "        \"\"\"\n        return self.loss.statistics(quickly_collected_only)\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -226,3 +202,3 @@\n         \"\"\"\n-        return self._loss.statistics(quickly_collected_only)\n+        return self.loss.statistics(quickly_collected_only)\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        return self._loss.statistics(quickly_collected_only)\n\n",
        "target_code_with_indent": "\n        return self.loss.statistics(quickly_collected_only)\n\n"
      }
    ]
  },
  {
    "project": "openvinotoolkit/nncf",
    "commit": "a61279c6c2ef5edd293eb426cb4418f4ad0d54af",
    "filename": "nncf/pruning/base_algo.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/openvinotoolkit-nncf/nncf/pruning/base_algo.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nncf/pruning/base_algo.py:118:4 Inconsistent override [14]: `nncf.pruning.base_algo.BasePruningAlgoBuilder.build_controller` overrides method defined in `nncf.api.compression.CompressionAlgorithmBuilder` inconsistently. Could not find parameter `model` in overriding signature.",
    "message": " `nncf.pruning.base_algo.BasePruningAlgoBuilder.build_controller` overrides method defined in `nncf.api.compression.CompressionAlgorithmBuilder` inconsistently. Could not find parameter `model` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 118,
    "warning_line": "    def build_controller(self, target_model: NNCFNetwork) -> PTCompressionAlgorithmController:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\n    def build_controller(self, target_model: NNCFNetwork) -> PTCompressionAlgorithmController:\n        return BasePruningAlgoController(target_model, self.pruned_module_groups_info, self._params)\n\n    def create_weight_pruning_operation(self, module):\n",
        "source_code_len": 253,
        "target_code": "\n    def create_weight_pruning_operation(self, module):\n",
        "target_code_len": 56,
        "diff_format": "@@ -117,5 +117,2 @@\n \n-    def build_controller(self, target_model: NNCFNetwork) -> PTCompressionAlgorithmController:\n-        return BasePruningAlgoController(target_model, self.pruned_module_groups_info, self._params)\n-\n     def create_weight_pruning_operation(self, module):\n",
        "source_code_with_indent": "\n    <DED>def build_controller(self, target_model: NNCFNetwork) -> PTCompressionAlgorithmController:\n        <IND>return BasePruningAlgoController(target_model, self.pruned_module_groups_info, self._params)\n\n    <DED>def create_weight_pruning_operation(self, module):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def create_weight_pruning_operation(self, module):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]