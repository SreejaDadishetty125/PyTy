[
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/evaluators/memory_evaluator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/evaluators/memory_evaluator.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/evaluators/memory_evaluator.py:151:8 Incompatible return type [7]: Expected `Dict[str, Union[float, int]]` but got `Dict[str, FloatTensor]`.",
    "message": " Expected `Dict[str, Union[float, int]]` but got `Dict[str, FloatTensor]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 151,
    "warning_line": "        return results"
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/evaluators/memory_evaluator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/evaluators/memory_evaluator.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/evaluators/memory_evaluator.py:153:4 Inconsistent override [14]: `tensorflow_similarity.evaluators.memory_evaluator.MemoryEvaluator.calibrate` overrides method defined in `Evaluator` inconsistently. Parameter of type `Sequence[tensorflow_similarity.classification_metrics.classification_metric.ClassificationMetric]` is not a supertype of the overridden parameter `Sequence[Union[str, tensorflow_similarity.classification_metrics.classification_metric.ClassificationMetric]]`.",
    "message": " `tensorflow_similarity.evaluators.memory_evaluator.MemoryEvaluator.calibrate` overrides method defined in `Evaluator` inconsistently. Parameter of type `Sequence[tensorflow_similarity.classification_metrics.classification_metric.ClassificationMetric]` is not a supertype of the overridden parameter `Sequence[Union[str, tensorflow_similarity.classification_metrics.classification_metric.ClassificationMetric]]`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 153,
    "warning_line": "    def calibrate("
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/evaluators/memory_evaluator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/evaluators/memory_evaluator.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/evaluators/memory_evaluator.py:153:4 Inconsistent override [14]: `tensorflow_similarity.evaluators.memory_evaluator.MemoryEvaluator.calibrate` overrides method defined in `Evaluator` inconsistently. Could not find parameter `classification_match_type` in overriding signature.",
    "message": " `tensorflow_similarity.evaluators.memory_evaluator.MemoryEvaluator.calibrate` overrides method defined in `Evaluator` inconsistently. Could not find parameter `classification_match_type` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 153,
    "warning_line": "    def calibrate("
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/evaluators/memory_evaluator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/evaluators/memory_evaluator.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/evaluators/memory_evaluator.py:330:55 Incompatible parameter type [6]: Expected `Dict[str, Union[float, int]]` for 2nd parameter `thresholds` to call `CalibrationResults.__init__` but got `DefaultDict[str, List[Union[float, int]]]`.",
    "message": " Expected `Dict[str, Union[float, int]]` for 2nd parameter `thresholds` to call `CalibrationResults.__init__` but got `DefaultDict[str, List[Union[float, int]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 330,
    "warning_line": "        return CalibrationResults(cutpoints=cutpoints, thresholds=thresholds)"
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/matchers/classification_match.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/matchers/classification_match.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/matchers/classification_match.py:107:8 Incompatible return type [7]: Expected `BoolTensor` but got implicit return value of `None`.",
    "message": " Expected `BoolTensor` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 107,
    "warning_line": "        self._compute_counts(label_match, dist_mask)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def match(self,\n              *,\n              query_labels: IntTensor,\n              lookup_labels: IntTensor,\n              lookup_distances: FloatTensor) -> BoolTensor:\n        \"\"\"Compares the query_label against the match label associated with the\n",
        "source_code_len": 256,
        "target_code": "    def match(self,\n              query_labels: IntTensor,\n              lookup_labels: IntTensor,\n              lookup_distances: FloatTensor):\n        \"\"\"Compares the query_label against the match label associated with the\n",
        "target_code_len": 225,
        "diff_format": "@@ -82,6 +81,5 @@\n     def match(self,\n-              *,\n               query_labels: IntTensor,\n               lookup_labels: IntTensor,\n-              lookup_distances: FloatTensor) -> BoolTensor:\n+              lookup_distances: FloatTensor):\n         \"\"\"Compares the query_label against the match label associated with the\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>def match(self,\n              *,\n              query_labels: IntTensor,\n              lookup_labels: IntTensor,\n              lookup_distances: FloatTensor) -> BoolTensor:\n        <IND>",
        "target_code_with_indent": "    <DED>def match(self,\n              query_labels: IntTensor,\n              lookup_labels: IntTensor,\n              lookup_distances: FloatTensor):\n        <IND>"
      }
    ]
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/retrieval_metrics/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/retrieval_metrics/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/retrieval_metrics/utils.py:86:57 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `BNDCG.__init__` but got `Mapping[int, int]`.",
    "message": " Expected `str` for 1st positional only parameter to call `BNDCG.__init__` but got `Mapping[int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "                metric = METRICS_ALIASES[metric.lower()](r)"
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/retrieval_metrics/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/retrieval_metrics/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/retrieval_metrics/utils.py:86:57 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `PrecisionAtK.__init__` but got `Mapping[int, int]`.",
    "message": " Expected `str` for 1st positional only parameter to call `PrecisionAtK.__init__` but got `Mapping[int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "                metric = METRICS_ALIASES[metric.lower()](r)"
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/retrieval_metrics/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/retrieval_metrics/utils.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/retrieval_metrics/utils.py:86:57 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `RecallAtK.__init__` but got `Mapping[int, int]`.",
    "message": " Expected `str` for 1st positional only parameter to call `RecallAtK.__init__` but got `Mapping[int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "                metric = METRICS_ALIASES[metric.lower()](r)"
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/stores/memory_store.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/stores/memory_store.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/stores/memory_store.py:40:27 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `list.append` but got `Optional[int]`.",
    "message": " Expected `int` for 1st positional only parameter to call `list.append` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 40,
    "warning_line": "        self.labels.append(label)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Serialization / export relies on Arrow.\n        self.labels: List[int] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Tensor] = []\n        self.num_items: int = 0\n",
        "source_code_len": 203,
        "target_code": "        # Serialization / export relies on Arrow.\n        self.labels: List[Optional[int]] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Optional[Tensor]] = []\n        self.num_items: int = 0\n",
        "target_code_len": 223,
        "diff_format": "@@ -16,5 +16,5 @@\n         # Serialization / export relies on Arrow.\n-        self.labels: List[int] = []\n+        self.labels: List[Optional[int]] = []\n         self.embeddings: List[FloatTensor] = []\n-        self.data: List[Tensor] = []\n+        self.data: List[Optional[Tensor]] = []\n         self.num_items: int = 0\n",
        "source_code_with_indent": "        # Serialization / export relies on Arrow.\n        <IND>self.labels: List[int] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Tensor] = []\n        self.num_items: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Serialization / export relies on Arrow.\n        <IND>self.labels: List[Optional[int]] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Optional[Tensor]] = []\n        self.num_items: int = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/stores/memory_store.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/stores/memory_store.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/stores/memory_store.py:42:25 Incompatible parameter type [6]: Expected `Tensor` for 1st positional only parameter to call `list.append` but got `Optional[Tensor]`.",
    "message": " Expected `Tensor` for 1st positional only parameter to call `list.append` but got `Optional[Tensor]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 42,
    "warning_line": "        self.data.append(data)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Serialization / export relies on Arrow.\n        self.labels: List[int] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Tensor] = []\n        self.num_items: int = 0\n",
        "source_code_len": 203,
        "target_code": "        # Serialization / export relies on Arrow.\n        self.labels: List[Optional[int]] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Optional[Tensor]] = []\n        self.num_items: int = 0\n",
        "target_code_len": 223,
        "diff_format": "@@ -16,5 +16,5 @@\n         # Serialization / export relies on Arrow.\n-        self.labels: List[int] = []\n+        self.labels: List[Optional[int]] = []\n         self.embeddings: List[FloatTensor] = []\n-        self.data: List[Tensor] = []\n+        self.data: List[Optional[Tensor]] = []\n         self.num_items: int = 0\n",
        "source_code_with_indent": "        # Serialization / export relies on Arrow.\n        <IND>self.labels: List[int] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Tensor] = []\n        self.num_items: int = 0\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Serialization / export relies on Arrow.\n        <IND>self.labels: List[Optional[int]] = []\n        self.embeddings: List[FloatTensor] = []\n        self.data: List[Optional[Tensor]] = []\n        self.num_items: int = 0\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/visualization/neighbors_viz.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/visualization/neighbors_viz.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/visualization/neighbors_viz.py:42:24 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `Mapping.__getitem__` but got `Sequence[int]`.",
    "message": " Expected `int` for 1st positional only parameter to call `Mapping.__getitem__` but got `Sequence[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 42,
    "warning_line": "    val = class_mapping[example_class] if class_mapping else str(example_class)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def viz_neigbors_imgs(example: Tensor,\n                      example_class: Sequence[int],\n                      neighbors: Sequence[Lookup],\n",
        "source_code_len": 142,
        "target_code": "def viz_neigbors_imgs(example: Tensor,\n                      example_class: int,\n                      neighbors: Sequence[Lookup],\n",
        "target_code_len": 132,
        "diff_format": "@@ -8,3 +8,3 @@\n def viz_neigbors_imgs(example: Tensor,\n-                      example_class: Sequence[int],\n+                      example_class: int,\n                       neighbors: Sequence[Lookup],\n",
        "source_code_with_indent": "def viz_neigbors_imgs(example: Tensor,\n                      example_class: Sequence[int],\n                      neighbors: Sequence[Lookup],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def viz_neigbors_imgs(example: Tensor,\n                      example_class: int,\n                      neighbors: Sequence[Lookup],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "tensorflow/similarity",
    "commit": "d1aafeb9d04be1fd8eb5eb221a573c53921f75a4",
    "filename": "tensorflow_similarity/visualization/neighbors_viz.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tensorflow-similarity/tensorflow_similarity/visualization/neighbors_viz.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tensorflow_similarity/visualization/neighbors_viz.py:48:28 Incompatible parameter type [6]: Expected `int` for 1st positional only parameter to call `Mapping.__getitem__` but got `Optional[int]`.",
    "message": " Expected `int` for 1st positional only parameter to call `Mapping.__getitem__` but got `Optional[int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 48,
    "warning_line": "        val = class_mapping[nbg.label] if class_mapping else nbg.label",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        plt.subplot(1, num_cols, plt_idx)\n        val = class_mapping[nbg.label] if class_mapping else nbg.label\n        legend = \"%s - d:%.5f\" % (val, nbg.distance)\n        if nbg.label == example_class:\n",
        "source_code_len": 205,
        "target_code": "        plt.subplot(1, num_cols, plt_idx)\n        if class_mapping and nbg.label is not None:\n            val = class_mapping[nbg.label]\n        elif nbg.label is not None:\n            val = str(nbg.label)\n        else:\n            val = 'No Label'\n        legend = f\"{val} - {nbg.distance:.5f}\"\n        if nbg.label == example_class:\n",
        "target_code_len": 335,
        "diff_format": "@@ -47,4 +47,9 @@\n         plt.subplot(1, num_cols, plt_idx)\n-        val = class_mapping[nbg.label] if class_mapping else nbg.label\n-        legend = \"%s - d:%.5f\" % (val, nbg.distance)\n+        if class_mapping and nbg.label is not None:\n+            val = class_mapping[nbg.label]\n+        elif nbg.label is not None:\n+            val = str(nbg.label)\n+        else:\n+            val = 'No Label'\n+        legend = f\"{val} - {nbg.distance:.5f}\"\n         if nbg.label == example_class:\n",
        "source_code_with_indent": "        <IND>plt.subplot(1, num_cols, plt_idx)\n        val = class_mapping[nbg.label] if class_mapping else nbg.label\n        legend = \"%s - d:%.5f\" % (val, nbg.distance)\n        if nbg.label == example_class:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>plt.subplot(1, num_cols, plt_idx)\n        if class_mapping and nbg.label is not None:\n            <IND>val = class_mapping[nbg.label]\n        <DED>elif nbg.label is not None:\n            <IND>val = str(nbg.label)\n        <DED>else:\n            <IND>val = 'No Label'\n        <DED>legend = f\"{val} - {nbg.distance:.5f}\"\n        if nbg.label == example_class:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]