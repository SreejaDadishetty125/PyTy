[
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/__init__.py:37:0 Incompatible variable type [9]: __all__ is declared to have type `typing.Tuple[str, str, str, str]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/sets/__init__.py:138:0 Incompatible variable type [9]: __all__ is declared to have type `typing.Tuple[]` but is used as type `typing.Tuple[str, ...]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/sets/__init__.py:142:0 Incompatible variable type [9]: __all__ is declared to have type `typing.Tuple[]` but is used as type `typing.Tuple[str, ...]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/sets/__init__.py:146:0 Incompatible variable type [9]: __all__ is declared to have type `typing.Tuple[]` but is used as type `typing.Tuple[typing.Any, ...]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/__init__.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/sets/__init__.py:150:0 Incompatible variable type [9]: __all__ is declared to have type `typing.Tuple[]` but is used as type `typing.Tuple[str, ...]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/set.py",
    "min_patch_found": false,
    "full_warning_msg": "odl/sets/set.py:39:10 Invalid type [31]: Expression `future.utils.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "odlgroup/odl",
    "commit": "d0e1b5ec60bf140bd38293010b938592546726c8",
    "filename": "odl/sets/space.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/odlgroup-odl/odl/set/space.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "odl/sets/space.py:478:17 Invalid type [31]: Expression `future.utils.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "message": " Expression `future.utils.with_metaclass(abc.ABCMeta, object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 478,
    "warning_line": "    class Vector(with_metaclass(ABCMeta, object)):"
  }
]