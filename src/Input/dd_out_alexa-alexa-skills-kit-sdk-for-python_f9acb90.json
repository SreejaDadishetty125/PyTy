[
  {
    "project": "alexa/alexa-skills-kit-sdk-for-python",
    "commit": "f9acb901334b0b50e3e9e67b0be52aa304be196c",
    "filename": "ask-sdk/ask_sdk/standard.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/alexa-alexa-skills-kit-sdk-for-python/ask-sdk/ask_sdk/standard.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ask-sdk/ask_sdk/standard.py:93:41 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `bool`.",
    "message": " Expected `str` for 2nd positional only parameter to call `dict.__setitem__` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 93,
    "warning_line": "                kwargs[\"create_table\"] = self.auto_create_table",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if typing.TYPE_CHECKING:\n    from typing import Callable\n    from ask_sdk_model import RequestEnvelope\n",
        "source_code_len": 103,
        "target_code": "if typing.TYPE_CHECKING:\n    from typing import Callable, Dict, Any\n    from ask_sdk_model import RequestEnvelope\n",
        "target_code_len": 114,
        "diff_format": "@@ -24,3 +24,3 @@\n if typing.TYPE_CHECKING:\n-    from typing import Callable\n+    from typing import Callable, Dict, Any\n     from ask_sdk_model import RequestEnvelope\n",
        "source_code_with_indent": "if typing.TYPE_CHECKING:\n    <IND>from typing import Callable\n    from ask_sdk_model import RequestEnvelope\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if typing.TYPE_CHECKING:\n    <IND>from typing import Callable, Dict, Any\n    from ask_sdk_model import RequestEnvelope\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if self.table_name is not None:\n            kwargs = {\"table_name\": self.table_name}\n            if self.auto_create_table:\n",
        "source_code_len": 132,
        "target_code": "        if self.table_name is not None:\n            kwargs = {\"table_name\": self.table_name}  # type: Dict[str, Any]\n            if self.auto_create_table:\n",
        "target_code_len": 156,
        "diff_format": "@@ -90,3 +90,3 @@\n         if self.table_name is not None:\n-            kwargs = {\"table_name\": self.table_name}\n+            kwargs = {\"table_name\": self.table_name}  # type: Dict[str, Any]\n             if self.auto_create_table:\n",
        "source_code_with_indent": "        if self.table_name is not None:\n            <IND>kwargs = {\"table_name\": self.table_name}\n            if self.auto_create_table:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if self.table_name is not None:\n            <IND>kwargs = {\"table_name\": self.table_name}  # type: Dict[str, Any]\n            if self.auto_create_table:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "alexa/alexa-skills-kit-sdk-for-python",
    "commit": "f9acb901334b0b50e3e9e67b0be52aa304be196c",
    "filename": "ask-sdk-core/ask_sdk_core/serialize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/alexa-alexa-skills-kit-sdk-for-python/ask-sdk-core/ask_sdk_core/serialize.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ask-sdk-core/ask_sdk_core/serialize.py:96:16 Incompatible return type [7]: Expected `Union[None, Dict[str, typing.Any], List[typing.Any], str, typing.Tuple[typing.Any, ...]]` but got `int`.",
    "message": " Expected `Union[None, Dict[str, typing.Any], List[typing.Any], str, typing.Tuple[typing.Any, ...]]` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 96,
    "warning_line": "                return int(obj)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n        \"\"\"Builds a serialized object.\n",
        "source_code_len": 140,
        "target_code": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n        \"\"\"Builds a serialized object.\n",
        "target_code_len": 152,
        "diff_format": "@@ -59,3 +61,3 @@\n     def serialize(self, obj):\n-        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n+        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n         \"\"\"Builds a serialized object.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n        <IND>",
        "target_code_with_indent": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n        <IND>"
      }
    ]
  },
  {
    "project": "alexa/alexa-skills-kit-sdk-for-python",
    "commit": "f9acb901334b0b50e3e9e67b0be52aa304be196c",
    "filename": "ask-sdk-core/ask_sdk_core/serialize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/alexa-alexa-skills-kit-sdk-for-python/ask-sdk-core/ask_sdk_core/serialize.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ask-sdk-core/ask_sdk_core/serialize.py:98:16 Incompatible return type [7]: Expected `Union[None, Dict[str, typing.Any], List[typing.Any], str, typing.Tuple[typing.Any, ...]]` but got `float`.",
    "message": " Expected `Union[None, Dict[str, typing.Any], List[typing.Any], str, typing.Tuple[typing.Any, ...]]` but got `float`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "                return float(obj)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n        \"\"\"Builds a serialized object.\n",
        "source_code_len": 140,
        "target_code": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n        \"\"\"Builds a serialized object.\n",
        "target_code_len": 152,
        "diff_format": "@@ -59,3 +61,3 @@\n     def serialize(self, obj):\n-        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n+        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n         \"\"\"Builds a serialized object.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, None]\n        <IND>",
        "target_code_with_indent": "    def serialize(self, obj):\n        # type: (Any) -> Union[Dict[str, Any], List, Tuple, str, int, float, None]\n        <IND>"
      }
    ]
  },
  {
    "project": "alexa/alexa-skills-kit-sdk-for-python",
    "commit": "f9acb901334b0b50e3e9e67b0be52aa304be196c",
    "filename": "ask-sdk-core/ask_sdk_core/serialize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/alexa-alexa-skills-kit-sdk-for-python/ask-sdk-core/ask_sdk_core/serialize.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ask-sdk-core/ask_sdk_core/serialize.py:209:42 Incompatible parameter type [6]: Expected `typing.Mapping[Variable[six._K], Variable[six._V]]` for 1st positional only parameter to call `iteritems` but got `str`.",
    "message": " Expected `typing.Mapping[Variable[six._K], Variable[six._V]]` for 1st positional only parameter to call `iteritems` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 209,
    "warning_line": "                    for k, v in iteritems(payload)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom ask_sdk_model.services import Serializer\n",
        "source_code_len": 47,
        "target_code": "\nfrom typing import cast, Any\n\nfrom ask_sdk_model.services import Serializer\n",
        "target_code_len": 77,
        "diff_format": "@@ -29,2 +29,4 @@\n \n+from typing import cast, Any\n+\n from ask_sdk_model.services import Serializer\n",
        "source_code_with_indent": "\nfrom ask_sdk_model.services import Serializer\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import cast, Any\n\nfrom ask_sdk_model.services import Serializer\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "                sub_obj_type = re.match(\n                    'dict\\(([^,]*), (.*)\\)', obj_type).group(2)\n                return {\n                    k: self.__deserialize(v, sub_obj_type)\n                    for k, v in iteritems(payload)\n                }\n\n            # convert str to class\n            if obj_type in self.NATIVE_TYPES_MAPPING:\n                obj_type = self.NATIVE_TYPES_MAPPING[obj_type]\n            else:\n",
        "source_code_len": 429,
        "target_code": "                sub_obj_type = re.match(\n                    'dict\\(([^,]*), (.*)\\)', obj_type)\n                if sub_obj_type is None:\n                    return {}\n                sub_obj_types = sub_obj_type.group(2)\n                return {\n                    k: self.__deserialize(v, sub_obj_types)\n                    for k, v in iteritems(cast(Any,payload))\n                }\n            # convert str to class\n            if obj_type in self.NATIVE_TYPES_MAPPING:\n                obj_type = self.NATIVE_TYPES_MAPPING[obj_type]  # type: ignore\n            else:\n",
        "target_code_len": 571,
        "diff_format": "@@ -205,11 +210,13 @@\n                 sub_obj_type = re.match(\n-                    'dict\\(([^,]*), (.*)\\)', obj_type).group(2)\n+                    'dict\\(([^,]*), (.*)\\)', obj_type)\n+                if sub_obj_type is None:\n+                    return {}\n+                sub_obj_types = sub_obj_type.group(2)\n                 return {\n-                    k: self.__deserialize(v, sub_obj_type)\n-                    for k, v in iteritems(payload)\n+                    k: self.__deserialize(v, sub_obj_types)\n+                    for k, v in iteritems(cast(Any,payload))\n                 }\n-\n             # convert str to class\n             if obj_type in self.NATIVE_TYPES_MAPPING:\n-                obj_type = self.NATIVE_TYPES_MAPPING[obj_type]\n+                obj_type = self.NATIVE_TYPES_MAPPING[obj_type]  # type: ignore\n             else:\n",
        "source_code_with_indent": "                <IND>sub_obj_type = re.match(\n                    'dict\\(([^,]*), (.*)\\)', obj_type).group(2)\n                return {\n                    k: self.__deserialize(v, sub_obj_type)\n                    for k, v in iteritems(payload)\n                }\n\n            # convert str to class\n            <DED>if obj_type in self.NATIVE_TYPES_MAPPING:\n                <IND>obj_type = self.NATIVE_TYPES_MAPPING[obj_type]\n            <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>sub_obj_type = re.match(\n                    'dict\\(([^,]*), (.*)\\)', obj_type)\n                if sub_obj_type is None:\n                    <IND>return {}\n                <DED>sub_obj_types = sub_obj_type.group(2)\n                return {\n                    k: self.__deserialize(v, sub_obj_types)\n                    for k, v in iteritems(cast(Any,payload))\n                }\n            # convert str to class\n            <DED>if obj_type in self.NATIVE_TYPES_MAPPING:\n                <IND>obj_type = self.NATIVE_TYPES_MAPPING[obj_type]  # type: ignore\n            <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "alexa/alexa-skills-kit-sdk-for-python",
    "commit": "f9acb901334b0b50e3e9e67b0be52aa304be196c",
    "filename": "ask-sdk-core/ask_sdk_core/serialize.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/alexa-alexa-skills-kit-sdk-for-python/ask-sdk-core/ask_sdk_core/serialize.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ask-sdk-core/ask_sdk_core/serialize.py:359:67 Incompatible parameter type [6]: Expected `Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "message": " Expected `Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 359,
    "warning_line": "                    setattr(deserialized_model, add_param, payload[add_param])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nfrom ask_sdk_model.services import Serializer\n",
        "source_code_len": 47,
        "target_code": "\nfrom typing import cast, Any\n\nfrom ask_sdk_model.services import Serializer\n",
        "target_code_len": 77,
        "diff_format": "@@ -29,2 +29,4 @@\n \n+from typing import cast, Any\n+\n from ask_sdk_model.services import Serializer\n",
        "source_code_with_indent": "\nfrom ask_sdk_model.services import Serializer\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nfrom typing import cast, Any\n\nfrom ask_sdk_model.services import Serializer\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                for add_param in additional_params:\n                    setattr(deserialized_model, add_param, payload[add_param])\n                return deserialized_model\n",
        "source_code_len": 173,
        "target_code": "                for add_param in additional_params:\n                    setattr(deserialized_model, add_param, payload[cast(Any,add_param)])\n                return deserialized_model\n",
        "target_code_len": 183,
        "diff_format": "@@ -358,3 +368,3 @@\n                 for add_param in additional_params:\n-                    setattr(deserialized_model, add_param, payload[add_param])\n+                    setattr(deserialized_model, add_param, payload[cast(Any,add_param)])\n                 return deserialized_model\n",
        "source_code_with_indent": "                for add_param in additional_params:\n                    <IND>setattr(deserialized_model, add_param, payload[add_param])\n                <DED>return deserialized_model\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                for add_param in additional_params:\n                    <IND>setattr(deserialized_model, add_param, payload[cast(Any,add_param)])\n                <DED>return deserialized_model\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]