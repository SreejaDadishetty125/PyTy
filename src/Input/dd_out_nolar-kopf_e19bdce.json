[
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/reactor/registries.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/reactor/registries.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/reactor/registries.py:34:21 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 2nd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 2nd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 34,
    "warning_line": "                     \"callbacks.ActivityFn\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_len": 293,
        "target_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_len": 283,
        "diff_format": "@@ -33,7 +29,7 @@\n HandlerFnT = TypeVar('HandlerFnT',\n-                     \"callbacks.ActivityFn\",\n-                     \"callbacks.ResourceIndexingFn\",\n-                     \"callbacks.ResourceWatchingFn\",\n-                     \"callbacks.ResourceSpawningFn\",\n-                     \"callbacks.ResourceChangingFn\")\n+                     callbacks.ActivityFn,\n+                     callbacks.ResourceIndexingFn,\n+                     callbacks.ResourceWatchingFn,\n+                     callbacks.ResourceSpawningFn,\n+                     callbacks.ResourceChangingFn)\n \n",
        "source_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/reactor/registries.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/reactor/registries.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/reactor/registries.py:35:21 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 3rd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 3rd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 35,
    "warning_line": "                     \"callbacks.ResourceIndexingFn\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_len": 293,
        "target_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_len": 283,
        "diff_format": "@@ -33,7 +29,7 @@\n HandlerFnT = TypeVar('HandlerFnT',\n-                     \"callbacks.ActivityFn\",\n-                     \"callbacks.ResourceIndexingFn\",\n-                     \"callbacks.ResourceWatchingFn\",\n-                     \"callbacks.ResourceSpawningFn\",\n-                     \"callbacks.ResourceChangingFn\")\n+                     callbacks.ActivityFn,\n+                     callbacks.ResourceIndexingFn,\n+                     callbacks.ResourceWatchingFn,\n+                     callbacks.ResourceSpawningFn,\n+                     callbacks.ResourceChangingFn)\n \n",
        "source_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/reactor/registries.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/reactor/registries.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/reactor/registries.py:36:21 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 4th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 4th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 36,
    "warning_line": "                     \"callbacks.ResourceWatchingFn\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_len": 293,
        "target_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_len": 283,
        "diff_format": "@@ -33,7 +29,7 @@\n HandlerFnT = TypeVar('HandlerFnT',\n-                     \"callbacks.ActivityFn\",\n-                     \"callbacks.ResourceIndexingFn\",\n-                     \"callbacks.ResourceWatchingFn\",\n-                     \"callbacks.ResourceSpawningFn\",\n-                     \"callbacks.ResourceChangingFn\")\n+                     callbacks.ActivityFn,\n+                     callbacks.ResourceIndexingFn,\n+                     callbacks.ResourceWatchingFn,\n+                     callbacks.ResourceSpawningFn,\n+                     callbacks.ResourceChangingFn)\n \n",
        "source_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/reactor/registries.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/reactor/registries.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/reactor/registries.py:37:21 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 5th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 5th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 37,
    "warning_line": "                     \"callbacks.ResourceSpawningFn\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_len": 293,
        "target_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_len": 283,
        "diff_format": "@@ -33,7 +29,7 @@\n HandlerFnT = TypeVar('HandlerFnT',\n-                     \"callbacks.ActivityFn\",\n-                     \"callbacks.ResourceIndexingFn\",\n-                     \"callbacks.ResourceWatchingFn\",\n-                     \"callbacks.ResourceSpawningFn\",\n-                     \"callbacks.ResourceChangingFn\")\n+                     callbacks.ActivityFn,\n+                     callbacks.ResourceIndexingFn,\n+                     callbacks.ResourceWatchingFn,\n+                     callbacks.ResourceSpawningFn,\n+                     callbacks.ResourceChangingFn)\n \n",
        "source_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/reactor/registries.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/reactor/registries.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/reactor/registries.py:38:21 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 6th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 6th positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 38,
    "warning_line": "                     \"callbacks.ResourceChangingFn\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_len": 293,
        "target_code": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_len": 283,
        "diff_format": "@@ -33,7 +29,7 @@\n HandlerFnT = TypeVar('HandlerFnT',\n-                     \"callbacks.ActivityFn\",\n-                     \"callbacks.ResourceIndexingFn\",\n-                     \"callbacks.ResourceWatchingFn\",\n-                     \"callbacks.ResourceSpawningFn\",\n-                     \"callbacks.ResourceChangingFn\")\n+                     callbacks.ActivityFn,\n+                     callbacks.ResourceIndexingFn,\n+                     callbacks.ResourceWatchingFn,\n+                     callbacks.ResourceSpawningFn,\n+                     callbacks.ResourceChangingFn)\n \n",
        "source_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     \"callbacks.ActivityFn\",\n                     \"callbacks.ResourceIndexingFn\",\n                     \"callbacks.ResourceWatchingFn\",\n                     \"callbacks.ResourceSpawningFn\",\n                     \"callbacks.ResourceChangingFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "HandlerFnT = TypeVar('HandlerFnT',\n                     callbacks.ActivityFn,\n                     callbacks.ResourceIndexingFn,\n                     callbacks.ResourceWatchingFn,\n                     callbacks.ResourceSpawningFn,\n                     callbacks.ResourceChangingFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/structs/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/structs/callbacks.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/structs/callbacks.py:244:23 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 2nd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 2nd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 244,
    "warning_line": "_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n\n",
        "source_code_len": 58,
        "target_code": "\nResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n\n",
        "target_code_len": 115,
        "diff_format": "@@ -242,4 +225,4 @@\n \n-\n-_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n+ResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n+_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n \n",
        "source_code_with_indent": "\n\n<DED>_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>ResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "nolar/kopf",
    "commit": "e19bdce2b01c352d37254acadc055517bd9b94a2",
    "filename": "kopf/structs/callbacks.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/nolar-kopf/kopf/structs/callbacks.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "kopf/structs/callbacks.py:244:39 Incompatible parameter type [6]: Expected `typing.Type[typing.Any]` for 3rd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "message": " Expected `typing.Type[typing.Any]` for 3rd positional only parameter to call `TypeVar.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 244,
    "warning_line": "_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n\n",
        "source_code_len": 58,
        "target_code": "\nResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n\n",
        "target_code_len": 115,
        "diff_format": "@@ -242,4 +225,4 @@\n \n-\n-_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n+ResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n+_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n \n",
        "source_code_with_indent": "\n\n<DED>_FnT = TypeVar('_FnT', \"WhenFilterFn\", \"MetaFilterFn\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>ResourceSpawningFn = Union[ResourceDaemonFn, ResourceTimerFn]\n_FnT = TypeVar('_FnT', WhenFilterFn, MetaFilterFn)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]