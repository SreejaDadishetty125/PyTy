[
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/jsonParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/jsonParser.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/jsonParser.py:70:53 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pp.core.ParserElement.__call__` but got `pp.core.Group`.",
    "message": " Expected `str` for 1st positional only parameter to call `pp.core.ParserElement.__call__` but got `pp.core.Group`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 70,
    "warning_line": "jsonValue << (jsonString | jsonNumber | jsonObject | jsonArray | TRUE | FALSE | NULL)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    LBRACK + pp.Optional(jsonElements) + RBRACK, aslist=RETURN_PYTHON_COLLECTIONS\n)\n\n",
        "source_code_len": 85,
        "target_code": "    LBRACK + pp.Optional(jsonElements) + RBRACK, aslist=RETURN_PYTHON_COLLECTIONS\n).setName(\"jsonArray\")\n\n",
        "target_code_len": 106,
        "diff_format": "@@ -67,3 +67,3 @@\n     LBRACK + pp.Optional(jsonElements) + RBRACK, aslist=RETURN_PYTHON_COLLECTIONS\n-)\n+).setName(\"jsonArray\")\n \n",
        "source_code_with_indent": "    LBRACK + pp.Optional(jsonElements) + RBRACK, aslist=RETURN_PYTHON_COLLECTIONS\n)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    LBRACK + pp.Optional(jsonElements) + RBRACK, aslist=RETURN_PYTHON_COLLECTIONS\n).setName(\"jsonArray\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:52:40 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 52,
    "warning_line": "proptype = Group(SEMI + typename + EQ + typeval).suppress()"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:54:57 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 54,
    "warning_line": "calprop = Group(CALPROP + ZeroOrMore(proptype) + COLON + propval)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_len": 406,
        "target_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_len": 498,
        "diff_format": "@@ -39,15 +39,16 @@\n \n-CALPROP = oneOf(\"VERSION PRODID METHOD\")\n-ALMPROP = oneOf(\"TRIGGER\")\n+CALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\n+ALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\n EVTPROP = oneOf(\n-    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n-                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n-                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n+    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n+       X-MOZILLA-RECUR-DEFAULT-UNITS\n+       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n )\n \n-propval = Word(valstr)\n-typeval = Word(valstr)\n-typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n+valuestr = Word(valstr).setName(\"valuestr\")\n+propval = valuestr\n+typeval = valuestr\n+typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n \n-proptype = Group(SEMI + typename + EQ + typeval).suppress()\n+proptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n \n",
        "source_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:55:57 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 55,
    "warning_line": "almprop = Group(ALMPROP + ZeroOrMore(proptype) + COLON + propval)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_len": 406,
        "target_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_len": 498,
        "diff_format": "@@ -39,15 +39,16 @@\n \n-CALPROP = oneOf(\"VERSION PRODID METHOD\")\n-ALMPROP = oneOf(\"TRIGGER\")\n+CALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\n+ALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\n EVTPROP = oneOf(\n-    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n-                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n-                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n+    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n+       X-MOZILLA-RECUR-DEFAULT-UNITS\n+       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n )\n \n-propval = Word(valstr)\n-typeval = Word(valstr)\n-typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n+valuestr = Word(valstr).setName(\"valuestr\")\n+propval = valuestr\n+typeval = valuestr\n+typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n \n-proptype = Group(SEMI + typename + EQ + typeval).suppress()\n+proptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n \n",
        "source_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:57:51 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.Word`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 57,
    "warning_line": "    Group(EVTPROP + ZeroOrMore(proptype) + COLON + propval).suppress()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_len": 406,
        "target_code": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_len": 498,
        "diff_format": "@@ -39,15 +39,16 @@\n \n-CALPROP = oneOf(\"VERSION PRODID METHOD\")\n-ALMPROP = oneOf(\"TRIGGER\")\n+CALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\n+ALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\n EVTPROP = oneOf(\n-    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n-                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n-                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n+    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n+       X-MOZILLA-RECUR-DEFAULT-UNITS\n+       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n )\n \n-propval = Word(valstr)\n-typeval = Word(valstr)\n-typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n+valuestr = Word(valstr).setName(\"valuestr\")\n+propval = valuestr\n+typeval = valuestr\n+typename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n \n-proptype = Group(SEMI + typename + EQ + typeval).suppress()\n+proptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n \n",
        "source_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\")\nALMPROP = oneOf(\"TRIGGER\")\nEVTPROP = oneOf(\n    \"X-MOZILLA-RECUR-DEFAULT-INTERVAL \\\n                     X-MOZILLA-RECUR-DEFAULT-UNITS \\\n                     UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\n)\n\npropval = Word(valstr)\ntypeval = Word(valstr)\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\")\n\nproptype = Group(SEMI + typename + EQ + typeval).suppress()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nCALPROP = oneOf(\"VERSION PRODID METHOD\", asKeyword=True)\nALMPROP = oneOf(\"TRIGGER\", asKeyword=True)\nEVTPROP = oneOf(\n    \"\"\"X-MOZILLA-RECUR-DEFAULT-INTERVAL\n       X-MOZILLA-RECUR-DEFAULT-UNITS\n       UID DTSTAMP LAST-MODIFIED X RRULE EXDATE\"\"\", asKeyword=True\n)\n\nvaluestr = Word(valstr).setName(\"valuestr\")\npropval = valuestr\ntypeval = valuestr\ntypename = oneOf(\"VALUE MEMBER FREQ UNTIL INTERVAL\", asKeyword=True)\n\nproptype = Group(SEMI + typename + EQ + typeval).setName(\"proptype\").suppress()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:74:59 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 74,
    "warning_line": "event = BEGIN + EVENT + evtprops + Optional(alarm) + END + EVENT"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:76:30 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "calendar = BEGIN + CALENDAR + calprops + ZeroOrMore(event) + END + CALENDAR"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:76:61 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "calendar = BEGIN + CALENDAR + calprops + ZeroOrMore(event) + END + CALENDAR"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/mozillaCalendarParser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/mozillaCalendarParser.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/mozillaCalendarParser.py:76:67 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "calendar = BEGIN + CALENDAR + calprops + ZeroOrMore(event) + END + CALENDAR"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/simpleSQL.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/simpleSQL.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/simpleSQL.py:51:18 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 51,
    "warning_line": "    (columnName + binop + columnRval)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "columnName.addParseAction(ppc.upcaseTokens)\ncolumnNameList = Group(delimitedList(columnName))\ntableName = delimitedList(ident, \".\", combine=True).setName(\"table name\")\ntableName.addParseAction(ppc.upcaseTokens)\ntableNameList = Group(delimitedList(tableName))\n\nbinop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True)\nrealNum = ppc.real()\nintNum = ppc.signed_integer()\n",
        "source_code_len": 376,
        "target_code": "columnName.addParseAction(ppc.upcaseTokens)\ncolumnNameList = Group(delimitedList(columnName).setName(\"column_list\"))\ntableName = delimitedList(ident, \".\", combine=True).setName(\"table name\")\ntableName.addParseAction(ppc.upcaseTokens)\ntableNameList = Group(delimitedList(tableName).setName(\"table_list\"))\n\nbinop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True).setName(\"binop\")\nrealNum = ppc.real().setName(\"real number\")\nintNum = ppc.signed_integer()\n",
        "target_code_len": 461,
        "diff_format": "@@ -37,9 +37,9 @@\n columnName.addParseAction(ppc.upcaseTokens)\n-columnNameList = Group(delimitedList(columnName))\n+columnNameList = Group(delimitedList(columnName).setName(\"column_list\"))\n tableName = delimitedList(ident, \".\", combine=True).setName(\"table name\")\n tableName.addParseAction(ppc.upcaseTokens)\n-tableNameList = Group(delimitedList(tableName))\n+tableNameList = Group(delimitedList(tableName).setName(\"table_list\"))\n \n-binop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True)\n-realNum = ppc.real()\n+binop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True).setName(\"binop\")\n+realNum = ppc.real().setName(\"real number\")\n intNum = ppc.signed_integer()\n",
        "source_code_with_indent": "columnName.addParseAction(ppc.upcaseTokens)\ncolumnNameList = Group(delimitedList(columnName))\ntableName = delimitedList(ident, \".\", combine=True).setName(\"table name\")\ntableName.addParseAction(ppc.upcaseTokens)\ntableNameList = Group(delimitedList(tableName))\n\nbinop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True)\nrealNum = ppc.real()\nintNum = ppc.signed_integer()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "columnName.addParseAction(ppc.upcaseTokens)\ncolumnNameList = Group(delimitedList(columnName).setName(\"column_list\"))\ntableName = delimitedList(ident, \".\", combine=True).setName(\"table name\")\ntableName.addParseAction(ppc.upcaseTokens)\ntableNameList = Group(delimitedList(tableName).setName(\"table_list\"))\n\nbinop = oneOf(\"= != < > >= <= eq ne lt le gt ge\", caseless=True).setName(\"binop\")\nrealNum = ppc.real().setName(\"real number\")\nintNum = ppc.signed_integer()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "examples/simpleSQL.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/examples/simpleSQL.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "examples/simpleSQL.py:72:29 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 72,
    "warning_line": "    + Optional(Group(WHERE + whereExpression), \"\")(\"where\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    ],\n)\n\n",
        "source_code_len": 10,
        "target_code": "    ],\n).setName(\"where_expression\")\n\n",
        "target_code_len": 38,
        "diff_format": "@@ -63,3 +63,3 @@\n     ],\n-)\n+).setName(\"where_expression\")\n \n",
        "source_code_with_indent": "    ],\n)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    ],\n).setName(\"where_expression\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "pyparsing/helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/pyparsing/helpers.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyparsing/helpers.py:820:68 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 820,
    "warning_line": "                ) + Group(lastExpr + opExpr1 + thisExpr + opExpr2 + thisExpr)"
  },
  {
    "project": "pyparsing/pyparsing",
    "commit": "dfc7d7524ed9bb74a04865a68a06982bb54fcc5c",
    "filename": "pyparsing/helpers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyparsing-pyparsing/pyparsing/helpers.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyparsing/helpers.py:1019:44 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "message": " Expected `str` for 1st positional only parameter to call `pyparsing.core.ParserElement.__call__` but got `pyparsing.core.ParserElement`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1019,
    "warning_line": "    Regex(r\"/\\*(?:[^*]|\\*(?!/))*\") + \"*/\" | dbl_slash_comment"
  }
]