[
  {
    "project": "PyCQA/astroid",
    "commit": "0f5b988553a0cdf74eb5f664247f3c195766bc00",
    "filename": "tests/unittest_regrtest.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyCQA-astroid/tests/unittest_regrtest.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "tests/unittest_regrtest.py:315:30 Incompatible parameter type [6]: Expected `typing.Optional[typing.Callable[[typing.Any, typing.Any], None]]` for 2nd positional only parameter to call `property.__init__` but got `typing.Callable[[Named(x, typing.Any)], typing.Any]`.",
    "message": " Expected `typing.Optional[typing.Callable[[typing.Any, typing.Any], None]]` for 2nd positional only parameter to call `property.__init__` but got `typing.Callable[[Named(x, typing.Any)], typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 315,
    "warning_line": "    a = property(lambda x: x, lambda x: x)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "class Whatever:\n    a = property(lambda x: x, lambda x: x)\n\n",
        "source_code_len": 60,
        "target_code": "class Whatever:\n    a = property(lambda x: x, lambda x: x)  # type: ignore\n\n",
        "target_code_len": 76,
        "diff_format": "@@ -314,3 +314,3 @@\n class Whatever:\n-    a = property(lambda x: x, lambda x: x)\n+    a = property(lambda x: x, lambda x: x)  # type: ignore\n \n",
        "source_code_with_indent": "<DED><DED>class Whatever:\n    <IND>a = property(lambda x: x, lambda x: x)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>class Whatever:\n    <IND>a = property(lambda x: x, lambda x: x)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]