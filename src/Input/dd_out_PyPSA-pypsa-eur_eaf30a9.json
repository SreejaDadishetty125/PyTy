[
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/build_bus_regions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/build_bus_regions.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/build_bus_regions.py:54:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 54,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n    configure_logging(snakemake)\n",
        "source_code_len": 60,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_bus_regions')\n    configure_logging(snakemake)\n",
        "target_code_len": 197,
        "diff_format": "@@ -53,2 +53,5 @@\n if __name__ == \"__main__\":\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('build_bus_regions')\n     configure_logging(snakemake)\n",
        "source_code_with_indent": "if __name__ == \"__main__\":\n    <IND>configure_logging(snakemake)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_bus_regions')\n    <DED>configure_logging(snakemake)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/build_cutout.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/build_cutout.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/build_cutout.py:98:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 98,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n    configure_logging(snakemake)\n",
        "source_code_len": 60,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_cutout', cutout='europe-2013-era5')\n    configure_logging(snakemake)\n",
        "target_code_len": 219,
        "diff_format": "@@ -97,2 +97,5 @@\n if __name__ == \"__main__\":\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('build_cutout', cutout='europe-2013-era5')\n     configure_logging(snakemake)\n",
        "source_code_with_indent": "if __name__ == \"__main__\":\n    <IND>configure_logging(snakemake)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_cutout', cutout='europe-2013-era5')\n    <DED>configure_logging(snakemake)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/build_hydro_profile.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/build_hydro_profile.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/build_hydro_profile.py:67:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 67,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n    configure_logging(snakemake)\n    \n    config = snakemake.config['renewable']['hydro']\n",
        "source_code_len": 117,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_hydro_profile')\n    configure_logging(snakemake)\n\n    config = snakemake.config['renewable']['hydro']\n",
        "target_code_len": 252,
        "diff_format": "@@ -66,4 +66,7 @@\n if __name__ == \"__main__\":\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('build_hydro_profile')\n     configure_logging(snakemake)\n-    \n+\n     config = snakemake.config['renewable']['hydro']\n",
        "source_code_with_indent": "if __name__ == \"__main__\":\n    <IND>configure_logging(snakemake)\n    \n    config = snakemake.config['renewable']['hydro']\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_hydro_profile')\n    <DED>configure_logging(snakemake)\n\n    config = snakemake.config['renewable']['hydro']\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/build_natura_raster.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/build_natura_raster.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/build_natura_raster.py:54:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 54,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import logging\nlogger = logging.getLogger(__name__)\nfrom _helpers import configure_logging\n\nimport numpy as np\nimport atlite\nimport geokit as gk\n\ndef determine_cutout_xXyY(cutout_name):\n    cutout = atlite.Cutout(cutout_name, cutout_dir=\"cutouts\")\n    x, X, y, Y = cutout.extent\n",
        "source_code_len": 279,
        "target_code": "import logging\nfrom _helpers import configure_logging\nimport atlite\nimport geokit as gk\nfrom pathlib import Path\n\nlogger = logging.getLogger(__name__)\n\ndef determine_cutout_xXyY(cutout_name):\n    cutout = atlite.Cutout(cutout_name, cutout_dir=cutout_dir)\n    x, X, y, Y = cutout.extent\n",
        "target_code_len": 286,
        "diff_format": "@@ -38,11 +38,11 @@\n import logging\n-logger = logging.getLogger(__name__)\n from _helpers import configure_logging\n-\n-import numpy as np\n import atlite\n import geokit as gk\n+from pathlib import Path\n+\n+logger = logging.getLogger(__name__)\n \n def determine_cutout_xXyY(cutout_name):\n-    cutout = atlite.Cutout(cutout_name, cutout_dir=\"cutouts\")\n+    cutout = atlite.Cutout(cutout_name, cutout_dir=cutout_dir)\n     x, X, y, Y = cutout.extent\n",
        "source_code_with_indent": "import logging\nlogger = logging.getLogger(__name__)\nfrom _helpers import configure_logging\n\nimport numpy as np\nimport atlite\nimport geokit as gk\n\ndef determine_cutout_xXyY(cutout_name):\n    <IND>cutout = atlite.Cutout(cutout_name, cutout_dir=\"cutouts\")\n    x, X, y, Y = cutout.extent\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import logging\nfrom _helpers import configure_logging\nimport atlite\nimport geokit as gk\nfrom pathlib import Path\n\nlogger = logging.getLogger(__name__)\n\ndef determine_cutout_xXyY(cutout_name):\n    <IND>cutout = atlite.Cutout(cutout_name, cutout_dir=cutout_dir)\n    x, X, y, Y = cutout.extent\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nif __name__ == \"__main__\":\n    configure_logging(snakemake)\n\n    cutout_names = np.unique([res['cutout'] for res in snakemake.config['renewable'].values()])\n    xs, Xs, ys, Ys = zip(*(determine_cutout_xXyY(cutout) for cutout in cutout_names))\n",
        "source_code_len": 244,
        "target_code": "\n\nif __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_natura_raster') #has to be enabled\n    configure_logging(snakemake)\n\n    cutout_dir = Path(snakemake.input.cutouts[0]).parent.resolve()\n    cutout_names = {res['cutout'] for res in snakemake.config['renewable'].values()}\n    xs, Xs, ys, Ys = zip(*(determine_cutout_xXyY(cutout) for cutout in cutout_names))\n",
        "target_code_len": 459,
        "diff_format": "@@ -52,6 +52,11 @@\n \n+\n if __name__ == \"__main__\":\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('build_natura_raster') #has to be enabled\n     configure_logging(snakemake)\n \n-    cutout_names = np.unique([res['cutout'] for res in snakemake.config['renewable'].values()])\n+    cutout_dir = Path(snakemake.input.cutouts[0]).parent.resolve()\n+    cutout_names = {res['cutout'] for res in snakemake.config['renewable'].values()}\n     xs, Xs, ys, Ys = zip(*(determine_cutout_xXyY(cutout) for cutout in cutout_names))\n",
        "source_code_with_indent": "\n<DED>if __name__ == \"__main__\":\n    <IND>configure_logging(snakemake)\n\n    cutout_names = np.unique([res['cutout'] for res in snakemake.config['renewable'].values()])\n    xs, Xs, ys, Ys = zip(*(determine_cutout_xXyY(cutout) for cutout in cutout_names))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\n<DED>if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_natura_raster') #has to be enabled\n    <DED>configure_logging(snakemake)\n\n    cutout_dir = Path(snakemake.input.cutouts[0]).parent.resolve()\n    cutout_names = {res['cutout'] for res in snakemake.config['renewable'].values()}\n    xs, Xs, ys, Ys = zip(*(determine_cutout_xXyY(cutout) for cutout in cutout_names))\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/build_renewable_profiles.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/build_renewable_profiles.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/build_renewable_profiles.py:244:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 244,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == '__main__':\n    pgb.streams.wrap_stderr()\n\n    configure_logging(snakemake)\n\n",
        "source_code_len": 92,
        "target_code": "if __name__ == '__main__':\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_renewable_profiles', technology='solar')\n    configure_logging(snakemake)\n\n    pgb.streams.wrap_stderr()\n\n",
        "target_code_len": 256,
        "diff_format": "@@ -241,5 +241,8 @@\n if __name__ == '__main__':\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('build_renewable_profiles', technology='solar')\n+    configure_logging(snakemake)\n+\n     pgb.streams.wrap_stderr()\n-\n-    configure_logging(snakemake)\n \n",
        "source_code_with_indent": "<DED>if __name__ == '__main__':\n    <IND>pgb.streams.wrap_stderr()\n\n    configure_logging(snakemake)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>if __name__ == '__main__':\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('build_renewable_profiles', technology='solar')\n    <DED>configure_logging(snakemake)\n\n    pgb.streams.wrap_stderr()\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/make_summary.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/make_summary.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/make_summary.py:479:7 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 479,
    "warning_line": "    if snakemake.wildcards.ll.endswith(\"all\"):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n    # Detect running outside of snakemake and mock snakemake for testing\n    def expand_from_wildcard(key):\n",
        "source_code_len": 135,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('make_summary', network='elec', simpl='',\n                           clusters='5', ll='copt', opts='Co2L-24H', country='all')\n        network_dir = os.path.join('..', 'results', 'networks')\n    else:\n        network_dir = os.path.join('results', 'networks')\n    configure_logging(snakemake)\n\n\n    def expand_from_wildcard(key):\n",
        "target_code_len": 471,
        "diff_format": "@@ -473,3 +473,12 @@\n if __name__ == \"__main__\":\n-    # Detect running outside of snakemake and mock snakemake for testing\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('make_summary', network='elec', simpl='',\n+                           clusters='5', ll='copt', opts='Co2L-24H', country='all')\n+        network_dir = os.path.join('..', 'results', 'networks')\n+    else:\n+        network_dir = os.path.join('results', 'networks')\n+    configure_logging(snakemake)\n+\n+\n     def expand_from_wildcard(key):\n",
        "source_code_with_indent": "<DED><DED>if __name__ == \"__main__\":\n    # Detect running outside of snakemake and mock snakemake for testing\n    <IND>def expand_from_wildcard(key):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('make_summary', network='elec', simpl='',\n                           clusters='5', ll='copt', opts='Co2L-24H', country='all')\n        network_dir = os.path.join('..', 'results', 'networks')\n    <DED>else:\n        <IND>network_dir = os.path.join('results', 'networks')\n    <DED>configure_logging(snakemake)\n\n\n    def expand_from_wildcard(key):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/plot_network.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/plot_network.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/plot_network.py:277:57 Unbound name [10]: Name `l1` is used but not defined in the current scope.",
    "message": " Name `l1` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 277,
    "warning_line": "                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_len": 122,
        "target_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -275,4 +270,3 @@\n \n-    fig.savefig(snakemake.output.only_map, dpi=150,\n-                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n+    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n \n",
        "source_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/plot_network.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/plot_network.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/plot_network.py:277:60 Unbound name [10]: Name `l2` is used but not defined in the current scope.",
    "message": " Name `l2` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 277,
    "warning_line": "                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_len": 122,
        "target_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -275,4 +270,3 @@\n \n-    fig.savefig(snakemake.output.only_map, dpi=150,\n-                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n+    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n \n",
        "source_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/plot_network.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/plot_network.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/plot_network.py:277:63 Unbound name [10]: Name `l3` is used but not defined in the current scope.",
    "message": " Name `l3` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 277,
    "warning_line": "                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_len": 122,
        "target_code": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_len": 75,
        "diff_format": "@@ -275,4 +270,3 @@\n \n-    fig.savefig(snakemake.output.only_map, dpi=150,\n-                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n+    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n \n",
        "source_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150,\n                bbox_inches='tight', bbox_extra_artists=[l1,l2,l3])\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    fig.savefig(snakemake.output.only_map, dpi=150, bbox_inches='tight')\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/plot_summary.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/plot_summary.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/plot_summary.py:185:4 Unbound name [10]: Name `configure_logging` is used but not defined in the current scope.",
    "message": " Name `configure_logging` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 185,
    "warning_line": "    configure_logging(snakemake)"
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/plot_summary.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/plot_summary.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/plot_summary.py:185:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 185,
    "warning_line": "    configure_logging(snakemake)"
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/prepare_links_p_nom.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/prepare_links_p_nom.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/prepare_links_p_nom.py:42:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 42,
    "warning_line": "    configure_logging(snakemake)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n\n    configure_logging(snakemake)\n",
        "source_code_len": 61,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake #rule must be enabled in config\n        snakemake = mock_snakemake('prepare_links_p_nom', simpl='', network='elec')\n    configure_logging(snakemake)\n",
        "target_code_len": 257,
        "diff_format": "@@ -40,3 +40,5 @@\n if __name__ == \"__main__\":\n-\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake #rule must be enabled in config\n+        snakemake = mock_snakemake('prepare_links_p_nom', simpl='', network='elec')\n     configure_logging(snakemake)\n",
        "source_code_with_indent": "if __name__ == \"__main__\":\n\n    <IND>configure_logging(snakemake)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake #rule must be enabled in config\n        snakemake = mock_snakemake('prepare_links_p_nom', simpl='', network='elec')\n    <DED>configure_logging(snakemake)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/retrieve_cutout.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PyPSA-pypsa-eur/scripts/retrieve_cutout.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scripts/retrieve_cutout.py:49:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "message": " Name `snakemake` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 49,
    "warning_line": "    configure_logging(snakemake) # TODO Make logging compatible with progressbar (see PR #102)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "if __name__ == \"__main__\":\n\n",
        "source_code_len": 28,
        "target_code": "if __name__ == \"__main__\":\n    if 'snakemake' not in globals():\n        from _helpers import mock_snakemake\n        snakemake = mock_snakemake('retrieve_cutout')\n        rootpath = '..'\n    else:\n        rootpath = '.'\n\n",
        "target_code_len": 220,
        "diff_format": "@@ -47,2 +47,8 @@\n if __name__ == \"__main__\":\n+    if 'snakemake' not in globals():\n+        from _helpers import mock_snakemake\n+        snakemake = mock_snakemake('retrieve_cutout')\n+        rootpath = '..'\n+    else:\n+        rootpath = '.'\n \n",
        "source_code_with_indent": "if __name__ == \"__main__\":\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "if __name__ == \"__main__\":\n    <IND>if 'snakemake' not in globals():\n        <IND>from _helpers import mock_snakemake\n        snakemake = mock_snakemake('retrieve_cutout')\n        rootpath = '..'\n    <DED>else:\n        <IND>rootpath = '.'\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/retrieve_databundle.py",
    "min_patch_found": false,
    "full_warning_msg": "scripts/retrieve_databundle.py:40:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  },
  {
    "project": "PyPSA/pypsa-eur",
    "commit": "eaf30a9b6552a9cc1b53d5ef94d677553656d854",
    "filename": "scripts/retrieve_natura_raster.py",
    "min_patch_found": false,
    "full_warning_msg": "scripts/retrieve_natura_raster.py:37:22 Unbound name [10]: Name `snakemake` is used but not defined in the current scope.",
    "exception": "'bool' object has no attribute 'items'",
    "dd_fail": true
  }
]