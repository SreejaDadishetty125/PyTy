[
  {
    "project": "ronf/asyncssh",
    "commit": "91501c968a0091e2573f5252f9db4fe9e830c102",
    "filename": "asyncssh/scp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ronf-asyncssh/asyncssh/scp.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": true,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "asyncssh/scp.py:75:8 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 75,
    "warning_line": "        \"\"\"Write data to the local file\"\"\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": true,
        "has_suppression": false,
        "source_code": "\nclass _SCPFileProtocol(Protocol):\n    \"\"\"Protocol for accessing a file during an SCP copy\"\"\"\n\n    async def __aenter__(self) -> 'SFTPFileProtocol':\n        \"\"\"Allow _SCPFileProtocol to be used as an async context manager\"\"\"\n\n    async def __aexit__(self, _exc_type: Type[BaseException],\n                        _exc_value: BaseException,\n                        _traceback: TracebackType) -> bool:\n        \"\"\"Wait for file close when used as an async context manager\"\"\"\n\n    async def read(self, size: int, offset: int) -> bytes:\n        \"\"\"Read data from the local file\"\"\"\n\n    async def write(self, data: bytes, offset: int) -> int:\n        \"\"\"Write data to the local file\"\"\"\n\n    async def close(self) -> None:\n        \"\"\"Close the local file\"\"\"\n\n\nclass _SCPFSProtocol(Protocol):\n",
        "source_code_len": 784,
        "target_code": "\nclass _SCPFSProtocol(Protocol):\n",
        "target_code_len": 33,
        "diff_format": "@@ -59,23 +59,2 @@\n \n-class _SCPFileProtocol(Protocol):\n-    \"\"\"Protocol for accessing a file during an SCP copy\"\"\"\n-\n-    async def __aenter__(self) -> 'SFTPFileProtocol':\n-        \"\"\"Allow _SCPFileProtocol to be used as an async context manager\"\"\"\n-\n-    async def __aexit__(self, _exc_type: Type[BaseException],\n-                        _exc_value: BaseException,\n-                        _traceback: TracebackType) -> bool:\n-        \"\"\"Wait for file close when used as an async context manager\"\"\"\n-\n-    async def read(self, size: int, offset: int) -> bytes:\n-        \"\"\"Read data from the local file\"\"\"\n-\n-    async def write(self, data: bytes, offset: int) -> int:\n-        \"\"\"Write data to the local file\"\"\"\n-\n-    async def close(self) -> None:\n-        \"\"\"Close the local file\"\"\"\n-\n-\n class _SCPFSProtocol(Protocol):\n",
        "source_code_with_indent": "\nclass _SCPFileProtocol(Protocol):\n    <IND>\"\"\"Protocol for accessing a file during an SCP copy\"\"\"\n\n    async def __aenter__(self) -> 'SFTPFileProtocol':\n        <IND>\"\"\"Allow _SCPFileProtocol to be used as an async context manager\"\"\"\n\n    <DED>async def __aexit__(self, _exc_type: Type[BaseException],\n                        _exc_value: BaseException,\n                        _traceback: TracebackType) -> bool:\n        <IND>\"\"\"Wait for file close when used as an async context manager\"\"\"\n\n    <DED>async def read(self, size: int, offset: int) -> bytes:\n        <IND>\"\"\"Read data from the local file\"\"\"\n\n    <DED>async def write(self, data: bytes, offset: int) -> int:\n        <IND>\"\"\"Write data to the local file\"\"\"\n\n    <DED>async def close(self) -> None:\n        <IND>\"\"\"Close the local file\"\"\"\n\n\n<DED><DED>class _SCPFSProtocol(Protocol):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass _SCPFSProtocol(Protocol):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ronf/asyncssh",
    "commit": "91501c968a0091e2573f5252f9db4fe9e830c102",
    "filename": "asyncssh/scp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ronf-asyncssh/asyncssh/scp.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "asyncssh/scp.py:86:8 Incompatible return type [7]: Expected `bytes` but got implicit return value of `None`.",
    "message": " Expected `bytes` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 86,
    "warning_line": "        \"\"\"Return the final component of a POSIX-style path\"\"\""
  },
  {
    "project": "ronf/asyncssh",
    "commit": "91501c968a0091e2573f5252f9db4fe9e830c102",
    "filename": "asyncssh/scp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ronf-asyncssh/asyncssh/scp.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "asyncssh/scp.py:98:8 Incompatible return type [7]: Expected `bool` but got implicit return value of `None`.",
    "message": " Expected `bool` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "        \"\"\"Return if the path refers to a directory\"\"\""
  },
  {
    "project": "ronf/asyncssh",
    "commit": "91501c968a0091e2573f5252f9db4fe9e830c102",
    "filename": "asyncssh/scp.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ronf-asyncssh/asyncssh/scp.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "asyncssh/scp.py:108:8 Incompatible return type [7]: Expected `SFTPFileProtocol` but got implicit return value of `None`.",
    "message": " Expected `SFTPFileProtocol` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 108,
    "warning_line": "        \"\"\"Open a file\"\"\""
  }
]