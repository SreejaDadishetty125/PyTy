[
  {
    "project": "EQUENOS/dislash.py",
    "commit": "4849e539413f0f3c3c20d8b73193211e31d8563a",
    "filename": "dislash/interactions/application_command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EQUENOS-dislash.py/dislash/interactions/application_command.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dislash/interactions/application_command.py:369:8 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 369,
    "warning_line": "        self.name = name",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class MessageCommand(ApplicationCommand):\n    def __init__(self, name: str, **kwargs: Any) -> str:\n        super().__init__(ApplicationCommandType.MESSAGE, **kwargs)\n",
        "source_code_len": 166,
        "target_code": "class MessageCommand(ApplicationCommand):\n    def __init__(self, name: str, **kwargs: Any) -> None:\n        super().__init__(ApplicationCommandType.MESSAGE, **kwargs)\n",
        "target_code_len": 167,
        "diff_format": "@@ -366,3 +366,3 @@\n class MessageCommand(ApplicationCommand):\n-    def __init__(self, name: str, **kwargs: Any) -> str:\n+    def __init__(self, name: str, **kwargs: Any) -> None:\n         super().__init__(ApplicationCommandType.MESSAGE, **kwargs)\n",
        "source_code_with_indent": "<DED><DED><DED>class MessageCommand(ApplicationCommand):\n    <IND>def __init__(self, name: str, **kwargs: Any) -> str:\n        <IND>super().__init__(ApplicationCommandType.MESSAGE, **kwargs)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED><DED>class MessageCommand(ApplicationCommand):\n    <IND>def __init__(self, name: str, **kwargs: Any) -> None:\n        <IND>super().__init__(ApplicationCommandType.MESSAGE, **kwargs)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "EQUENOS/dislash.py",
    "commit": "4849e539413f0f3c3c20d8b73193211e31d8563a",
    "filename": "dislash/interactions/application_command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EQUENOS-dislash.py/dislash/interactions/application_command.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dislash/interactions/application_command.py:445:30 Incompatible parameter type [6]: Expected `bool` for 1st positional only parameter to call `SlashCommand.__init__` but got `object`.",
    "message": " Expected `bool` for 1st positional only parameter to call `SlashCommand.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 445,
    "warning_line": "        return SlashCommand(**payload, options=options)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n        return SlashCommand(**payload, options=options)\n\n",
        "source_code_len": 130,
        "target_code": "\n        options = payload.pop(\"options\") or []\n        return SlashCommand(\n            id=payload[\"id\"],\n            name=payload[\"name\"],\n            description=payload[\"description\"],\n            type=payload[\"type\"],\n            default_permission=payload[\"default_permission\"],\n            options=[\n                Option.from_dict(p) for p in options\n            ],\n        )\n\n",
        "target_code_len": 386,
        "diff_format": "@@ -443,4 +443,13 @@\n \n-        options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n-        return SlashCommand(**payload, options=options)\n+        options = payload.pop(\"options\") or []\n+        return SlashCommand(\n+            id=payload[\"id\"],\n+            name=payload[\"name\"],\n+            description=payload[\"description\"],\n+            type=payload[\"type\"],\n+            default_permission=payload[\"default_permission\"],\n+            options=[\n+                Option.from_dict(p) for p in options\n+            ],\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n        return SlashCommand(**payload, options=options)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>options = payload.pop(\"options\") or []\n        return SlashCommand(\n            id=payload[\"id\"],\n            name=payload[\"name\"],\n            description=payload[\"description\"],\n            type=payload[\"type\"],\n            default_permission=payload[\"default_permission\"],\n            options=[\n                Option.from_dict(p) for p in options\n            ],\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "EQUENOS/dislash.py",
    "commit": "4849e539413f0f3c3c20d8b73193211e31d8563a",
    "filename": "dislash/interactions/application_command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EQUENOS-dislash.py/dislash/interactions/application_command.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "dislash/interactions/application_command.py:445:30 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `SlashCommand.__init__` but got `object`.",
    "message": " Expected `str` for 1st positional only parameter to call `SlashCommand.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 445,
    "warning_line": "        return SlashCommand(**payload, options=options)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n        return SlashCommand(**payload, options=options)\n\n",
        "source_code_len": 130,
        "target_code": "\n        options = payload.pop(\"options\") or []\n        return SlashCommand(\n            id=payload[\"id\"],\n            name=payload[\"name\"],\n            description=payload[\"description\"],\n            type=payload[\"type\"],\n            default_permission=payload[\"default_permission\"],\n            options=[\n                Option.from_dict(p) for p in options\n            ],\n        )\n\n",
        "target_code_len": 386,
        "diff_format": "@@ -443,4 +443,13 @@\n \n-        options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n-        return SlashCommand(**payload, options=options)\n+        options = payload.pop(\"options\") or []\n+        return SlashCommand(\n+            id=payload[\"id\"],\n+            name=payload[\"name\"],\n+            description=payload[\"description\"],\n+            type=payload[\"type\"],\n+            default_permission=payload[\"default_permission\"],\n+            options=[\n+                Option.from_dict(p) for p in options\n+            ],\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>options = [Option.from_dict(p) for p in payload.pop[\"options\"]]\n        return SlashCommand(**payload, options=options)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>options = payload.pop(\"options\") or []\n        return SlashCommand(\n            id=payload[\"id\"],\n            name=payload[\"name\"],\n            description=payload[\"description\"],\n            type=payload[\"type\"],\n            default_permission=payload[\"default_permission\"],\n            options=[\n                Option.from_dict(p) for p in options\n            ],\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]