[
  {
    "project": "EthTx/ethtx",
    "commit": "25164c26ee797e67bb675dcb5ea0b5a9e11144ce",
    "filename": "ethtx/providers/semantic_providers/semantics_database.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EthTx-ethtx/ethtx/providers/semantic_providers/database.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ethtx/providers/semantic_providers/semantics_database.py:65:4 Inconsistent override [15]: `ethtx.providers.semantic_providers.semantics_database.MongoSemanticsDatabase.get_signature_semantics` overrides method defined in `ISemanticsDatabase` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Optional[List[Dict[typing.Any, typing.Any]]]`.",
    "message": " `ethtx.providers.semantic_providers.semantics_database.MongoSemanticsDatabase.get_signature_semantics` overrides method defined in `ISemanticsDatabase` inconsistently. Returned type `unknown` is not a subtype of the overridden return `Optional[List[Dict[typing.Any, typing.Any]]]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 65,
    "warning_line": "    def get_signature_semantics(self, signature_hash: str) -> Cursor:"
  },
  {
    "project": "EthTx/ethtx",
    "commit": "25164c26ee797e67bb675dcb5ea0b5a9e11144ce",
    "filename": "ethtx/providers/semantic_providers/semantics_repository.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EthTx-ethtx/ethtx/providers/semantic_providers/repository.py",
    "file_hunks_size": 19,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ethtx/providers/semantic_providers/semantics_repository.py:56:8 Incompatible return type [7]: Expected `List[typing.Any]` but got `Optional[List[typing.Any]]`.",
    "message": " Expected `List[typing.Any]` but got `Optional[List[typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 56,
    "warning_line": "        return tmp_records"
  },
  {
    "project": "EthTx/ethtx",
    "commit": "25164c26ee797e67bb675dcb5ea0b5a9e11144ce",
    "filename": "ethtx/providers/semantic_providers/semantics_repository.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/EthTx-ethtx/ethtx/providers/semantic_providers/repository.py",
    "file_hunks_size": 19,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "ethtx/providers/semantic_providers/semantics_repository.py:502:12 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `list.__init__` but got `Optional[List[typing.Dict[typing.Any, typing.Any]]]`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `list.__init__` but got `Optional[List[typing.Dict[typing.Any, typing.Any]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 502,
    "warning_line": "            self.database.get_signature_semantics(signature_hash=signature_hash)"
  }
]