[
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:104:10 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `jax._src.numpy.lax_numpy.ndarray`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `jax._src.numpy.lax_numpy.ndarray`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 104,
    "warning_line": "  d = len(x0)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    fun: Callable,\n    x0: jnp.ndarray,\n    maxiter: Optional[int] = None,\n    norm=jnp.inf,\n",
        "source_code_len": 93,
        "target_code": "    fun: Callable,\n    x0: Array,\n    maxiter: Optional[float] = None,\n    norm=jnp.inf,\n",
        "target_code_len": 89,
        "diff_format": "@@ -67,4 +69,4 @@\n     fun: Callable,\n-    x0: jnp.ndarray,\n-    maxiter: Optional[int] = None,\n+    x0: Array,\n+    maxiter: Optional[float] = None,\n     norm=jnp.inf,\n",
        "source_code_with_indent": "    fun: Callable,\n    x0: jnp.ndarray,\n    maxiter: Optional[int] = None,\n    norm=jnp.inf,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    fun: Callable,\n    x0: Array,\n    maxiter: Optional[float] = None,\n    norm=jnp.inf,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:157:12 Unsupported operand [58]: `+` is not supported for operand types `jax._src.numpy.lax_numpy.ndarray` and `typing.Any`.",
    "message": " `+` is not supported for operand types `jax._src.numpy.lax_numpy.ndarray` and `typing.Any`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 157,
    "warning_line": "    x_kp1 = state.x_k + s_k",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  \"\"\"\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "source_code_len": 413,
        "target_code": "  \"\"\"\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n",
        "target_code_len": 329,
        "diff_format": "@@ -49,16 +51,16 @@\n   \"\"\"\n-  converged: Union[bool, jnp.ndarray]\n-  failed: Union[bool, jnp.ndarray]\n-  k: Union[int, jnp.ndarray]\n-  nfev: Union[int, jnp.ndarray]\n-  ngev: Union[int, jnp.ndarray]\n-  x_k: jnp.ndarray\n-  f_k: jnp.ndarray\n-  g_k: jnp.ndarray\n-  s_history: jnp.ndarray\n-  y_history: jnp.ndarray\n-  rho_history: jnp.ndarray\n-  gamma: Union[float, jnp.ndarray]\n-  status: Union[int, jnp.ndarray]\n-  ls_status: Union[int, jnp.ndarray]\n+  converged: Union[bool, Array]\n+  failed: Union[bool, Array]\n+  k: Union[int, Array]\n+  nfev: Union[int, Array]\n+  ngev: Union[int, Array]\n+  x_k: Array\n+  f_k: Array\n+  g_k: Array\n+  s_history: Array\n+  y_history: Array\n+  rho_history: Array\n+  gamma: Union[float, Array]\n+  status: Union[int, Array]\n+  ls_status: Union[int, Array]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "target_code_with_indent": "\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n"
      }
    ]
  },
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:178:8 Unsupported operand [58]: `+` is not supported for operand types `Union[int, jax._src.numpy.lax_numpy.ndarray]` and `int`.",
    "message": " `+` is not supported for operand types `Union[int, jax._src.numpy.lax_numpy.ndarray]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 178,
    "warning_line": "      k=state.k + 1,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  \"\"\"\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "source_code_len": 413,
        "target_code": "  \"\"\"\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n",
        "target_code_len": 329,
        "diff_format": "@@ -49,16 +51,16 @@\n   \"\"\"\n-  converged: Union[bool, jnp.ndarray]\n-  failed: Union[bool, jnp.ndarray]\n-  k: Union[int, jnp.ndarray]\n-  nfev: Union[int, jnp.ndarray]\n-  ngev: Union[int, jnp.ndarray]\n-  x_k: jnp.ndarray\n-  f_k: jnp.ndarray\n-  g_k: jnp.ndarray\n-  s_history: jnp.ndarray\n-  y_history: jnp.ndarray\n-  rho_history: jnp.ndarray\n-  gamma: Union[float, jnp.ndarray]\n-  status: Union[int, jnp.ndarray]\n-  ls_status: Union[int, jnp.ndarray]\n+  converged: Union[bool, Array]\n+  failed: Union[bool, Array]\n+  k: Union[int, Array]\n+  nfev: Union[int, Array]\n+  ngev: Union[int, Array]\n+  x_k: Array\n+  f_k: Array\n+  g_k: Array\n+  s_history: Array\n+  y_history: Array\n+  rho_history: Array\n+  gamma: Union[float, Array]\n+  status: Union[int, Array]\n+  ls_status: Union[int, Array]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "target_code_with_indent": "\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n"
      }
    ]
  },
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:198:17 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `jax._src.numpy.lax_numpy.ndarray`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `jax._src.numpy.lax_numpy.ndarray`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 198,
    "warning_line": "  his_size = len(state.rho_history)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  \"\"\"\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "source_code_len": 413,
        "target_code": "  \"\"\"\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n",
        "target_code_len": 329,
        "diff_format": "@@ -49,16 +51,16 @@\n   \"\"\"\n-  converged: Union[bool, jnp.ndarray]\n-  failed: Union[bool, jnp.ndarray]\n-  k: Union[int, jnp.ndarray]\n-  nfev: Union[int, jnp.ndarray]\n-  ngev: Union[int, jnp.ndarray]\n-  x_k: jnp.ndarray\n-  f_k: jnp.ndarray\n-  g_k: jnp.ndarray\n-  s_history: jnp.ndarray\n-  y_history: jnp.ndarray\n-  rho_history: jnp.ndarray\n-  gamma: Union[float, jnp.ndarray]\n-  status: Union[int, jnp.ndarray]\n-  ls_status: Union[int, jnp.ndarray]\n+  converged: Union[bool, Array]\n+  failed: Union[bool, Array]\n+  k: Union[int, Array]\n+  nfev: Union[int, Array]\n+  ngev: Union[int, Array]\n+  x_k: Array\n+  f_k: Array\n+  g_k: Array\n+  s_history: Array\n+  y_history: Array\n+  rho_history: Array\n+  gamma: Union[float, Array]\n+  status: Union[int, Array]\n+  ls_status: Union[int, Array]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "target_code_with_indent": "\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n"
      }
    ]
  },
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:199:24 Unsupported operand [58]: `<` is not supported for operand types `Union[int, jax._src.numpy.lax_numpy.ndarray]` and `int`.",
    "message": " `<` is not supported for operand types `Union[int, jax._src.numpy.lax_numpy.ndarray]` and `int`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 199,
    "warning_line": "  curr_size = jnp.where(state.k < his_size, state.k, his_size)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  \"\"\"\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "source_code_len": 413,
        "target_code": "  \"\"\"\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n",
        "target_code_len": 329,
        "diff_format": "@@ -49,16 +51,16 @@\n   \"\"\"\n-  converged: Union[bool, jnp.ndarray]\n-  failed: Union[bool, jnp.ndarray]\n-  k: Union[int, jnp.ndarray]\n-  nfev: Union[int, jnp.ndarray]\n-  ngev: Union[int, jnp.ndarray]\n-  x_k: jnp.ndarray\n-  f_k: jnp.ndarray\n-  g_k: jnp.ndarray\n-  s_history: jnp.ndarray\n-  y_history: jnp.ndarray\n-  rho_history: jnp.ndarray\n-  gamma: Union[float, jnp.ndarray]\n-  status: Union[int, jnp.ndarray]\n-  ls_status: Union[int, jnp.ndarray]\n+  converged: Union[bool, Array]\n+  failed: Union[bool, Array]\n+  k: Union[int, Array]\n+  nfev: Union[int, Array]\n+  ngev: Union[int, Array]\n+  x_k: Array\n+  f_k: Array\n+  g_k: Array\n+  s_history: Array\n+  y_history: Array\n+  rho_history: Array\n+  gamma: Union[float, Array]\n+  status: Union[int, Array]\n+  ls_status: Union[int, Array]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "target_code_with_indent": "\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n"
      }
    ]
  },
  {
    "project": "google/jax",
    "commit": "d658108d3621934dca9912dc2222fdc812419e5b",
    "filename": "jax/_src/scipy/optimize/_lbfgs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/google-jax/jax/_src/scipy/optimize/_lbfgs.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jax/_src/scipy/optimize/_lbfgs.py:212:6 Unsupported operand [58]: `*` is not supported for operand types `Union[float, jax._src.numpy.lax_numpy.ndarray]` and `typing.Any`.",
    "message": " `*` is not supported for operand types `Union[float, jax._src.numpy.lax_numpy.ndarray]` and `typing.Any`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 212,
    "warning_line": "  q = state.gamma * q",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_len": 169,
        "target_code": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_len": 174,
        "diff_format": "@@ -14,3 +14,3 @@\n \"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\n-from typing import Callable, NamedTuple, Optional, Union\n+from typing import Any, Callable, NamedTuple, Optional, Union\n from functools import partial\n",
        "source_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\"\"\"The Limited-Memory Broyden-Fletcher-Goldfarb-Shanno minimization algorithm.\"\"\"\nfrom typing import Any, Callable, NamedTuple, Optional, Union\nfrom functools import partial\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\n",
        "source_code_len": 2,
        "target_code": "\n\nArray = Any\n\n",
        "target_code_len": 15,
        "diff_format": "@@ -24,2 +24,4 @@\n \n+\n+Array = Any\n \n",
        "source_code_with_indent": "\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n\nArray = Any\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "  \"\"\"\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "source_code_len": 413,
        "target_code": "  \"\"\"\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n",
        "target_code_len": 329,
        "diff_format": "@@ -49,16 +51,16 @@\n   \"\"\"\n-  converged: Union[bool, jnp.ndarray]\n-  failed: Union[bool, jnp.ndarray]\n-  k: Union[int, jnp.ndarray]\n-  nfev: Union[int, jnp.ndarray]\n-  ngev: Union[int, jnp.ndarray]\n-  x_k: jnp.ndarray\n-  f_k: jnp.ndarray\n-  g_k: jnp.ndarray\n-  s_history: jnp.ndarray\n-  y_history: jnp.ndarray\n-  rho_history: jnp.ndarray\n-  gamma: Union[float, jnp.ndarray]\n-  status: Union[int, jnp.ndarray]\n-  ls_status: Union[int, jnp.ndarray]\n+  converged: Union[bool, Array]\n+  failed: Union[bool, Array]\n+  k: Union[int, Array]\n+  nfev: Union[int, Array]\n+  ngev: Union[int, Array]\n+  x_k: Array\n+  f_k: Array\n+  g_k: Array\n+  s_history: Array\n+  y_history: Array\n+  rho_history: Array\n+  gamma: Union[float, Array]\n+  status: Union[int, Array]\n+  ls_status: Union[int, Array]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n  converged: Union[bool, jnp.ndarray]\n  failed: Union[bool, jnp.ndarray]\n  k: Union[int, jnp.ndarray]\n  nfev: Union[int, jnp.ndarray]\n  ngev: Union[int, jnp.ndarray]\n  x_k: jnp.ndarray\n  f_k: jnp.ndarray\n  g_k: jnp.ndarray\n  s_history: jnp.ndarray\n  y_history: jnp.ndarray\n  rho_history: jnp.ndarray\n  gamma: Union[float, jnp.ndarray]\n  status: Union[int, jnp.ndarray]\n  ls_status: Union[int, jnp.ndarray]\n\n",
        "target_code_with_indent": "\n  converged: Union[bool, Array]\n  failed: Union[bool, Array]\n  k: Union[int, Array]\n  nfev: Union[int, Array]\n  ngev: Union[int, Array]\n  x_k: Array\n  f_k: Array\n  g_k: Array\n  s_history: Array\n  y_history: Array\n  rho_history: Array\n  gamma: Union[float, Array]\n  status: Union[int, Array]\n  ls_status: Union[int, Array]\n\n"
      }
    ]
  }
]