[
  {
    "project": "poljar/matrix-nio",
    "commit": "f969a682cd7bc8d5aaace5c3b811728019eaceac",
    "filename": "nio/crypto/olm_machine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/poljar-matrix-nio/nio/crypto/olm_machine.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "nio/crypto/olm_machine.py:891:12 Incompatible return type [7]: Expected `Union[None, nio.events.misc.BadEvent, nio.events.misc.UnknownBadEvent, nio.events.room_events.Event, nio.messages.ToDeviceMessage]` but got `Union[None, nio.events.misc.BadEvent, nio.events.misc.UnknownBadEvent, nio.events.to_device.ForwardedRoomKeyEvent]`.",
    "message": " Expected `Union[None, nio.events.misc.BadEvent, nio.events.misc.UnknownBadEvent, nio.events.room_events.Event, nio.messages.ToDeviceMessage]` but got `Union[None, nio.events.misc.BadEvent, nio.events.misc.UnknownBadEvent, nio.events.to_device.ForwardedRoomKeyEvent]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 891,
    "warning_line": "            return self.decrypt(event.sender, event.sender_key, message)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        event,  # type: Union[EncryptedToDeviceEvent]\n        room_id=None  # type: str\n    ):\n        # type: (...) -> Union[Event, ToDeviceMessage, BadEventType, None]\n        logger.debug(\"Decrypting event of type {}\".format(\n",
        "source_code_len": 243,
        "target_code": "        self,\n        event,  # type: Union[EncryptedToDeviceEvent, MegolmEvent]\n        room_id=None  # type: str\n    ):\n        # type: (...) -> Union[Event, RoomKeyEvent, BadEventType, None]\n        logger.debug(\"Decrypting event of type {}\".format(\n",
        "target_code_len": 253,
        "diff_format": "@@ -866,6 +866,6 @@\n         self,\n-        event,  # type: Union[EncryptedToDeviceEvent]\n+        event,  # type: Union[EncryptedToDeviceEvent, MegolmEvent]\n         room_id=None  # type: str\n     ):\n-        # type: (...) -> Union[Event, ToDeviceMessage, BadEventType, None]\n+        # type: (...) -> Union[Event, RoomKeyEvent, BadEventType, None]\n         logger.debug(\"Decrypting event of type {}\".format(\n",
        "source_code_with_indent": "        self,\n        event,  # type: Union[EncryptedToDeviceEvent]\n        room_id=None  # type: str\n    ):\n        # type: (...) -> Union[Event, ToDeviceMessage, BadEventType, None]\n        <IND>logger.debug(\"Decrypting event of type {}\".format(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        event,  # type: Union[EncryptedToDeviceEvent, MegolmEvent]\n        room_id=None  # type: str\n    ):\n        # type: (...) -> Union[Event, RoomKeyEvent, BadEventType, None]\n        <IND>logger.debug(\"Decrypting event of type {}\".format(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]