[
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/core/observables.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/core/observables.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/core/observables.py:82:22 Incompatible parameter type [6]: Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 1st positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "message": " Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 1st positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "        return concat(self, other)"
  },
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/core/observables.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/core/observables.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/core/observables.py:82:28 Incompatible parameter type [6]: Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 2nd positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "message": " Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 2nd positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "        return concat(self, other)"
  },
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/core/observables.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/core/observables.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/core/observables.py:93:22 Incompatible parameter type [6]: Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 1st positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "message": " Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 1st positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 93,
    "warning_line": "        return concat(self, other)"
  },
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/core/observables.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/core/observables.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/core/observables.py:93:28 Incompatible parameter type [6]: Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 2nd positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "message": " Expected `typing.Tuple[AsyncObservable[typing.Any]]` for 2nd positional only parameter to call `concat` but got `AsyncObservable[Variable[T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 93,
    "warning_line": "        return concat(self, other)"
  },
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/core/observables.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/core/observables.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/core/observables.py:107:58 Incompatible parameter type [6]: Expected `AsyncIterable[Variable[aioreactive.operators.from_async_iterable.T]]` for 1st positional only parameter to call `from_async_iterable` but got `Iterable[Variable[T]]`.",
    "message": " Expected `AsyncIterable[Variable[aioreactive.operators.from_async_iterable.T]]` for 1st positional only parameter to call `from_async_iterable` but got `Iterable[Variable[T]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 107,
    "warning_line": "        return AsyncChainedObservable(from_async_iterable(iter))"
  },
  {
    "project": "dbrattli/aioreactive",
    "commit": "0b689ead6dfab938c51d37a70f98441e82c8328d",
    "filename": "aioreactive/operators/map.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/dbrattli-aioreactive/aioreactive/operators/map.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioreactive/operators/map.py:54:23 Incompatible parameter type [6]: Expected `aioreactive.core.observables.AsyncObservable[Variable[T2]]` for 2nd positional only parameter to call `Map.__init__` but got `aioreactive.core.observables.AsyncObservable[Variable[T1]]`.",
    "message": " Expected `aioreactive.core.observables.AsyncObservable[Variable[T2]]` for 2nd positional only parameter to call `Map.__init__` but got `aioreactive.core.observables.AsyncObservable[Variable[T1]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 54,
    "warning_line": "    return Map(mapper, source)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T2]) -> None:\n        self._source = source\n",
        "source_code_len": 120,
        "target_code": "\n    def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T1]) -> None:\n        self._source = source\n",
        "target_code_len": 120,
        "diff_format": "@@ -13,3 +13,3 @@\n \n-    def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T2]) -> None:\n+    def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T1]) -> None:\n         self._source = source\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T2]) -> None:\n        <IND>self._source = source\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, mapper: Callable[[T1], T2], source: AsyncObservable[T1]) -> None:\n        <IND>self._source = source\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]