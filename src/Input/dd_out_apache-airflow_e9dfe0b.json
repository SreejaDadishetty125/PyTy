[
  {
    "project": "apache/airflow",
    "commit": "e9dfe0b3647d90cbeb7dbc4397defaab7ba32072",
    "filename": "airflow/api_connexion/endpoints/dag_run_endpoint.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/apache-airflow/airflow/api_connexion/endpoints/dag_run_endpoint.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "airflow/api_connexion/endpoints/dag_run_endpoint.py:121:33 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `apply_sorting` but got `Optional[str]`.",
    "message": " Expected `str` for 2nd positional only parameter to call `apply_sorting` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 121,
    "warning_line": "    query = apply_sorting(query, order_by, to_replace, allowed_filter_attrs)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    offset: Optional[int],\n    order_by: Optional[str],\n) -> Tuple[List[DagRun], int]:\n",
        "source_code_len": 87,
        "target_code": "    offset: Optional[int],\n    order_by: str,\n) -> Tuple[List[DagRun], int]:\n",
        "target_code_len": 77,
        "diff_format": "@@ -90,3 +90,3 @@\n     offset: Optional[int],\n-    order_by: Optional[str],\n+    order_by: str,\n ) -> Tuple[List[DagRun], int]:\n",
        "source_code_with_indent": "    offset: Optional[int],\n    order_by: Optional[str],\n) -> Tuple[List[DagRun], int]:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    offset: Optional[int],\n    order_by: str,\n) -> Tuple[List[DagRun], int]:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]