[
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-api/src/opentelemetry/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-api/src/opentelemetry/metrics/__init__.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-api/src/opentelemetry/metrics/__init__.py:221:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 221,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        metric_type: Type[MetricT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_len": 108,
        "target_code": "        metric_type: Type[MetricT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_len": 106,
        "diff_format": "@@ -220,3 +220,3 @@\n         metric_type: Type[MetricT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = True,\n",
        "source_code_with_indent": "        metric_type: Type[MetricT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        metric_type: Type[MetricT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-api/src/opentelemetry/trace/__init__.py:148:18 Incompatible variable type [9]: end_time is declared to have type `int` but is used as type `None`.",
    "message": " end_time is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 148,
    "warning_line": "    def end(self, end_time: int = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def end(self, end_time: int = None) -> None:\n        \"\"\"Sets the current time as the span's end time.\n",
        "source_code_len": 107,
        "target_code": "\n    def end(self, end_time: typing.Optional[int] = None) -> None:\n        \"\"\"Sets the current time as the span's end time.\n",
        "target_code_len": 124,
        "diff_format": "@@ -147,3 +147,3 @@\n \n-    def end(self, end_time: int = None) -> None:\n+    def end(self, end_time: typing.Optional[int] = None) -> None:\n         \"\"\"Sets the current time as the span's end time.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def end(self, end_time: int = None) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def end(self, end_time: typing.Optional[int] = None) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-api/src/opentelemetry/trace/__init__.py:177:8 Incompatible variable type [9]: timestamp is declared to have type `int` but is used as type `None`.",
    "message": " timestamp is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 177,
    "warning_line": "        timestamp: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        attributes: types.Attributes = None,\n        timestamp: int = None,\n    ) -> None:\n",
        "source_code_len": 91,
        "target_code": "        attributes: types.Attributes = None,\n        timestamp: typing.Optional[int] = None,\n    ) -> None:\n",
        "target_code_len": 108,
        "diff_format": "@@ -176,3 +178,3 @@\n         attributes: types.Attributes = None,\n-        timestamp: int = None,\n+        timestamp: typing.Optional[int] = None,\n     ) -> None:\n",
        "source_code_with_indent": "        attributes: types.Attributes = None,\n        timestamp: int = None,\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        attributes: types.Attributes = None,\n        timestamp: typing.Optional[int] = None,\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-api/src/opentelemetry/trace/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-api/src/opentelemetry/trace/__init__.py:202:8 Incompatible return type [7]: Expected `bool` but got implicit return value of `None`.",
    "message": " Expected `bool` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 202,
    "warning_line": "        \"\"\"Returns whether this span will be recorded.",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n\n",
        "source_code_len": 13,
        "target_code": "        \"\"\"\n        # pylint: disable=no-self-use\n        return False\n\n",
        "target_code_len": 72,
        "diff_format": "@@ -206,2 +208,4 @@\n         \"\"\"\n+        # pylint: disable=no-self-use\n+        return False\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\n",
        "target_code_with_indent": "\n        # pylint: disable=no-self-use\n        return False\n\n"
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py:106:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 106,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_len": 118,
        "target_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_len": 116,
        "diff_format": "@@ -105,3 +105,3 @@\n         value_type: Type[metrics_api.ValueT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = True,\n",
        "source_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py:153:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 153,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_len": 118,
        "target_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_len": 116,
        "diff_format": "@@ -152,3 +152,3 @@\n         value_type: Type[metrics_api.ValueT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = True,\n",
        "source_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py:189:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 189,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_len": 118,
        "target_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_len": 116,
        "diff_format": "@@ -188,3 +188,3 @@\n         value_type: Type[metrics_api.ValueT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = True,\n",
        "source_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py:225:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 225,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = False,\n",
        "source_code_len": 119,
        "target_code": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = False,\n",
        "target_code_len": 117,
        "diff_format": "@@ -224,3 +224,3 @@\n         value_type: Type[metrics_api.ValueT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = False,\n",
        "source_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = False,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        value_type: Type[metrics_api.ValueT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = False,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py:272:8 Incompatible variable type [9]: label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "message": " label_keys is declared to have type `Sequence[str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 272,
    "warning_line": "        label_keys: Sequence[str] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        metric_type: Type[metrics_api.MetricT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_len": 120,
        "target_code": "        metric_type: Type[metrics_api.MetricT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_len": 118,
        "diff_format": "@@ -271,3 +271,3 @@\n         metric_type: Type[metrics_api.MetricT],\n-        label_keys: Sequence[str] = None,\n+        label_keys: Sequence[str] = (),\n         enabled: bool = True,\n",
        "source_code_with_indent": "        metric_type: Type[metrics_api.MetricT],\n        label_keys: Sequence[str] = None,\n        enabled: bool = True,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        metric_type: Type[metrics_api.MetricT],\n        label_keys: Sequence[str] = (),\n        enabled: bool = True,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:207:8 Incompatible variable type [9]: timestamp is declared to have type `int` but is used as type `None`.",
    "message": " timestamp is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 207,
    "warning_line": "        timestamp: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        attributes: types.Attributes = None,\n        timestamp: int = None,\n    ) -> None:\n",
        "source_code_len": 91,
        "target_code": "        attributes: types.Attributes = None,\n        timestamp: Optional[int] = None,\n    ) -> None:\n",
        "target_code_len": 101,
        "diff_format": "@@ -206,3 +206,3 @@\n         attributes: types.Attributes = None,\n-        timestamp: int = None,\n+        timestamp: Optional[int] = None,\n     ) -> None:\n",
        "source_code_with_indent": "        attributes: types.Attributes = None,\n        timestamp: int = None,\n    ) -> None:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        attributes: types.Attributes = None,\n        timestamp: Optional[int] = None,\n    ) -> None:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "open-telemetry/opentelemetry-python",
    "commit": "cfecca122c202f1dcc9361f6ab2b286c0ec17226",
    "filename": "opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/open-telemetry-opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:244:18 Incompatible variable type [9]: end_time is declared to have type `int` but is used as type `None`.",
    "message": " end_time is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 244,
    "warning_line": "    def end(self, end_time: int = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def end(self, end_time: int = None) -> None:\n        with self._lock:\n",
        "source_code_len": 75,
        "target_code": "\n    def end(self, end_time: Optional[int] = None) -> None:\n        with self._lock:\n",
        "target_code_len": 85,
        "diff_format": "@@ -243,3 +243,3 @@\n \n-    def end(self, end_time: int = None) -> None:\n+    def end(self, end_time: Optional[int] = None) -> None:\n         with self._lock:\n",
        "source_code_with_indent": "\n    <DED>def end(self, end_time: int = None) -> None:\n        <IND>with self._lock:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def end(self, end_time: Optional[int] = None) -> None:\n        <IND>with self._lock:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]