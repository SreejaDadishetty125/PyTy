[
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/communication/proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/communication/proxy.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/communication/proxy.py:356:12 Incompatible return type [7]: Expected `List[str]` but got implicit return value of `None`.",
    "message": " Expected `List[str]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 356,
    "warning_line": "            raise broadcast_status"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/communication/proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/communication/proxy.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/communication/proxy.py:407:12 Incompatible return type [7]: Expected `List[str]` but got implicit return value of `None`.",
    "message": " Expected `List[str]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 407,
    "warning_line": "            raise sending_status"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/communication/proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/communication/proxy.py",
    "file_hunks_size": 33,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/communication/proxy.py:427:12 Incompatible return type [7]: Expected `List[Message]` but got implicit return value of `None`.",
    "message": " Expected `List[Message]` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 427,
    "warning_line": "            raise sending_status"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/actor/abs_actor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/actor/abs_actor.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/rl/actor/abs_actor.py:27:48 Incompatible variable type [9]: epsilon_dict is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " epsilon_dict is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 27,
    "warning_line": "    def roll_out(self, model_dict: dict = None, epsilon_dict: dict = None, done: bool = None,"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/agent/abs_agent_manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/agent/abs_agent_manager.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/rl/agent/abs_agent_manager.py:45:57 Invalid type [31]: Expression `[str]` is not a valid type.",
    "message": " Expression `[str]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 45,
    "warning_line": "        self, name: str, mode: AgentMode, agent_id_list: [str], state_shaper: StateShaper = None,"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/agent/abs_agent_manager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/agent/abs_agent_manager.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/rl/agent/abs_agent_manager.py:46:88 Incompatible variable type [9]: explorer is declared to have type `AbsExplorer` but is used as type `None`.",
    "message": " explorer is declared to have type `AbsExplorer` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 46,
    "warning_line": "        action_shaper: ActionShaper = None, experience_shaper: ExperienceShaper = None, explorer: AbsExplorer = None"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/algorithms/torch/abs_algorithm.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/algorithms/torch/abs_algorithm.py:68:35 Incompatible variable type [9]: epsilon is declared to have type `float` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/algorithms/torch/abs_algorithm.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/algorithms/torch/dqn.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/algorithms/torch/dqn.py:49:47 Incompatible variable type [9]: epsilon is declared to have type `float` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/algorithms/torch/dqn.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/algorithms/torch/dqn.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/algorithms/torch/dqn.py:63:4 Inconsistent override [14]: `maro.rl.algorithms.torch.dqn.DQN.train` overrides method defined in `AbsAlgorithm` inconsistently. Could not find parameter `Variable(unknown)` in overriding signature.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/algorithms/torch/dqn.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/algorithms/torch/dqn.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/algorithms/torch/dqn.py:63:4 Inconsistent override [14]: `maro.rl.algorithms.torch.dqn.DQN.train` overrides method defined in `AbsAlgorithm` inconsistently. Could not find parameter `Keywords(unknown)` in overriding signature.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/algorithms/torch/dqn.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/dist_topologies/single_learner_multi_actor_sync_mode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/dist_topologies/single_learner_multi_actor_sync_mode.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "maro/rl/dist_topologies/single_learner_multi_actor_sync_mode.py:29:39 Incompatible variable type [9]: epsilon_dict is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " epsilon_dict is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 29,
    "warning_line": "        self, model_dict: dict = None, epsilon_dict: dict = None, done: bool = False, return_details: bool = True"
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/models/torch/decision_layers.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/models/torch/decision_layers.py:20:83 Invalid type [31]: Expression `[int]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/models/torch/decision_layers.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/models/torch/decision_layers.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/models/torch/decision_layers.py:59:40 Invalid type [31]: Expression `[]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/models/torch/decision_layers.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/models/torch/learning_model.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/models/torch/learning_model.py:26:17 Incompatible variable type [9]: clip_value is declared to have type `float` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/models/torch/learning_model.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/models/torch/mlp_representation.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/models/torch/mlp_representation.py:8:63 Invalid type [31]: Expression `[int]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/models/torch/mlp_representation.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "maro/rl/models/torch/mlp_representation.py",
    "min_patch_found": false,
    "full_warning_msg": "maro/rl/models/torch/mlp_representation.py:58:40 Invalid type [31]: Expression `[]` is not a valid type.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/maro/rl/models/torch/mlp_representation.py'",
    "dd_fail": true
  },
  {
    "project": "microsoft/maro",
    "commit": "9cc462c89f1ce27c52891b338c57c85c32cfb070",
    "filename": "tests/communication/test_registry_table.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/microsoft-maro/tests/communication/test_registry_table.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/communication/test_registry_table.py:10:14 Incompatible variable type [9]: peer_type is declared to have type `str` but is used as type `None`.",
    "message": " peer_type is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 10,
    "warning_line": "def get_peers(peer_type: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_peers(peer_type: str = None):\n    env = [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\",\n           \"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n    if not peer_type or peer_type == \"*\":\n        return env\n\n    target_peer = []\n    for peer in env:\n        if peer_type in peer:\n            target_peer.append(peer_type)\n    return target_peer\n\n",
        "source_code_len": 401,
        "target_code": "\nclass FakedProxy:\n    def __init__(self):\n        self._peers = {\n            \"worker_a\": [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\"],\n            \"worker_b\": [\"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n        }\n\n    @property\n    def peers_dict(self):\n        return self._peers\n\n",
        "target_code_len": 337,
        "diff_format": "@@ -9,13 +9,12 @@\n \n-def get_peers(peer_type: str = None):\n-    env = [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\",\n-           \"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n-    if not peer_type or peer_type == \"*\":\n-        return env\n+class FakedProxy:\n+    def __init__(self):\n+        self._peers = {\n+            \"worker_a\": [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\"],\n+            \"worker_b\": [\"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n+        }\n \n-    target_peer = []\n-    for peer in env:\n-        if peer_type in peer:\n-            target_peer.append(peer_type)\n-    return target_peer\n+    @property\n+    def peers_dict(self):\n+        return self._peers\n \n",
        "source_code_with_indent": "\ndef get_peers(peer_type: str = None):\n    <IND>env = [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\",\n           \"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n    if not peer_type or peer_type == \"*\":\n        <IND>return env\n\n    <DED>target_peer = []\n    for peer in env:\n        <IND>if peer_type in peer:\n            <IND>target_peer.append(peer_type)\n    <DED><DED>return target_peer\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass FakedProxy:\n    <IND>def __init__(self):\n        <IND>self._peers = {\n            \"worker_a\": [\"worker_a.1\", \"worker_a.2\", \"worker_a.3\", \"worker_a.4\", \"worker_a.5\"],\n            \"worker_b\": [\"worker_b.1\", \"worker_b.2\", \"worker_b.3\", \"worker_b.4\", \"worker_b.5\"]\n        }\n\n    <DED>@property\n    def peers_dict(self):\n        <IND>return self._peers\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        print(f\"clear register table before each test.\")\n        self.register_table = RegisterTable(get_peers)\n\n",
        "source_code_len": 113,
        "target_code": "        print(f\"clear register table before each test.\")\n        proxy = FakedProxy()\n        self.register_table = RegisterTable(proxy.peers_dict)\n\n",
        "target_code_len": 149,
        "diff_format": "@@ -30,3 +29,4 @@\n         print(f\"clear register table before each test.\")\n-        self.register_table = RegisterTable(get_peers)\n+        proxy = FakedProxy()\n+        self.register_table = RegisterTable(proxy.peers_dict)\n \n",
        "source_code_with_indent": "        <IND>print(f\"clear register table before each test.\")\n        self.register_table = RegisterTable(get_peers)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>print(f\"clear register table before each test.\")\n        proxy = FakedProxy()\n        self.register_table = RegisterTable(proxy.peers_dict)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]