[
  {
    "project": "common-workflow-language/cwltool",
    "commit": "6abb39915cf4fd279e8ef0fba8a9e7906cdf1878",
    "filename": "cwltool/expression.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/expression.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "cwltool/expression.py:25:8 Incompatible variable type [9]: rootvars is declared to have type `Dict[str, typing.Any]` but is used as type `Union[Dict[str, typing.Any], List[typing.Any], str]`.",
    "message": " rootvars is declared to have type `Dict[str, typing.Any]` but is used as type `Union[Dict[str, typing.Any], List[typing.Any], str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 25,
    "warning_line": "        rootvars = bytes2str_in_dicts(rootvars)  # type -> ignore",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    if six.PY3:\n        rootvars = bytes2str_in_dicts(rootvars)  # type -> ignore\n\n",
        "source_code_len": 83,
        "target_code": "    if six.PY3:\n        rootvars = bytes2str_in_dicts(rootvars)  # type: ignore\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -24,3 +24,3 @@\n     if six.PY3:\n-        rootvars = bytes2str_in_dicts(rootvars)  # type -> ignore\n+        rootvars = bytes2str_in_dicts(rootvars)  # type: ignore\n \n",
        "source_code_with_indent": "    <IND>if six.PY3:\n        <IND>rootvars = bytes2str_in_dicts(rootvars)  # type -> ignore\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>if six.PY3:\n        <IND>rootvars = bytes2str_in_dicts(rootvars)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "6abb39915cf4fd279e8ef0fba8a9e7906cdf1878",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:200:63 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `Builder.build_job_script` but got `List[bytes]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `Builder.build_job_script` but got `List[bytes]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 200,
    "warning_line": "                job_script_contents = builder.build_job_script(commands)"
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "6abb39915cf4fd279e8ef0fba8a9e7906cdf1878",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:202:16 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `_job_popen` but got `List[bytes]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `_job_popen` but got `List[bytes]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 202,
    "warning_line": "                commands,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def _job_popen(\n        commands,  # type: List[str]\n        stdin_path,  # type: Text\n",
        "source_code_len": 87,
        "target_code": "def _job_popen(\n        commands,  # type: List[bytes]\n        stdin_path,  # type: Text\n",
        "target_code_len": 89,
        "diff_format": "@@ -403,3 +405,3 @@\n def _job_popen(\n-        commands,  # type: List[str]\n+        commands,  # type: List[bytes]\n         stdin_path,  # type: Text\n",
        "source_code_with_indent": "<DED><DED>def _job_popen(\n        commands,  # type: List[str]\n        stdin_path,  # type: Text\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>def _job_popen(\n        commands,  # type: List[bytes]\n        stdin_path,  # type: Text\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "6abb39915cf4fd279e8ef0fba8a9e7906cdf1878",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:467:8 Incompatible variable type [9]: key is declared to have type `Union[bytes, str]` but is used as type `None`.",
    "message": " key is declared to have type `Union[bytes, str]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 467,
    "warning_line": "        key = None  # type: Union[Text, bytes]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        env_copy = {}\n        key = None  # type: Union[Text, bytes]\n        for key in env:\n            key = key.encode(\"utf-8\")\n            env_copy[key] = env[key]\n",
        "source_code_len": 168,
        "target_code": "        env_copy = {}\n        key = None  # type: Any\n        for key in env:\n            env_copy[key] = env[key]\n",
        "target_code_len": 115,
        "diff_format": "@@ -466,5 +468,4 @@\n         env_copy = {}\n-        key = None  # type: Union[Text, bytes]\n+        key = None  # type: Any\n         for key in env:\n-            key = key.encode(\"utf-8\")\n             env_copy[key] = env[key]\n",
        "source_code_with_indent": "        <DED>env_copy = {}\n        key = None  # type: Union[Text, bytes]\n        for key in env:\n            <IND>key = key.encode(\"utf-8\")\n            env_copy[key] = env[key]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>env_copy = {}\n        key = None  # type: Any\n        for key in env:\n            <IND>env_copy[key] = env[key]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "6abb39915cf4fd279e8ef0fba8a9e7906cdf1878",
    "filename": "cwltool/job.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/job.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/job.py:470:32 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `typing.Mapping.__getitem__` but got `bytes`.",
    "message": " Expected `str` for 1st positional only parameter to call `typing.Mapping.__getitem__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 470,
    "warning_line": "            env_copy[key] = env[key]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        env_copy = {}\n        key = None  # type: Union[Text, bytes]\n        for key in env:\n            key = key.encode(\"utf-8\")\n            env_copy[key] = env[key]\n",
        "source_code_len": 168,
        "target_code": "        env_copy = {}\n        key = None  # type: Any\n        for key in env:\n            env_copy[key] = env[key]\n",
        "target_code_len": 115,
        "diff_format": "@@ -466,5 +468,4 @@\n         env_copy = {}\n-        key = None  # type: Union[Text, bytes]\n+        key = None  # type: Any\n         for key in env:\n-            key = key.encode(\"utf-8\")\n             env_copy[key] = env[key]\n",
        "source_code_with_indent": "        <DED>env_copy = {}\n        key = None  # type: Union[Text, bytes]\n        for key in env:\n            <IND>key = key.encode(\"utf-8\")\n            env_copy[key] = env[key]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <DED>env_copy = {}\n        key = None  # type: Any\n        for key in env:\n            <IND>env_copy[key] = env[key]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]