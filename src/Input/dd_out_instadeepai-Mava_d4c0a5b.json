[
  {
    "project": "instadeepai/Mava",
    "commit": "d4c0a5b09e665a2aa4edb13cc2070497ba94aabc",
    "filename": "mava/components/tf/modules/exploration/exploration_scheduling.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/components/tf/modules/exploration/exploration_scheduling.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/components/tf/modules/exploration/exploration_scheduling.py:165:4 Inconsistent override [15]: `mava.components.tf.modules.exploration.exploration_scheduling.LinearExplorationTimestepScheduler.decrement_epsilon` overrides method defined in `BaseExplorationTimestepScheduler` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "message": " `mava.components.tf.modules.exploration.exploration_scheduling.LinearExplorationTimestepScheduler.decrement_epsilon` overrides method defined in `BaseExplorationTimestepScheduler` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 165,
    "warning_line": "    def decrement_epsilon(self, time_t: int) -> np.float32:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> None:\n        \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_len": 138,
        "target_code": "    @abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "target_code_len": 139,
        "diff_format": "@@ -130,3 +130,3 @@\n     @abc.abstractmethod\n-    def decrement_epsilon(self, time_t: int) -> None:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> None:\n        <IND>\"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> float:\n        <IND>\"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def decrement_epsilon(self, time_t: int) -> np.float32:\n        \"\"\"Decrement/update epsilon.\n",
        "source_code_len": 98,
        "target_code": "\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement/update epsilon.\n",
        "target_code_len": 93,
        "diff_format": "@@ -164,3 +164,3 @@\n \n-    def decrement_epsilon(self, time_t: int) -> np.float32:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement/update epsilon.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> np.float32:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> float:\n        <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def decrement_epsilon(self, time_t: int) -> np.float32:\n        \"\"\"Decrement/update epsilon.\n",
        "source_code_len": 98,
        "target_code": "\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement/update epsilon.\n",
        "target_code_len": 93,
        "diff_format": "@@ -198,3 +198,3 @@\n \n-    def decrement_epsilon(self, time_t: int) -> np.float32:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement/update epsilon.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> np.float32:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> float:\n        <IND>"
      }
    ]
  },
  {
    "project": "instadeepai/Mava",
    "commit": "d4c0a5b09e665a2aa4edb13cc2070497ba94aabc",
    "filename": "mava/components/tf/modules/exploration/exploration_scheduling.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/instadeepai-Mava/mava/components/tf/modules/exploration/exploration_scheduling.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mava/components/tf/modules/exploration/exploration_scheduling.py:199:4 Inconsistent override [15]: `mava.components.tf.modules.exploration.exploration_scheduling.ExponentialExplorationTimestepScheduler.decrement_epsilon` overrides method defined in `BaseExplorationTimestepScheduler` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "message": " `mava.components.tf.modules.exploration.exploration_scheduling.ExponentialExplorationTimestepScheduler.decrement_epsilon` overrides method defined in `BaseExplorationTimestepScheduler` inconsistently. Returned type `unknown` is not a subtype of the overridden return `None`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 199,
    "warning_line": "    def decrement_epsilon(self, time_t: int) -> np.float32:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> None:\n        \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_len": 138,
        "target_code": "    @abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "target_code_len": 139,
        "diff_format": "@@ -130,3 +130,3 @@\n     @abc.abstractmethod\n-    def decrement_epsilon(self, time_t: int) -> None:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_with_indent": "    <DED>@abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> None:\n        <IND>\"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@abc.abstractmethod\n    def decrement_epsilon(self, time_t: int) -> float:\n        <IND>\"\"\"Decrement epsilon and return updated epsilon.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def decrement_epsilon(self, time_t: int) -> np.float32:\n        \"\"\"Decrement/update epsilon.\n",
        "source_code_len": 98,
        "target_code": "\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement/update epsilon.\n",
        "target_code_len": 93,
        "diff_format": "@@ -164,3 +164,3 @@\n \n-    def decrement_epsilon(self, time_t: int) -> np.float32:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement/update epsilon.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> np.float32:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> float:\n        <IND>"
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def decrement_epsilon(self, time_t: int) -> np.float32:\n        \"\"\"Decrement/update epsilon.\n",
        "source_code_len": 98,
        "target_code": "\n    def decrement_epsilon(self, time_t: int) -> float:\n        \"\"\"Decrement/update epsilon.\n",
        "target_code_len": 93,
        "diff_format": "@@ -198,3 +198,3 @@\n \n-    def decrement_epsilon(self, time_t: int) -> np.float32:\n+    def decrement_epsilon(self, time_t: int) -> float:\n         \"\"\"Decrement/update epsilon.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> np.float32:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def decrement_epsilon(self, time_t: int) -> float:\n        <IND>"
      }
    ]
  }
]