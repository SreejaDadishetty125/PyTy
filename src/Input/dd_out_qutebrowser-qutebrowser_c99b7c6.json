[
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/browser/browsertab.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/qutebrowser-qutebrowser/qutebrowser/browser/browsertab.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qutebrowser/browser/browsertab.py:873:16 Incompatible parameter type [6]: Expected `miscwidgets.InspectorSplitter` for 1st parameter `splitter` to call `inspector.create` but got `Optional[miscwidgets.InspectorSplitter]`.",
    "message": " Expected `miscwidgets.InspectorSplitter` for 1st parameter `splitter` to call `inspector.create` but got `Optional[miscwidgets.InspectorSplitter]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 873,
    "warning_line": "                splitter=tabdata.splitter,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if tabdata.inspector is None:\n            tabdata.inspector = inspector.create(\n",
        "source_code_len": 88,
        "target_code": "        if tabdata.inspector is None:\n            assert tabdata.splitter is not None\n            tabdata.inspector = inspector.create(\n",
        "target_code_len": 136,
        "diff_format": "@@ -871,2 +871,3 @@\n         if tabdata.inspector is None:\n+            assert tabdata.splitter is not None\n             tabdata.inspector = inspector.create(\n",
        "source_code_with_indent": "        if tabdata.inspector is None:\n            <IND>tabdata.inspector = inspector.create(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if tabdata.inspector is None:\n            <IND>assert tabdata.splitter is not None\n            tabdata.inspector = inspector.create(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/browser/hints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/qutebrowser-qutebrowser/qutebrowser/browser/hints.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qutebrowser/browser/hints.py:241:42 Incompatible parameter type [6]: Expected `Target` for 1st positional only parameter to call `dict.__getitem__` but got `Optional[Target]`.",
    "message": " Expected `Target` for 1st positional only parameter to call `dict.__getitem__` but got `Optional[Target]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 241,
    "warning_line": "                elem.click(target_mapping[context.target])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set)\n\n",
        "source_code_len": 149,
        "target_code": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set, cast)\n\n",
        "target_code_len": 155,
        "diff_format": "@@ -30,3 +30,3 @@\n from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n-                    MutableSequence, Optional, Sequence, Set)\n+                    MutableSequence, Optional, Sequence, Set, cast)\n \n",
        "source_code_with_indent": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set, cast)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Optional[Target] = None\n    baseurl: Optional[QUrl] = None\n    to_follow: Optional[str] = None\n",
        "source_code_len": 182,
        "target_code": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Target = cast(Target, None)  # FIXME\n    baseurl: QUrl = cast(QUrl, None)  # FIXME\n    to_follow: Optional[str] = None\n",
        "target_code_len": 206,
        "diff_format": "@@ -185,4 +185,4 @@\n     labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n-    target: Optional[Target] = None\n-    baseurl: Optional[QUrl] = None\n+    target: Target = cast(Target, None)  # FIXME\n+    baseurl: QUrl = cast(QUrl, None)  # FIXME\n     to_follow: Optional[str] = None\n",
        "source_code_with_indent": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Optional[Target] = None\n    baseurl: Optional[QUrl] = None\n    to_follow: Optional[str] = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Target = cast(Target, None)  # FIXME\n    baseurl: QUrl = cast(QUrl, None)  # FIXME\n    to_follow: Optional[str] = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/browser/hints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/qutebrowser-qutebrowser/qutebrowser/browser/hints.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qutebrowser/browser/hints.py:243:42 Incompatible parameter type [6]: Expected `Target` for 1st positional only parameter to call `dict.__getitem__` but got `Optional[Target]`.",
    "message": " Expected `Target` for 1st positional only parameter to call `dict.__getitem__` but got `Optional[Target]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 243,
    "warning_line": "                elem.click(target_mapping[context.target])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set)\n\n",
        "source_code_len": 149,
        "target_code": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set, cast)\n\n",
        "target_code_len": 155,
        "diff_format": "@@ -30,3 +30,3 @@\n from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n-                    MutableSequence, Optional, Sequence, Set)\n+                    MutableSequence, Optional, Sequence, Set, cast)\n \n",
        "source_code_with_indent": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from typing import (TYPE_CHECKING, Callable, Dict, Iterable, Iterator, List, Mapping,\n                    MutableSequence, Optional, Sequence, Set, cast)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Optional[Target] = None\n    baseurl: Optional[QUrl] = None\n    to_follow: Optional[str] = None\n",
        "source_code_len": 182,
        "target_code": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Target = cast(Target, None)  # FIXME\n    baseurl: QUrl = cast(QUrl, None)  # FIXME\n    to_follow: Optional[str] = None\n",
        "target_code_len": 206,
        "diff_format": "@@ -185,4 +185,4 @@\n     labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n-    target: Optional[Target] = None\n-    baseurl: Optional[QUrl] = None\n+    target: Target = cast(Target, None)  # FIXME\n+    baseurl: QUrl = cast(QUrl, None)  # FIXME\n     to_follow: Optional[str] = None\n",
        "source_code_with_indent": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Optional[Target] = None\n    baseurl: Optional[QUrl] = None\n    to_follow: Optional[str] = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    labels: Dict[str, HintLabel] = dataclasses.field(default_factory=dict)\n    target: Target = cast(Target, None)  # FIXME\n    baseurl: QUrl = cast(QUrl, None)  # FIXME\n    to_follow: Optional[str] = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/browser/hints.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/qutebrowser-qutebrowser/qutebrowser/browser/hints.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qutebrowser/browser/hints.py:894:40 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `HintManager._filter_matches` but got `Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `HintManager._filter_matches` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 894,
    "warning_line": "                if self._filter_matches(filterstr, str(label.elem)):"
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/commands/command.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/qutebrowser-qutebrowser/qutebrowser/commands/command.py",
    "file_hunks_size": 3,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qutebrowser/commands/command.py:46:4 Incompatible attribute type [8]: Attribute `choices` declared in class `ArgInfo` has type `List[str]` but is used as type `None`.",
    "message": " Attribute `choices` declared in class `ArgInfo` has type `List[str]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 46,
    "warning_line": "    choices: List[str] = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import dataclasses\nfrom typing import Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional\n\n",
        "source_code_len": 106,
        "target_code": "import dataclasses\nfrom typing import (Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional,\n                    Callable)\n\n",
        "target_code_len": 138,
        "diff_format": "@@ -26,3 +26,4 @@\n import dataclasses\n-from typing import Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional\n+from typing import (Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional,\n+                    Callable)\n \n",
        "source_code_with_indent": "import dataclasses\nfrom typing import Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import dataclasses\nfrom typing import (Any, MutableMapping, MutableSequence, Tuple, Union, List, Optional,\n                    Callable)\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from qutebrowser.misc import objects\n\n",
        "source_code_len": 38,
        "target_code": "from qutebrowser.misc import objects\nfrom qutebrowser.completion.models import completionmodel\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -33,2 +34,3 @@\n from qutebrowser.misc import objects\n+from qutebrowser.completion.models import completionmodel\n \n",
        "source_code_with_indent": "from qutebrowser.misc import objects\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from qutebrowser.misc import objects\nfrom qutebrowser.completion.models import completionmodel\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    flag: Optional[str] = None\n    completion: Any = None   # FIXME\n    choices: List[str] = None\n\n",
        "source_code_len": 99,
        "target_code": "    flag: Optional[str] = None\n    completion: Optional[Callable[..., completionmodel.CompletionModel]] = None\n    choices: Optional[List[str]] = None\n\n",
        "target_code_len": 152,
        "diff_format": "@@ -44,4 +46,4 @@\n     flag: Optional[str] = None\n-    completion: Any = None   # FIXME\n-    choices: List[str] = None\n+    completion: Optional[Callable[..., completionmodel.CompletionModel]] = None\n+    choices: Optional[List[str]] = None\n \n",
        "source_code_with_indent": "    flag: Optional[str] = None\n    completion: Any = None   # FIXME\n    choices: List[str] = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    flag: Optional[str] = None\n    completion: Optional[Callable[..., completionmodel.CompletionModel]] = None\n    choices: Optional[List[str]] = None\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/misc/backendproblem.py",
    "min_patch_found": false,
    "full_warning_msg": "qutebrowser/misc/backendproblem.py:360:49 Incompatible parameter type [6]: Expected `Variable[typing.AnyStr <: [str, bytes]]` for 1st positional only parameter to call `html.escape` but got `Optional[str]`.",
    "exception": "too many values to unpack (expected 2)",
    "dd_fail": true
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/misc/backendproblem.py",
    "min_patch_found": false,
    "full_warning_msg": "qutebrowser/misc/backendproblem.py:361:52 Incompatible parameter type [6]: Expected `Variable[typing.AnyStr <: [str, bytes]]` for 1st positional only parameter to call `html.escape` but got `Optional[str]`.",
    "exception": "too many values to unpack (expected 2)",
    "dd_fail": true
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/misc/backendproblem.py",
    "min_patch_found": false,
    "full_warning_msg": "qutebrowser/misc/backendproblem.py:377:32 Incompatible parameter type [6]: Expected `Variable[typing.AnyStr <: [str, bytes]]` for 1st positional only parameter to call `html.escape` but got `Optional[str]`.",
    "exception": "too many values to unpack (expected 2)",
    "dd_fail": true
  },
  {
    "project": "qutebrowser/qutebrowser",
    "commit": "c99b7c66e0ef3f471b0c35efd1fb1cd3ce795219",
    "filename": "qutebrowser/misc/backendproblem.py",
    "min_patch_found": false,
    "full_warning_msg": "qutebrowser/misc/backendproblem.py:387:32 Incompatible parameter type [6]: Expected `Variable[typing.AnyStr <: [str, bytes]]` for 1st positional only parameter to call `html.escape` but got `Optional[str]`.",
    "exception": "too many values to unpack (expected 2)",
    "dd_fail": true
  }
]