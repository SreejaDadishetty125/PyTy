[
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/application.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/application.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/application.py:402:31 Invalid type [31]: Expression `(float, float, float, float)` is not a valid type.",
    "message": " Expression `(float, float, float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 402,
    "warning_line": "    def get_viewport(self) -> (float, float, float, float):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # noinspection PyMethodMayBeStatic\n    def get_viewport(self) -> (float, float, float, float):\n        \"\"\" Get the viewport. (What coordinates we can see.) \"\"\"\n",
        "source_code_len": 164,
        "target_code": "    # noinspection PyMethodMayBeStatic\n    def get_viewport(self) -> Tuple[float, float, float, float]:\n        \"\"\" Get the viewport. (What coordinates we can see.) \"\"\"\n",
        "target_code_len": 169,
        "diff_format": "@@ -401,3 +400,3 @@\n     # noinspection PyMethodMayBeStatic\n-    def get_viewport(self) -> (float, float, float, float):\n+    def get_viewport(self) -> Tuple[float, float, float, float]:\n         \"\"\" Get the viewport. (What coordinates we can see.) \"\"\"\n",
        "source_code_with_indent": "    # noinspection PyMethodMayBeStatic\n    <DED>def get_viewport(self) -> (float, float, float, float):\n        <IND>\"\"\" Get the viewport. (What coordinates we can see.) \"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # noinspection PyMethodMayBeStatic\n    <DED>def get_viewport(self) -> Tuple[float, float, float, float]:\n        <IND>\"\"\" Get the viewport. (What coordinates we can see.) \"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/application.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/application.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/application.py:523:4 Unbound name [10]: Name `_window` is used but not defined in the current scope.",
    "message": " Name `_window` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 523,
    "warning_line": "    _window = Window(width, height, window_title, resizable=resizable, update_rate=None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "MOUSE_BUTTON_RIGHT = 4\n\n",
        "source_code_len": 24,
        "target_code": "MOUSE_BUTTON_RIGHT = 4\n\n_window: 'Window'\n\n",
        "target_code_len": 43,
        "diff_format": "@@ -17,2 +18,4 @@\n MOUSE_BUTTON_RIGHT = 4\n+\n+_window: 'Window'\n \n",
        "source_code_with_indent": "MOUSE_BUTTON_RIGHT = 4\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "MOUSE_BUTTON_RIGHT = 4\n\n_window: 'Window'\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/buffered_draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/buffered_draw_commands.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/buffered_draw_commands.py:384:4 Incompatible return type [7]: Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` but got `typing.List[typing.Tuple[typing.Any, typing.Any]]`.",
    "message": " Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` but got `typing.List[typing.Tuple[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 384,
    "warning_line": "    return data"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/buffered_draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/buffered_draw_commands.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/buffered_draw_commands.py:443:32 Incompatible parameter type [6]: Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `create_line_generic` but got `typing.Union[tuple[typing.Tuple[float, float]], typing.List[typing.Any], typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]`.",
    "message": " Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `create_line_generic` but got `typing.Union[tuple[typing.Tuple[float, float]], typing.List[typing.Any], typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 443,
    "warning_line": "    shape = create_line_generic(data, color, shape_mode, border_width)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/buffered_draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/buffered_draw_commands.py",
    "file_hunks_size": 12,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/buffered_draw_commands.py:594:43 Incompatible parameter type [6]: Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `create_line_generic_with_colors` but got `typing.List[typing.Tuple[float, float]]`.",
    "message": " Expected `typing.Union[typing.List[typing.Union[typing.List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[typing.List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `create_line_generic_with_colors` but got `typing.List[typing.Tuple[float, float]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 594,
    "warning_line": "    return create_line_generic_with_colors(point_list, color_list, gl.GL_TRIANGLE_FAN)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:69:43 Invalid type [31]: Expression `(float, float, float, float)` is not a valid type.",
    "message": " Expression `(float, float, float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 69,
    "warning_line": "def get_four_float_color(color: Color) -> (float, float, float, float):"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:96:35 Invalid type [31]: Expression `(float, float)` is not a valid type.",
    "message": " Expression `(float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 96,
    "warning_line": "                 angle: float) -> (float, float):"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:374:53 Incompatible parameter type [6]: Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd parameter `fill` to call `PIL.ImageDraw.ImageDraw.ellipse` but got `typing.Union[List[int], typing.Tuple[int, int, int], typing.Tuple[int, int, int, int]]`.",
    "message": " Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd parameter `fill` to call `PIL.ImageDraw.ImageDraw.ellipse` but got `typing.Union[List[int], typing.Tuple[int, int, int], typing.Tuple[int, int, int, int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 374,
    "warning_line": "    draw.ellipse((0, 0, diameter - 1, diameter - 1), fill=color)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:403:99 Incompatible parameter type [6]: Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd parameter `fill` to call `PIL.ImageDraw.ImageDraw.ellipse` but got `typing.Tuple[int, int, int, int]`.",
    "message": " Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd parameter `fill` to call `PIL.ImageDraw.ImageDraw.ellipse` but got `typing.Tuple[int, int, int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 403,
    "warning_line": "        draw.ellipse((center - radius, center - radius, center + radius - 1, center + radius - 1), fill=clr)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:429:79 Incompatible parameter type [6]: Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd positional only parameter to call `PIL.ImageDraw.ImageDraw.rectangle` but got `typing.Tuple[int, int, int, int]`.",
    "message": " Expected `typing.Union[None, typing.Tuple[int, int, int], int, str]` for 2nd positional only parameter to call `PIL.ImageDraw.ImageDraw.rectangle` but got `typing.Tuple[int, int, int, int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 429,
    "warning_line": "        draw.rectangle((cur_size, cur_size, size - cur_size, size - cur_size), clr, None)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:491:37 Incompatible parameter type [6]: Expected `List[int]` for 1st positional only parameter to call `list.append` but got `typing.Tuple[float, float]`.",
    "message": " Expected `List[int]` for 1st positional only parameter to call `list.append` but got `typing.Tuple[float, float]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 491,
    "warning_line": "        unrotated_point_list.append((x, y))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    unrotated_point_list = [[0, 0]]\n\n",
        "source_code_len": 45,
        "target_code": "    \"\"\"\n    unrotated_point_list = [(0.0, 0.0)]\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -479,3 +482,3 @@\n     \"\"\"\n-    unrotated_point_list = [[0, 0]]\n+    unrotated_point_list = [(0.0, 0.0)]\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    unrotated_point_list = [[0, 0]]\n\n",
        "target_code_with_indent": "\n    unrotated_point_list = [(0.0, 0.0)]\n\n"
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/draw_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/draw_commands.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/draw_commands.py:1168:29 Incompatible parameter type [6]: Expected `typing.Union[List[typing.Union[List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `_generic_draw_line_strip` but got `typing.Union[List[typing.Any], tuple[typing.Tuple[float, float]]]`.",
    "message": " Expected `typing.Union[List[typing.Union[List[float], typing.Tuple[float, float]]], typing.Tuple[typing.Union[List[float], typing.Tuple[float, float]], ...]]` for 1st positional only parameter to call `_generic_draw_line_strip` but got `typing.Union[List[typing.Any], tuple[typing.Tuple[float, float]]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 1168,
    "warning_line": "    _generic_draw_line_strip(point_list, color, gl.GL_TRIANGLE_STRIP)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    point_list = o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt\n\n    if tilt_angle != 0:\n        point_list_2 = []\n        for point in point_list:\n",
        "source_code_len": 161,
        "target_code": "\n    point_list: List[Point] = [o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt]\n\n    if tilt_angle != 0:\n        point_list_2: List[Point] = []\n        for point in point_list:\n",
        "target_code_len": 189,
        "diff_format": "@@ -1158,6 +1163,6 @@\n \n-    point_list = o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt\n+    point_list: List[Point] = [o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt]\n \n     if tilt_angle != 0:\n-        point_list_2 = []\n+        point_list_2: List[Point] = []\n         for point in point_list:\n",
        "source_code_with_indent": "\n    point_list = o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt\n\n    if tilt_angle != 0:\n        <IND>point_list_2 = []\n        for point in point_list:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    point_list: List[Point] = [o_lt, i_lt, o_rt, i_rt, o_rb, i_rb, o_lb, i_lb, o_lt, i_lt]\n\n    if tilt_angle != 0:\n        <IND>point_list_2: List[Point] = []\n        for point in point_list:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/examples/asteroid_smasher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/examples/asteroid_smasher.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/examples/asteroid_smasher.py:305:16 Incompatible attribute type [8]: Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "message": " Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 305,
    "warning_line": "                enemy_sprite.change_angle = (random.random() - 0.5) * 2"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/examples/asteroid_smasher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/examples/asteroid_smasher.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/examples/asteroid_smasher.py:325:16 Incompatible attribute type [8]: Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "message": " Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 325,
    "warning_line": "                enemy_sprite.change_angle = (random.random() - 0.5) * 2"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/examples/asteroid_smasher.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/examples/asteroid_smasher.py",
    "file_hunks_size": 2,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/examples/asteroid_smasher.py:345:16 Incompatible attribute type [8]: Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "message": " Attribute `change_angle` declared in class `arcade.sprite.Sprite` has type `int` but is used as type `float`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 345,
    "warning_line": "                enemy_sprite.change_angle = (random.random() - 0.5) * 2"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/geometry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/geometry.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/geometry.py:54:15 Unsupported operand [58]: `>` is not supported for operand types `typing.Optional[float]` and `typing.Optional[float]`.",
    "message": " `>` is not supported for operand types `typing.Optional[float]` and `typing.Optional[float]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 54,
    "warning_line": "            if max_a <= min_b or max_b <= min_a:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from arcade.sprite_list import SpriteList\nfrom typing import List\nfrom arcade.arcade_types import PointList\n",
        "source_code_len": 108,
        "target_code": "from arcade.sprite_list import SpriteList\nfrom typing import List, cast\nfrom arcade.arcade_types import PointList\n",
        "target_code_len": 114,
        "diff_format": "@@ -6,3 +6,3 @@\n from arcade.sprite_list import SpriteList\n-from typing import List\n+from typing import List, cast\n from arcade.arcade_types import PointList\n",
        "source_code_with_indent": "from arcade.sprite_list import SpriteList\nfrom typing import List\nfrom arcade.arcade_types import PointList\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from arcade.sprite_list import SpriteList\nfrom typing import List, cast\nfrom arcade.arcade_types import PointList\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n            if max_a <= min_b or max_b <= min_a:\n                return False\n",
        "source_code_len": 79,
        "target_code": "\n            if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                return False\n",
        "target_code_len": 131,
        "diff_format": "@@ -53,3 +53,3 @@\n \n-            if max_a <= min_b or max_b <= min_a:\n+            if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                 return False\n",
        "source_code_with_indent": "\n            <DED><DED>if max_a <= min_b or max_b <= min_a:\n                <IND>return False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n            <DED><DED>if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                <IND>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/geometry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/geometry.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/geometry.py:54:33 Unsupported operand [58]: `<=` is not supported for operand types `typing.Optional[float]` and `typing.Optional[float]`.",
    "message": " `<=` is not supported for operand types `typing.Optional[float]` and `typing.Optional[float]`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 54,
    "warning_line": "            if max_a <= min_b or max_b <= min_a:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from arcade.sprite_list import SpriteList\nfrom typing import List\nfrom arcade.arcade_types import PointList\n",
        "source_code_len": 108,
        "target_code": "from arcade.sprite_list import SpriteList\nfrom typing import List, cast\nfrom arcade.arcade_types import PointList\n",
        "target_code_len": 114,
        "diff_format": "@@ -6,3 +6,3 @@\n from arcade.sprite_list import SpriteList\n-from typing import List\n+from typing import List, cast\n from arcade.arcade_types import PointList\n",
        "source_code_with_indent": "from arcade.sprite_list import SpriteList\nfrom typing import List\nfrom arcade.arcade_types import PointList\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from arcade.sprite_list import SpriteList\nfrom typing import List, cast\nfrom arcade.arcade_types import PointList\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n            if max_a <= min_b or max_b <= min_a:\n                return False\n",
        "source_code_len": 79,
        "target_code": "\n            if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                return False\n",
        "target_code_len": 131,
        "diff_format": "@@ -53,3 +53,3 @@\n \n-            if max_a <= min_b or max_b <= min_a:\n+            if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                 return False\n",
        "source_code_with_indent": "\n            <DED><DED>if max_a <= min_b or max_b <= min_a:\n                <IND>return False\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n            <DED><DED>if cast(float, max_a) <= cast(float, min_b) or cast(float, max_b) <= cast(float, min_a):\n                <IND>return False\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/text.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/text.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/text.py:254:66 Incompatible parameter type [6]: Expected `Union[None, Tuple[int, int, int], int, str]` for 3rd positional only parameter to call `PIL.ImageDraw.ImageDraw.multiline_text` but got `typing.Tuple[int, ...]`.",
    "message": " Expected `Union[None, Tuple[int, int, int], int, str]` for 3rd positional only parameter to call `PIL.ImageDraw.ImageDraw.multiline_text` but got `typing.Tuple[int, ...]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 254,
    "warning_line": "        draw.multiline_text((image_start_x, image_start_y), text, color, align=align, font=font)"
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/window_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/window_commands.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/window_commands.py:170:4 Incompatible variable type [9]: _left is declared to have type `int` but is used as type `float`.",
    "message": " _left is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 170,
    "warning_line": "    _left = left",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_len": 61,
        "target_code": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_len": 69,
        "diff_format": "@@ -20,6 +21,6 @@\n \n-_left = -1\n-_right = 1\n-_bottom = -1\n-_top = 1\n+_left = -1.0\n+_right = 1.0\n+_bottom = -1.0\n+_top = 1.0\n _scaling = None\n",
        "source_code_with_indent": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/window_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/window_commands.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/window_commands.py:171:4 Incompatible variable type [9]: _right is declared to have type `int` but is used as type `float`.",
    "message": " _right is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 171,
    "warning_line": "    _right = right",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_len": 61,
        "target_code": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_len": 69,
        "diff_format": "@@ -20,6 +21,6 @@\n \n-_left = -1\n-_right = 1\n-_bottom = -1\n-_top = 1\n+_left = -1.0\n+_right = 1.0\n+_bottom = -1.0\n+_top = 1.0\n _scaling = None\n",
        "source_code_with_indent": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/window_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/window_commands.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/window_commands.py:172:4 Incompatible variable type [9]: _bottom is declared to have type `int` but is used as type `float`.",
    "message": " _bottom is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 172,
    "warning_line": "    _bottom = bottom",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_len": 61,
        "target_code": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_len": 69,
        "diff_format": "@@ -20,6 +21,6 @@\n \n-_left = -1\n-_right = 1\n-_bottom = -1\n-_top = 1\n+_left = -1.0\n+_right = 1.0\n+_bottom = -1.0\n+_top = 1.0\n _scaling = None\n",
        "source_code_with_indent": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/window_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/window_commands.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/window_commands.py:173:4 Incompatible variable type [9]: _top is declared to have type `int` but is used as type `float`.",
    "message": " _top is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 173,
    "warning_line": "    _top = top",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_len": 61,
        "target_code": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_len": 69,
        "diff_format": "@@ -20,6 +21,6 @@\n \n-_left = -1\n-_right = 1\n-_bottom = -1\n-_top = 1\n+_left = -1.0\n+_right = 1.0\n+_bottom = -1.0\n+_top = 1.0\n _scaling = None\n",
        "source_code_with_indent": "\n_left = -1\n_right = 1\n_bottom = -1\n_top = 1\n_scaling = None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n_left = -1.0\n_right = 1.0\n_bottom = -1.0\n_top = 1.0\n_scaling = None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pythonarcade/arcade",
    "commit": "14f376a00594688cf214ba28812974c83db8f3c5",
    "filename": "arcade/window_commands.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pythonarcade-arcade/arcade/window_commands.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "arcade/window_commands.py:192:23 Invalid type [31]: Expression `(float, float, float, float)` is not a valid type.",
    "message": " Expression `(float, float, float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 192,
    "warning_line": "def get_viewport() -> (float, float, float, float):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from numbers import Number\nfrom typing import Callable\n",
        "source_code_len": 55,
        "target_code": "from numbers import Number\nfrom typing import Tuple\nfrom typing import Callable\n",
        "target_code_len": 80,
        "diff_format": "@@ -15,2 +15,3 @@\n from numbers import Number\n+from typing import Tuple\n from typing import Callable\n",
        "source_code_with_indent": "from numbers import Number\nfrom typing import Callable\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from numbers import Number\nfrom typing import Tuple\nfrom typing import Callable\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_viewport() -> (float, float, float, float):\n    \"\"\"\n",
        "source_code_len": 61,
        "target_code": "\ndef get_viewport() -> Tuple[float, float, float, float]:\n    \"\"\"\n",
        "target_code_len": 66,
        "diff_format": "@@ -191,3 +193,3 @@\n \n-def get_viewport() -> (float, float, float, float):\n+def get_viewport() -> Tuple[float, float, float, float]:\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def get_viewport() -> (float, float, float, float):\n    <IND>",
        "target_code_with_indent": "\n<DED>def get_viewport() -> Tuple[float, float, float, float]:\n    <IND>"
      }
    ]
  }
]