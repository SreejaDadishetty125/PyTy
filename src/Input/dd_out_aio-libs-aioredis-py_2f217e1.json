[
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:89:8 Incompatible variable type [9]: keys is declared to have type `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` but is used as type `List[Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:92:4 Incompatible return type [7]: Expected `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` but got `Union[Iterable[Union[bytes, memoryview, str]], List[Union[bytes, int, memoryview, str]], List[Union[bytes, str]], bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1264:12 Incompatible variable type [9]: passwords is declared to have type `Union[None, Iterable[str], str]` but is used as type `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1280:12 Incompatible variable type [9]: hashed_passwords is declared to have type `Union[None, Iterable[str], str]` but is used as type `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1660:12 Incompatible return type [7]: Expected `Awaitable[typing.Any]` but got `None`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1743:39 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `BitFieldOperation.__init__` but got `Union[bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1881:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:1881:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2359:63 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[Iterable[Union[bytes, memoryview, str]], memoryview]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2366:33 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2576:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2576:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2584:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2584:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2589:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2589:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2597:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2597:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2634:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2634:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2642:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:2642:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3163:8 Incompatible variable type [9]: klist is declared to have type `List[Union[bytes, float, int, memoryview, str]]` but is used as type `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3481:26 Incompatible parameter type [6]: Expected `Iterable[Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `list.extend` but got `Tuple[Union[bytes, float, int, memoryview, str], Union[None, bytes, float, int, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3515:8 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3515:28 Incompatible parameter type [6]: Expected `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 1st positional only parameter to call `list_or_args` but got `Sequence[Union[bytes, float, int, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3515:34 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3756:26 Incompatible parameter type [6]: Expected `Union[bytes, float, int, memoryview, str]` for 1st positional only parameter to call `list.append` but got `Union[None, bytes, float, int, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3771:26 Incompatible parameter type [6]: Expected `Iterable[Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `list.extend` but got `Iterable[Union[None, bytes, float, int, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3785:26 Incompatible parameter type [6]: Expected `Iterable[Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `list.extend` but got `Iterable[Union[None, bytes, float, int, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:3788:26 Incompatible parameter type [6]: Expected `Iterable[Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `list.extend` but got `Iterable[Union[None, bytes, float, int, memoryview, str]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4078:12 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4080:28 Incompatible parameter type [6]: Expected `Mapping[Union[bytes, memoryview, str], Optional[typing.Callable[..., typing.Any]]]` for 1st positional only parameter to call `dict.update` but got `Dict[str, typing.Callable[..., typing.Any]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4085:44 Incompatible parameter type [6]: Expected `Mapping[Variable[AnyChannelT <: [bytes, str, memoryview]], Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `PubSub._normalize_keys` but got `Dict[Union[bytes, memoryview, str], Optional[typing.Callable[..., typing.Any]]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4096:12 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4096:32 Incompatible parameter type [6]: Expected `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 1st positional only parameter to call `list_or_args` but got `Union[bytes, float, int, memoryview, str]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4096:41 Incompatible parameter type [6]: Expected `Union[None, Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]` for 2nd positional only parameter to call `list_or_args` but got `typing.Tuple[Union[bytes, float, int, memoryview, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4097:44 Incompatible parameter type [6]: Expected `Mapping[Variable[AnyChannelT <: [bytes, str, memoryview]], Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `PubSub._normalize_keys` but got `Dict[Union[bytes, float, int, memoryview, str], typing.Any]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4112:12 Incompatible variable type [9]: Unable to unpack `Union[Iterable[Union[bytes, memoryview, str]], bytes, memoryview, str]`, expected a tuple.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4114:28 Incompatible parameter type [6]: Expected `Mapping[Union[bytes, memoryview, str], typing.Any]` for 1st positional only parameter to call `dict.update` but got `Dict[str, typing.Callable[..., typing.Any]]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4119:44 Incompatible parameter type [6]: Expected `Mapping[Variable[AnyChannelT <: [bytes, str, memoryview]], Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `PubSub._normalize_keys` but got `Dict[Union[bytes, memoryview, str], typing.Any]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4131:44 Incompatible parameter type [6]: Expected `Mapping[Variable[AnyChannelT <: [bytes, str, memoryview]], Union[bytes, float, int, memoryview, str]]` for 1st positional only parameter to call `PubSub._normalize_keys` but got `Dict[Union[bytes, int, memoryview, str], typing.Any]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4489:56 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Pipeline.annotate_exception` but got `typing.Tuple[Union[bytes, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/client.py",
    "min_patch_found": false,
    "full_warning_msg": "aioredis/client.py:4556:50 Incompatible parameter type [6]: Expected `str` for 3rd positional only parameter to call `Pipeline.annotate_exception` but got `typing.Tuple[Union[bytes, str], ...]`.",
    "exception": "Cannot have more than 64 hunks in a file",
    "dd_fail": true
  },
  {
    "project": "aio-libs/aioredis-py",
    "commit": "2f217e114a395b73d77952172eab4abeaa0dd2ff",
    "filename": "aioredis/sentinel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/aio-libs-aioredis-py/aioredis/sentinel.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aioredis/sentinel.py:110:4 Inconsistent override [14]: `aioredis.sentinel.SentinelConnectionPool.owns_connection` overrides method defined in `ConnectionPool` inconsistently. Parameter of type `SentinelManagedConnection` is not a supertype of the overridden parameter `aioredis.connection.Connection`.",
    "message": " `aioredis.sentinel.SentinelConnectionPool.owns_connection` overrides method defined in `ConnectionPool` inconsistently. Parameter of type `SentinelManagedConnection` is not a supertype of the overridden parameter `aioredis.connection.Connection`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 110,
    "warning_line": "    def owns_connection(self, connection: SentinelManagedConnection):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from aioredis.client import Redis\nfrom aioredis.connection import ConnectionPool, EncodableT, SSLConnection\nfrom aioredis.exceptions import (\n",
        "source_code_len": 142,
        "target_code": "from aioredis.client import Redis\nfrom aioredis.connection import Connection, ConnectionPool, EncodableT, SSLConnection\nfrom aioredis.exceptions import (\n",
        "target_code_len": 154,
        "diff_format": "@@ -5,3 +5,3 @@\n from aioredis.client import Redis\n-from aioredis.connection import ConnectionPool, EncodableT, SSLConnection\n+from aioredis.connection import Connection, ConnectionPool, EncodableT, SSLConnection\n from aioredis.exceptions import (\n",
        "source_code_with_indent": "from aioredis.client import Redis\nfrom aioredis.connection import ConnectionPool, EncodableT, SSLConnection\nfrom aioredis.exceptions import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from aioredis.client import Redis\nfrom aioredis.connection import Connection, ConnectionPool, EncodableT, SSLConnection\nfrom aioredis.exceptions import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def owns_connection(self, connection: SentinelManagedConnection):\n        check = not self.is_master or (\n",
        "source_code_len": 111,
        "target_code": "\n    def owns_connection(self, connection: Connection):\n        check = not self.is_master or (\n",
        "target_code_len": 96,
        "diff_format": "@@ -109,3 +109,3 @@\n \n-    def owns_connection(self, connection: SentinelManagedConnection):\n+    def owns_connection(self, connection: Connection):\n         check = not self.is_master or (\n",
        "source_code_with_indent": "\n    <DED>def owns_connection(self, connection: SentinelManagedConnection):\n        <IND>check = not self.is_master or (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def owns_connection(self, connection: Connection):\n        <IND>check = not self.is_master or (\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]