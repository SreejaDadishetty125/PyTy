[
  {
    "project": "BurnySc2/python-sc2",
    "commit": "51b32c5e5f6aac80759caf50b709e9a023f4f294",
    "filename": "sc2/game_state.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/BurnySc2-python-sc2/sc2/game_state.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sc2/game_state.py:85:12 Incompatible return type [7]: Expected `EffectId` but got `str`.",
    "message": " Expected `EffectId` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 85,
    "warning_line": "            return FakeEffectID[self._proto.unit_type]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @property\n    def id(self) -> EffectId:\n        if self.fake:\n            return FakeEffectID[self._proto.unit_type]\n",
        "source_code_len": 121,
        "target_code": "    @property\n    def id(self) -> Union[EffectId, str]:\n        if self.fake:\n            # Returns the string from constants.py, e.g. \"KD8CHARGE\"\n            return FakeEffectID[self._proto.unit_type]\n",
        "target_code_len": 202,
        "diff_format": "@@ -82,4 +82,5 @@\n     @property\n-    def id(self) -> EffectId:\n+    def id(self) -> Union[EffectId, str]:\n         if self.fake:\n+            # Returns the string from constants.py, e.g. \"KD8CHARGE\"\n             return FakeEffectID[self._proto.unit_type]\n",
        "source_code_with_indent": "    <DED>@property\n    def id(self) -> EffectId:\n        <IND>if self.fake:\n            <IND>return FakeEffectID[self._proto.unit_type]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@property\n    def id(self) -> Union[EffectId, str]:\n        <IND>if self.fake:\n            # Returns the string from constants.py, e.g. \"KD8CHARGE\"\n            <IND>return FakeEffectID[self._proto.unit_type]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]