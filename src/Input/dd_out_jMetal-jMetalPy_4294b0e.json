[
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "examples/experiment/NSGAII for ZDT1-2.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/experiment/NSGAII for ZDT1-2.py:19:13 Incompatible parameter type [6]: Expected `jmetal.core.operator.Mutation[Variable[jmetal.algorithm.multiobjective.nsgaii.S]]` for 4th parameter `mutation` to call `jmetal.algorithm.multiobjective.nsgaii.NSGAII.__init__` but got `jmetal.operator.mutation.NullMutation`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/examples/experiment/NSGAII for ZDT1-2.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "examples/experiment/SMPSO for ZDT1-2.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/experiment/SMPSO for ZDT1-2.py:29:13 Incompatible parameter type [6]: Expected `jmetal.core.operator.Mutation[jmetal.core.solution.FloatSolution]` for 4th parameter `mutation` to call `jmetal.algorithm.multiobjective.smpso.SMPSO.__init__` but got `jmetal.operator.mutation.NullMutation`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/examples/experiment/SMPSO for ZDT1-2.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "examples/experiment/SMPSO for ZDT1-2.py",
    "min_patch_found": false,
    "full_warning_msg": "examples/experiment/SMPSO for ZDT1-2.py:39:13 Incompatible parameter type [6]: Expected `jmetal.core.operator.Mutation[jmetal.core.solution.FloatSolution]` for 4th parameter `mutation` to call `jmetal.algorithm.multiobjective.smpso.SMPSO.__init__` but got `jmetal.operator.mutation.NullMutation`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/examples/experiment/SMPSO for ZDT1-2.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/algorithm/singleobjective/evolutionaryalgorithm.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/algorithm/singleobjective/evolutionaryalgorithm.py:175:56 Incompatible parameter type [6]: Expected `Variable[S]` for 1st positional only parameter to call `Crossover.execute` but got `List[typing.Any]`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/algorithm/singleobjective/evolutionaryalgorithm.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:46:17 Incompatible variable type [9]: comparator is declared to have type `Comparator[Variable[S]]` but is used as type `None`.",
    "message": " comparator is declared to have type `Comparator[Variable[S]]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 46,
    "warning_line": "                 comparator: Comparator[S]=None,"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:47:17 Incompatible variable type [9]: density_estimator is declared to have type `DensityEstimator[typing.Any]` but is used as type `None`.",
    "message": " density_estimator is declared to have type `DensityEstimator[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 47,
    "warning_line": "                 density_estimator: DensityEstimator=None):"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:100:60 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 100,
    "warning_line": "                is_dominated_flag = self.comparator.compare(solution, current_solution)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self):\n        super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = DominanceComparator()\n\n",
        "source_code_len": 138,
        "target_code": "\n    def __init__(self, dominance_comparator=DominanceComparator()):\n        super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = dominance_comparator\n\n",
        "target_code_len": 181,
        "diff_format": "@@ -83,5 +82,5 @@\n \n-    def __init__(self):\n+    def __init__(self, dominance_comparator=DominanceComparator()):\n         super(NonDominatedSolutionListArchive, self).__init__()\n-        self.comparator = DominanceComparator()\n+        self.comparator = dominance_comparator\n \n",
        "source_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = DominanceComparator()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, dominance_comparator=DominanceComparator()):\n        <IND>super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = dominance_comparator\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:100:70 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 100,
    "warning_line": "                is_dominated_flag = self.comparator.compare(solution, current_solution)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self):\n        super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = DominanceComparator()\n\n",
        "source_code_len": 138,
        "target_code": "\n    def __init__(self, dominance_comparator=DominanceComparator()):\n        super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = dominance_comparator\n\n",
        "target_code_len": 181,
        "diff_format": "@@ -83,5 +82,5 @@\n \n-    def __init__(self):\n+    def __init__(self, dominance_comparator=DominanceComparator()):\n         super(NonDominatedSolutionListArchive, self).__init__()\n-        self.comparator = DominanceComparator()\n+        self.comparator = dominance_comparator\n \n",
        "source_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = DominanceComparator()\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, dominance_comparator=DominanceComparator()):\n        <IND>super(NonDominatedSolutionListArchive, self).__init__()\n        self.comparator = dominance_comparator\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:108:58 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `EqualSolutionsComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `EqualSolutionsComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "                    if EqualSolutionsComparator().compare(solution, current_solution) == 0:"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/archive.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/archive.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/archive.py:108:68 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `EqualSolutionsComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `EqualSolutionsComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 108,
    "warning_line": "                    if EqualSolutionsComparator().compare(solution, current_solution) == 0:"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/comparator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/comparator.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/comparator.py:53:12 Incompatible return type [7]: Expected `int` but got implicit return value of `None`.",
    "message": " Expected `int` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 53,
    "warning_line": "            return 1"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/density_estimator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/density_estimator.py",
    "file_hunks_size": 3,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/density_estimator.py:34:4 Inconsistent override [14]: `jmetal.component.density_estimator.CrowdingDistance.compute_density_estimator` overrides method defined in `DensityEstimator` inconsistently. Could not find parameter `solution_list` in overriding signature.",
    "message": " `jmetal.component.density_estimator.CrowdingDistance.compute_density_estimator` overrides method defined in `DensityEstimator` inconsistently. Could not find parameter `solution_list` in overriding signature.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 34,
    "warning_line": "    def compute_density_estimator(self, front: List[S]):"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/quality_indicator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/quality_indicator.py",
    "file_hunks_size": 6,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/quality_indicator.py:42:8 Incompatible attribute type [8]: Attribute `list` declared in class `HyperVolume` has type `MultiList` but is used as type `List[Variable[_T]]`.",
    "message": " Attribute `list` declared in class `HyperVolume` has type `MultiList` but is used as type `List[Variable[_T]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 42,
    "warning_line": "        self.list: MultiList = []"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/ranking.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/ranking.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/ranking.py:49:70 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 1st positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 49,
    "warning_line": "                dominance_test_result = DominanceComparator().compare(solution_list[p], solution_list[q])"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/ranking.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/ranking.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/ranking.py:49:88 Incompatible parameter type [6]: Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "message": " Expected `jmetal.core.solution.Solution[typing.Any]` for 2nd positional only parameter to call `DominanceComparator.compare` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 49,
    "warning_line": "                dominance_test_result = DominanceComparator().compare(solution_list[p], solution_list[q])"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/component/ranking.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/ranking.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/component/ranking.py:79:23 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `list.__setitem__` but got `Variable[S]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `list.__setitem__` but got `Variable[S]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 79,
    "warning_line": "                q[k] = solution_list[front[j][k]]"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/operator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/operator.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/operator.py:70:4 Inconsistent override [15]: `jmetal.core.operator.Crossover.execute` overrides method defined in `Operator` inconsistently. Returned type `Variable[R]` is not a subtype of the overridden return `List[typing.Any]`.",
    "message": " `jmetal.core.operator.Crossover.execute` overrides method defined in `Operator` inconsistently. Returned type `Variable[R]` is not a subtype of the overridden return `List[typing.Any]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 70,
    "warning_line": "    def execute(self, source: S) -> R:",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from abc import ABCMeta, abstractmethod\nfrom typing import TypeVar, Generic, List\n",
        "source_code_len": 82,
        "target_code": "from abc import ABC, abstractmethod\nfrom typing import TypeVar, Generic, List\n",
        "target_code_len": 78,
        "diff_format": "@@ -1,2 +1,2 @@\n-from abc import ABCMeta, abstractmethod\n+from abc import ABC, abstractmethod\n from typing import TypeVar, Generic, List\n",
        "source_code_with_indent": "from abc import ABCMeta, abstractmethod\nfrom typing import TypeVar, Generic, List\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from abc import ABC, abstractmethod\nfrom typing import TypeVar, Generic, List\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass Operator(Generic[S, R]):\n    \"\"\" Class representing operator \"\"\"\n\n    __metaclass__ = ABCMeta\n\n",
        "source_code_len": 102,
        "target_code": "\nclass Operator(Generic[S, R], ABC):\n    \"\"\" Class representing operator \"\"\"\n\n",
        "target_code_len": 78,
        "diff_format": "@@ -15,6 +15,4 @@\n \n-class Operator(Generic[S, R]):\n+class Operator(Generic[S, R], ABC):\n     \"\"\" Class representing operator \"\"\"\n-\n-    __metaclass__ = ABCMeta\n \n",
        "source_code_with_indent": "\nclass Operator(Generic[S, R]):\n    <IND>\"\"\" Class representing operator \"\"\"\n\n    __metaclass__ = ABCMeta\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass Operator(Generic[S, R], ABC):\n    <IND>\"\"\" Class representing operator \"\"\"\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass Mutation(Operator[S, S]):\n    \"\"\" Class representing mutation operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n    def __init__(self, probability: float):\n        if probability > 1.0:\n",
        "source_code_len": 187,
        "target_code": "\ndef check_valid_probability_value(func):\n    def func_wrapper(self, probability: float):\n        if probability > 1.0:\n",
        "target_code_len": 120,
        "diff_format": "@@ -29,8 +27,4 @@\n \n-class Mutation(Operator[S, S]):\n-    \"\"\" Class representing mutation operator. \"\"\"\n-\n-    __metaclass__ = ABCMeta\n-\n-    def __init__(self, probability: float):\n+def check_valid_probability_value(func):\n+    def func_wrapper(self, probability: float):\n         if probability > 1.0:\n",
        "source_code_with_indent": "\n<DED><DED>class Mutation(Operator[S, S]):\n    <IND>\"\"\" Class representing mutation operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n    def __init__(self, probability: float):\n        <IND>if probability > 1.0:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>def check_valid_probability_value(func):\n    <IND>def func_wrapper(self, probability: float):\n        <IND>if probability > 1.0:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass Crossover(Operator[List[S], List[R]]):\n    \"\"\" Class representing crossover operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n    def __init__(self, probability: float):\n        if probability > 1.0:\n            raise Exception('The probability is greater than one: {}'.format(probability))\n        elif probability < 0.0:\n            raise Exception('The probability is lower than zero: {}'.format(probability))\n\n        self.probability = probability\n\n    @abstractmethod\n    def get_number_of_parents(self):\n        pass\n\n    @abstractmethod\n    def execute(self, source: S) -> R:\n        pass\n\n    @abstractmethod\n    def get_name(self) -> str:\n        pass\n\n\nclass Selection(Operator[S, R]):\n    \"\"\" Class representing selection operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n",
        "source_code_len": 779,
        "target_code": "\nclass Selection(Operator[S, R], ABC):\n    \"\"\" Class representing selection operator. \"\"\"\n\n",
        "target_code_len": 91,
        "diff_format": "@@ -51,32 +63,4 @@\n \n-class Crossover(Operator[List[S], List[R]]):\n-    \"\"\" Class representing crossover operator. \"\"\"\n-\n-    __metaclass__ = ABCMeta\n-\n-    def __init__(self, probability: float):\n-        if probability > 1.0:\n-            raise Exception('The probability is greater than one: {}'.format(probability))\n-        elif probability < 0.0:\n-            raise Exception('The probability is lower than zero: {}'.format(probability))\n-\n-        self.probability = probability\n-\n-    @abstractmethod\n-    def get_number_of_parents(self):\n-        pass\n-\n-    @abstractmethod\n-    def execute(self, source: S) -> R:\n-        pass\n-\n-    @abstractmethod\n-    def get_name(self) -> str:\n-        pass\n-\n-\n-class Selection(Operator[S, R]):\n+class Selection(Operator[S, R], ABC):\n     \"\"\" Class representing selection operator. \"\"\"\n-\n-    __metaclass__ = ABCMeta\n \n",
        "source_code_with_indent": "\n<DED><DED>class Crossover(Operator[List[S], List[R]]):\n    <IND>\"\"\" Class representing crossover operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n    def __init__(self, probability: float):\n        <IND>if probability > 1.0:\n            <IND>raise Exception('The probability is greater than one: {}'.format(probability))\n        <DED>elif probability < 0.0:\n            <IND>raise Exception('The probability is lower than zero: {}'.format(probability))\n\n        <DED>self.probability = probability\n\n    <DED>@abstractmethod\n    def get_number_of_parents(self):\n        <IND>pass\n\n    <DED>@abstractmethod\n    def execute(self, source: S) -> R:\n        <IND>pass\n\n    <DED>@abstractmethod\n    def get_name(self) -> str:\n        <IND>pass\n\n\n<DED><DED>class Selection(Operator[S, R]):\n    <IND>\"\"\" Class representing selection operator. \"\"\"\n\n    __metaclass__ = ABCMeta\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED><DED>class Selection(Operator[S, R], ABC):\n    <IND>\"\"\" Class representing selection operator. \"\"\"\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:20:8 Incompatible attribute type [8]: Attribute `number_of_variables` declared in class `Problem` has type `int` but is used as type `None`.",
    "message": " Attribute `number_of_variables` declared in class `Problem` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 20,
    "warning_line": "        self.number_of_variables: int = None"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:21:8 Incompatible attribute type [8]: Attribute `number_of_objectives` declared in class `Problem` has type `int` but is used as type `None`.",
    "message": " Attribute `number_of_objectives` declared in class `Problem` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 21,
    "warning_line": "        self.number_of_objectives: int = None"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:22:8 Incompatible attribute type [8]: Attribute `number_of_constraints` declared in class `Problem` has type `int` but is used as type `None`.",
    "message": " Attribute `number_of_constraints` declared in class `Problem` has type `int` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 22,
    "warning_line": "        self.number_of_constraints: int = None"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:27:8 Incompatible attribute type [8]: Attribute `reference_front` declared in class `Problem` has type `List[Variable[S]]` but is used as type `None`.",
    "message": " Attribute `reference_front` declared in class `Problem` has type `List[Variable[S]]` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 27,
    "warning_line": "        self.reference_front: List[S] = None"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:92:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 92,
    "warning_line": "    def __init__(self, rf_path: str = None):"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:108:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 108,
    "warning_line": "    def __init__(self, rf_path: str = None):"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/core/problem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/core/problem.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/core/problem.py:131:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 131,
    "warning_line": "    def __init__(self, rf_path: str = None):"
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/constrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/constrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/constrained.py:18:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 18,
    "warning_line": "    def __init__(self, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Srinivas, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n        self.number_of_variables = 2\n        self.number_of_constraints = 2\n",
        "source_code_len": 214,
        "target_code": "\n    def __init__(self):\n        super(Srinivas, self).__init__()\n        self.number_of_variables = 2\n        self.number_of_objectives = 2\n        self.number_of_constraints = 2\n",
        "target_code_len": 180,
        "diff_format": "@@ -17,6 +17,6 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Srinivas, self).__init__(rf_path=rf_path)\n-        self.number_of_objectives = 2\n+    def __init__(self):\n+        super(Srinivas, self).__init__()\n         self.number_of_variables = 2\n+        self.number_of_objectives = 2\n         self.number_of_constraints = 2\n",
        "source_code_with_indent": "\n    def __init__(self, rf_path: str=None):\n        <IND>super(Srinivas, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n        self.number_of_variables = 2\n        self.number_of_constraints = 2\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self):\n        <IND>super(Srinivas, self).__init__()\n        self.number_of_variables = 2\n        self.number_of_objectives = 2\n        self.number_of_constraints = 2\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/constrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/constrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/constrained.py:69:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 69,
    "warning_line": "    def __init__(self, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class Tanaka(FloatProblem):\n    \"\"\" Class representing problem Tanaka \"\"\"\n\n    def __init__(self, rf_path: str=None):\n        super(Tanaka, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n        self.number_of_variables = 2\n        self.number_of_constraints = 2\n",
        "source_code_len": 286,
        "target_code": "class Tanaka(FloatProblem):\n    \"\"\" Class representing problem Tanaka. \"\"\"\n\n    def __init__(self):\n        super(Tanaka, self).__init__()\n        self.number_of_variables = 2\n        self.number_of_objectives = 2\n        self.number_of_constraints = 2\n",
        "target_code_len": 253,
        "diff_format": "@@ -66,8 +68,8 @@\n class Tanaka(FloatProblem):\n-    \"\"\" Class representing problem Tanaka \"\"\"\n-\n-    def __init__(self, rf_path: str=None):\n-        super(Tanaka, self).__init__(rf_path=rf_path)\n-        self.number_of_objectives = 2\n+    \"\"\" Class representing problem Tanaka. \"\"\"\n+\n+    def __init__(self):\n+        super(Tanaka, self).__init__()\n         self.number_of_variables = 2\n+        self.number_of_objectives = 2\n         self.number_of_constraints = 2\n",
        "source_code_with_indent": "<DED><DED>class Tanaka(FloatProblem):\n    <IND>\"\"\" Class representing problem Tanaka \"\"\"\n\n    def __init__(self, rf_path: str=None):\n        <IND>super(Tanaka, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n        self.number_of_variables = 2\n        self.number_of_constraints = 2\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>class Tanaka(FloatProblem):\n    <IND>\"\"\" Class representing problem Tanaka. \"\"\"\n\n    def __init__(self):\n        <IND>super(Tanaka, self).__init__()\n        self.number_of_variables = 2\n        self.number_of_objectives = 2\n        self.number_of_constraints = 2\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/dtlz.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/dtlz.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/dtlz.py:21:77 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 21,
    "warning_line": "    def __init__(self, number_of_variables: int = 7, number_of_objectives=3, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int = 7, number_of_objectives=3, rf_path: str=None):\n        \"\"\" :param number_of_variables: number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(DTLZ1, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n",
        "source_code_len": 387,
        "target_code": "\n    def __init__(self, number_of_variables: int = 7, number_of_objectives=3):\n        \"\"\" :param number_of_variables: number of decision variables of the problem.\n        \"\"\"\n        super(DTLZ1, self).__init__()\n        self.number_of_variables = number_of_variables\n",
        "target_code_len": 269,
        "diff_format": "@@ -20,7 +20,6 @@\n \n-    def __init__(self, number_of_variables: int = 7, number_of_objectives=3, rf_path: str=None):\n+    def __init__(self, number_of_variables: int = 7, number_of_objectives=3):\n         \"\"\" :param number_of_variables: number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n-        \"\"\"\n-        super(DTLZ1, self).__init__(rf_path=rf_path)\n+        \"\"\"\n+        super(DTLZ1, self).__init__()\n         self.number_of_variables = number_of_variables\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int = 7, number_of_objectives=3, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(DTLZ1, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int = 7, number_of_objectives=3):\n        <IND>\"\"\" :param number_of_variables: number of decision variables of the problem.\n        \"\"\"\n        super(DTLZ1, self).__init__()\n        self.number_of_variables = number_of_variables\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/dtlz.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/dtlz.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/dtlz.py:65:78 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 65,
    "warning_line": "    def __init__(self, number_of_variables: int = 12, number_of_objectives=3, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass DTLZ2(FloatProblem):\n    \"\"\" Problem DTLZ2. Continuous problem having a convex Pareto front\n",
        "source_code_len": 99,
        "target_code": "\nclass DTLZ2(DTLZ1):\n    \"\"\" Problem DTLZ2. Continuous problem having a convex Pareto front\n",
        "target_code_len": 92,
        "diff_format": "@@ -58,3 +57,3 @@\n \n-class DTLZ2(FloatProblem):\n+class DTLZ2(DTLZ1):\n     \"\"\" Problem DTLZ2. Continuous problem having a convex Pareto front\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class DTLZ2(FloatProblem):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class DTLZ2(DTLZ1):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int = 12, number_of_objectives=3, rf_path: str=None):\n        \"\"\":param number_of_variables: number of decision variables of the problem\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(DTLZ2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = number_of_objectives\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE] * number_of_objectives\n        self.obj_labels = ['$ f_{} $'.format(i) for i in range(number_of_objectives)]\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n",
        "source_code_len": 760,
        "target_code": "\n    def __init__(self, number_of_variables: int = 12, number_of_objectives=3):\n        \"\"\":param number_of_variables: number of decision variables of the problem\n        \"\"\"\n        super(DTLZ2, self).__init__(number_of_variables, number_of_objectives)\n\n",
        "target_code_len": 255,
        "diff_format": "@@ -64,16 +63,6 @@\n \n-    def __init__(self, number_of_variables: int = 12, number_of_objectives=3, rf_path: str=None):\n-        \"\"\":param number_of_variables: number of decision variables of the problem\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n-        \"\"\"\n-        super(DTLZ2, self).__init__(rf_path=rf_path)\n-        self.number_of_variables = number_of_variables\n-        self.number_of_objectives = number_of_objectives\n-        self.number_of_constraints = 0\n-\n-        self.obj_directions = [self.MINIMIZE] * number_of_objectives\n-        self.obj_labels = ['$ f_{} $'.format(i) for i in range(number_of_objectives)]\n-\n-        self.lower_bound = self.number_of_variables * [0.0]\n-        self.upper_bound = self.number_of_variables * [1.0]\n+    def __init__(self, number_of_variables: int = 12, number_of_objectives=3):\n+        \"\"\":param number_of_variables: number of decision variables of the problem\n+        \"\"\"\n+        super(DTLZ2, self).__init__(number_of_variables, number_of_objectives)\n \n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int = 12, number_of_objectives=3, rf_path: str=None):\n        <IND>\"\"\":param number_of_variables: number of decision variables of the problem\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(DTLZ2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = number_of_objectives\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE] * number_of_objectives\n        self.obj_labels = ['$ f_{} $'.format(i) for i in range(number_of_objectives)]\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int = 12, number_of_objectives=3):\n        <IND>\"\"\":param number_of_variables: number of decision variables of the problem\n        \"\"\"\n        super(DTLZ2, self).__init__(number_of_variables, number_of_objectives)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:18:51 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 18,
    "warning_line": "    def __init__(self, number_of_variables: int=3, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int=3, rf_path: str=None):\n        super(Kursawe, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n",
        "source_code_len": 165,
        "target_code": "\n    def __init__(self, number_of_variables: int = 3):\n        super(Kursawe, self).__init__()\n        self.number_of_objectives = 2\n",
        "target_code_len": 133,
        "diff_format": "@@ -17,4 +18,4 @@\n \n-    def __init__(self, number_of_variables: int=3, rf_path: str=None):\n-        super(Kursawe, self).__init__(rf_path=rf_path)\n+    def __init__(self, number_of_variables: int = 3):\n+        super(Kursawe, self).__init__()\n         self.number_of_objectives = 2\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int=3, rf_path: str=None):\n        <IND>super(Kursawe, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 2\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int = 3):\n        <IND>super(Kursawe, self).__init__()\n        self.number_of_objectives = 2\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:53:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 53,
    "warning_line": "    def __init__(self, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Fonseca, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 3\n",
        "source_code_len": 136,
        "target_code": "\n    def __init__(self):\n        super(Fonseca, self).__init__()\n        self.number_of_variables = 3\n",
        "target_code_len": 102,
        "diff_format": "@@ -52,4 +53,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Fonseca, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Fonseca, self).__init__()\n         self.number_of_variables = 3\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Fonseca, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 3\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Fonseca, self).__init__()\n        self.number_of_variables = 3\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:66:8 Incompatible attribute type [8]: Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "message": " Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 66,
    "warning_line": "        FloatSolution.upper_bound = self.upper_bound",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Fonseca, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 3\n",
        "source_code_len": 136,
        "target_code": "\n    def __init__(self):\n        super(Fonseca, self).__init__()\n        self.number_of_variables = 3\n",
        "target_code_len": 102,
        "diff_format": "@@ -52,4 +53,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Fonseca, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Fonseca, self).__init__()\n         self.number_of_variables = 3\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Fonseca, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 3\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Fonseca, self).__init__()\n        self.number_of_variables = 3\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:81:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 81,
    "warning_line": "    def __init__(self, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_len": 137,
        "target_code": "\n    def __init__(self):\n        super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_len": 103,
        "diff_format": "@@ -80,4 +81,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Schaffer, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Schaffer, self).__init__()\n         self.number_of_variables = 1\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:93:8 Incompatible attribute type [8]: Attribute `lower_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "message": " Attribute `lower_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 93,
    "warning_line": "        FloatSolution.lower_bound = self.lower_bound",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_len": 137,
        "target_code": "\n    def __init__(self):\n        super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_len": 103,
        "diff_format": "@@ -80,4 +81,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Schaffer, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Schaffer, self).__init__()\n         self.number_of_variables = 1\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:94:8 Incompatible attribute type [8]: Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "message": " Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 94,
    "warning_line": "        FloatSolution.upper_bound = self.upper_bound",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_len": 137,
        "target_code": "\n    def __init__(self):\n        super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_len": 103,
        "diff_format": "@@ -80,4 +81,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Schaffer, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Schaffer, self).__init__()\n         self.number_of_variables = 1\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Schaffer, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Schaffer, self).__init__()\n        self.number_of_variables = 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:110:23 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 110,
    "warning_line": "    def __init__(self, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Viennet2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 2\n",
        "source_code_len": 137,
        "target_code": "\n    def __init__(self):\n        super(Viennet2, self).__init__()\n        self.number_of_variables = 2\n",
        "target_code_len": 103,
        "diff_format": "@@ -109,4 +110,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Viennet2, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Viennet2, self).__init__()\n         self.number_of_variables = 2\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Viennet2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 2\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Viennet2, self).__init__()\n        self.number_of_variables = 2\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/unconstrained.py:123:8 Incompatible attribute type [8]: Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "message": " Attribute `upper_bound` declared in class `FloatSolution` has type `typing.List[float]` but is used as type `typing.List[int]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 123,
    "warning_line": "        FloatSolution.upper_bound = self.upper_bound",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, rf_path: str=None):\n        super(Viennet2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 2\n",
        "source_code_len": 137,
        "target_code": "\n    def __init__(self):\n        super(Viennet2, self).__init__()\n        self.number_of_variables = 2\n",
        "target_code_len": 103,
        "diff_format": "@@ -109,4 +110,4 @@\n \n-    def __init__(self, rf_path: str=None):\n-        super(Viennet2, self).__init__(rf_path=rf_path)\n+    def __init__(self):\n+        super(Viennet2, self).__init__()\n         self.number_of_variables = 2\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, rf_path: str=None):\n        <IND>super(Viennet2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = 2\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self):\n        <IND>super(Viennet2, self).__init__()\n        self.number_of_variables = 2\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/zdt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/zdt.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/zdt.py:22:52 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 22,
    "warning_line": "    def __init__(self, number_of_variables: int=30, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int=30, rf_path: str=None):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT1, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n",
        "source_code_len": 361,
        "target_code": "\n    def __init__(self, number_of_variables: int=30):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT1, self).__init__()\n        self.number_of_variables = number_of_variables\n",
        "target_code_len": 243,
        "diff_format": "@@ -21,7 +21,6 @@\n \n-    def __init__(self, number_of_variables: int=30, rf_path: str=None):\n+    def __init__(self, number_of_variables: int=30):\n         \"\"\" :param number_of_variables: Number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n         \"\"\"\n-        super(ZDT1, self).__init__(rf_path=rf_path)\n+        super(ZDT1, self).__init__()\n         self.number_of_variables = number_of_variables\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int=30, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT1, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int=30):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT1, self).__init__()\n        self.number_of_variables = number_of_variables\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/zdt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/zdt.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/zdt.py:69:54 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 69,
    "warning_line": "    def __init__(self, number_of_variables: int = 30, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    def __eval_g(self, solution: FloatSolution):\n        g = sum(solution.variables) - solution.variables[0]\n\n        constant = 9.0 / (solution.number_of_variables - 1)\n        g = constant * g\n        g = g + 1.0\n\n        return g\n\n    def __eval_h(self, f: float, g: float) -> float:\n        return 1.0 - pow(f / g, 2.0)\n",
        "source_code_len": 1266,
        "target_code": "\n    def eval_h(self, f: float, g: float) -> float:\n        return 1.0 - pow(f / g, 2.0)\n",
        "target_code_len": 89,
        "diff_format": "@@ -68,36 +65,3 @@\n \n-    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n-        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n-        \"\"\"\n-        super(ZDT2, self).__init__(rf_path=rf_path)\n-        self.number_of_variables = number_of_variables\n-        self.number_of_objectives = 2\n-        self.number_of_constraints = 0\n-\n-        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n-        self.obj_labels = ['f(x)', 'f(y)']\n-\n-        self.lower_bound = self.number_of_variables * [0.0]\n-        self.upper_bound = self.number_of_variables * [1.0]\n-\n-    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n-        g = self.__eval_g(solution)\n-        h = self.__eval_h(solution.variables[0], g)\n-\n-        solution.objectives[0] = solution.variables[0]\n-        solution.objectives[1] = h * g\n-\n-        return solution\n-\n-    def __eval_g(self, solution: FloatSolution):\n-        g = sum(solution.variables) - solution.variables[0]\n-\n-        constant = 9.0 / (solution.number_of_variables - 1)\n-        g = constant * g\n-        g = g + 1.0\n-\n-        return g\n-\n-    def __eval_h(self, f: float, g: float) -> float:\n+    def eval_h(self, f: float, g: float) -> float:\n         return 1.0 - pow(f / g, 2.0)\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT2, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    <DED>def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        <IND>g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    <DED>def __eval_g(self, solution: FloatSolution):\n        <IND>g = sum(solution.variables) - solution.variables[0]\n\n        constant = 9.0 / (solution.number_of_variables - 1)\n        g = constant * g\n        g = g + 1.0\n\n        return g\n\n    <DED>def __eval_h(self, f: float, g: float) -> float:\n        <IND>return 1.0 - pow(f / g, 2.0)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def eval_h(self, f: float, g: float) -> float:\n        <IND>return 1.0 - pow(f / g, 2.0)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/zdt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/zdt.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/zdt.py:116:54 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 116,
    "warning_line": "    def __init__(self, number_of_variables: int = 30, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n\n    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT3, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    def __eval_g(self, solution: FloatSolution):\n        g = sum(solution.variables) - solution.variables[0]\n\n        constant = 9.0 / (solution.number_of_variables - 1)\n        g = constant * g\n        g = g + 1.0\n        return g\n\n    def __eval_h(self, f: float, g: float) -> float:\n        return 1.0 - sqrt(f / g) - (f / g) * sin(10.0 * f * pi)\n",
        "source_code_len": 1300,
        "target_code": "    \"\"\"\n    def eval_h(self, f: float, g: float) -> float:\n        return 1.0 - sqrt(f / g) - (f / g) * sin(10.0 * f * pi)\n",
        "target_code_len": 123,
        "diff_format": "@@ -114,36 +78,3 @@\n     \"\"\"\n-\n-    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n-        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n-        \"\"\"\n-        super(ZDT3, self).__init__(rf_path=rf_path)\n-        self.number_of_variables = number_of_variables\n-        self.number_of_objectives = 2\n-        self.number_of_constraints = 0\n-\n-        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n-        self.obj_labels = ['f(x)', 'f(y)']\n-\n-        self.lower_bound = self.number_of_variables * [0.0]\n-        self.upper_bound = self.number_of_variables * [1.0]\n-\n-    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n-        g = self.__eval_g(solution)\n-        h = self.__eval_h(solution.variables[0], g)\n-\n-        solution.objectives[0] = solution.variables[0]\n-        solution.objectives[1] = h * g\n-\n-        return solution\n-\n-    def __eval_g(self, solution: FloatSolution):\n-        g = sum(solution.variables) - solution.variables[0]\n-\n-        constant = 9.0 / (solution.number_of_variables - 1)\n-        g = constant * g\n-        g = g + 1.0\n-        return g\n-\n-    def __eval_h(self, f: float, g: float) -> float:\n+    def eval_h(self, f: float, g: float) -> float:\n         return 1.0 - sqrt(f / g) - (f / g) * sin(10.0 * f * pi)\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\n    def __init__(self, number_of_variables: int = 30, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT3, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    <DED>def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        <IND>g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    <DED>def __eval_g(self, solution: FloatSolution):\n        <IND>g = sum(solution.variables) - solution.variables[0]\n\n        constant = 9.0 / (solution.number_of_variables - 1)\n        g = constant * g\n        g = g + 1.0\n        return g\n\n    <DED>def __eval_h(self, f: float, g: float) -> float:\n        <IND>return 1.0 - sqrt(f / g) - (f / g) * sin(10.0 * f * pi)\n",
        "target_code_with_indent": "\n    def eval_h(self, f: float, g: float) -> float:\n        <IND>return 1.0 - sqrt(f / g) - (f / g) * sin(10.0 * f * pi)\n"
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/zdt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/zdt.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/zdt.py:162:54 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 162,
    "warning_line": "    def __init__(self, number_of_variables: int = 10, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ZDT4(FloatProblem):\n    \"\"\" Problem ZDT4.\n",
        "source_code_len": 49,
        "target_code": "\nclass ZDT4(ZDT1):\n    \"\"\" Problem ZDT4.\n",
        "target_code_len": 41,
        "diff_format": "@@ -154,3 +85,3 @@\n \n-class ZDT4(FloatProblem):\n+class ZDT4(ZDT1):\n     \"\"\" Problem ZDT4.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class ZDT4(FloatProblem):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class ZDT4(ZDT1):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT4, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [-5.0]\n",
        "source_code_len": 607,
        "target_code": "\n    def __init__(self, number_of_variables: int=10):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT4, self).__init__(number_of_variables=number_of_variables)\n        self.lower_bound = self.number_of_variables * [-5.0]\n",
        "target_code_len": 288,
        "diff_format": "@@ -161,14 +92,6 @@\n \n-    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n+    def __init__(self, number_of_variables: int=10):\n         \"\"\" :param number_of_variables: Number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n         \"\"\"\n-        super(ZDT4, self).__init__(rf_path=rf_path)\n-        self.number_of_variables = number_of_variables\n-        self.number_of_objectives = 2\n-        self.number_of_constraints = 0\n-\n-        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n-        self.obj_labels = ['f(x)', 'f(y)']\n-\n+        super(ZDT4, self).__init__(number_of_variables=number_of_variables)\n         self.lower_bound = self.number_of_variables * [-5.0]\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT4, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [-5.0]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int=10):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT4, self).__init__(number_of_variables=number_of_variables)\n        self.lower_bound = self.number_of_variables * [-5.0]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/multiobjective/zdt.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/multiobjective/zdt.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/multiobjective/zdt.py:212:54 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 212,
    "warning_line": "    def __init__(self, number_of_variables: int = 10, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass ZDT6(FloatProblem):\n    \"\"\" Problem ZDT6.\n",
        "source_code_len": 49,
        "target_code": "\nclass ZDT6(ZDT1):\n    \"\"\" Problem ZDT6.\n",
        "target_code_len": 41,
        "diff_format": "@@ -204,3 +118,3 @@\n \n-class ZDT6(FloatProblem):\n+class ZDT6(ZDT1):\n     \"\"\" Problem ZDT6.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class ZDT6(FloatProblem):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class ZDT6(ZDT1):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT6, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    def __eval_g(self, solution: FloatSolution):\n        g = sum(solution.variables) - solution.variables[0]\n",
        "source_code_len": 1051,
        "target_code": "\n    def __init__(self, number_of_variables: int=10):\n        \"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT6, self).__init__(number_of_variables=number_of_variables)\n\n    def eval_g(self, solution: FloatSolution):\n        g = sum(solution.variables) - solution.variables[0]\n",
        "target_code_len": 335,
        "diff_format": "@@ -211,27 +125,8 @@\n \n-    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n+    def __init__(self, number_of_variables: int=10):\n         \"\"\" :param number_of_variables: Number of decision variables of the problem.\n-        :param rf_path: Path to the reference front file (if any). Default to None.\n         \"\"\"\n-        super(ZDT6, self).__init__(rf_path=rf_path)\n-        self.number_of_variables = number_of_variables\n-        self.number_of_objectives = 2\n-        self.number_of_constraints = 0\n+        super(ZDT6, self).__init__(number_of_variables=number_of_variables)\n \n-        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n-        self.obj_labels = ['f(x)', 'f(y)']\n-\n-        self.lower_bound = self.number_of_variables * [0.0]\n-        self.upper_bound = self.number_of_variables * [1.0]\n-\n-    def evaluate(self, solution: FloatSolution) -> FloatSolution:\n-        g = self.__eval_g(solution)\n-        h = self.__eval_h(solution.variables[0], g)\n-\n-        solution.objectives[0] = solution.variables[0]\n-        solution.objectives[1] = h * g\n-\n-        return solution\n-\n-    def __eval_g(self, solution: FloatSolution):\n+    def eval_g(self, solution: FloatSolution):\n         g = sum(solution.variables) - solution.variables[0]\n",
        "source_code_with_indent": "\n    def __init__(self, number_of_variables: int = 10, rf_path: str=None):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        :param rf_path: Path to the reference front file (if any). Default to None.\n        \"\"\"\n        super(ZDT6, self).__init__(rf_path=rf_path)\n        self.number_of_variables = number_of_variables\n        self.number_of_objectives = 2\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE, self.MINIMIZE]\n        self.obj_labels = ['f(x)', 'f(y)']\n\n        self.lower_bound = self.number_of_variables * [0.0]\n        self.upper_bound = self.number_of_variables * [1.0]\n\n    <DED>def evaluate(self, solution: FloatSolution) -> FloatSolution:\n        <IND>g = self.__eval_g(solution)\n        h = self.__eval_h(solution.variables[0], g)\n\n        solution.objectives[0] = solution.variables[0]\n        solution.objectives[1] = h * g\n\n        return solution\n\n    <DED>def __eval_g(self, solution: FloatSolution):\n        <IND>g = sum(solution.variables) - solution.variables[0]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def __init__(self, number_of_variables: int=10):\n        <IND>\"\"\" :param number_of_variables: Number of decision variables of the problem.\n        \"\"\"\n        super(ZDT6, self).__init__(number_of_variables=number_of_variables)\n\n    <DED>def eval_g(self, solution: FloatSolution):\n        <IND>g = sum(solution.variables) - solution.variables[0]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/singleobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/singleobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/singleobjective/unconstrained.py:17:48 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 17,
    "warning_line": "    def __init__(self, number_of_bits: int=256, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_bits: int=256, rf_path: str=None):\n        super(OneMax, self).__init__(rf_path=rf_path)\n        self.number_of_bits = number_of_bits\n",
        "source_code_len": 168,
        "target_code": "\n    def __init__(self, number_of_bits: int = 256):\n        super(OneMax, self).__init__()\n        self.number_of_bits = number_of_bits\n",
        "target_code_len": 136,
        "diff_format": "@@ -16,4 +17,4 @@\n \n-    def __init__(self, number_of_bits: int=256, rf_path: str=None):\n-        super(OneMax, self).__init__(rf_path=rf_path)\n+    def __init__(self, number_of_bits: int = 256):\n+        super(OneMax, self).__init__()\n         self.number_of_bits = number_of_bits\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, number_of_bits: int=256, rf_path: str=None):\n        <IND>super(OneMax, self).__init__(rf_path=rf_path)\n        self.number_of_bits = number_of_bits\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, number_of_bits: int = 256):\n        <IND>super(OneMax, self).__init__()\n        self.number_of_bits = number_of_bits\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/problem/singleobjective/unconstrained.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/problem/singleobjective/unconstrained.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "jmetal/problem/singleobjective/unconstrained.py:49:52 Incompatible variable type [9]: rf_path is declared to have type `str` but is used as type `None`.",
    "message": " rf_path is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 49,
    "warning_line": "    def __init__(self, number_of_variables: int=10, rf_path: str=None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, number_of_variables: int=10, rf_path: str=None):\n        super(Sphere, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 1\n",
        "source_code_len": 165,
        "target_code": "\n    def __init__(self, number_of_variables: int = 10):\n        super(Sphere, self).__init__()\n        self.number_of_objectives = 1\n",
        "target_code_len": 133,
        "diff_format": "@@ -48,4 +49,4 @@\n \n-    def __init__(self, number_of_variables: int=10, rf_path: str=None):\n-        super(Sphere, self).__init__(rf_path=rf_path)\n+    def __init__(self, number_of_variables: int = 10):\n+        super(Sphere, self).__init__()\n         self.number_of_objectives = 1\n",
        "source_code_with_indent": "\n    <IND>def __init__(self, number_of_variables: int=10, rf_path: str=None):\n        <IND>super(Sphere, self).__init__(rf_path=rf_path)\n        self.number_of_objectives = 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <IND>def __init__(self, number_of_variables: int = 10):\n        <IND>super(Sphere, self).__init__()\n        self.number_of_objectives = 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:32:8 Incompatible attribute type [8]: Attribute `number_of_objectives` declared in class `Plot` has type `int` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:48:40 Incompatible variable type [9]: axis_labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:204:40 Incompatible variable type [9]: axis_labels is declared to have type `List[typing.Any]` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:215:35 Incompatible variable type [9]: reference_front is declared to have type `List[Variable[S]]` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:245:28 Incompatible parameter type [6]: Expected `List[Variable[S]]` for 2nd parameter `reference_front` to call `FrontPlot.plot` but got `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  },
  {
    "project": "jMetal/jMetalPy",
    "commit": "4294b0e73edf66d94d52201d754d6c25999c9aa7",
    "filename": "jmetal/util/graphic.py",
    "min_patch_found": false,
    "full_warning_msg": "jmetal/util/graphic.py:343:54 Incompatible variable type [9]: metadata is declared to have type `List[typing.Any]` but is used as type `None`.",
    "exception": "[Errno 2] No such file or directory: '/home/chowyi/TypeAnnotation_Study/GitHub/jMetal-jMetalPy/jmetal/util/graphic.py'",
    "dd_fail": true
  }
]