[
  {
    "project": "PythonCharmers/python-future",
    "commit": "f905bd893ef7b6bd9d3edc863a916a7ce0dfc47a",
    "filename": "future/types/newobject.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PythonCharmers-python-future/future/types/newobject.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "future/types/newobject.py:57:16 Invalid type [31]: Expression `future.utils.with_metaclass(future.types.newobject.BaseNewObject, $local_future?types?newobject$_builtin_object)` is not a valid type.",
    "message": " Expression `future.utils.with_metaclass(future.types.newobject.BaseNewObject, $local_future?types?newobject$_builtin_object)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 57,
    "warning_line": "class newobject(with_metaclass(BaseNewObject, _builtin_object)):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n\nclass newobject(with_metaclass(BaseNewObject, _builtin_object)):\n    \"\"\"\n",
        "source_code_len": 75,
        "target_code": "\n# We no longer define a metaclass for newobject because this breaks multiple\n# inheritance and custom metaclass use with this exception:\n\n# TypeError: Error when calling the metaclass bases\n#     metaclass conflict: the metaclass of a derived class must be a\n#     (non-strict) subclass of the metaclasses of all its bases\n\n# See issues #91 and #96.\n\n\nclass newobject(object):\n    \"\"\"\n",
        "target_code_len": 386,
        "diff_format": "@@ -55,4 +55,13 @@\n \n+# We no longer define a metaclass for newobject because this breaks multiple\n+# inheritance and custom metaclass use with this exception:\n \n-class newobject(with_metaclass(BaseNewObject, _builtin_object)):\n+# TypeError: Error when calling the metaclass bases\n+#     metaclass conflict: the metaclass of a derived class must be a\n+#     (non-strict) subclass of the metaclasses of all its bases\n+\n+# See issues #91 and #96.\n+\n+\n+class newobject(object):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n\n<DED><DED><DED>class newobject(with_metaclass(BaseNewObject, _builtin_object)):\n    <IND>",
        "target_code_with_indent": "\n# We no longer define a metaclass for newobject because this breaks multiple\n# inheritance and custom metaclass use with this exception:\n\n# TypeError: Error when calling the metaclass bases\n#     metaclass conflict: the metaclass of a derived class must be a\n#     (non-strict) subclass of the metaclasses of all its bases\n\n# See issues #91 and #96.\n\n\n<DED><DED><DED>class newobject(object):\n    <IND>"
      }
    ]
  }
]