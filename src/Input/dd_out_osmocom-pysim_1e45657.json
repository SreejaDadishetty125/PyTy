[
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:163:8 Incompatible return type [7]: Expected `typing.Dict[typing.Any, typing.Any]` but got `typing.KeysView[typing.Any]`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` but got `typing.KeysView[typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 163,
    "warning_line": "        return sels.keys()"
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:647:12 Incompatible return type [7]: Expected `str` but got `bytearray`.",
    "message": " Expected `str` but got `bytearray`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 647,
    "warning_line": "            return h2b(raw_bin_data)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            raw_bin_data = method(abstract_data)\n            return h2b(raw_bin_data)\n        raise NotImplementedError\n",
        "source_code_len": 120,
        "target_code": "            raw_bin_data = method(abstract_data)\n            return b2h(raw_bin_data)\n        raise NotImplementedError\n",
        "target_code_len": 120,
        "diff_format": "@@ -646,3 +650,3 @@\n             raw_bin_data = method(abstract_data)\n-            return h2b(raw_bin_data)\n+            return b2h(raw_bin_data)\n         raise NotImplementedError\n",
        "source_code_with_indent": "            <IND>raw_bin_data = method(abstract_data)\n            return h2b(raw_bin_data)\n        <DED>raise NotImplementedError\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>raw_bin_data = method(abstract_data)\n            return b2h(raw_bin_data)\n        <DED>raise NotImplementedError\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:687:47 Incompatible variable type [9]: rec_len is declared to have type `int` but is used as type `None`.",
    "message": " rec_len is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 687,
    "warning_line": "                 parent:Optional[CardDF]=None, rec_len:int=None, size={1,None}):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    \"\"\"\n    def __init__(self, fid:str, sfid:str=None, name:str=None, desc:str=None,\n                 parent:Optional[CardDF]=None, rec_len:int=None, size={1,None}):\n        \"\"\"\n",
        "source_code_len": 178,
        "target_code": "    \"\"\"\n    def __init__(self, fid:str, rec_len:int, sfid:str=None, name:str=None, desc:str=None,\n                 parent:Optional[CardDF]=None, size={1,None}):\n        \"\"\"\n",
        "target_code_len": 173,
        "diff_format": "@@ -685,4 +689,4 @@\n     \"\"\"\n-    def __init__(self, fid:str, sfid:str=None, name:str=None, desc:str=None,\n-                 parent:Optional[CardDF]=None, rec_len:int=None, size={1,None}):\n+    def __init__(self, fid:str, rec_len:int, sfid:str=None, name:str=None, desc:str=None,\n+                 parent:Optional[CardDF]=None, size={1,None}):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, fid:str, sfid:str=None, name:str=None, desc:str=None,\n                 parent:Optional[CardDF]=None, rec_len:int=None, size={1,None}):\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, fid:str, rec_len:int, sfid:str=None, name:str=None, desc:str=None,\n                 parent:Optional[CardDF]=None, size={1,None}):\n        <IND>"
      }
    ]
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:760:12 Incompatible return type [7]: Expected `str` but got `bytearray`.",
    "message": " Expected `str` but got `bytearray`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 760,
    "warning_line": "            return h2b(method(abstract_data))",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        if callable(method):\n            return h2b(method(abstract_data))\n        raise NotImplementedError\n",
        "source_code_len": 109,
        "target_code": "        if callable(method):\n            return b2h(method(abstract_data))\n        raise NotImplementedError\n",
        "target_code_len": 109,
        "diff_format": "@@ -759,3 +763,3 @@\n         if callable(method):\n-            return h2b(method(abstract_data))\n+            return b2h(method(abstract_data))\n         raise NotImplementedError\n",
        "source_code_with_indent": "        if callable(method):\n            <IND>return h2b(method(abstract_data))\n        <DED>raise NotImplementedError\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        if callable(method):\n            <IND>return b2h(method(abstract_data))\n        <DED>raise NotImplementedError\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:976:8 Incompatible return type [7]: Expected `typing.Dict[typing.Any, typing.Any]` but got `Tuple[typing.Any, typing.Any]`.",
    "message": " Expected `typing.Dict[typing.Any, typing.Any]` but got `Tuple[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 976,
    "warning_line": "        return (dec_data, sw)"
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:1044:48 Unbound name [10]: Name `data_hex` is used but not defined in the current scope.",
    "message": " Name `data_hex` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 1044,
    "warning_line": "        return self.update_record(self, rec_nr, data_hex)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"\"\"\n        hex_data = self.selected_file.encode_record_hex(data)\n        return self.update_record(self, rec_nr, data_hex)\n\n",
        "source_code_len": 133,
        "target_code": "        \"\"\"\n        data_hex = self.selected_file.encode_record_hex(data)\n        return self.update_record(rec_nr, data_hex)\n\n",
        "target_code_len": 127,
        "diff_format": "@@ -1042,4 +1046,4 @@\n         \"\"\"\n-        hex_data = self.selected_file.encode_record_hex(data)\n-        return self.update_record(self, rec_nr, data_hex)\n+        data_hex = self.selected_file.encode_record_hex(data)\n+        return self.update_record(rec_nr, data_hex)\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n        hex_data = self.selected_file.encode_record_hex(data)\n        return self.update_record(self, rec_nr, data_hex)\n\n",
        "target_code_with_indent": "\n        data_hex = self.selected_file.encode_record_hex(data)\n        return self.update_record(rec_nr, data_hex)\n\n"
      }
    ]
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/filesystem.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/filesystem.py",
    "file_hunks_size": 18,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/filesystem.py:1077:43 Incompatible variable type [9]: sw is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " sw is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1077,
    "warning_line": "    def __init__(self, name, adf:str=None, sw:dict=None):"
  },
  {
    "project": "osmocom/pysim",
    "commit": "1e45657e0f177388379f37e8557ac1cfdbac32a5",
    "filename": "pySim/utils.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/osmocom-pysim/pySim/utils.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pySim/utils.py:819:1 Incompatible return type [7]: Expected `str` but got `bool`.",
    "message": " Expected `str` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 819,
    "warning_line": "\treturn sw_masked == pattern",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef sw_match(sw:str, pattern:str) -> str:\n\t\"\"\"Match given SW against given pattern.\"\"\"\n",
        "source_code_len": 88,
        "target_code": "\ndef sw_match(sw:str, pattern:str) -> bool:\n\t\"\"\"Match given SW against given pattern.\"\"\"\n",
        "target_code_len": 89,
        "diff_format": "@@ -805,3 +805,3 @@\n \n-def sw_match(sw:str, pattern:str) -> str:\n+def sw_match(sw:str, pattern:str) -> bool:\n \t\"\"\"Match given SW against given pattern.\"\"\"\n",
        "source_code_with_indent": "\n<DED>def sw_match(sw:str, pattern:str) -> str:\n\t<IND>\"\"\"Match given SW against given pattern.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def sw_match(sw:str, pattern:str) -> bool:\n\t<IND>\"\"\"Match given SW against given pattern.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]