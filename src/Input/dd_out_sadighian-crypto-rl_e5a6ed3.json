[
  {
    "project": "sadighian/crypto-rl",
    "commit": "e5a6ed339ce98ed8b47a5fdcd2390bf7cfb0d3e9",
    "filename": "gym_trading/envs/market_maker.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sadighian-crypto-rl/gym_trading/envs/market_maker.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "gym_trading/envs/market_maker.py:38:52 Invalid type [31]: Expression `(float, float)` is not a valid type.",
    "message": " Expression `(float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 38,
    "warning_line": "    def map_action_to_broker(self, action: int) -> (float, float):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from gym import spaces\n\n",
        "source_code_len": 24,
        "target_code": "from gym import spaces\nfrom typing import Tuple\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -2,2 +2,3 @@\n from gym import spaces\n+from typing import Tuple\n \n",
        "source_code_with_indent": "from gym import spaces\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from gym import spaces\nfrom typing import Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def map_action_to_broker(self, action: int) -> (float, float):\n        \"\"\"\n",
        "source_code_len": 80,
        "target_code": "\n    def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n        \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -37,3 +44,3 @@\n \n-    def map_action_to_broker(self, action: int) -> (float, float):\n+    def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def map_action_to_broker(self, action: int) -> (float, float):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n        <IND>"
      }
    ]
  },
  {
    "project": "sadighian/crypto-rl",
    "commit": "e5a6ed339ce98ed8b47a5fdcd2390bf7cfb0d3e9",
    "filename": "gym_trading/envs/trend_following.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sadighian-crypto-rl/gym_trading/envs/trend_following.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "gym_trading/envs/trend_following.py:38:52 Invalid type [31]: Expression `(float, float)` is not a valid type.",
    "message": " Expression `(float, float)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 38,
    "warning_line": "    def map_action_to_broker(self, action: int) -> (float, float):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from gym import spaces\n\n",
        "source_code_len": 24,
        "target_code": "from gym import spaces\nfrom typing import Tuple\n\n",
        "target_code_len": 49,
        "diff_format": "@@ -2,2 +2,3 @@\n from gym import spaces\n+from typing import Tuple\n \n",
        "source_code_with_indent": "from gym import spaces\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from gym import spaces\nfrom typing import Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def map_action_to_broker(self, action: int) -> (float, float):\n        \"\"\"\n",
        "source_code_len": 80,
        "target_code": "\n    def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n        \"\"\"\n",
        "target_code_len": 85,
        "diff_format": "@@ -37,3 +42,3 @@\n \n-    def map_action_to_broker(self, action: int) -> (float, float):\n+    def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def map_action_to_broker(self, action: int) -> (float, float):\n        <IND>",
        "target_code_with_indent": "\n    <DED>def map_action_to_broker(self, action: int) -> Tuple[float, float]:\n        <IND>"
      }
    ]
  }
]