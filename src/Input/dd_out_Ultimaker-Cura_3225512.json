[
  {
    "project": "Ultimaker/Cura",
    "commit": "3225512851f61f0ac9f18ae6322f8eeb2c3bfd79",
    "filename": "plugins/Toolbox/src/Toolbox.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/plugins/Toolbox/src/Toolbox.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plugins/Toolbox/src/Toolbox.py:52:43 Invalid type [31]: Expression `typing.List[typing.Tuple(bytes, bytes)]` is not a valid type.",
    "message": " Expression `typing.List[typing.Tuple(bytes, bytes)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 52,
    "warning_line": "        self._request_headers = [] # type: List[Tuple(bytes, bytes)]",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self._network_manager = None  # type: Optional[QNetworkAccessManager]\n        self._request_headers = [] # type: List[Tuple(bytes, bytes)]\n        self._updateRequestHeader()\n",
        "source_code_len": 183,
        "target_code": "        self._network_manager = None  # type: Optional[QNetworkAccessManager]\n        self._request_headers = [] # type: List[Tuple[bytes, bytes]]\n        self._updateRequestHeader()\n",
        "target_code_len": 183,
        "diff_format": "@@ -51,3 +51,3 @@\n         self._network_manager = None  # type: Optional[QNetworkAccessManager]\n-        self._request_headers = [] # type: List[Tuple(bytes, bytes)]\n+        self._request_headers = [] # type: List[Tuple[bytes, bytes]]\n         self._updateRequestHeader()\n",
        "source_code_with_indent": "        self._network_manager = None  # type: Optional[QNetworkAccessManager]\n        self._request_headers = [] # type: List[Tuple(bytes, bytes)]\n        self._updateRequestHeader()\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self._network_manager = None  # type: Optional[QNetworkAccessManager]\n        self._request_headers = [] # type: List[Tuple[bytes, bytes]]\n        self._updateRequestHeader()\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]