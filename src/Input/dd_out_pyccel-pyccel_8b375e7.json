[
  {
    "project": "pyccel/pyccel",
    "commit": "8b375e7d6458b56ec977d1dd760e18ea4d001193",
    "filename": "pyccel/ast/datatypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyccel-pyccel/pyccel/ast/datatypes.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyccel/ast/datatypes.py:249:0 Incompatible variable type [9]: NdArray is declared to have type `typing.Type[NdArray]` but is used as type `NdArray`.",
    "message": " NdArray is declared to have type `typing.Type[NdArray]` but is used as type `NdArray`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 249,
    "warning_line": "NdArray = NdArray()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _name = 'Symbol'\n    pass\n\nclass NdArray(DataType):\n    _name = 'NdArray'\n    pass\n\nclass NdArrayInt(NdArray, NativeInteger):\n    _name = 'int'\n    pass\n\nclass NdArrayReal(NdArray, NativeReal):\n    _name = 'real'\n    pass\n\n\nclass NdArrayComplex(NdArray, NativeComplex):\n    _name = 'complex'\n    pass\n\nclass NdArrayBool(NdArray, NativeBool):\n    _name = 'bool'\n    pass\n\n",
        "source_code_len": 375,
        "target_code": "    _name = 'Symbol'\n\n\n",
        "target_code_len": 23,
        "diff_format": "@@ -171,24 +129,3 @@\n     _name = 'Symbol'\n-    pass\n-\n-class NdArray(DataType):\n-    _name = 'NdArray'\n-    pass\n-\n-class NdArrayInt(NdArray, NativeInteger):\n-    _name = 'int'\n-    pass\n-\n-class NdArrayReal(NdArray, NativeReal):\n-    _name = 'real'\n-    pass\n-\n-\n-class NdArrayComplex(NdArray, NativeComplex):\n-    _name = 'complex'\n-    pass\n-\n-class NdArrayBool(NdArray, NativeBool):\n-    _name = 'bool'\n-    pass\n+\n \n",
        "source_code_with_indent": "    <IND>_name = 'Symbol'\n    pass\n\n<DED>class NdArray(DataType):\n    <IND>_name = 'NdArray'\n    pass\n\n<DED>class NdArrayInt(NdArray, NativeInteger):\n    <IND>_name = 'int'\n    pass\n\n<DED>class NdArrayReal(NdArray, NativeReal):\n    <IND>_name = 'real'\n    pass\n\n\n<DED>class NdArrayComplex(NdArray, NativeComplex):\n    <IND>_name = 'complex'\n    pass\n\n<DED>class NdArrayBool(NdArray, NativeBool):\n    <IND>_name = 'bool'\n    pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>_name = 'Symbol'\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyccel/pyccel",
    "commit": "8b375e7d6458b56ec977d1dd760e18ea4d001193",
    "filename": "pyccel/ast/datatypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyccel-pyccel/pyccel/ast/datatypes.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyccel/ast/datatypes.py:250:0 Incompatible variable type [9]: NdArrayInt is declared to have type `typing.Type[NdArrayInt]` but is used as type `NdArrayInt`.",
    "message": " NdArrayInt is declared to have type `typing.Type[NdArrayInt]` but is used as type `NdArrayInt`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 250,
    "warning_line": "NdArrayInt = NdArrayInt()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _name = 'Symbol'\n    pass\n\nclass NdArray(DataType):\n    _name = 'NdArray'\n    pass\n\nclass NdArrayInt(NdArray, NativeInteger):\n    _name = 'int'\n    pass\n\nclass NdArrayReal(NdArray, NativeReal):\n    _name = 'real'\n    pass\n\n\nclass NdArrayComplex(NdArray, NativeComplex):\n    _name = 'complex'\n    pass\n\nclass NdArrayBool(NdArray, NativeBool):\n    _name = 'bool'\n    pass\n\n",
        "source_code_len": 375,
        "target_code": "    _name = 'Symbol'\n\n\n",
        "target_code_len": 23,
        "diff_format": "@@ -171,24 +129,3 @@\n     _name = 'Symbol'\n-    pass\n-\n-class NdArray(DataType):\n-    _name = 'NdArray'\n-    pass\n-\n-class NdArrayInt(NdArray, NativeInteger):\n-    _name = 'int'\n-    pass\n-\n-class NdArrayReal(NdArray, NativeReal):\n-    _name = 'real'\n-    pass\n-\n-\n-class NdArrayComplex(NdArray, NativeComplex):\n-    _name = 'complex'\n-    pass\n-\n-class NdArrayBool(NdArray, NativeBool):\n-    _name = 'bool'\n-    pass\n+\n \n",
        "source_code_with_indent": "    <IND>_name = 'Symbol'\n    pass\n\n<DED>class NdArray(DataType):\n    <IND>_name = 'NdArray'\n    pass\n\n<DED>class NdArrayInt(NdArray, NativeInteger):\n    <IND>_name = 'int'\n    pass\n\n<DED>class NdArrayReal(NdArray, NativeReal):\n    <IND>_name = 'real'\n    pass\n\n\n<DED>class NdArrayComplex(NdArray, NativeComplex):\n    <IND>_name = 'complex'\n    pass\n\n<DED>class NdArrayBool(NdArray, NativeBool):\n    <IND>_name = 'bool'\n    pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>_name = 'Symbol'\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyccel/pyccel",
    "commit": "8b375e7d6458b56ec977d1dd760e18ea4d001193",
    "filename": "pyccel/ast/datatypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyccel-pyccel/pyccel/ast/datatypes.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyccel/ast/datatypes.py:251:0 Incompatible variable type [9]: NdArrayReal is declared to have type `typing.Type[NdArrayReal]` but is used as type `NdArrayReal`.",
    "message": " NdArrayReal is declared to have type `typing.Type[NdArrayReal]` but is used as type `NdArrayReal`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 251,
    "warning_line": "NdArrayReal = NdArrayReal()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _name = 'Symbol'\n    pass\n\nclass NdArray(DataType):\n    _name = 'NdArray'\n    pass\n\nclass NdArrayInt(NdArray, NativeInteger):\n    _name = 'int'\n    pass\n\nclass NdArrayReal(NdArray, NativeReal):\n    _name = 'real'\n    pass\n\n\nclass NdArrayComplex(NdArray, NativeComplex):\n    _name = 'complex'\n    pass\n\nclass NdArrayBool(NdArray, NativeBool):\n    _name = 'bool'\n    pass\n\n",
        "source_code_len": 375,
        "target_code": "    _name = 'Symbol'\n\n\n",
        "target_code_len": 23,
        "diff_format": "@@ -171,24 +129,3 @@\n     _name = 'Symbol'\n-    pass\n-\n-class NdArray(DataType):\n-    _name = 'NdArray'\n-    pass\n-\n-class NdArrayInt(NdArray, NativeInteger):\n-    _name = 'int'\n-    pass\n-\n-class NdArrayReal(NdArray, NativeReal):\n-    _name = 'real'\n-    pass\n-\n-\n-class NdArrayComplex(NdArray, NativeComplex):\n-    _name = 'complex'\n-    pass\n-\n-class NdArrayBool(NdArray, NativeBool):\n-    _name = 'bool'\n-    pass\n+\n \n",
        "source_code_with_indent": "    <IND>_name = 'Symbol'\n    pass\n\n<DED>class NdArray(DataType):\n    <IND>_name = 'NdArray'\n    pass\n\n<DED>class NdArrayInt(NdArray, NativeInteger):\n    <IND>_name = 'int'\n    pass\n\n<DED>class NdArrayReal(NdArray, NativeReal):\n    <IND>_name = 'real'\n    pass\n\n\n<DED>class NdArrayComplex(NdArray, NativeComplex):\n    <IND>_name = 'complex'\n    pass\n\n<DED>class NdArrayBool(NdArray, NativeBool):\n    <IND>_name = 'bool'\n    pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>_name = 'Symbol'\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyccel/pyccel",
    "commit": "8b375e7d6458b56ec977d1dd760e18ea4d001193",
    "filename": "pyccel/ast/datatypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyccel-pyccel/pyccel/ast/datatypes.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyccel/ast/datatypes.py:252:0 Incompatible variable type [9]: NdArrayComplex is declared to have type `typing.Type[NdArrayComplex]` but is used as type `NdArrayComplex`.",
    "message": " NdArrayComplex is declared to have type `typing.Type[NdArrayComplex]` but is used as type `NdArrayComplex`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 252,
    "warning_line": "NdArrayComplex = NdArrayComplex()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _name = 'Symbol'\n    pass\n\nclass NdArray(DataType):\n    _name = 'NdArray'\n    pass\n\nclass NdArrayInt(NdArray, NativeInteger):\n    _name = 'int'\n    pass\n\nclass NdArrayReal(NdArray, NativeReal):\n    _name = 'real'\n    pass\n\n\nclass NdArrayComplex(NdArray, NativeComplex):\n    _name = 'complex'\n    pass\n\nclass NdArrayBool(NdArray, NativeBool):\n    _name = 'bool'\n    pass\n\n",
        "source_code_len": 375,
        "target_code": "    _name = 'Symbol'\n\n\n",
        "target_code_len": 23,
        "diff_format": "@@ -171,24 +129,3 @@\n     _name = 'Symbol'\n-    pass\n-\n-class NdArray(DataType):\n-    _name = 'NdArray'\n-    pass\n-\n-class NdArrayInt(NdArray, NativeInteger):\n-    _name = 'int'\n-    pass\n-\n-class NdArrayReal(NdArray, NativeReal):\n-    _name = 'real'\n-    pass\n-\n-\n-class NdArrayComplex(NdArray, NativeComplex):\n-    _name = 'complex'\n-    pass\n-\n-class NdArrayBool(NdArray, NativeBool):\n-    _name = 'bool'\n-    pass\n+\n \n",
        "source_code_with_indent": "    <IND>_name = 'Symbol'\n    pass\n\n<DED>class NdArray(DataType):\n    <IND>_name = 'NdArray'\n    pass\n\n<DED>class NdArrayInt(NdArray, NativeInteger):\n    <IND>_name = 'int'\n    pass\n\n<DED>class NdArrayReal(NdArray, NativeReal):\n    <IND>_name = 'real'\n    pass\n\n\n<DED>class NdArrayComplex(NdArray, NativeComplex):\n    <IND>_name = 'complex'\n    pass\n\n<DED>class NdArrayBool(NdArray, NativeBool):\n    <IND>_name = 'bool'\n    pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>_name = 'Symbol'\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pyccel/pyccel",
    "commit": "8b375e7d6458b56ec977d1dd760e18ea4d001193",
    "filename": "pyccel/ast/datatypes.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyccel-pyccel/pyccel/ast/datatypes.py",
    "file_hunks_size": 20,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyccel/ast/datatypes.py:253:0 Incompatible variable type [9]: NdArrayBool is declared to have type `typing.Type[NdArrayBool]` but is used as type `NdArrayBool`.",
    "message": " NdArrayBool is declared to have type `typing.Type[NdArrayBool]` but is used as type `NdArrayBool`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 253,
    "warning_line": "NdArrayBool = NdArrayBool()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    _name = 'Symbol'\n    pass\n\nclass NdArray(DataType):\n    _name = 'NdArray'\n    pass\n\nclass NdArrayInt(NdArray, NativeInteger):\n    _name = 'int'\n    pass\n\nclass NdArrayReal(NdArray, NativeReal):\n    _name = 'real'\n    pass\n\n\nclass NdArrayComplex(NdArray, NativeComplex):\n    _name = 'complex'\n    pass\n\nclass NdArrayBool(NdArray, NativeBool):\n    _name = 'bool'\n    pass\n\n",
        "source_code_len": 375,
        "target_code": "    _name = 'Symbol'\n\n\n",
        "target_code_len": 23,
        "diff_format": "@@ -171,24 +129,3 @@\n     _name = 'Symbol'\n-    pass\n-\n-class NdArray(DataType):\n-    _name = 'NdArray'\n-    pass\n-\n-class NdArrayInt(NdArray, NativeInteger):\n-    _name = 'int'\n-    pass\n-\n-class NdArrayReal(NdArray, NativeReal):\n-    _name = 'real'\n-    pass\n-\n-\n-class NdArrayComplex(NdArray, NativeComplex):\n-    _name = 'complex'\n-    pass\n-\n-class NdArrayBool(NdArray, NativeBool):\n-    _name = 'bool'\n-    pass\n+\n \n",
        "source_code_with_indent": "    <IND>_name = 'Symbol'\n    pass\n\n<DED>class NdArray(DataType):\n    <IND>_name = 'NdArray'\n    pass\n\n<DED>class NdArrayInt(NdArray, NativeInteger):\n    <IND>_name = 'int'\n    pass\n\n<DED>class NdArrayReal(NdArray, NativeReal):\n    <IND>_name = 'real'\n    pass\n\n\n<DED>class NdArrayComplex(NdArray, NativeComplex):\n    <IND>_name = 'complex'\n    pass\n\n<DED>class NdArrayBool(NdArray, NativeBool):\n    <IND>_name = 'bool'\n    pass\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <IND>_name = 'Symbol'\n\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]