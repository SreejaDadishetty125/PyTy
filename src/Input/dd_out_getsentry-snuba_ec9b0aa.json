[
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/consumers/snapshot_worker.py",
    "min_patch_found": false,
    "full_warning_msg": "snuba/consumers/snapshot_worker.py:88:4 Inconsistent override [14]: `snuba.consumers.snapshot_worker.SnapshotProcessor.process_message` overrides method defined in `MessageProcessor` inconsistently. Parameter of type `typing.Union[snuba.datasets.cdc.types.BeginEvent, snuba.datasets.cdc.types.CommitEvent, snuba.datasets.cdc.types.DeleteEvent, snuba.datasets.cdc.types.InsertEvent, snuba.datasets.cdc.types.UpdateEvent]` is not a supertype of the overridden parameter `typing.Mapping[str, typing.Any]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:89:36 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "            processed[\"event_id\"] = str(uuid.UUID(processed[\"event_id\"]))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:89:50 Incompatible parameter type [6]: Expected `Optional[str]` for 1st positional only parameter to call `uuid.UUID.__init__` but got `int`.",
    "message": " Expected `Optional[str]` for 1st positional only parameter to call `uuid.UUID.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 89,
    "warning_line": "            processed[\"event_id\"] = str(uuid.UUID(processed[\"event_id\"]))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:90:36 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "            processed[\"trace_id\"] = str(uuid.UUID(trace_id))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:92:42 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 92,
    "warning_line": "            processed[\"transaction_op\"] = _unicodify(transaction_ctx.get(\"op\") or \"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:93:44 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 93,
    "warning_line": "            processed[\"transaction_name\"] = _unicodify(data.get(\"transaction\") or \"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:120:32 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 120,
    "warning_line": "        processed[\"platform\"] = _unicodify(event[\"platform\"])",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:171:28 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 171,
    "warning_line": "        processed[\"dist\"] = _unicodify(",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:185:45 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 185,
    "warning_line": "                processed[\"ip_address_v4\"] = str(ip_address)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:187:45 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 187,
    "warning_line": "                processed[\"ip_address_v6\"] = str(ip_address)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:193:32 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 193,
    "warning_line": "        processed[\"sdk_name\"] = _unicodify(sdk.get(\"name\") or \"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "snuba/datasets/transactions_processor.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-snuba/snuba/datasets/transactions_processor.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "snuba/datasets/transactions_processor.py:194:35 Incompatible parameter type [6]: Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "message": " Expected `int` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 194,
    "warning_line": "        processed[\"sdk_version\"] = _unicodify(sdk.get(\"version\") or \"\")",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_len": 80,
        "target_code": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_len": 96,
        "diff_format": "@@ -4,3 +4,3 @@\n from datetime import datetime\n-from typing import Any, MutableMapping, Optional\n+from typing import Any, Mapping, MutableMapping, Tuple, Optional\n \n",
        "source_code_with_indent": "from datetime import datetime\nfrom typing import Any, MutableMapping, Optional\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from datetime import datetime\nfrom typing import Any, Mapping, MutableMapping, Tuple, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_len": 73,
        "target_code": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_len": 128,
        "diff_format": "@@ -9,2 +9,3 @@\n from snuba import environment\n+from snuba.consumers.types import KafkaMessageMetadata\n from snuba.datasets.events_format import (\n",
        "source_code_with_indent": "from snuba import environment\nfrom snuba.datasets.events_format import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from snuba import environment\nfrom snuba.consumers.types import KafkaMessageMetadata\nfrom snuba.datasets.events_format import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "source_code_len": 116,
        "target_code": "\n    def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        processed = {\"deleted\": 0}\n",
        "target_code_len": 171,
        "diff_format": "@@ -55,3 +56,5 @@\n \n-    def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n+    def process_message(\n+        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n+    ) -> Optional[ProcessedMessage]:\n         processed = {\"deleted\": 0}\n",
        "source_code_with_indent": "\n    <DED>def process_message(self, message, metadata) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def process_message(\n        self, message: Mapping[str, Any], metadata: KafkaMessageMetadata\n    ) -> Optional[ProcessedMessage]:\n        <IND>processed = {\"deleted\": 0}\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "tests/helpers.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/helpers.py:38:13 Incompatible parameter type [6]: Expected `typing.Mapping[str, typing.Any]` for 1st positional only parameter to call `snuba.processor.MessageProcessor.process_message` but got `typing.Tuple[int, str, InsertEvent, typing.Dict[Variable[_KT], Variable[_VT]]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "getsentry/snuba",
    "commit": "ec9b0aa2bcb751af9787f50291056520e3ef3e0f",
    "filename": "tests/migrations/test_runner.py",
    "min_patch_found": false,
    "full_warning_msg": "tests/migrations/test_runner.py:280:17 Incompatible parameter type [6]: Expected `typing.Mapping[str, typing.Any]` for 1st positional only parameter to call `snuba.processor.MessageProcessor.process_message` but got `typing.Tuple[int, str, snuba.datasets.events_processor_base.InsertEvent]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]