[
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:82:22 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "message": " Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 82,
    "warning_line": "        outfile.write(order.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if '--out' in sys.argv:\n        outfile.write(order.encode('utf8')+'\\n')\n    elif not order+'\\n' in target:\n",
        "source_code_len": 112,
        "target_code": "    if '--out' in sys.argv:\n        outfile.write(order+'\\n')\n    elif not order+'\\n' in target:\n",
        "target_code_len": 97,
        "diff_format": "@@ -81,3 +81,3 @@\n     if '--out' in sys.argv:\n-        outfile.write(order.encode('utf8')+'\\n')\n+        outfile.write(order+'\\n')\n     elif not order+'\\n' in target:\n",
        "source_code_with_indent": "    if '--out' in sys.argv:\n        <IND>outfile.write(order.encode('utf8')+'\\n')\n    <DED>elif not order+'\\n' in target:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    if '--out' in sys.argv:\n        <IND>outfile.write(order+'\\n')\n    <DED>elif not order+'\\n' in target:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:82:43 Unsupported operand [58]: `+` is not supported for operand types `bytes` and `str`.",
    "message": " `+` is not supported for operand types `bytes` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 82,
    "warning_line": "        outfile.write(order.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    if '--out' in sys.argv:\n        outfile.write(order.encode('utf8')+'\\n')\n    elif not order+'\\n' in target:\n",
        "source_code_len": 112,
        "target_code": "    if '--out' in sys.argv:\n        outfile.write(order+'\\n')\n    elif not order+'\\n' in target:\n",
        "target_code_len": 97,
        "diff_format": "@@ -81,3 +81,3 @@\n     if '--out' in sys.argv:\n-        outfile.write(order.encode('utf8')+'\\n')\n+        outfile.write(order+'\\n')\n     elif not order+'\\n' in target:\n",
        "source_code_with_indent": "    if '--out' in sys.argv:\n        <IND>outfile.write(order.encode('utf8')+'\\n')\n    <DED>elif not order+'\\n' in target:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    if '--out' in sys.argv:\n        <IND>outfile.write(order+'\\n')\n    <DED>elif not order+'\\n' in target:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:111:34 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "message": " Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 111,
    "warning_line": "                    outfile.write(line.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                if not ignoreObjectAttribs:\n                    outfile.write(line.encode('utf8')+'\\n')\n                else:\n",
        "source_code_len": 126,
        "target_code": "                if not ignoreObjectAttribs:\n                    outfile.write(line+'\\n')\n                else:\n",
        "target_code_len": 111,
        "diff_format": "@@ -110,3 +110,3 @@\n                 if not ignoreObjectAttribs:\n-                    outfile.write(line.encode('utf8')+'\\n')\n+                    outfile.write(line+'\\n')\n                 else:\n",
        "source_code_with_indent": "                <IND>if not ignoreObjectAttribs:\n                    <IND>outfile.write(line.encode('utf8')+'\\n')\n                <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>if not ignoreObjectAttribs:\n                    <IND>outfile.write(line+'\\n')\n                <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:111:54 Unsupported operand [58]: `+` is not supported for operand types `bytes` and `str`.",
    "message": " `+` is not supported for operand types `bytes` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 111,
    "warning_line": "                    outfile.write(line.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                if not ignoreObjectAttribs:\n                    outfile.write(line.encode('utf8')+'\\n')\n                else:\n",
        "source_code_len": 126,
        "target_code": "                if not ignoreObjectAttribs:\n                    outfile.write(line+'\\n')\n                else:\n",
        "target_code_len": 111,
        "diff_format": "@@ -110,3 +110,3 @@\n                 if not ignoreObjectAttribs:\n-                    outfile.write(line.encode('utf8')+'\\n')\n+                    outfile.write(line+'\\n')\n                 else:\n",
        "source_code_with_indent": "                <IND>if not ignoreObjectAttribs:\n                    <IND>outfile.write(line.encode('utf8')+'\\n')\n                <DED>else:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                <IND>if not ignoreObjectAttribs:\n                    <IND>outfile.write(line+'\\n')\n                <DED>else:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:115:38 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "message": " Expected `str` for 1st positional only parameter to call `io.TextIOBase.write` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 115,
    "warning_line": "                        outfile.write(line.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                            not \":<method-wrapper '__\"  in line):\n                        outfile.write(line.encode('utf8')+'\\n')\n            elif not line+'\\n' in target:\n",
        "source_code_len": 172,
        "target_code": "                            not \":<method-wrapper '__\"  in line):\n                        outfile.write(line+'\\n')\n            elif not line+'\\n' in target:\n",
        "target_code_len": 157,
        "diff_format": "@@ -114,3 +114,3 @@\n                             not \":<method-wrapper '__\"  in line):\n-                        outfile.write(line.encode('utf8')+'\\n')\n+                        outfile.write(line+'\\n')\n             elif not line+'\\n' in target:\n",
        "source_code_with_indent": "                            not \":<method-wrapper '__\"  in line):\n                        <IND>outfile.write(line.encode('utf8')+'\\n')\n            <DED><DED><DED>elif not line+'\\n' in target:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                            not \":<method-wrapper '__\"  in line):\n                        <IND>outfile.write(line+'\\n')\n            <DED><DED><DED>elif not line+'\\n' in target:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "psychopy/psychopy",
    "commit": "f120e91f49d9f6b0d7fe7f4de0e42f4fbf9295a3",
    "filename": "psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/psychopy-psychopy/psychopy/tests/test_app/test_builder/genComponsTemplate.py",
    "file_hunks_size": 5,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "psychopy/tests/test_app/test_builder/genComponsTemplate.py:115:58 Unsupported operand [58]: `+` is not supported for operand types `bytes` and `str`.",
    "message": " `+` is not supported for operand types `bytes` and `str`.",
    "rule_id": "Unsupported operand [58]",
    "warning_line_no": 115,
    "warning_line": "                        outfile.write(line.encode('utf8')+'\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                            not \":<method-wrapper '__\"  in line):\n                        outfile.write(line.encode('utf8')+'\\n')\n            elif not line+'\\n' in target:\n",
        "source_code_len": 172,
        "target_code": "                            not \":<method-wrapper '__\"  in line):\n                        outfile.write(line+'\\n')\n            elif not line+'\\n' in target:\n",
        "target_code_len": 157,
        "diff_format": "@@ -114,3 +114,3 @@\n                             not \":<method-wrapper '__\"  in line):\n-                        outfile.write(line.encode('utf8')+'\\n')\n+                        outfile.write(line+'\\n')\n             elif not line+'\\n' in target:\n",
        "source_code_with_indent": "                            not \":<method-wrapper '__\"  in line):\n                        <IND>outfile.write(line.encode('utf8')+'\\n')\n            <DED><DED><DED>elif not line+'\\n' in target:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                            not \":<method-wrapper '__\"  in line):\n                        <IND>outfile.write(line+'\\n')\n            <DED><DED><DED>elif not line+'\\n' in target:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]