[
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:288:12 Incompatible return type [7]: Expected `SASsession` but got `None`.",
    "message": " Expected `SASsession` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 288,
    "warning_line": "            return",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs) -> 'SASsession':\n        self._loaded_macros     = False\n        self._obj_cnt           = 0\n        self.nosub              = False\n        self.sascfg             = SASconfig(**kwargs)\n        self.batch              = False\n        self.results            = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n           self.results         = 'Pandas'\n        self.workpath           = ''\n        self.sasver             = ''\n        self.sascei             = ''\n        self.SASpid             = None\n        self.HTML_Style         = \"HTMLBlue\"\n        self.sas_date_fmts      = sas_date_fmts\n        self.sas_time_fmts      = sas_time_fmts\n        self.sas_datetime_fmts  = sas_datetime_fmts\n\n",
        "source_code_len": 878,
        "target_code": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs):\n        self._loaded_macros    = False\n        self._obj_cnt          = 0\n        self.nosub             = False\n        self.sascfg            = SASconfig(**kwargs)\n        self.batch             = False\n        self.results           = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n            self.results       = 'Pandas'\n        self.workpath          = ''\n        self.sasver            = ''\n        self.sascei            = ''\n        self.SASpid            = None\n        self.HTML_Style        = \"HTMLBlue\"\n        self.sas_date_fmts     = sas_date_fmts\n        self.sas_time_fmts     = sas_time_fmts\n        self.sas_datetime_fmts = sas_datetime_fmts\n\n",
        "target_code_len": 847,
        "diff_format": "@@ -267,19 +262,19 @@\n     # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n-    def __init__(self, **kwargs) -> 'SASsession':\n-        self._loaded_macros     = False\n-        self._obj_cnt           = 0\n-        self.nosub              = False\n-        self.sascfg             = SASconfig(**kwargs)\n-        self.batch              = False\n-        self.results            = kwargs.get('results', self.sascfg.results)\n+    def __init__(self, **kwargs):\n+        self._loaded_macros    = False\n+        self._obj_cnt          = 0\n+        self.nosub             = False\n+        self.sascfg            = SASconfig(**kwargs)\n+        self.batch             = False\n+        self.results           = kwargs.get('results', self.sascfg.results)\n         if not self.results:\n-           self.results         = 'Pandas'\n-        self.workpath           = ''\n-        self.sasver             = ''\n-        self.sascei             = ''\n-        self.SASpid             = None\n-        self.HTML_Style         = \"HTMLBlue\"\n-        self.sas_date_fmts      = sas_date_fmts\n-        self.sas_time_fmts      = sas_time_fmts\n-        self.sas_datetime_fmts  = sas_datetime_fmts\n+            self.results       = 'Pandas'\n+        self.workpath          = ''\n+        self.sasver            = ''\n+        self.sascei            = ''\n+        self.SASpid            = None\n+        self.HTML_Style        = \"HTMLBlue\"\n+        self.sas_date_fmts     = sas_date_fmts\n+        self.sas_time_fmts     = sas_time_fmts\n+        self.sas_datetime_fmts = sas_datetime_fmts\n \n",
        "source_code_with_indent": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs) -> 'SASsession':\n        <IND>self._loaded_macros     = False\n        self._obj_cnt           = 0\n        self.nosub              = False\n        self.sascfg             = SASconfig(**kwargs)\n        self.batch              = False\n        self.results            = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n           <IND>self.results         = 'Pandas'\n        <DED>self.workpath           = ''\n        self.sasver             = ''\n        self.sascei             = ''\n        self.SASpid             = None\n        self.HTML_Style         = \"HTMLBlue\"\n        self.sas_date_fmts      = sas_date_fmts\n        self.sas_time_fmts      = sas_time_fmts\n        self.sas_datetime_fmts  = sas_datetime_fmts\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs):\n        <IND>self._loaded_macros    = False\n        self._obj_cnt          = 0\n        self.nosub             = False\n        self.sascfg            = SASconfig(**kwargs)\n        self.batch             = False\n        self.results           = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n            <IND>self.results       = 'Pandas'\n        <DED>self.workpath          = ''\n        self.sasver            = ''\n        self.sascei            = ''\n        self.SASpid            = None\n        self.HTML_Style        = \"HTMLBlue\"\n        self.sas_date_fmts     = sas_date_fmts\n        self.sas_time_fmts     = sas_time_fmts\n        self.sas_datetime_fmts = sas_datetime_fmts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:336:12 Incompatible return type [7]: Expected `SASsession` but got implicit return value of `None`.",
    "message": " Expected `SASsession` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 336,
    "warning_line": "            self._io = None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs) -> 'SASsession':\n        self._loaded_macros     = False\n        self._obj_cnt           = 0\n        self.nosub              = False\n        self.sascfg             = SASconfig(**kwargs)\n        self.batch              = False\n        self.results            = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n           self.results         = 'Pandas'\n        self.workpath           = ''\n        self.sasver             = ''\n        self.sascei             = ''\n        self.SASpid             = None\n        self.HTML_Style         = \"HTMLBlue\"\n        self.sas_date_fmts      = sas_date_fmts\n        self.sas_time_fmts      = sas_time_fmts\n        self.sas_datetime_fmts  = sas_datetime_fmts\n\n",
        "source_code_len": 878,
        "target_code": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs):\n        self._loaded_macros    = False\n        self._obj_cnt          = 0\n        self.nosub             = False\n        self.sascfg            = SASconfig(**kwargs)\n        self.batch             = False\n        self.results           = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n            self.results       = 'Pandas'\n        self.workpath          = ''\n        self.sasver            = ''\n        self.sascei            = ''\n        self.SASpid            = None\n        self.HTML_Style        = \"HTMLBlue\"\n        self.sas_date_fmts     = sas_date_fmts\n        self.sas_time_fmts     = sas_time_fmts\n        self.sas_datetime_fmts = sas_datetime_fmts\n\n",
        "target_code_len": 847,
        "diff_format": "@@ -267,19 +262,19 @@\n     # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n-    def __init__(self, **kwargs) -> 'SASsession':\n-        self._loaded_macros     = False\n-        self._obj_cnt           = 0\n-        self.nosub              = False\n-        self.sascfg             = SASconfig(**kwargs)\n-        self.batch              = False\n-        self.results            = kwargs.get('results', self.sascfg.results)\n+    def __init__(self, **kwargs):\n+        self._loaded_macros    = False\n+        self._obj_cnt          = 0\n+        self.nosub             = False\n+        self.sascfg            = SASconfig(**kwargs)\n+        self.batch             = False\n+        self.results           = kwargs.get('results', self.sascfg.results)\n         if not self.results:\n-           self.results         = 'Pandas'\n-        self.workpath           = ''\n-        self.sasver             = ''\n-        self.sascei             = ''\n-        self.SASpid             = None\n-        self.HTML_Style         = \"HTMLBlue\"\n-        self.sas_date_fmts      = sas_date_fmts\n-        self.sas_time_fmts      = sas_time_fmts\n-        self.sas_datetime_fmts  = sas_datetime_fmts\n+            self.results       = 'Pandas'\n+        self.workpath          = ''\n+        self.sasver            = ''\n+        self.sascei            = ''\n+        self.SASpid            = None\n+        self.HTML_Style        = \"HTMLBlue\"\n+        self.sas_date_fmts     = sas_date_fmts\n+        self.sas_time_fmts     = sas_time_fmts\n+        self.sas_datetime_fmts = sas_datetime_fmts\n \n",
        "source_code_with_indent": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs) -> 'SASsession':\n        <IND>self._loaded_macros     = False\n        self._obj_cnt           = 0\n        self.nosub              = False\n        self.sascfg             = SASconfig(**kwargs)\n        self.batch              = False\n        self.results            = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n           <IND>self.results         = 'Pandas'\n        <DED>self.workpath           = ''\n        self.sasver             = ''\n        self.sascei             = ''\n        self.SASpid             = None\n        self.HTML_Style         = \"HTMLBlue\"\n        self.sas_date_fmts      = sas_date_fmts\n        self.sas_time_fmts      = sas_time_fmts\n        self.sas_datetime_fmts  = sas_datetime_fmts\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # def __init__(self, cfgname: str ='', kernel: 'SAS_kernel' =None, saspath :str ='', options: list =[]) -> 'SASsession':\n    def __init__(self, **kwargs):\n        <IND>self._loaded_macros    = False\n        self._obj_cnt          = 0\n        self.nosub             = False\n        self.sascfg            = SASconfig(**kwargs)\n        self.batch             = False\n        self.results           = kwargs.get('results', self.sascfg.results)\n        if not self.results:\n            <IND>self.results       = 'Pandas'\n        <DED>self.workpath          = ''\n        self.sasver            = ''\n        self.sascei            = ''\n        self.SASpid            = None\n        self.HTML_Style        = \"HTMLBlue\"\n        self.sas_date_fmts     = sas_date_fmts\n        self.sas_time_fmts     = sas_time_fmts\n        self.sas_datetime_fmts = sas_datetime_fmts\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:476:8 Incompatible return type [7]: Expected `bool` but got implicit return value of `None`.",
    "message": " Expected `bool` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 476,
    "warning_line": "        self.batch = batch",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def teach_me_SAS(self, nosub: bool):\n        '''\n        nosub - bool. True means don't submit the code, print it out so I can see what the SAS code would be.\n            False means run normally - submit the code.\n        '''\n        self.nosub = nosub\n\n    def set_batch(self, batch: bool) -> bool:\n        \"\"\"\n",
        "source_code_len": 317,
        "target_code": "    def teach_me_SAS(self, nosub: bool):\n        \"\"\"\n        nosub - bool. True means don't submit the code, print it out so I can see what the SAS code would be.\n            False means run normally - submit the code.\n        \"\"\"\n        self.nosub = nosub\n\n    def set_batch(self, batch: bool):\n        \"\"\"\n",
        "target_code_len": 309,
        "diff_format": "@@ -451,9 +441,9 @@\n     def teach_me_SAS(self, nosub: bool):\n-        '''\n+        \"\"\"\n         nosub - bool. True means don't submit the code, print it out so I can see what the SAS code would be.\n             False means run normally - submit the code.\n-        '''\n+        \"\"\"\n         self.nosub = nosub\n \n-    def set_batch(self, batch: bool) -> bool:\n+    def set_batch(self, batch: bool):\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>def teach_me_SAS(self, nosub: bool):\n        <IND>'''\n        nosub - bool. True means don't submit the code, print it out so I can see what the SAS code would be.\n            False means run normally - submit the code.\n        '''\n        self.nosub = nosub\n\n    <DED>def set_batch(self, batch: bool) -> bool:\n        <IND>",
        "target_code_with_indent": "    <DED>def teach_me_SAS(self, nosub: bool):\n        <IND>\"\"\"\n        nosub - bool. True means don't submit the code, print it out so I can see what the SAS code would be.\n            False means run normally - submit the code.\n        \"\"\"\n        self.nosub = nosub\n\n    <DED>def set_batch(self, batch: bool):\n        <IND>"
      }
    ]
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:718:12 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 718,
    "warning_line": "            return log"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:1443:18 Incompatible variable type [9]: out is declared to have type `SASdata` but is used as type `None`.",
    "message": " out is declared to have type `SASdata` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1443,
    "warning_line": "                  out: 'SASdata' = None, singleOut: bool = True) -> object:"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:1749:78 Incompatible variable type [9]: out is declared to have type `SASdata` but is used as type `None`.",
    "message": " out is declared to have type `SASdata` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 1749,
    "warning_line": "    def impute(self, vars: dict, replace: bool = False, prefix: str = 'imp_', out: 'SASdata' = None) -> 'SASdata':"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:1861:12 Incompatible return type [7]: Expected `SASdata` but got `None`.",
    "message": " Expected `SASdata` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1861,
    "warning_line": "            return None"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:1927:16 Incompatible return type [7]: Expected `SASdata` but got `object`.",
    "message": " Expected `SASdata` but got `object`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1927,
    "warning_line": "                return out"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2056:45 Incompatible parameter type [6]: Expected `saspy.sasproccommons.SASProcCommons` for 1st positional only parameter to call `saspy.sasproccommons.SASProcCommons._objectmethods` but got `SASdata`.",
    "message": " Expected `saspy.sasproccommons.SASProcCommons` for 1st positional only parameter to call `saspy.sasproccommons.SASProcCommons._objectmethods` but got `SASdata`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 2056,
    "warning_line": "        obj1 = SASProcCommons._objectmethods(self, objname)"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2059:32 Incompatible variable type [9]: opts is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "message": " opts is declared to have type `typing.Dict[typing.Any, typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2059,
    "warning_line": "    def to_csv(self, file: str, opts: dict = None) -> str:"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2074:12 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 2074,
    "warning_line": "            return self.sas.write_csv(file, self.table, self.libref, self.dsopts, opts)"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2076:52 Incompatible variable type [9]: out is declared to have type `SASdata` but is used as type `None`.",
    "message": " out is declared to have type `SASdata` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2076,
    "warning_line": "    def score(self, file: str = '', code: str = '', out: 'SASdata' = None) -> 'SASdata':"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2102:12 Incompatible return type [7]: Expected `SASdata` but got `None`.",
    "message": " Expected `SASdata` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 2102,
    "warning_line": "            return"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2113:12 Incompatible return type [7]: Expected `SASdata` but got implicit return value of `None`.",
    "message": " Expected `SASdata` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 2113,
    "warning_line": "            return ll"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasbase.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasbase.py",
    "file_hunks_size": 49,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasbase.py:2140:24 Incompatible variable type [9]: tempfile is declared to have type `str` but is used as type `None`.",
    "message": " tempfile is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 2140,
    "warning_line": "    def to_df_CSV(self, tempfile: str=None, tempkeep: bool=False, **kwargs) -> 'pd.DataFrame':"
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasioiom.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasioiom.py",
    "file_hunks_size": 57,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasioiom.py:1057:6 Incompatible return type [7]: Expected `bool` but got `int`.",
    "message": " Expected `bool` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 1057,
    "warning_line": "      return exists",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n      return exists\n   \n   def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      '''\n      This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "source_code_len": 267,
        "target_code": "\n      return bool(exists)\n\n   def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      \"\"\"\n      This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "target_code_len": 270,
        "diff_format": "@@ -1056,6 +1056,6 @@\n \n-      return exists\n-   \n+      return bool(exists)\n+\n    def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n-      '''\n+      \"\"\"\n       This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n      return exists\n   \n   <DED>def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      <IND>",
        "target_code_with_indent": "\n      return bool(exists)\n\n   <DED>def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "      opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n      '''\n      opts = opts if opts is not None else {}\n",
        "source_code_len": 181,
        "target_code": "      opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n      \"\"\"\n      opts = opts if opts is not None else {}\n",
        "target_code_len": 181,
        "diff_format": "@@ -1065,3 +1065,3 @@\n       opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n-      '''\n+      \"\"\"\n       opts = opts if opts is not None else {}\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n      opts = opts if opts is not None else {}\n",
        "target_code_with_indent": "\n      opts = opts if opts is not None else {}\n"
      }
    ]
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasiostdio.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasiostdio.py",
    "file_hunks_size": 44,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasiostdio.py:890:6 Incompatible return type [7]: Expected `bool` but got `int`.",
    "message": " Expected `bool` but got `int`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 890,
    "warning_line": "      return exists",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n      return exists\n   \n   def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      '''\n      This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "source_code_len": 267,
        "target_code": "\n      return bool(exists)\n\n   def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      \"\"\"\n      This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "target_code_len": 270,
        "diff_format": "@@ -889,6 +889,6 @@\n \n-      return exists\n-   \n+      return bool(exists)\n+\n    def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n-      '''\n+      \"\"\"\n       This method will import a csv file into a SAS Data Set and return the SASdata object referring to it.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n      return exists\n   \n   <DED>def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      <IND>",
        "target_code_with_indent": "\n      return bool(exists)\n\n   <DED>def read_csv(self, file: str, table: str, libref: str =\"\", nosub: bool =False, opts: dict = None) -> '<SASdata object>':\n      <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "      opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n      '''\n      opts = opts if opts is not None else {}\n",
        "source_code_len": 181,
        "target_code": "      opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n      \"\"\"\n      opts = opts if opts is not None else {}\n",
        "target_code_len": 181,
        "diff_format": "@@ -898,3 +898,3 @@\n       opts    - a dictionary containing any of the following Proc Import options(datarow, delimiter, getnames, guessingrows)\n-      '''\n+      \"\"\"\n       opts = opts if opts is not None else {}\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n      opts = opts if opts is not None else {}\n",
        "target_code_with_indent": "\n      opts = opts if opts is not None else {}\n"
      }
    ]
  },
  {
    "project": "sassoftware/saspy",
    "commit": "70e28ec146cff72faf2ec9cb49dc4a4f5b8d485e",
    "filename": "saspy/sasproccommons.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/sassoftware-saspy/saspy/sasproccommons.py",
    "file_hunks_size": 25,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "saspy/sasproccommons.py:594:138 Unbound name [10]: Name `save` is used but not defined in the current scope.",
    "message": " Name `save` is used but not defined in the current scope.",
    "rule_id": "Unbound name [10]",
    "warning_line_no": 594,
    "warning_line": "                    raise SyntaxError(\"SAVE statement object type is not recognized, must be a bool or dict. You provided: %s\" % str(type(save)))"
  }
]