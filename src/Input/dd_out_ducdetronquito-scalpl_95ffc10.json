[
  {
    "project": "ducdetronquito/scalpl",
    "commit": "95ffc100f9d3d214cb259e772b4f99d4ca30d216",
    "filename": "scalpl/scalpl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ducdetronquito-scalpl/scalpl/scalpl.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scalpl/scalpl.py:119:28 Incompatible variable type [9]: default is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " default is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 119,
    "warning_line": "    def get(self, key: str, default: Optional = None) -> Any:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get(self, key: str, default: Optional = None) -> Any:\n        try:\n",
        "source_code_len": 76,
        "target_code": "\n    def get(self, key: str, default: Optional[Any] = None) -> Any:\n        try:\n",
        "target_code_len": 81,
        "diff_format": "@@ -118,3 +118,3 @@\n \n-    def get(self, key: str, default: Optional = None) -> Any:\n+    def get(self, key: str, default: Optional[Any] = None) -> Any:\n         try:\n",
        "source_code_with_indent": "\n    <DED>def get(self, key: str, default: Optional = None) -> Any:\n        <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get(self, key: str, default: Optional[Any] = None) -> Any:\n        <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ducdetronquito/scalpl",
    "commit": "95ffc100f9d3d214cb259e772b4f99d4ca30d216",
    "filename": "scalpl/scalpl.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ducdetronquito-scalpl/scalpl/scalpl.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "scalpl/scalpl.py:179:35 Incompatible variable type [9]: default is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "message": " default is declared to have type `Optional[typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 179,
    "warning_line": "    def setdefault(self, key: str, default: Optional = None) -> Any:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def setdefault(self, key: str, default: Optional = None) -> Any:\n        try:\n",
        "source_code_len": 83,
        "target_code": "\n    def setdefault(self, key: str, default: Optional[Any] = None) -> Any:\n        try:\n",
        "target_code_len": 88,
        "diff_format": "@@ -178,3 +178,3 @@\n \n-    def setdefault(self, key: str, default: Optional = None) -> Any:\n+    def setdefault(self, key: str, default: Optional[Any] = None) -> Any:\n         try:\n",
        "source_code_with_indent": "\n    def setdefault(self, key: str, default: Optional = None) -> Any:\n        <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    def setdefault(self, key: str, default: Optional[Any] = None) -> Any:\n        <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]