[
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/alexa/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/alexa/server.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/alexa/server.py:49:28 Incompatible variable type [9]: ssl_key is declared to have type `str` but is used as type `None`.",
    "message": " ssl_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 49,
    "warning_line": "                            ssl_key: str = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/alexa/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/alexa/server.py",
    "file_hunks_size": 14,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/alexa/server.py:50:28 Incompatible variable type [9]: ssl_cert is declared to have type `str` but is used as type `None`.",
    "message": " ssl_cert is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 50,
    "warning_line": "                            ssl_cert: str = None,"
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/alexa/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/alexa/server.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/alexa/server.py:88:21 Incompatible variable type [9]: ssl_key is declared to have type `str` but is used as type `None`.",
    "message": " ssl_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 88,
    "warning_line": "                     ssl_key: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                     https: bool = False,\n                     ssl_key: str = None,\n                     ssl_cert: str = None) -> None:\n    \"\"\"Initiates Flask web service with Alexa skill.\n\n",
        "source_code_len": 190,
        "target_code": "                     https: bool = False,\n                     ssl_key: Optional[str] = None,\n                     ssl_cert: Optional[str] = None) -> None:\n    \"\"\"Initiates FastAPI web service with Alexa skill.\n\n",
        "target_code_len": 212,
        "diff_format": "@@ -87,5 +89,5 @@\n                      https: bool = False,\n-                     ssl_key: str = None,\n-                     ssl_cert: str = None) -> None:\n-    \"\"\"Initiates Flask web service with Alexa skill.\n+                     ssl_key: Optional[str] = None,\n+                     ssl_cert: Optional[str] = None) -> None:\n+    \"\"\"Initiates FastAPI web service with Alexa skill.\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                     https: bool = False,\n                     ssl_key: str = None,\n                     ssl_cert: str = None) -> None:\n    <IND>",
        "target_code_with_indent": "                     https: bool = False,\n                     ssl_key: Optional[str] = None,\n                     ssl_cert: Optional[str] = None) -> None:\n    <IND>"
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/alexa/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/alexa/server.py",
    "file_hunks_size": 14,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/alexa/server.py:89:21 Incompatible variable type [9]: ssl_cert is declared to have type `str` but is used as type `None`.",
    "message": " ssl_cert is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 89,
    "warning_line": "                     ssl_cert: str = None) -> None:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                     https: bool = False,\n                     ssl_key: str = None,\n                     ssl_cert: str = None) -> None:\n    \"\"\"Initiates Flask web service with Alexa skill.\n\n",
        "source_code_len": 190,
        "target_code": "                     https: bool = False,\n                     ssl_key: Optional[str] = None,\n                     ssl_cert: Optional[str] = None) -> None:\n    \"\"\"Initiates FastAPI web service with Alexa skill.\n\n",
        "target_code_len": 212,
        "diff_format": "@@ -87,5 +89,5 @@\n                      https: bool = False,\n-                     ssl_key: str = None,\n-                     ssl_cert: str = None) -> None:\n-    \"\"\"Initiates Flask web service with Alexa skill.\n+                     ssl_key: Optional[str] = None,\n+                     ssl_cert: Optional[str] = None) -> None:\n+    \"\"\"Initiates FastAPI web service with Alexa skill.\n \n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "                     https: bool = False,\n                     ssl_key: str = None,\n                     ssl_cert: str = None) -> None:\n    <IND>",
        "target_code_with_indent": "                     https: bool = False,\n                     ssl_key: Optional[str] = None,\n                     ssl_cert: Optional[str] = None) -> None:\n    <IND>"
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/ms_bot_framework/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/ms_bot_framework/server.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/ms_bot_framework/server.py:40:28 Incompatible variable type [9]: ssl_key is declared to have type `str` but is used as type `None`.",
    "message": " ssl_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 40,
    "warning_line": "                            ssl_key: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                            https: bool = False,\n                            ssl_key: str = None,\n                            ssl_cert: str = None,\n                            default_skill_wrap: bool = True):\n\n    def get_default_agent():\n        model = build_model(model_config)\n",
        "source_code_len": 282,
        "target_code": "                            https: bool = False,\n                            ssl_key: Optional[str] = None,\n                            ssl_cert: Optional[str] = None,\n                            default_skill_wrap: bool = True) -> None:\n\n    def get_default_agent() -> DefaultAgent:\n        model = build_model(model_config)\n",
        "target_code_len": 326,
        "diff_format": "@@ -39,7 +51,7 @@\n                             https: bool = False,\n-                            ssl_key: str = None,\n-                            ssl_cert: str = None,\n-                            default_skill_wrap: bool = True):\n+                            ssl_key: Optional[str] = None,\n+                            ssl_cert: Optional[str] = None,\n+                            default_skill_wrap: bool = True) -> None:\n \n-    def get_default_agent():\n+    def get_default_agent() -> DefaultAgent:\n         model = build_model(model_config)\n",
        "source_code_with_indent": "                            https: bool = False,\n                            ssl_key: str = None,\n                            ssl_cert: str = None,\n                            default_skill_wrap: bool = True):\n\n    <IND>def get_default_agent():\n        <IND>model = build_model(model_config)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                            https: bool = False,\n                            ssl_key: Optional[str] = None,\n                            ssl_cert: Optional[str] = None,\n                            default_skill_wrap: bool = True) -> None:\n\n    <IND>def get_default_agent() -> DefaultAgent:\n        <IND>model = build_model(model_config)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_len": 162,
        "target_code": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_len": 190,
        "diff_format": "@@ -67,4 +79,4 @@\n                                 https: bool = False,\n-                                ssl_key: str = None,\n-                                ssl_cert: str = None):\n+                                ssl_key: Optional[str] = None,\n+                                ssl_cert: Optional[str] = None) -> None:\n \n",
        "source_code_with_indent": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/ms_bot_framework/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/ms_bot_framework/server.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/ms_bot_framework/server.py:41:28 Incompatible variable type [9]: ssl_cert is declared to have type `str` but is used as type `None`.",
    "message": " ssl_cert is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 41,
    "warning_line": "                            ssl_cert: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                            https: bool = False,\n                            ssl_key: str = None,\n                            ssl_cert: str = None,\n                            default_skill_wrap: bool = True):\n\n    def get_default_agent():\n        model = build_model(model_config)\n",
        "source_code_len": 282,
        "target_code": "                            https: bool = False,\n                            ssl_key: Optional[str] = None,\n                            ssl_cert: Optional[str] = None,\n                            default_skill_wrap: bool = True) -> None:\n\n    def get_default_agent() -> DefaultAgent:\n        model = build_model(model_config)\n",
        "target_code_len": 326,
        "diff_format": "@@ -39,7 +51,7 @@\n                             https: bool = False,\n-                            ssl_key: str = None,\n-                            ssl_cert: str = None,\n-                            default_skill_wrap: bool = True):\n+                            ssl_key: Optional[str] = None,\n+                            ssl_cert: Optional[str] = None,\n+                            default_skill_wrap: bool = True) -> None:\n \n-    def get_default_agent():\n+    def get_default_agent() -> DefaultAgent:\n         model = build_model(model_config)\n",
        "source_code_with_indent": "                            https: bool = False,\n                            ssl_key: str = None,\n                            ssl_cert: str = None,\n                            default_skill_wrap: bool = True):\n\n    <IND>def get_default_agent():\n        <IND>model = build_model(model_config)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                            https: bool = False,\n                            ssl_key: Optional[str] = None,\n                            ssl_cert: Optional[str] = None,\n                            default_skill_wrap: bool = True) -> None:\n\n    <IND>def get_default_agent() -> DefaultAgent:\n        <IND>model = build_model(model_config)\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_len": 162,
        "target_code": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_len": 190,
        "diff_format": "@@ -67,4 +79,4 @@\n                                 https: bool = False,\n-                                ssl_key: str = None,\n-                                ssl_cert: str = None):\n+                                ssl_key: Optional[str] = None,\n+                                ssl_cert: Optional[str] = None) -> None:\n \n",
        "source_code_with_indent": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/ms_bot_framework/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/ms_bot_framework/server.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/ms_bot_framework/server.py:68:32 Incompatible variable type [9]: ssl_key is declared to have type `str` but is used as type `None`.",
    "message": " ssl_key is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 68,
    "warning_line": "                                ssl_key: str = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_len": 162,
        "target_code": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_len": 190,
        "diff_format": "@@ -67,4 +79,4 @@\n                                 https: bool = False,\n-                                ssl_key: str = None,\n-                                ssl_cert: str = None):\n+                                ssl_key: Optional[str] = None,\n+                                ssl_cert: Optional[str] = None) -> None:\n \n",
        "source_code_with_indent": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "deepmipt/DeepPavlov",
    "commit": "0f32759c67ea961737a6538fd37426f564bae925",
    "filename": "deeppavlov/utils/ms_bot_framework/server.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/deepmipt-DeepPavlov/deeppavlov/utils/ms_bot_framework/server.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "deeppavlov/utils/ms_bot_framework/server.py:69:32 Incompatible variable type [9]: ssl_cert is declared to have type `str` but is used as type `None`.",
    "message": " ssl_cert is declared to have type `str` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 69,
    "warning_line": "                                ssl_cert: str = None):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_len": 162,
        "target_code": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_len": 190,
        "diff_format": "@@ -67,4 +79,4 @@\n                                 https: bool = False,\n-                                ssl_key: str = None,\n-                                ssl_cert: str = None):\n+                                ssl_key: Optional[str] = None,\n+                                ssl_cert: Optional[str] = None) -> None:\n \n",
        "source_code_with_indent": "                                https: bool = False,\n                                ssl_key: str = None,\n                                ssl_cert: str = None):\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "                                https: bool = False,\n                                ssl_key: Optional[str] = None,\n                                ssl_cert: Optional[str] = None) -> None:\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]