[
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py:127:15 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 127,
    "warning_line": "        if len(sleuth.pith) != len(sleuth.hint_childs):"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py:134:23 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 134,
    "warning_line": "                f'{len(sleuth.pith)} not {len(sleuth.hint_childs)}'"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py:139:52 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `enumerate.__init__` but got `object`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `enumerate.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 139,
    "warning_line": "        for pith_item_index, pith_item in enumerate(sleuth.pith):"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py:235:58 Incompatible parameter type [6]: Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "message": " Expected `typing.Sized` for 1st positional only parameter to call `len` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 235,
    "warning_line": "                pith_item_index = sleuth.random_int % len(sleuth.pith)"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/_peperrorsequence.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/_peperrorsequence.py:252:44 Incompatible parameter type [6]: Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `enumerate.__init__` but got `object`.",
    "message": " Expected `typing.Iterable[Variable[_T]]` for 1st positional only parameter to call `enumerate.__init__` but got `object`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 252,
    "warning_line": "                pith_enumerator = enumerate(sleuth.pith)"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/_error/peperror.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/_error/peperror.py",
    "file_hunks_size": 5,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/_pep/_error/peperror.py:288:8 Incompatible parameter type [6]: Expected `str` for 5th parameter `exception_label` to call `CauseSleuth.__init__` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 5th parameter `exception_label` to call `CauseSleuth.__init__` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 288,
    "warning_line": "        exception_label=pith_label,"
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/_pep/pepcode.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/_pep/pepcode.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "beartype/_decor/_code/_pep/pepcode.py:392:12 Incompatible parameter type [6]: Expected `str` for 1st parameter `text` to call `replace_str_substrs` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st parameter `text` to call `replace_str_substrs` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 392,
    "warning_line": "            text=func_code,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    # or return value with an arbitrary name.\n    func_code = None\n\n",
        "source_code_len": 68,
        "target_code": "    # or return value with an arbitrary name.\n    func_code: str = None  # type: ignore[assignment]\n\n",
        "target_code_len": 101,
        "diff_format": "@@ -329,3 +329,3 @@\n     # or return value with an arbitrary name.\n-    func_code = None\n+    func_code: str = None  # type: ignore[assignment]\n \n",
        "source_code_with_indent": "    # or return value with an arbitrary name.\n    func_code = None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    # or return value with an arbitrary name.\n    func_code: str = None  # type: ignore[assignment]\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_decor/_code/codemain.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_decor/_code/codemain.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_decor/_code/codemain.py:746:4 Incompatible return type [7]: Expected `None` but got `typing.Tuple[str, bool]`.",
    "message": " Expected `None` but got `typing.Tuple[str, bool]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 746,
    "warning_line": "    return func_code, is_func_code_noop",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from inspect import Parameter, Signature\n\n",
        "source_code_len": 42,
        "target_code": "from inspect import Parameter, Signature\nfrom typing import Tuple\n\n",
        "target_code_len": 67,
        "diff_format": "@@ -586,2 +586,3 @@\n from inspect import Parameter, Signature\n+from typing import Tuple\n \n",
        "source_code_with_indent": "from inspect import Parameter, Signature\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from inspect import Parameter, Signature\nfrom typing import Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# ....................{ CODERS                            }....................\ndef generate_code(data: BeartypeData) -> None:\n    '''\n",
        "source_code_len": 135,
        "target_code": "# ....................{ CODERS                            }....................\ndef generate_code(data: BeartypeData) -> Tuple[str, bool]:\n    '''\n",
        "target_code_len": 147,
        "diff_format": "@@ -621,3 +622,3 @@\n # ....................{ CODERS                            }....................\n-def generate_code(data: BeartypeData) -> None:\n+def generate_code(data: BeartypeData) -> Tuple[str, bool]:\n     '''\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "# ....................{ CODERS                            }....................\ndef generate_code(data: BeartypeData) -> None:\n    <IND>",
        "target_code_with_indent": "# ....................{ CODERS                            }....................\ndef generate_code(data: BeartypeData) -> Tuple[str, bool]:\n    <IND>"
      }
    ]
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_util/text/utiltextlabel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_util/text/utiltextlabel.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_util/text/utiltextlabel.py:40:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 40,
    "warning_line": "    return f'{func.__name__}()'",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from beartype._util.utilobject import get_object_classname\n\n",
        "source_code_len": 60,
        "target_code": "from beartype._util.utilobject import get_object_classname\nfrom collections.abc import Callable\n\n",
        "target_code_len": 97,
        "diff_format": "@@ -16,2 +16,3 @@\n from beartype._util.utilobject import get_object_classname\n+from collections.abc import Callable\n \n",
        "source_code_with_indent": "from beartype._util.utilobject import get_object_classname\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from beartype._util.utilobject import get_object_classname\nfrom collections.abc import Callable\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "# ....................{ LABELLERS ~ callable              }....................\ndef label_callable(func: 'CallableTypes') -> None:\n    '''\n",
        "source_code_len": 139,
        "target_code": "# ....................{ LABELLERS ~ callable              }....................\ndef label_callable(func: Callable) -> str:\n    '''\n",
        "target_code_len": 131,
        "diff_format": "@@ -21,3 +22,3 @@\n # ....................{ LABELLERS ~ callable              }....................\n-def label_callable(func: 'CallableTypes') -> None:\n+def label_callable(func: Callable) -> str:\n     '''\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "# ....................{ LABELLERS ~ callable              }....................\ndef label_callable(func: 'CallableTypes') -> None:\n    <IND>",
        "target_code_with_indent": "# ....................{ LABELLERS ~ callable              }....................\ndef label_callable(func: Callable) -> str:\n    <IND>"
      }
    ]
  },
  {
    "project": "beartype/beartype",
    "commit": "e2144feb410e0f8989ceb5ed5092e23871f5aefa",
    "filename": "beartype/_util/text/utiltextlabel.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/beartype-beartype/beartype/_util/text/utiltextlabel.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beartype/_util/text/utiltextlabel.py:203:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 203,
    "warning_line": "    return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from beartype._util.utilobject import get_object_classname\n\n",
        "source_code_len": 60,
        "target_code": "from beartype._util.utilobject import get_object_classname\nfrom collections.abc import Callable\n\n",
        "target_code_len": 97,
        "diff_format": "@@ -16,2 +16,3 @@\n from beartype._util.utilobject import get_object_classname\n+from collections.abc import Callable\n \n",
        "source_code_with_indent": "from beartype._util.utilobject import get_object_classname\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from beartype._util.utilobject import get_object_classname\nfrom collections.abc import Callable\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def label_callable_decorated_return_value(\n    func: 'CallableTypes', return_value: object) -> None:\n    '''\n",
        "source_code_len": 109,
        "target_code": "def label_callable_decorated_return_value(\n    func: Callable, return_value: object) -> str:\n    '''\n",
        "target_code_len": 101,
        "diff_format": "@@ -178,3 +179,3 @@\n def label_callable_decorated_return_value(\n-    func: 'CallableTypes', return_value: object) -> None:\n+    func: Callable, return_value: object) -> str:\n     '''\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "<DED>def label_callable_decorated_return_value(\n    func: 'CallableTypes', return_value: object) -> None:\n    <IND>",
        "target_code_with_indent": "<DED>def label_callable_decorated_return_value(\n    func: Callable, return_value: object) -> str:\n    <IND>"
      }
    ]
  }
]