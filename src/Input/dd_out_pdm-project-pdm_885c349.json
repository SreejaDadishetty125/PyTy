[
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:251:8 Incompatible parameter type [6]: Expected `bool` for 3rd parameter `dev` to call `do_sync` but got `Optional[bool]`.",
    "message": " Expected `bool` for 3rd parameter `dev` to call `do_sync` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 251,
    "warning_line": "        dev=dev,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    *,\n    dev: Optional[bool] = None,\n    sections: Sequence[str] = (),\n",
        "source_code_len": 73,
        "target_code": "    *,\n    dev: bool = False,\n    sections: Sequence[str] = (),\n",
        "target_code_len": 64,
        "diff_format": "@@ -187,3 +187,3 @@\n     *,\n-    dev: Optional[bool] = None,\n+    dev: bool = False,\n     sections: Sequence[str] = (),\n",
        "source_code_with_indent": "    *,\n    dev: Optional[bool] = None,\n    sections: Sequence[str] = (),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    *,\n    dev: bool = False,\n    sections: Sequence[str] = (),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:260:56 Incompatible parameter type [6]: Expected `bool` for 3rd positional only parameter to call `pdm.project.core.Project.add_dependencies` but got `Optional[bool]`.",
    "message": " Expected `bool` for 3rd positional only parameter to call `pdm.project.core.Project.add_dependencies` but got `Optional[bool]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 260,
    "warning_line": "        project.add_dependencies(updated_deps, section, dev)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    *,\n    dev: Optional[bool] = None,\n    sections: Sequence[str] = (),\n",
        "source_code_len": 73,
        "target_code": "    *,\n    dev: bool = False,\n    sections: Sequence[str] = (),\n",
        "target_code_len": 64,
        "diff_format": "@@ -187,3 +187,3 @@\n     *,\n-    dev: Optional[bool] = None,\n+    dev: bool = False,\n     sections: Sequence[str] = (),\n",
        "source_code_with_indent": "    *,\n    dev: Optional[bool] = None,\n    sections: Sequence[str] = (),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    *,\n    dev: bool = False,\n    sections: Sequence[str] = (),\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:335:12 Incompatible variable type [9]: graph is declared to have type `bool` but is used as type `str`.",
    "message": " graph is declared to have type `bool` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 335,
    "warning_line": "            graph = format_reverse_dependency_graph(project, dep_graph)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:337:12 Incompatible variable type [9]: graph is declared to have type `bool` but is used as type `str`.",
    "message": " graph is declared to have type `bool` but is used as type `str`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 337,
    "warning_line": "            graph = format_dependency_graph(project, dep_graph)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:338:29 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `termui.UI.echo` but got `bool`.",
    "message": " Expected `str` for 1st positional only parameter to call `termui.UI.echo` but got `bool`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 338,
    "warning_line": "        project.core.ui.echo(graph)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:532:23 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `do_import` but got `Path`.",
    "message": " Expected `str` for 2nd positional only parameter to call `do_import` but got `Path`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 532,
    "warning_line": "    do_import(project, filepath, key)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    key, filepath = importable_files[int(choice)]\n    do_import(project, filepath, key)\n\n\ndef print_pep582_command(ui: termui.UI, shell: str = \"AUTO\"):\n    \"\"\"Print the export PYTHONPATH line to be evaluated by the shell.\"\"\"\n",
        "source_code_len": 225,
        "target_code": "    key, filepath = importable_files[int(choice)]\n    do_import(project, str(filepath), key)\n\n\ndef print_pep582_command(ui: termui.UI, shell: str = \"AUTO\") -> None:\n    \"\"\"Print the export PYTHONPATH line to be evaluated by the shell.\"\"\"\n",
        "target_code_len": 238,
        "diff_format": "@@ -531,6 +526,6 @@\n     key, filepath = importable_files[int(choice)]\n-    do_import(project, filepath, key)\n-\n-\n-def print_pep582_command(ui: termui.UI, shell: str = \"AUTO\"):\n+    do_import(project, str(filepath), key)\n+\n+\n+def print_pep582_command(ui: termui.UI, shell: str = \"AUTO\") -> None:\n     \"\"\"Print the export PYTHONPATH line to be evaluated by the shell.\"\"\"\n",
        "source_code_with_indent": "    <DED>key, filepath = importable_files[int(choice)]\n    do_import(project, filepath, key)\n\n\n<DED>def print_pep582_command(ui: termui.UI, shell: str = \"AUTO\"):\n    <IND>\"\"\"Print the export PYTHONPATH line to be evaluated by the shell.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>key, filepath = importable_files[int(choice)]\n    do_import(project, str(filepath), key)\n\n\n<DED>def print_pep582_command(ui: termui.UI, shell: str = \"AUTO\") -> None:\n    <IND>\"\"\"Print the export PYTHONPATH line to be evaluated by the shell.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "885c349ab2d6460895fb8122de9490f8588b8ef5",
    "filename": "pdm/cli/actions.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/cli/actions.py",
    "file_hunks_size": 9,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/cli/actions.py:644:23 Incompatible parameter type [6]: Expected `str` for 2nd positional only parameter to call `do_import` but got `Path`.",
    "message": " Expected `str` for 2nd positional only parameter to call `do_import` but got `Path`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 644,
    "warning_line": "    do_import(project, project.pyproject_file, \"legacy\")",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    )\n    do_import(project, project.pyproject_file, \"legacy\")\n    project.core.ui.echo(\n",
        "source_code_len": 89,
        "target_code": "    )\n    do_import(project, str(project.pyproject_file), \"legacy\")\n    project.core.ui.echo(\n",
        "target_code_len": 94,
        "diff_format": "@@ -643,3 +638,3 @@\n     )\n-    do_import(project, project.pyproject_file, \"legacy\")\n+    do_import(project, str(project.pyproject_file), \"legacy\")\n     project.core.ui.echo(\n",
        "source_code_with_indent": "    )\n    do_import(project, project.pyproject_file, \"legacy\")\n    project.core.ui.echo(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    )\n    do_import(project, str(project.pyproject_file), \"legacy\")\n    project.core.ui.echo(\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]