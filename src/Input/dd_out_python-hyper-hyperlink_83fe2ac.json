[
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `Iterable[str]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `Iterable[str]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `Optional[bool]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `Optional[bool]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `Optional[int]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `Optional[int]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `Optional[str]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `Optional[str]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `typing.Union[Sequence[Tuple[str, Optional[str]]], typing.Mapping[str, Optional[str]], typing.Tuple[Tuple[str, Optional[str]], ...]]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `typing.Union[Sequence[Tuple[str, Optional[str]]], typing.Mapping[str, Optional[str]], typing.Tuple[Tuple[str, Optional[str]], ...]]` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "python-hyper/hyperlink",
    "commit": "83fe2acb71b937b11d363fb6fb1a3a60224f0a01",
    "filename": "src/hyperlink/hypothesis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/python-hyper-hyperlink/src/hyperlink/hypothesis.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/hyperlink/hypothesis.py:293:28 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "message": " Expected `str` for 1st positional only parameter to call `src.hyperlink._url.URL.__init__` but got `typing.Union[None, Sequence[str], int]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 293,
    "warning_line": "        return EncodedURL(**args)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_len": 185,
        "target_code": "\n        return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_len": 180,
        "diff_format": "@@ -287,8 +287,8 @@\n \n-        args = dict(\n+        return EncodedURL(\n             scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n-            host=host, port=port, path=path,\n-        )\n-\n-        return EncodedURL(**args)\n+            host=host,\n+            port=port,\n+            path=path,\n+        )\n \n",
        "source_code_with_indent": "\n        <DED>args = dict(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host, port=port, path=path,\n        )\n\n        return EncodedURL(**args)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        <DED>return EncodedURL(\n            scheme=cast(Text, draw(sampled_from((u\"http\", u\"https\")))),\n            host=host,\n            port=port,\n            path=path,\n        )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]