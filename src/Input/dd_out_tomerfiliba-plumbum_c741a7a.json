[
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:111:0 Incompatible variable type [9]: BG is declared to have type `typing.Type[BG]` but is used as type `BG`.",
    "message": " BG is declared to have type `typing.Type[BG]` but is used as type `BG`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 111,
    "warning_line": "BG = BG()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      }
    ]
  },
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:136:0 Incompatible variable type [9]: FG is declared to have type `typing.Type[FG]` but is used as type `FG`.",
    "message": " FG is declared to have type `typing.Type[FG]` but is used as type `FG`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 136,
    "warning_line": "FG = FG()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nBG = BG()\n\nclass FG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 49,
        "target_code": "\nBG = _BG()\n\nclass _FG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 51,
        "diff_format": "@@ -110,5 +110,5 @@\n \n-BG = BG()\n-\n-class FG(ExecutionModifier):\n+BG = _BG()\n+\n+class _FG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>BG = BG()\n\nclass FG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>BG = _BG()\n\nclass _FG(ExecutionModifier):\n    <IND>"
      }
    ]
  },
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:196:0 Incompatible variable type [9]: TEE is declared to have type `typing.Type[TEE]` but is used as type `TEE`.",
    "message": " TEE is declared to have type `typing.Type[TEE]` but is used as type `TEE`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 196,
    "warning_line": "TEE = TEE()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nBG = BG()\n\nclass FG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 49,
        "target_code": "\nBG = _BG()\n\nclass _FG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 51,
        "diff_format": "@@ -110,5 +110,5 @@\n \n-BG = BG()\n-\n-class FG(ExecutionModifier):\n+BG = _BG()\n+\n+class _FG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>BG = BG()\n\nclass FG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>BG = _BG()\n\nclass _FG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFG = FG()\n\n\nclass TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_len": 123,
        "target_code": "\nFG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "target_code_len": 125,
        "diff_format": "@@ -135,6 +135,6 @@\n \n-FG = FG()\n-\n-\n-class TEE(ExecutionModifier):\n+FG = _FG()\n+\n+\n+class _TEE(ExecutionModifier):\n     \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>FG = FG()\n\n\nclass TEE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>FG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    <IND>"
      }
    ]
  },
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:240:0 Incompatible variable type [9]: TF is declared to have type `typing.Type[TF]` but is used as type `TF`.",
    "message": " TF is declared to have type `typing.Type[TF]` but is used as type `TF`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 240,
    "warning_line": "TF = TF()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nBG = BG()\n\nclass FG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 49,
        "target_code": "\nBG = _BG()\n\nclass _FG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 51,
        "diff_format": "@@ -110,5 +110,5 @@\n \n-BG = BG()\n-\n-class FG(ExecutionModifier):\n+BG = _BG()\n+\n+class _FG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>BG = BG()\n\nclass FG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>BG = _BG()\n\nclass _FG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFG = FG()\n\n\nclass TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_len": 123,
        "target_code": "\nFG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "target_code_len": 125,
        "diff_format": "@@ -135,6 +135,6 @@\n \n-FG = FG()\n-\n-\n-class TEE(ExecutionModifier):\n+FG = _FG()\n+\n+\n+class _TEE(ExecutionModifier):\n     \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>FG = FG()\n\n\nclass TEE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>FG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nTEE = TEE()\n\nclass TF(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 51,
        "target_code": "\nTEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 53,
        "diff_format": "@@ -195,5 +195,5 @@\n \n-TEE = TEE()\n-\n-class TF(ExecutionModifier):\n+TEE = _TEE()\n+\n+class _TF(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>TEE = TEE()\n\nclass TF(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>TEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    <IND>"
      }
    ]
  },
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:276:0 Incompatible variable type [9]: RETCODE is declared to have type `typing.Type[RETCODE]` but is used as type `RETCODE`.",
    "message": " RETCODE is declared to have type `typing.Type[RETCODE]` but is used as type `RETCODE`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 276,
    "warning_line": "RETCODE = RETCODE()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nBG = BG()\n\nclass FG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 49,
        "target_code": "\nBG = _BG()\n\nclass _FG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 51,
        "diff_format": "@@ -110,5 +110,5 @@\n \n-BG = BG()\n-\n-class FG(ExecutionModifier):\n+BG = _BG()\n+\n+class _FG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>BG = BG()\n\nclass FG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>BG = _BG()\n\nclass _FG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFG = FG()\n\n\nclass TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_len": 123,
        "target_code": "\nFG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "target_code_len": 125,
        "diff_format": "@@ -135,6 +135,6 @@\n \n-FG = FG()\n-\n-\n-class TEE(ExecutionModifier):\n+FG = _FG()\n+\n+\n+class _TEE(ExecutionModifier):\n     \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>FG = FG()\n\n\nclass TEE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>FG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nTEE = TEE()\n\nclass TF(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 51,
        "target_code": "\nTEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 53,
        "diff_format": "@@ -195,5 +195,5 @@\n \n-TEE = TEE()\n-\n-class TF(ExecutionModifier):\n+TEE = _TEE()\n+\n+class _TF(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>TEE = TEE()\n\nclass TF(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>TEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nTF = TF()\n\n\nclass RETCODE(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 55,
        "target_code": "\nTF = _TF()\n\n\nclass _RETCODE(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 57,
        "diff_format": "@@ -239,6 +239,6 @@\n \n-TF = TF()\n-\n-\n-class RETCODE(ExecutionModifier):\n+TF = _TF()\n+\n+\n+class _RETCODE(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>TF = TF()\n\n\nclass RETCODE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>TF = _TF()\n\n\nclass _RETCODE(ExecutionModifier):\n    <IND>"
      }
    ]
  },
  {
    "project": "tomerfiliba/plumbum",
    "commit": "c741a7a814a645e3feec5d065f9e6b5362c5168d",
    "filename": "plumbum/commands/modifiers.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/tomerfiliba-plumbum/plumbum/commands/modifiers.py",
    "file_hunks_size": 7,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "plumbum/commands/modifiers.py:326:0 Incompatible variable type [9]: NOHUP is declared to have type `typing.Type[NOHUP]` but is used as type `NOHUP`.",
    "message": " NOHUP is declared to have type `typing.Type[NOHUP]` but is used as type `NOHUP`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 326,
    "warning_line": "NOHUP = NOHUP()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nclass BG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 38,
        "target_code": "\nclass _BG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 39,
        "diff_format": "@@ -82,3 +82,3 @@\n \n-class BG(ExecutionModifier):\n+class _BG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>class BG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>class _BG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nBG = BG()\n\nclass FG(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 49,
        "target_code": "\nBG = _BG()\n\nclass _FG(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 51,
        "diff_format": "@@ -110,5 +110,5 @@\n \n-BG = BG()\n-\n-class FG(ExecutionModifier):\n+BG = _BG()\n+\n+class _FG(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>BG = BG()\n\nclass FG(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>BG = _BG()\n\nclass _FG(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nFG = FG()\n\n\nclass TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_len": 123,
        "target_code": "\nFG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "target_code_len": 125,
        "diff_format": "@@ -135,6 +135,6 @@\n \n-FG = FG()\n-\n-\n-class TEE(ExecutionModifier):\n+FG = _FG()\n+\n+\n+class _TEE(ExecutionModifier):\n     \"\"\"Run a command, dumping its stdout/stderr to the current process's stdout\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED>FG = FG()\n\n\nclass TEE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED>FG = _FG()\n\n\nclass _TEE(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nTEE = TEE()\n\nclass TF(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 51,
        "target_code": "\nTEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 53,
        "diff_format": "@@ -195,5 +195,5 @@\n \n-TEE = TEE()\n-\n-class TF(ExecutionModifier):\n+TEE = _TEE()\n+\n+class _TF(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>TEE = TEE()\n\nclass TF(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>TEE = _TEE()\n\nclass _TF(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nTF = TF()\n\n\nclass RETCODE(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 55,
        "target_code": "\nTF = _TF()\n\n\nclass _RETCODE(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 57,
        "diff_format": "@@ -239,6 +239,6 @@\n \n-TF = TF()\n-\n-\n-class RETCODE(ExecutionModifier):\n+TF = _TF()\n+\n+\n+class _RETCODE(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>TF = TF()\n\n\nclass RETCODE(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>TF = _TF()\n\n\nclass _RETCODE(ExecutionModifier):\n    <IND>"
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\nRETCODE = RETCODE()\n\n\nclass NOHUP(ExecutionModifier):\n    \"\"\"\n",
        "source_code_len": 63,
        "target_code": "\nRETCODE = _RETCODE()\n\n\nclass _NOHUP(ExecutionModifier):\n    \"\"\"\n",
        "target_code_len": 65,
        "diff_format": "@@ -275,6 +275,6 @@\n \n-RETCODE = RETCODE()\n-\n-\n-class NOHUP(ExecutionModifier):\n+RETCODE = _RETCODE()\n+\n+\n+class _NOHUP(ExecutionModifier):\n     \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED><DED><DED>RETCODE = RETCODE()\n\n\nclass NOHUP(ExecutionModifier):\n    <IND>",
        "target_code_with_indent": "\n<DED><DED><DED>RETCODE = _RETCODE()\n\n\nclass _NOHUP(ExecutionModifier):\n    <IND>"
      }
    ]
  }
]