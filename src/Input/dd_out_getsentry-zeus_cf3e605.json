[
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/auth.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/auth.py:149:8 Incompatible return type [7]: Expected `Mapping[UUID, Permission]` but got `Mapping[UUID, Optional[Permission]]`.",
    "message": " Expected `Mapping[UUID, Permission]` but got `Mapping[UUID, Optional[Permission]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 149,
    "warning_line": "        return {self.repository_id: self.permission}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_len": 118,
        "target_code": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_len": 129,
        "diff_format": "@@ -7,3 +7,3 @@\n from sqlalchemy.orm import joinedload\n-from typing import Mapping, Optional\n+from typing import Any, Dict, Mapping, Optional\n from urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @cached_property\n    def access(self) -> Mapping[UUID, Permission]:\n        if not self.repository_id:\n",
        "source_code_len": 107,
        "target_code": "    @cached_property\n    def access(self) -> Dict[UUID, Optional[Permission]]:\n        if not self.repository_id:\n",
        "target_code_len": 114,
        "diff_format": "@@ -144,3 +140,3 @@\n     @cached_property\n-    def access(self) -> Mapping[UUID, Permission]:\n+    def access(self) -> Dict[UUID, Optional[Permission]]:\n         if not self.repository_id:\n",
        "source_code_with_indent": "    <DED>@cached_property\n    def access(self) -> Mapping[UUID, Permission]:\n        <IND>if not self.repository_id:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@cached_property\n    def access(self) -> Dict[UUID, Optional[Permission]]:\n        <IND>if not self.repository_id:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/auth.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/auth.py:166:28 Incompatible parameter type [6]: Expected `zeus.models.user.User` for 1st positional only parameter to call `Tenant.from_user` but got `Optional[zeus.models.user.User]`.",
    "message": " Expected `zeus.models.user.User` for 1st positional only parameter to call `Tenant.from_user` but got `Optional[zeus.models.user.User]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "    return Tenant.from_user(user)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    @classmethod\n    def from_user(cls, user: User):\n        if not user:\n",
        "source_code_len": 74,
        "target_code": "    @classmethod\n    def from_user(cls, user: Optional[User]):\n        if not user:\n",
        "target_code_len": 84,
        "diff_format": "@@ -56,3 +56,3 @@\n     @classmethod\n-    def from_user(cls, user: User):\n+    def from_user(cls, user: Optional[User]):\n         if not user:\n",
        "source_code_with_indent": "    <DED>@classmethod\n    def from_user(cls, user: User):\n        <IND>if not user:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    <DED>@classmethod\n    def from_user(cls, user: Optional[User]):\n        <IND>if not user:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/auth.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/auth.py:336:45 Incompatible parameter type [6]: Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "message": " Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 336,
    "warning_line": "    access = {UUID(k): v for k, v in payload[\"access\"].items()}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_len": 118,
        "target_code": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_len": 129,
        "diff_format": "@@ -7,3 +7,3 @@\n from sqlalchemy.orm import joinedload\n-from typing import Mapping, Optional\n+from typing import Any, Dict, Mapping, Optional\n from urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef parse_token(token: str) -> Optional[str]:\n    s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_len": 119,
        "target_code": "\ndef parse_token(token: str) -> Optional[Any]:\n    s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "target_code_len": 119,
        "diff_format": "@@ -322,3 +323,3 @@\n \n-def parse_token(token: str) -> Optional[str]:\n+def parse_token(token: str) -> Optional[Any]:\n     s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_with_indent": "\n<DED>def parse_token(token: str) -> Optional[str]:\n    <IND>s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def parse_token(token: str) -> Optional[Any]:\n    <IND>s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/auth.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/auth.py:338:47 Incompatible parameter type [6]: Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "message": " Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 338,
    "warning_line": "        return UserTenant(user_id=UUID(payload[\"uid\"]), access=access)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_len": 118,
        "target_code": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_len": 129,
        "diff_format": "@@ -7,3 +7,3 @@\n from sqlalchemy.orm import joinedload\n-from typing import Mapping, Optional\n+from typing import Any, Dict, Mapping, Optional\n from urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from sqlalchemy.orm import joinedload\nfrom typing import Any, Dict, Mapping, Optional\nfrom urllib.parse import urlparse, urljoin\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef parse_token(token: str) -> Optional[str]:\n    s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_len": 119,
        "target_code": "\ndef parse_token(token: str) -> Optional[Any]:\n    s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "target_code_len": 119,
        "diff_format": "@@ -322,3 +323,3 @@\n \n-def parse_token(token: str) -> Optional[str]:\n+def parse_token(token: str) -> Optional[Any]:\n     s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_with_indent": "\n<DED>def parse_token(token: str) -> Optional[str]:\n    <IND>s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def parse_token(token: str) -> Optional[Any]:\n    <IND>s = JSONWebSignatureSerializer(current_app.secret_key, salt=\"auth\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/auth.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/auth.py",
    "file_hunks_size": 16,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/auth.py:368:12 Incompatible return type [7]: Expected `str` but got implicit return value of `None`.",
    "message": " Expected `str` but got implicit return value of `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 368,
    "warning_line": "            return target",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef get_redirect_target(clear=True, session=session) -> str:\n    if clear:\n",
        "source_code_len": 76,
        "target_code": "\ndef get_redirect_target(clear=True, session=session) -> Optional[str]:\n    if clear:\n",
        "target_code_len": 86,
        "diff_format": "@@ -356,3 +359,3 @@\n \n-def get_redirect_target(clear=True, session=session) -> str:\n+def get_redirect_target(clear=True, session=session) -> Optional[str]:\n     if clear:\n",
        "source_code_with_indent": "\n<DED>def get_redirect_target(clear=True, session=session) -> str:\n    <IND>if clear:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def get_redirect_target(clear=True, session=session) -> Optional[str]:\n    <IND>if clear:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/models/hook.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/models/hook.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/models/hook.py:37:8 Incompatible return type [7]: Expected `bytes` but got `str`.",
    "message": " Expected `bytes` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 37,
    "warning_line": "        return hmac.new(",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get_signature(self) -> bytes:\n        return hmac.new(\n",
        "source_code_len": 64,
        "target_code": "\n    def get_signature(self) -> str:\n        return hmac.new(\n",
        "target_code_len": 62,
        "diff_format": "@@ -35,3 +35,3 @@\n \n-    def get_signature(self) -> bytes:\n+    def get_signature(self) -> str:\n         return hmac.new(\n",
        "source_code_with_indent": "\n    <DED>def get_signature(self) -> bytes:\n        <IND>return hmac.new(\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get_signature(self) -> str:\n        <IND>return hmac.new(\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def is_valid_signature(self, signature: bytes) -> bool:\n        return compare_digest(self.get_signature(), signature)\n",
        "source_code_len": 124,
        "target_code": "\n    def is_valid_signature(self, signature: str) -> bool:\n        return compare_digest(self.get_signature(), signature)\n",
        "target_code_len": 122,
        "diff_format": "@@ -40,3 +40,3 @@\n \n-    def is_valid_signature(self, signature: bytes) -> bool:\n+    def is_valid_signature(self, signature: str) -> bool:\n         return compare_digest(self.get_signature(), signature)\n",
        "source_code_with_indent": "\n    <DED>def is_valid_signature(self, signature: bytes) -> bool:\n        <IND>return compare_digest(self.get_signature(), signature)\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def is_valid_signature(self, signature: str) -> bool:\n        <IND>return compare_digest(self.get_signature(), signature)\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:19:4 Incompatible attribute type [8]: Attribute `revision_sha` declared in class `MetaBuild` has type `str` but is used as type `None`.",
    "message": " Attribute `revision_sha` declared in class `MetaBuild` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 19,
    "warning_line": "    revision_sha: str = None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:25:4 Incompatible attribute type [8]: Attribute `date_created` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "message": " Attribute `date_created` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 25,
    "warning_line": "    date_created: datetime = None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:26:4 Incompatible attribute type [8]: Attribute `date_started` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "message": " Attribute `date_started` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 26,
    "warning_line": "    date_started: datetime = None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:27:4 Incompatible attribute type [8]: Attribute `date_finished` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "message": " Attribute `date_finished` declared in class `MetaBuild` has type `datetime` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 27,
    "warning_line": "    date_finished: datetime = None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:29:4 Incompatible attribute type [8]: Attribute `revision` declared in class `MetaBuild` has type `zeus.models.revision.Revision` but is used as type `None`.",
    "message": " Attribute `revision` declared in class `MetaBuild` has type `zeus.models.revision.Revision` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 29,
    "warning_line": "    revision: Revision = None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:95:4 Incompatible return type [7]: Expected `zeus.models.build.Build` but got `MetaBuild`.",
    "message": " Expected `zeus.models.build.Build` but got `MetaBuild`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 95,
    "warning_line": "    return target"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:100:4 Incompatible variable type [9]: required_hook_ids is declared to have type `List[UUID]` but is used as type `None`.",
    "message": " required_hook_ids is declared to have type `List[UUID]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 100,
    "warning_line": "    required_hook_ids: List[UUID] = None,"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:119:4 Incompatible return type [7]: Expected `zeus.models.build.Build` but got `typing.Union[MetaBuild, zeus.models.build.Build]`.",
    "message": " Expected `zeus.models.build.Build` but got `typing.Union[MetaBuild, zeus.models.build.Build]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 119,
    "warning_line": "    return reduce("
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:162:4 Incompatible return type [7]: Expected `Mapping[str, zeus.models.build.Build]` but got `List[Tuple[typing.Any, zeus.models.build.Build]]`.",
    "message": " Expected `Mapping[str, zeus.models.build.Build]` but got `List[Tuple[typing.Any, zeus.models.build.Build]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 162,
    "warning_line": "    return ["
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:166:16 Incompatible parameter type [6]: Expected `Tuple[typing.Any, List[zeus.models.build.Build]]` for 1st positional only parameter to call `merge_build_group` but got `List[typing.Any]`.",
    "message": " Expected `Tuple[typing.Any, List[zeus.models.build.Build]]` for 1st positional only parameter to call `merge_build_group` but got `List[typing.Any]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "                list(group), required_hook_ids, with_relations=with_relations"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:166:29 Incompatible parameter type [6]: Expected `List[UUID]` for 2nd positional only parameter to call `merge_build_group` but got `Set[UUID]`.",
    "message": " Expected `List[UUID]` for 2nd positional only parameter to call `merge_build_group` but got `Set[UUID]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "                list(group), required_hook_ids, with_relations=with_relations"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:176:8 Incompatible return type [7]: Expected `zeus.models.build.Build` but got `None`.",
    "message": " Expected `zeus.models.build.Build` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 176,
    "warning_line": "        return None"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/builds.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/builds.py",
    "file_hunks_size": 10,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/builds.py:178:18 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `Mapping.__getitem__` but got `int`.",
    "message": " Expected `str` for 1st positional only parameter to call `Mapping.__getitem__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 178,
    "warning_line": "    return builds[0][1]"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/http.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/http.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/http.py:5:4 Incompatible return type [7]: Expected `str` but got `typing.Tuple[str]`.",
    "message": " Expected `str` but got `typing.Tuple[str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 5,
    "warning_line": "    return (",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def absolute_url(path: str) -> str:\n    return (\n        \"{proto}://{domain}/{path}\".format(\n            proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n            domain=current_app.config[\"DOMAIN\"],\n            path=path.lstrip(\"/\"),\n        ),\n    )\n",
        "source_code_len": 262,
        "target_code": "def absolute_url(path: str) -> str:\n    return \"{proto}://{domain}/{path}\".format(\n        proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n        domain=current_app.config[\"DOMAIN\"],\n        path=path.lstrip(\"/\"),\n    )\n",
        "target_code_len": 229,
        "diff_format": "@@ -4,8 +4,6 @@\n def absolute_url(path: str) -> str:\n-    return (\n-        \"{proto}://{domain}/{path}\".format(\n-            proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n-            domain=current_app.config[\"DOMAIN\"],\n-            path=path.lstrip(\"/\"),\n-        ),\n+    return \"{proto}://{domain}/{path}\".format(\n+        proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n+        domain=current_app.config[\"DOMAIN\"],\n+        path=path.lstrip(\"/\"),\n     )\n",
        "source_code_with_indent": "def absolute_url(path: str) -> str:\n    <IND>return (\n        \"{proto}://{domain}/{path}\".format(\n            proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n            domain=current_app.config[\"DOMAIN\"],\n            path=path.lstrip(\"/\"),\n        ),\n    )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def absolute_url(path: str) -> str:\n    <IND>return \"{proto}://{domain}/{path}\".format(\n        proto=\"https\" if current_app.config[\"SSL\"] else \"http\",\n        domain=current_app.config[\"DOMAIN\"],\n        path=path.lstrip(\"/\"),\n    )\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/redis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/redis.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/redis.py:32:8 Incompatible variable type [9]: expire is declared to have type `int` but is used as type `None`.",
    "message": " expire is declared to have type `int` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 32,
    "warning_line": "        expire: int = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from random import random\n\n",
        "source_code_len": 27,
        "target_code": "from random import random\nfrom typing import Generator, Optional\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -3,2 +3,3 @@\n from random import random\n+from typing import Generator, Optional\n \n",
        "source_code_with_indent": "from random import random\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from random import random\nfrom typing import Generator, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: float = 3.0,\n        expire: int = None,\n        nowait: bool = False,\n    ):\n        \"\"\"\n",
        "source_code_len": 107,
        "target_code": "        timeout: float = 3.0,\n        expire: Optional[float] = None,\n        nowait: bool = False,\n    ) -> Generator[None, None, None]:\n        \"\"\"\n",
        "target_code_len": 150,
        "diff_format": "@@ -31,5 +32,5 @@\n         timeout: float = 3.0,\n-        expire: int = None,\n+        expire: Optional[float] = None,\n         nowait: bool = False,\n-    ):\n+    ) -> Generator[None, None, None]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        timeout: float = 3.0,\n        expire: int = None,\n        nowait: bool = False,\n    ):\n        <IND>",
        "target_code_with_indent": "        timeout: float = 3.0,\n        expire: Optional[float] = None,\n        nowait: bool = False,\n    ) -> Generator[None, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/utils/redis.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/utils/redis.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/utils/redis.py:51:12 Incompatible variable type [9]: expire is declared to have type `int` but is used as type `float`.",
    "message": " expire is declared to have type `int` but is used as type `float`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 51,
    "warning_line": "            expire = timeout",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from random import random\n\n",
        "source_code_len": 27,
        "target_code": "from random import random\nfrom typing import Generator, Optional\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -3,2 +3,3 @@\n from random import random\n+from typing import Generator, Optional\n \n",
        "source_code_with_indent": "from random import random\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from random import random\nfrom typing import Generator, Optional\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        timeout: float = 3.0,\n        expire: int = None,\n        nowait: bool = False,\n    ):\n        \"\"\"\n",
        "source_code_len": 107,
        "target_code": "        timeout: float = 3.0,\n        expire: Optional[float] = None,\n        nowait: bool = False,\n    ) -> Generator[None, None, None]:\n        \"\"\"\n",
        "target_code_len": 150,
        "diff_format": "@@ -31,5 +32,5 @@\n         timeout: float = 3.0,\n-        expire: int = None,\n+        expire: Optional[float] = None,\n         nowait: bool = False,\n-    ):\n+    ) -> Generator[None, None, None]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "        timeout: float = 3.0,\n        expire: int = None,\n        nowait: bool = False,\n    ):\n        <IND>",
        "target_code_with_indent": "        timeout: float = 3.0,\n        expire: Optional[float] = None,\n        nowait: bool = False,\n    ) -> Generator[None, None, None]:\n        <IND>"
      }
    ]
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/vcs/providers/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/vcs/providers/github.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/vcs/providers/github.py:95:12 Incompatible variable type [9]: repo is declared to have type `zeus.models.repository.Repository` but is used as type `typing.Dict[typing.Any, typing.Any]`.",
    "message": " repo is declared to have type `zeus.models.repository.Repository` but is used as type `typing.Dict[typing.Any, typing.Any]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 95,
    "warning_line": "            repo = self.get_repo(user, *repo.data[\"full_name\"].split(\"/\", 1))"
  },
  {
    "project": "getsentry/zeus",
    "commit": "cf3e60518e1ca4dd74683fc3334b7fa5cfb580bc",
    "filename": "zeus/vcs/providers/github.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/getsentry-zeus/zeus/vcs/providers/github.py",
    "file_hunks_size": 4,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "zeus/vcs/providers/github.py:98:16 Incompatible return type [7]: Expected `bool` but got `None`.",
    "message": " Expected `bool` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 98,
    "warning_line": "                return None"
  }
]