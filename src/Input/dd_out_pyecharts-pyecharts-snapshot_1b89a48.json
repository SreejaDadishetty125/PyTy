[
  {
    "project": "pyecharts/pyecharts-snapshot",
    "commit": "1b89a481c712a4699977490321959e4d12327c5c",
    "filename": "pyecharts_snapshot/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyecharts-pyecharts-snapshot/pyecharts_snapshot/main.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyecharts_snapshot/main.py:152:20 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `save_as` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `save_as` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 152,
    "warning_line": "            save_as(imagedata, output_name, file_type)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef decode_base64(data: str) -> str:\n    \"\"\"Decode base64, padding being optional.\n",
        "source_code_len": 84,
        "target_code": "\ndef decode_base64(data: str) -> bytes:\n    \"\"\"Decode base64, padding being optional.\n",
        "target_code_len": 86,
        "diff_format": "@@ -172,3 +172,3 @@\n \n-def decode_base64(data: str) -> str:\n+def decode_base64(data: str) -> bytes:\n     \"\"\"Decode base64, padding being optional.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def decode_base64(data: str) -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def decode_base64(data: str) -> bytes:\n    <IND>"
      }
    ]
  },
  {
    "project": "pyecharts/pyecharts-snapshot",
    "commit": "1b89a481c712a4699977490321959e4d12327c5c",
    "filename": "pyecharts_snapshot/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyecharts-pyecharts-snapshot/pyecharts_snapshot/main.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyecharts_snapshot/main.py:154:24 Incompatible parameter type [6]: Expected `bytes` for 1st positional only parameter to call `save_as_png` but got `str`.",
    "message": " Expected `bytes` for 1st positional only parameter to call `save_as_png` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 154,
    "warning_line": "            save_as_png(imagedata, output_name)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef decode_base64(data: str) -> str:\n    \"\"\"Decode base64, padding being optional.\n",
        "source_code_len": 84,
        "target_code": "\ndef decode_base64(data: str) -> bytes:\n    \"\"\"Decode base64, padding being optional.\n",
        "target_code_len": 86,
        "diff_format": "@@ -172,3 +172,3 @@\n \n-def decode_base64(data: str) -> str:\n+def decode_base64(data: str) -> bytes:\n     \"\"\"Decode base64, padding being optional.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def decode_base64(data: str) -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def decode_base64(data: str) -> bytes:\n    <IND>"
      }
    ]
  },
  {
    "project": "pyecharts/pyecharts-snapshot",
    "commit": "1b89a481c712a4699977490321959e4d12327c5c",
    "filename": "pyecharts_snapshot/main.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pyecharts-pyecharts-snapshot/pyecharts_snapshot/main.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyecharts_snapshot/main.py:183:4 Incompatible return type [7]: Expected `str` but got `bytes`.",
    "message": " Expected `str` but got `bytes`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 183,
    "warning_line": "    return base64.decodestring(data.encode(\"utf-8\"))",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef decode_base64(data: str) -> str:\n    \"\"\"Decode base64, padding being optional.\n",
        "source_code_len": 84,
        "target_code": "\ndef decode_base64(data: str) -> bytes:\n    \"\"\"Decode base64, padding being optional.\n",
        "target_code_len": 86,
        "diff_format": "@@ -172,3 +172,3 @@\n \n-def decode_base64(data: str) -> str:\n+def decode_base64(data: str) -> bytes:\n     \"\"\"Decode base64, padding being optional.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n<DED>def decode_base64(data: str) -> str:\n    <IND>",
        "target_code_with_indent": "\n<DED>def decode_base64(data: str) -> bytes:\n    <IND>"
      }
    ]
  }
]