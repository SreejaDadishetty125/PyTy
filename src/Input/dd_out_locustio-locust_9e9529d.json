[
  {
    "project": "locustio/locust",
    "commit": "9e9529dbc4b6ed23cb3759f98cb49b3b6038c838",
    "filename": "locust/shape.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/locustio-locust/locust/shape.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "locust/shape.py:25:22 Invalid type [31]: Expression `typing.Optional[typing.Tuple(int, float)]` is not a valid type.",
    "message": " Expression `typing.Optional[typing.Tuple(int, float)]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 25,
    "warning_line": "    def tick(self) -> Optional[Tuple(int, float)]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def tick(self) -> Optional[Tuple(int, float)]:\n        \"\"\"\n",
        "source_code_len": 64,
        "target_code": "\n    def tick(self) -> Optional[Tuple[int, float]]:\n        \"\"\"\n",
        "target_code_len": 64,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def tick(self) -> Optional[Tuple(int, float)]:\n+    def tick(self) -> Optional[Tuple[int, float]]:\n         \"\"\"\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def tick(self) -> Optional[Tuple(int, float)]:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def tick(self) -> Optional[Tuple[int, float]]:\n        <IND>"
      }
    ]
  }
]