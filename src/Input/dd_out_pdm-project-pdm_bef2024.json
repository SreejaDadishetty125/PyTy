[
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/models/pip_shims.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/models/pip_shims.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/models/pip_shims.py:74:42 Incompatible parameter type [6]: Expected `typing.Tuple[int, ...]` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "message": " Expected `typing.Tuple[int, ...]` for 2nd positional only parameter to call `dict.__setitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 74,
    "warning_line": "            target_python_params[\"abi\"] = python_abi_tag",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import inspect\nfrom typing import TYPE_CHECKING, Iterator, Optional, Tuple\n\n",
        "source_code_len": 76,
        "target_code": "import inspect\nfrom typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -10,3 +10,3 @@\n import inspect\n-from typing import TYPE_CHECKING, Iterator, Optional, Tuple\n+from typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n \n",
        "source_code_with_indent": "import inspect\nfrom typing import TYPE_CHECKING, Iterator, Optional, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import inspect\nfrom typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "source_code_len": 176,
        "target_code": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "target_code_len": 192,
        "diff_format": "@@ -71,3 +71,3 @@\n         builder_args = inspect.signature(target_python_builder).parameters\n-        target_python_params = {\"py_version_info\": python_version}\n+        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n         if \"abi\" in builder_args:\n",
        "source_code_with_indent": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/models/pip_shims.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/models/pip_shims.py",
    "file_hunks_size": 4,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/models/pip_shims.py:76:43 Incompatible parameter type [6]: Expected `typing.Tuple[int, ...]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "message": " Expected `typing.Tuple[int, ...]` for 2nd positional only parameter to call `dict.__setitem__` but got `typing.List[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 76,
    "warning_line": "            target_python_params[\"abis\"] = [python_abi_tag]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import inspect\nfrom typing import TYPE_CHECKING, Iterator, Optional, Tuple\n\n",
        "source_code_len": 76,
        "target_code": "import inspect\nfrom typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n\n",
        "target_code_len": 81,
        "diff_format": "@@ -10,3 +10,3 @@\n import inspect\n-from typing import TYPE_CHECKING, Iterator, Optional, Tuple\n+from typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n \n",
        "source_code_with_indent": "import inspect\nfrom typing import TYPE_CHECKING, Iterator, Optional, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import inspect\nfrom typing import TYPE_CHECKING, Any, Iterator, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "source_code_len": 176,
        "target_code": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "target_code_len": 192,
        "diff_format": "@@ -71,3 +71,3 @@\n         builder_args = inspect.signature(target_python_builder).parameters\n-        target_python_params = {\"py_version_info\": python_version}\n+        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n         if \"abi\" in builder_args:\n",
        "source_code_with_indent": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        builder_args = inspect.signature(target_python_builder).parameters\n        target_python_params: dict[str, Any] = {\"py_version_info\": python_version}\n        if \"abi\" in builder_args:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:200:54 Incompatible parameter type [6]: Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `is_venv_python` but got `str`.",
    "message": " Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `is_venv_python` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 200,
    "warning_line": "        if self.config[\"use_venv\"] and is_venv_python(self.python.executable):"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:374:8 Incompatible variable type [9]: spinner is declared to have type `Union[halo.halo.Halo, termui.DummySpinner]` but is used as type `None`.",
    "message": " spinner is declared to have type `Union[halo.halo.Halo, termui.DummySpinner]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 374,
    "warning_line": "        spinner: Union[halo.Halo, termui.DummySpinner] = None,",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        requirements: List[Requirement],\n        tracked_names: Optional[Iterable[str]] = None,\n        spinner: Union[halo.Halo, termui.DummySpinner] = None,\n    ) -> BaseReporter:\n",
        "source_code_len": 196,
        "target_code": "        self,\n        requirements: list[Requirement],\n        tracked_names: Iterable[str] | None = None,\n        spinner: halo.Halo | termui.DummySpinner | None = None,\n    ) -> BaseReporter:\n",
        "target_code_len": 194,
        "diff_format": "@@ -371,5 +369,5 @@\n         self,\n-        requirements: List[Requirement],\n-        tracked_names: Optional[Iterable[str]] = None,\n-        spinner: Union[halo.Halo, termui.DummySpinner] = None,\n+        requirements: list[Requirement],\n+        tracked_names: Iterable[str] | None = None,\n+        spinner: halo.Halo | termui.DummySpinner | None = None,\n     ) -> BaseReporter:\n",
        "source_code_with_indent": "        self,\n        requirements: List[Requirement],\n        tracked_names: Optional[Iterable[str]] = None,\n        spinner: Union[halo.Halo, termui.DummySpinner] = None,\n    ) -> BaseReporter:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        requirements: list[Requirement],\n        tracked_names: Iterable[str] | None = None,\n        spinner: halo.Halo | termui.DummySpinner | None = None,\n    ) -> BaseReporter:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        return SpinnerReporter(spinner, requirements)\n\n    def get_lock_metadata(self) -> Dict[str, Any]:\n        content_hash = atoml.string(\"sha256:\" + self.get_content_hash(\"sha256\"))\n",
        "source_code_len": 188,
        "target_code": "\n        return SpinnerReporter(spinner or termui.DummySpinner(), requirements)\n\n    def get_lock_metadata(self) -> dict[str, Any]:\n        content_hash = atoml.string(\"sha256:\" + self.get_content_hash(\"sha256\"))\n",
        "target_code_len": 213,
        "diff_format": "@@ -384,5 +382,5 @@\n \n-        return SpinnerReporter(spinner, requirements)\n-\n-    def get_lock_metadata(self) -> Dict[str, Any]:\n+        return SpinnerReporter(spinner or termui.DummySpinner(), requirements)\n+\n+    def get_lock_metadata(self) -> dict[str, Any]:\n         content_hash = atoml.string(\"sha256:\" + self.get_content_hash(\"sha256\"))\n",
        "source_code_with_indent": "\n        return SpinnerReporter(spinner, requirements)\n\n    <DED>def get_lock_metadata(self) -> Dict[str, Any]:\n        <IND>content_hash = atoml.string(\"sha256:\" + self.get_content_hash(\"sha256\"))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        return SpinnerReporter(spinner or termui.DummySpinner(), requirements)\n\n    <DED>def get_lock_metadata(self) -> dict[str, Any]:\n        <IND>content_hash = atoml.string(\"sha256:\" + self.get_content_hash(\"sha256\"))\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:385:31 Incompatible parameter type [6]: Expected `halo.halo.Halo` for 1st positional only parameter to call `SpinnerReporter.__init__` but got `Union[halo.halo.Halo, termui.DummySpinner]`.",
    "message": " Expected `halo.halo.Halo` for 1st positional only parameter to call `SpinnerReporter.__init__` but got `Union[halo.halo.Halo, termui.DummySpinner]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 385,
    "warning_line": "        return SpinnerReporter(spinner, requirements)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:454:12 Incompatible return type [7]: Expected `List[str]` but got `Union[Dict[typing.Any, typing.Any], List[str], str]`.",
    "message": " Expected `List[str]` but got `Union[Dict[typing.Any, typing.Any], List[str], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 454,
    "warning_line": "            return self.meta.setdefault(\"dependencies\", [])"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:486:12 Incompatible parameter type [6]: Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `atomic_open_for_write` but got `str`.",
    "message": " Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `atomic_open_for_write` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 486,
    "warning_line": "            self.pyproject_file.as_posix(), encoding=\"utf-8\""
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:563:12 Incompatible variable type [9]: python is declared to have type `Optional[os.PathLike[typing.Any]]` but is used as type `Optional[str]`.",
    "message": " python is declared to have type `Optional[os.PathLike[typing.Any]]` but is used as type `Optional[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 563,
    "warning_line": "            python = shutil.which(\"python\")"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:570:49 Incompatible parameter type [6]: Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `find_python_in_path` but got `str`.",
    "message": " Expected `os.PathLike[typing.Any]` for 1st positional only parameter to call `find_python_in_path` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 570,
    "warning_line": "                    python = find_python_in_path(python_spec)"
  },
  {
    "project": "pdm-project/pdm",
    "commit": "bef2024b57844c623ac820bbc514581ebbe9c285",
    "filename": "pdm/project/core.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/pdm-project-pdm/pdm/project/core.py",
    "file_hunks_size": 27,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pdm/project/core.py:574:20 Incompatible variable type [9]: python is declared to have type `Optional[os.PathLike[typing.Any]]` but is used as type `Optional[str]`.",
    "message": " python is declared to have type `Optional[os.PathLike[typing.Any]]` but is used as type `Optional[str]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 574,
    "warning_line": "                    python = shutil.which(python_spec)"
  }
]