[
  {
    "project": "common-workflow-language/cwltool",
    "commit": "70605b3e2979356013a3a19a26f2a6adbc35f24b",
    "filename": "cwltool/sandboxjs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/sandboxjs.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/sandboxjs.py:43:8 Incompatible return type [7]: Expected `Tuple[bool, str]` but got `bool`.",
    "message": " Expected `Tuple[bool, str]` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 43,
    "warning_line": "        return True",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_js_threshold_version(working_alias):\n    # type: (str) -> Tuple[bool, str]\n\n",
        "source_code_len": 86,
        "target_code": "def check_js_threshold_version(working_alias):\n    # type: (str) -> bool\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -28,3 +28,3 @@\n def check_js_threshold_version(working_alias):\n-    # type: (str) -> Tuple[bool, str]\n+    # type: (str) -> bool\n \n",
        "source_code_with_indent": "def check_js_threshold_version(working_alias):\n    # type: (str) -> Tuple[bool, str]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def check_js_threshold_version(working_alias):\n    # type: (str) -> bool\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "common-workflow-language/cwltool",
    "commit": "70605b3e2979356013a3a19a26f2a6adbc35f24b",
    "filename": "cwltool/sandboxjs.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/common-workflow-language-cwltool/cwltool/sandboxjs.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cwltool/sandboxjs.py:45:8 Incompatible return type [7]: Expected `Tuple[bool, str]` but got `bool`.",
    "message": " Expected `Tuple[bool, str]` but got `bool`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 45,
    "warning_line": "        return False",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "def check_js_threshold_version(working_alias):\n    # type: (str) -> Tuple[bool, str]\n\n",
        "source_code_len": 86,
        "target_code": "def check_js_threshold_version(working_alias):\n    # type: (str) -> bool\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -28,3 +28,3 @@\n def check_js_threshold_version(working_alias):\n-    # type: (str) -> Tuple[bool, str]\n+    # type: (str) -> bool\n \n",
        "source_code_with_indent": "def check_js_threshold_version(working_alias):\n    # type: (str) -> Tuple[bool, str]\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "def check_js_threshold_version(working_alias):\n    # type: (str) -> bool\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]