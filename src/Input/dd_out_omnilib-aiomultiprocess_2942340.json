[
  {
    "project": "omnilib/aiomultiprocess",
    "commit": "2942340034aa55b02d8768f6a9a7e5f3e75465f1",
    "filename": "aiomultiprocess/pool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/omnilib-aiomultiprocess/aiomultiprocess/pool.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiomultiprocess/pool.py:300:8 Incompatible return type [7]: Expected `Sequence[Variable[R]]` but got `PoolResult[Variable[R]]`.",
    "message": " Expected `Sequence[Variable[R]]` but got `PoolResult[Variable[R]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 300,
    "warning_line": "        return PoolResult(self, tids)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> Sequence[R]:\n        \"\"\"Run a coroutine once for each item in the iterable.\"\"\"\n",
        "source_code_len": 155,
        "target_code": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> PoolResult[R]:\n        \"\"\"Run a coroutine once for each item in the iterable.\"\"\"\n",
        "target_code_len": 157,
        "diff_format": "@@ -293,3 +310,3 @@\n         # chunksize: int = None,  # todo: implement chunking maybe\n-    ) -> Sequence[R]:\n+    ) -> PoolResult[R]:\n         \"\"\"Run a coroutine once for each item in the iterable.\"\"\"\n",
        "source_code_with_indent": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> Sequence[R]:\n        <IND>\"\"\"Run a coroutine once for each item in the iterable.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> PoolResult[R]:\n        <IND>\"\"\"Run a coroutine once for each item in the iterable.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "omnilib/aiomultiprocess",
    "commit": "2942340034aa55b02d8768f6a9a7e5f3e75465f1",
    "filename": "aiomultiprocess/pool.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/omnilib-aiomultiprocess/aiomultiprocess/pool.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "aiomultiprocess/pool.py:313:8 Incompatible return type [7]: Expected `Sequence[Variable[R]]` but got `PoolResult[Variable[R]]`.",
    "message": " Expected `Sequence[Variable[R]]` but got `PoolResult[Variable[R]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 313,
    "warning_line": "        return PoolResult(self, tids)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> Sequence[R]:\n        \"\"\"Run a coroutine once for each sequence of items in the iterable.\"\"\"\n",
        "source_code_len": 168,
        "target_code": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> PoolResult[R]:\n        \"\"\"Run a coroutine once for each sequence of items in the iterable.\"\"\"\n",
        "target_code_len": 170,
        "diff_format": "@@ -306,3 +323,3 @@\n         # chunksize: int = None,  # todo: implement chunking maybe\n-    ) -> Sequence[R]:\n+    ) -> PoolResult[R]:\n         \"\"\"Run a coroutine once for each sequence of items in the iterable.\"\"\"\n",
        "source_code_with_indent": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> Sequence[R]:\n        <IND>\"\"\"Run a coroutine once for each sequence of items in the iterable.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # chunksize: int = None,  # todo: implement chunking maybe\n    ) -> PoolResult[R]:\n        <IND>\"\"\"Run a coroutine once for each sequence of items in the iterable.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]