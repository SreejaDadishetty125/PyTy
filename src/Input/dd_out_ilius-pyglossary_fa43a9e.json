[
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:49:2 Incompatible attribute type [8]: Attribute `_data` declared in class `DataEntry` has type `bytes` but is used as type `Union[bytes, str]`.",
    "message": " Attribute `_data` declared in class `DataEntry` has type `bytes` but is used as type `Union[bytes, str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 49,
    "warning_line": "\t\tself._data = data  # bytes instance"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:147:1 Inconsistent override [14]: `pyglossary.entry.Entry.getEntrySortKey` overrides method defined in `BaseEntry` inconsistently. Parameter of type `typing.Callable[[str], typing.Any]` is not a supertype of the overridden parameter `BaseEntry`.",
    "message": " `pyglossary.entry.Entry.getEntrySortKey` overrides method defined in `BaseEntry` inconsistently. Parameter of type `typing.Callable[[str], typing.Any]` is not a supertype of the overridden parameter `BaseEntry`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 147,
    "warning_line": "\tdef getEntrySortKey(key: Callable[[str], Any] = None) -> Callable[[BaseEntry], Any]:"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:147:21 Incompatible variable type [9]: key is declared to have type `typing.Callable[[str], typing.Any]` but is used as type `None`.",
    "message": " key is declared to have type `typing.Callable[[str], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 147,
    "warning_line": "\tdef getEntrySortKey(key: Callable[[str], Any] = None) -> Callable[[BaseEntry], Any]:"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:154:1 Inconsistent override [14]: `pyglossary.entry.Entry.getRawEntrySortKey` overrides method defined in `BaseEntry` inconsistently. Parameter of type `typing.Callable[[str], typing.Any]` is not a supertype of the overridden parameter `BaseEntry`.",
    "message": " `pyglossary.entry.Entry.getRawEntrySortKey` overrides method defined in `BaseEntry` inconsistently. Parameter of type `typing.Callable[[str], typing.Any]` is not a supertype of the overridden parameter `BaseEntry`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 154,
    "warning_line": "\tdef getRawEntrySortKey(key: Callable[[str], Any] = None) -> Callable[[Tuple], str]:"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:154:24 Incompatible variable type [9]: key is declared to have type `typing.Callable[[str], typing.Any]` but is used as type `None`.",
    "message": " key is declared to have type `typing.Callable[[str], typing.Any]` but is used as type `None`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 154,
    "warning_line": "\tdef getRawEntrySortKey(key: Callable[[str], Any] = None) -> Callable[[Tuple], str]:"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:211:21 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `Entry._join` but got `Union[List[str], str]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `Entry._join` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 211,
    "warning_line": "\t\t\treturn self._join(self._word)"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:220:3 Incompatible return type [7]: Expected `List[str]` but got `Union[List[str], str]`.",
    "message": " Expected `List[str]` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 220,
    "warning_line": "\t\t\treturn self._word"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:231:21 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `Entry._join` but got `Union[List[str], str]`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `Entry._join` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 231,
    "warning_line": "\t\t\treturn self._join(self._defi)"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:240:3 Incompatible return type [7]: Expected `List[str]` but got `Union[List[str], str]`.",
    "message": " Expected `List[str]` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 240,
    "warning_line": "\t\t\treturn self._defi"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:281:3 Incompatible attribute type [8]: Attribute `_word` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "message": " Attribute `_word` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 281,
    "warning_line": "\t\t\tself._word = tuple("
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:294:3 Incompatible attribute type [8]: Attribute `_defi` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "message": " Attribute `_defi` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 294,
    "warning_line": "\t\t\tself._defi = tuple("
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:312:3 Incompatible attribute type [8]: Attribute `_word` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "message": " Attribute `_word` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 312,
    "warning_line": "\t\t\tself._word = tuple("
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:323:3 Incompatible attribute type [8]: Attribute `_defi` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "message": " Attribute `_defi` declared in class `Entry` has type `Union[List[str], str]` but is used as type `typing.Tuple[str, ...]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 323,
    "warning_line": "\t\t\tself._defi = tuple("
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/entry.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ilius-pyglossary/pyglossary/entry.py",
    "file_hunks_size": 13,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "pyglossary/entry.py:383:3 Incompatible parameter type [6]: Expected `str` for 3rd parameter `defiFormat` to call `Entry.__init__` but got `Union[List[str], str]`.",
    "message": " Expected `str` for 3rd parameter `defiFormat` to call `Entry.__init__` but got `Union[List[str], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 383,
    "warning_line": "\t\t\tdefiFormat=defiFormat,"
  },
  {
    "project": "ilius/pyglossary",
    "commit": "fa43a9e6e386db5bf4d5974030d291843f4b0288",
    "filename": "pyglossary/glossary.py",
    "min_patch_found": false,
    "full_warning_msg": "pyglossary/glossary.py:713:33 Incompatible parameter type [6]: Expected `typing.Callable[[str], typing.Any]` for 1st positional only parameter to call `Entry.getRawEntrySortKey` but got `Optional[typing.Callable[[str], typing.Any]]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  }
]