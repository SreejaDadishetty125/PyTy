[
  {
    "project": "theacodes/nox",
    "commit": "febd6fcd6ca6da1ae90d8ddbaacc042158f57d0a",
    "filename": "nox/logger.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theacodes-nox/nox/logger.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nox/logger.py:22:24 Invalid type [31]: Expression `logging.getLoggerClass()` is not a valid type.",
    "message": " Expression `logging.getLoggerClass()` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 22,
    "warning_line": "class LoggerWithSuccess(logging.getLoggerClass()):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "\nclass LoggerWithSuccess(logging.getLoggerClass()):\n    def __init__(self, name, level=logging.NOTSET):\n",
        "source_code_len": 104,
        "target_code": "\nclass LoggerWithSuccess(logging.getLoggerClass()):  # type: ignore\n    def __init__(self, name, level=logging.NOTSET):\n",
        "target_code_len": 120,
        "diff_format": "@@ -21,3 +21,3 @@\n \n-class LoggerWithSuccess(logging.getLoggerClass()):\n+class LoggerWithSuccess(logging.getLoggerClass()):  # type: ignore\n     def __init__(self, name, level=logging.NOTSET):\n",
        "source_code_with_indent": "\nclass LoggerWithSuccess(logging.getLoggerClass()):\n    <IND>def __init__(self, name, level=logging.NOTSET):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\nclass LoggerWithSuccess(logging.getLoggerClass()):  # type: ignore\n    <IND>def __init__(self, name, level=logging.NOTSET):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "theacodes/nox",
    "commit": "febd6fcd6ca6da1ae90d8ddbaacc042158f57d0a",
    "filename": "nox/virtualenv.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/theacodes-nox/nox/virtualenv.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "nox/virtualenv.py:126:4 Inconsistent override [15]: `allowed_globals` overrides attribute defined in `ProcessEnv` inconsistently. Type `typing.Tuple[str]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "message": " `allowed_globals` overrides attribute defined in `ProcessEnv` inconsistently. Type `typing.Tuple[str]` is not a subtype of the overridden attribute `typing.Tuple[]`.",
    "rule_id": "Inconsistent override [15]",
    "warning_line_no": 126,
    "warning_line": "    allowed_globals = (\"conda\",)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "    is_sandboxed = True\n    allowed_globals = (\"conda\",)\n\n",
        "source_code_len": 58,
        "target_code": "    is_sandboxed = True\n    allowed_globals = (\"conda\",)  # type: ignore\n\n",
        "target_code_len": 74,
        "diff_format": "@@ -125,3 +125,3 @@\n     is_sandboxed = True\n-    allowed_globals = (\"conda\",)\n+    allowed_globals = (\"conda\",)  # type: ignore\n \n",
        "source_code_with_indent": "    is_sandboxed = True\n    allowed_globals = (\"conda\",)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    is_sandboxed = True\n    allowed_globals = (\"conda\",)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]