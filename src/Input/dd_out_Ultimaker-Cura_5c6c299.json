[
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:65:94 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 65,
    "warning_line": "            return self._extruder_trains[self._application.getGlobalContainerStack().getId()][str(self._active_extruder_index)].getId()",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_len": 311,
        "target_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_len": 316,
        "diff_format": "@@ -40,3 +41,3 @@\n         # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n-        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n+        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n         self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:141:65 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 141,
    "warning_line": "                    object_extruders.add(current_extruder_trains[\"0\"].getId())",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_len": 311,
        "target_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_len": 316,
        "diff_format": "@@ -40,3 +41,3 @@\n         # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n-        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n+        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n         self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:162:81 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 162,
    "warning_line": "                    return self._extruder_trains[global_container_stack.getId()][str(self._active_extruder_index)]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def getActiveExtruderStack(self) -> Optional[\"ExtruderStack\"]:\n        global_container_stack = self._application.getGlobalContainerStack()\n\n        if global_container_stack:\n            if global_container_stack.getId() in self._extruder_trains:\n                if str(self._active_extruder_index) in self._extruder_trains[global_container_stack.getId()]:\n                    return self._extruder_trains[global_container_stack.getId()][str(self._active_extruder_index)]\n\n        return None\n\n",
        "source_code_len": 499,
        "target_code": "    def getActiveExtruderStack(self) -> Optional[\"ExtruderStack\"]:\n        return self.getExtruderStack(self._active_extruder_index)\n\n",
        "target_code_len": 134,
        "diff_format": "@@ -156,10 +156,3 @@\n     def getActiveExtruderStack(self) -> Optional[\"ExtruderStack\"]:\n-        global_container_stack = self._application.getGlobalContainerStack()\n-\n-        if global_container_stack:\n-            if global_container_stack.getId() in self._extruder_trains:\n-                if str(self._active_extruder_index) in self._extruder_trains[global_container_stack.getId()]:\n-                    return self._extruder_trains[global_container_stack.getId()][str(self._active_extruder_index)]\n-\n-        return None\n+        return self.getExtruderStack(self._active_extruder_index)\n \n",
        "source_code_with_indent": "    def getActiveExtruderStack(self) -> Optional[\"ExtruderStack\"]:\n        <IND>global_container_stack = self._application.getGlobalContainerStack()\n\n        if global_container_stack:\n            <IND>if global_container_stack.getId() in self._extruder_trains:\n                <IND>if str(self._active_extruder_index) in self._extruder_trains[global_container_stack.getId()]:\n                    <IND>return self._extruder_trains[global_container_stack.getId()][str(self._active_extruder_index)]\n\n        <DED><DED><DED>return None\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def getActiveExtruderStack(self) -> Optional[\"ExtruderStack\"]:\n        <IND>return self.getExtruderStack(self._active_extruder_index)\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:188:48 Incompatible parameter type [6]: Expected `List[ExtruderStack]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[Variable[_KT], Variable[_VT]]`.",
    "message": " Expected `List[ExtruderStack]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[Variable[_KT], Variable[_VT]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 188,
    "warning_line": "            self._extruder_trains[machine_id] = {}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_len": 311,
        "target_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_len": 316,
        "diff_format": "@@ -40,3 +41,3 @@\n         # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n-        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n+        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n         self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:320:50 Incompatible parameter type [6]: Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `ExtruderStack`.",
    "message": " Expected `typing_extensions.SupportsIndex` for 1st positional only parameter to call `list.__getitem__` but got `ExtruderStack`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 320,
    "warning_line": "        return [self._extruder_trains[machine_id][name] for name in self._extruder_trains[machine_id]]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_len": 311,
        "target_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_len": 316,
        "diff_format": "@@ -40,3 +41,3 @@\n         # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n-        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n+        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n         self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "Ultimaker/Cura",
    "commit": "5c6c299b27747e9ff0b17bfed546c210eacf4926",
    "filename": "cura/Settings/ExtruderManager.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Ultimaker-Cura/cura/Settings/ExtruderManager.py",
    "file_hunks_size": 10,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "cura/Settings/ExtruderManager.py:356:57 Incompatible parameter type [6]: Expected `List[ExtruderStack]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[Variable[_KT], Variable[_VT]]`.",
    "message": " Expected `List[ExtruderStack]` for 2nd positional only parameter to call `dict.__setitem__` but got `Dict[Variable[_KT], Variable[_VT]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 356,
    "warning_line": "                self._extruder_trains[global_stack_id] = {}",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_len": 311,
        "target_code": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_len": 316,
        "diff_format": "@@ -40,3 +41,3 @@\n         # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n-        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n+        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n         self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, List[ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        # Per machine, a dictionary of extruder container stack IDs. Only for separately defined extruders.\n        self._extruder_trains = {}  # type: Dict[str, Dict[str, ExtruderStack]]\n        self._active_extruder_index = -1  # Indicates the index of the active extruder stack. -1 means no active extruder stack\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]