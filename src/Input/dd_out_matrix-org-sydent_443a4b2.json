[
  {
    "project": "matrix-org/sydent",
    "commit": "443a4b26fa6ffe76a05b8fc6ca035536ffe332b2",
    "filename": "sydent/http/servlets/logoutservlet.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/matrix-org-sydent/sydent/http/servlets/logoutservlet.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sydent/http/servlets/logoutservlet.py:50:30 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `AccountStore.delToken` but got `typing.Optional[str]`.",
    "message": " Expected `str` for 1st positional only parameter to call `AccountStore.delToken` but got `typing.Optional[str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "        accountStore.delToken(token)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from sydent.http.auth import authV2, tokenFromRequest\nfrom sydent.http.servlets import jsonwrap, send_cors\nfrom sydent.types import JsonDict\n",
        "source_code_len": 141,
        "target_code": "from sydent.http.auth import authV2, tokenFromRequest\nfrom sydent.http.servlets import MatrixRestError, jsonwrap, send_cors\nfrom sydent.types import JsonDict\n",
        "target_code_len": 158,
        "diff_format": "@@ -22,3 +22,3 @@\n from sydent.http.auth import authV2, tokenFromRequest\n-from sydent.http.servlets import jsonwrap, send_cors\n+from sydent.http.servlets import MatrixRestError, jsonwrap, send_cors\n from sydent.types import JsonDict\n",
        "source_code_with_indent": "from sydent.http.auth import authV2, tokenFromRequest\nfrom sydent.http.servlets import jsonwrap, send_cors\nfrom sydent.types import JsonDict\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from sydent.http.auth import authV2, tokenFromRequest\nfrom sydent.http.servlets import MatrixRestError, jsonwrap, send_cors\nfrom sydent.types import JsonDict\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        token = tokenFromRequest(request)\n\n",
        "source_code_len": 43,
        "target_code": "        token = tokenFromRequest(request)\n        if token is None:\n            raise MatrixRestError(400, \"M_MISSING_PARAMS\", \"Missing token\")\n\n",
        "target_code_len": 145,
        "diff_format": "@@ -47,2 +47,4 @@\n         token = tokenFromRequest(request)\n+        if token is None:\n+            raise MatrixRestError(400, \"M_MISSING_PARAMS\", \"Missing token\")\n \n",
        "source_code_with_indent": "        token = tokenFromRequest(request)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        token = tokenFromRequest(request)\n        if token is None:\n            <IND>raise MatrixRestError(400, \"M_MISSING_PARAMS\", \"Missing token\")\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "matrix-org/sydent",
    "commit": "443a4b26fa6ffe76a05b8fc6ca035536ffe332b2",
    "filename": "sydent/http/servlets/msisdnservlet.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/matrix-org-sydent/sydent/http/servlets/msisdnservlet.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "sydent/http/servlets/msisdnservlet.py:139:37 Incompatible parameter type [6]: Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "message": " Expected `typing.Union[int, slice]` for 1st positional only parameter to call `str.__getitem__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 139,
    "warning_line": "                    next_link = args[\"next_link\"]",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n        err, args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n        if err:\n            msg = \"Verification failed: Your request was invalid.\"\n        else:\n            resp = self.do_validate_request(args)\n            if \"success\" in resp and resp[\"success\"]:\n                msg = \"Verification successful! Please return to your Matrix client to continue.\"\n                if \"next_link\" in args:\n                    next_link = args[\"next_link\"]\n                    request.setResponseCode(302)\n                    request.setHeader(\"Location\", next_link)\n            else:\n                request.setResponseCode(400)\n                msg = \"Verification failed: you may need to request another verification text\"\n\n",
        "source_code_len": 732,
        "target_code": "\n        args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n        resp = self.do_validate_request(request)\n        if \"success\" in resp and resp[\"success\"]:\n            msg = \"Verification successful! Please return to your Matrix client to continue.\"\n            if \"next_link\" in args:\n                next_link = args[\"next_link\"]\n                request.setResponseCode(302)\n                request.setHeader(\"Location\", next_link)\n        else:\n            request.setResponseCode(400)\n            msg = (\n                \"Verification failed: you may need to request another verification text\"\n            )\n\n",
        "target_code_len": 625,
        "diff_format": "@@ -130,16 +130,15 @@\n \n-        err, args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n-        if err:\n-            msg = \"Verification failed: Your request was invalid.\"\n+        args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n+        resp = self.do_validate_request(request)\n+        if \"success\" in resp and resp[\"success\"]:\n+            msg = \"Verification successful! Please return to your Matrix client to continue.\"\n+            if \"next_link\" in args:\n+                next_link = args[\"next_link\"]\n+                request.setResponseCode(302)\n+                request.setHeader(\"Location\", next_link)\n         else:\n-            resp = self.do_validate_request(args)\n-            if \"success\" in resp and resp[\"success\"]:\n-                msg = \"Verification successful! Please return to your Matrix client to continue.\"\n-                if \"next_link\" in args:\n-                    next_link = args[\"next_link\"]\n-                    request.setResponseCode(302)\n-                    request.setHeader(\"Location\", next_link)\n-            else:\n-                request.setResponseCode(400)\n-                msg = \"Verification failed: you may need to request another verification text\"\n+            request.setResponseCode(400)\n+            msg = (\n+                \"Verification failed: you may need to request another verification text\"\n+            )\n \n",
        "source_code_with_indent": "\n        err, args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n        if err:\n            <IND>msg = \"Verification failed: Your request was invalid.\"\n        <DED>else:\n            <IND>resp = self.do_validate_request(args)\n            if \"success\" in resp and resp[\"success\"]:\n                <IND>msg = \"Verification successful! Please return to your Matrix client to continue.\"\n                if \"next_link\" in args:\n                    <IND>next_link = args[\"next_link\"]\n                    request.setResponseCode(302)\n                    request.setHeader(\"Location\", next_link)\n            <DED><DED>else:\n                <IND>request.setResponseCode(400)\n                msg = \"Verification failed: you may need to request another verification text\"\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n        args = get_args(request, (\"token\", \"sid\", \"client_secret\"))\n        resp = self.do_validate_request(request)\n        if \"success\" in resp and resp[\"success\"]:\n            <IND>msg = \"Verification successful! Please return to your Matrix client to continue.\"\n            if \"next_link\" in args:\n                <IND>next_link = args[\"next_link\"]\n                request.setResponseCode(302)\n                request.setHeader(\"Location\", next_link)\n        <DED><DED>else:\n            <IND>request.setResponseCode(400)\n            msg = (\n                \"Verification failed: you may need to request another verification text\"\n            )\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]