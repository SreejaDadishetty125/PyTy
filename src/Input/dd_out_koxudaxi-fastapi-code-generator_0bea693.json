[
  {
    "project": "koxudaxi/fastapi-code-generator",
    "commit": "0bea6934e060bced1eca594650559dc411efb935",
    "filename": "fastapi_code_generator/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/koxudaxi-fastapi-code-generator/fastapi_code_generator/parser.py",
    "file_hunks_size": 8,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fastapi_code_generator/parser.py:91:8 Incompatible attribute type [8]: Attribute `path` declared in class `Operation` has type `Optional[UsefulStr]` but is used as type `Optional[str]`.",
    "message": " Attribute `path` declared in class `Operation` has type `Optional[UsefulStr]` but is used as type `Optional[str]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 91,
    "warning_line": "        self.path = path.path"
  },
  {
    "project": "koxudaxi/fastapi-code-generator",
    "commit": "0bea6934e060bced1eca594650559dc411efb935",
    "filename": "fastapi_code_generator/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/koxudaxi-fastapi-code-generator/fastapi_code_generator/parser.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fastapi_code_generator/parser.py:116:54 Incompatible parameter type [6]: Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "message": " Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 116,
    "warning_line": "        for content_type, obj in self.requestBody.get(\"content\", {}).items():",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_len": 115,
        "target_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_len": 109,
        "diff_format": "@@ -80,3 +80,3 @@\n     responses: Dict[UsefulStr, Any] = {}\n-    requestBody: Dict[UsefulStr, Any] = {}\n+    requestBody: Dict[str, Any] = {}\n     imports: List[Import] = []\n",
        "source_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "koxudaxi/fastapi-code-generator",
    "commit": "0bea6934e060bced1eca594650559dc411efb935",
    "filename": "fastapi_code_generator/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/koxudaxi-fastapi-code-generator/fastapi_code_generator/parser.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fastapi_code_generator/parser.py:122:53 Incompatible parameter type [6]: Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "message": " Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 122,
    "warning_line": "                    description=self.requestBody.get(\"description\"),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_len": 115,
        "target_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_len": 109,
        "diff_format": "@@ -80,3 +80,3 @@\n     responses: Dict[UsefulStr, Any] = {}\n-    requestBody: Dict[UsefulStr, Any] = {}\n+    requestBody: Dict[str, Any] = {}\n     imports: List[Import] = []\n",
        "source_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "koxudaxi/fastapi-code-generator",
    "commit": "0bea6934e060bced1eca594650559dc411efb935",
    "filename": "fastapi_code_generator/parser.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/koxudaxi-fastapi-code-generator/fastapi_code_generator/parser.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "fastapi_code_generator/parser.py:124:50 Incompatible parameter type [6]: Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "message": " Expected `UsefulStr` for 1st positional only parameter to call `typing.Mapping.get` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 124,
    "warning_line": "                    required=self.requestBody.get(\"required\") == \"true\",",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_len": 115,
        "target_code": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_len": 109,
        "diff_format": "@@ -80,3 +80,3 @@\n     responses: Dict[UsefulStr, Any] = {}\n-    requestBody: Dict[UsefulStr, Any] = {}\n+    requestBody: Dict[str, Any] = {}\n     imports: List[Import] = []\n",
        "source_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[UsefulStr, Any] = {}\n    imports: List[Import] = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    responses: Dict[UsefulStr, Any] = {}\n    requestBody: Dict[str, Any] = {}\n    imports: List[Import] = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]