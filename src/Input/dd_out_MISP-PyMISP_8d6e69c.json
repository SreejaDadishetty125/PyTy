[
  {
    "project": "MISP/PyMISP",
    "commit": "8d6e69ce65686af800e2022029a041d50736666a",
    "filename": "pymisp/mispevent.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/MISP-PyMISP/pymisp/mispevent.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "pymisp/mispevent.py:227:29 Incompatible parameter type [6]: Expected `Union[IO[bytes], os.PathLike[str], str]` for 1st positional only parameter to call `ZipFile.__init__` but got `Optional[BytesIO]`.",
    "message": " Expected `Union[IO[bytes], os.PathLike[str], str]` for 1st positional only parameter to call `ZipFile.__init__` but got `Optional[BytesIO]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 227,
    "warning_line": "                with ZipFile(self.data) as f:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "            try:\n                with ZipFile(self.data) as f:\n                    if not self.__is_misp_encrypted_file(f):\n",
        "source_code_len": 124,
        "target_code": "            try:\n                # Ignore type, if data is None -> exception\n                with ZipFile(self.data) as f:  # type: ignore\n                    if not self.__is_misp_encrypted_file(f):\n",
        "target_code_len": 200,
        "diff_format": "@@ -226,3 +226,4 @@\n             try:\n-                with ZipFile(self.data) as f:\n+                # Ignore type, if data is None -> exception\n+                with ZipFile(self.data) as f:  # type: ignore\n                     if not self.__is_misp_encrypted_file(f):\n",
        "source_code_with_indent": "            <IND>try:\n                <IND>with ZipFile(self.data) as f:\n                    <IND>if not self.__is_misp_encrypted_file(f):\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            <IND>try:\n                # Ignore type, if data is None -> exception\n                <IND>with ZipFile(self.data) as f:  # type: ignore\n                    <IND>if not self.__is_misp_encrypted_file(f):\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]