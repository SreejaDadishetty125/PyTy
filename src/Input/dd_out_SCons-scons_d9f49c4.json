[
  {
    "project": "SCons/scons",
    "commit": "d9f49c49338f544e3694b6f6a514667cc13a15de",
    "filename": "timings/hundred/TimeSCons-run.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/SCons-scons/timings/hundred/TimeSCons-run.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "timings/hundred/TimeSCons-run.py:50:41 Incompatible parameter type [6]: Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 1st positional only parameter to call `io.BufferedWriter.write` but got `str`.",
    "message": " Expected `typing.Union[array.array[typing.Any], bytearray, bytes, memoryview, mmap.mmap]` for 1st positional only parameter to call `io.BufferedWriter.write` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 50,
    "warning_line": "    open('source_%04d' % t, 'wb' ).write('contents\\n')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "for t in range(test.variables['TARGET_COUNT']):\n    open('source_%04d' % t, 'wb' ).write('contents\\n')\n\n",
        "source_code_len": 104,
        "target_code": "for t in range(test.variables['TARGET_COUNT']):\n    with open('source_%04d' % t, 'w') as f:\n        f.write('contents\\n')\n\n",
        "target_code_len": 123,
        "diff_format": "@@ -49,3 +49,4 @@\n for t in range(test.variables['TARGET_COUNT']):\n-    open('source_%04d' % t, 'wb' ).write('contents\\n')\n+    with open('source_%04d' % t, 'w') as f:\n+        f.write('contents\\n')\n \n",
        "source_code_with_indent": "for t in range(test.variables['TARGET_COUNT']):\n    <IND>open('source_%04d' % t, 'wb' ).write('contents\\n')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "for t in range(test.variables['TARGET_COUNT']):\n    <IND>with open('source_%04d' % t, 'w') as f:\n        <IND>f.write('contents\\n')\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]