[
  {
    "project": "rotki/rotki",
    "commit": "61ecd8038373f68ca1c22ff0db711c3293f1cd2c",
    "filename": "rotkehlchen/db/dbhandler.py",
    "min_patch_found": false,
    "full_warning_msg": "rotkehlchen/db/dbhandler.py:250:51 Incompatible parameter type [6]: Expected `Union[bool, int, str]` for 2nd positional only parameter to call `dict.__setitem__` but got `Optional[int]`.",
    "exception": "PatchSet should only have 1 Patch, but it has 0",
    "dd_fail": true
  },
  {
    "project": "rotki/rotki",
    "commit": "61ecd8038373f68ca1c22ff0db711c3293f1cd2c",
    "filename": "rotkehlchen/ethchain.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/ethchain.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/ethchain.py:124:12 Incompatible return type [7]: Expected `int` but got `None`.",
    "message": " Expected `int` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 124,
    "warning_line": "            return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "import os\nfrom typing import Dict, List, Tuple\n\n",
        "source_code_len": 48,
        "target_code": "import os\nfrom typing import Dict, List, Optional, Tuple\n\n",
        "target_code_len": 58,
        "diff_format": "@@ -2,3 +2,3 @@\n import os\n-from typing import Dict, List, Tuple\n+from typing import Dict, List, Optional, Tuple\n \n",
        "source_code_with_indent": "import os\nfrom typing import Dict, List, Tuple\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "import os\nfrom typing import Dict, List, Optional, Tuple\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def query_eth_highest_block(self) -> int:\n        \"\"\" Attempts to query blockcypher for the block height\n",
        "source_code_len": 110,
        "target_code": "\n    def query_eth_highest_block(self) -> Optional[int]:\n        \"\"\" Attempts to query blockcypher for the block height\n",
        "target_code_len": 120,
        "diff_format": "@@ -113,3 +113,3 @@\n \n-    def query_eth_highest_block(self) -> int:\n+    def query_eth_highest_block(self) -> Optional[int]:\n         \"\"\" Attempts to query blockcypher for the block height\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    <DED>def query_eth_highest_block(self) -> int:\n        <IND>",
        "target_code_with_indent": "\n    <DED>def query_eth_highest_block(self) -> Optional[int]:\n        <IND>"
      }
    ]
  },
  {
    "project": "rotki/rotki",
    "commit": "61ecd8038373f68ca1c22ff0db711c3293f1cd2c",
    "filename": "rotkehlchen/kraken.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/rotki-rotki/rotkehlchen/kraken.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "rotkehlchen/kraken.py:394:54 Incompatible parameter type [6]: Expected `Union[typing.EthToken, typing.FiatAsset, typing.NonEthTokenBlockchainAsset]` for 1st positional only parameter to call `query_cryptocompare_for_fiat_price` but got `str`.",
    "message": " Expected `Union[typing.EthToken, typing.FiatAsset, typing.NonEthTokenBlockchainAsset]` for 1st positional only parameter to call `query_cryptocompare_for_fiat_price` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 394,
    "warning_line": "            return query_cryptocompare_for_fiat_price('ICN')",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            # can be ICN in Kraken -- so use crypto compare for price info\n            return query_cryptocompare_for_fiat_price('ICN')\n\n",
        "source_code_len": 137,
        "target_code": "            # can be ICN in Kraken -- so use crypto compare for price info\n            return query_cryptocompare_for_fiat_price(typing.EthToken('ICN'))\n\n",
        "target_code_len": 154,
        "diff_format": "@@ -393,3 +393,3 @@\n             # can be ICN in Kraken -- so use crypto compare for price info\n-            return query_cryptocompare_for_fiat_price('ICN')\n+            return query_cryptocompare_for_fiat_price(typing.EthToken('ICN'))\n \n",
        "source_code_with_indent": "            # can be ICN in Kraken -- so use crypto compare for price info\n            <IND>return query_cryptocompare_for_fiat_price('ICN')\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            # can be ICN in Kraken -- so use crypto compare for price info\n            <IND>return query_cryptocompare_for_fiat_price(typing.EthToken('ICN'))\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]