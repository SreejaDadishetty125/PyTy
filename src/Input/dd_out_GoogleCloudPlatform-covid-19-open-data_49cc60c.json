[
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "49cc60cdb23109e2287a1e76d0cdffc5b435f7d2",
    "filename": "src/appengine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/appengine.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/appengine.py:238:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 238,
    "warning_line": "    return \"OK\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/update_table\")\ndef update_table(table_name: str = None, job_group: int = None) -> None:\n    table_name = table_name or request.args.get(\"table\")\n",
        "source_code_len": 158,
        "target_code": "@app.route(\"/update_table\")\ndef update_table(table_name: str = None, job_group: int = None) -> str:\n    table_name = table_name or request.args.get(\"table\")\n",
        "target_code_len": 157,
        "diff_format": "@@ -196,3 +196,3 @@\n @app.route(\"/update_table\")\n-def update_table(table_name: str = None, job_group: int = None) -> None:\n+def update_table(table_name: str = None, job_group: int = None) -> str:\n     table_name = table_name or request.args.get(\"table\")\n",
        "source_code_with_indent": "<DED>@app.route(\"/update_table\")\ndef update_table(table_name: str = None, job_group: int = None) -> None:\n    <IND>table_name = table_name or request.args.get(\"table\")\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/update_table\")\ndef update_table(table_name: str = None, job_group: int = None) -> str:\n    <IND>table_name = table_name or request.args.get(\"table\")\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "49cc60cdb23109e2287a1e76d0cdffc5b435f7d2",
    "filename": "src/appengine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/appengine.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/appengine.py:288:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 288,
    "warning_line": "    return \"OK\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/combine_table\")\ndef combine_table(table_name: str = None) -> None:\n    try:\n",
        "source_code_len": 89,
        "target_code": "@app.route(\"/combine_table\")\ndef combine_table(table_name: str = None) -> str:\n    try:\n",
        "target_code_len": 88,
        "diff_format": "@@ -241,3 +241,3 @@\n @app.route(\"/combine_table\")\n-def combine_table(table_name: str = None) -> None:\n+def combine_table(table_name: str = None) -> str:\n     try:\n",
        "source_code_with_indent": "<DED>@app.route(\"/combine_table\")\ndef combine_table(table_name: str = None) -> None:\n    <IND>try:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/combine_table\")\ndef combine_table(table_name: str = None) -> str:\n    <IND>try:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "49cc60cdb23109e2287a1e76d0cdffc5b435f7d2",
    "filename": "src/appengine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/appengine.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/appengine.py:319:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 319,
    "warning_line": "    return \"OK\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/publish\")\ndef publish() -> None:\n    with TemporaryDirectory() as workdir:\n",
        "source_code_len": 88,
        "target_code": "@app.route(\"/publish\")\ndef publish() -> str:\n    with TemporaryDirectory() as workdir:\n",
        "target_code_len": 87,
        "diff_format": "@@ -291,3 +291,3 @@\n @app.route(\"/publish\")\n-def publish() -> None:\n+def publish() -> str:\n     with TemporaryDirectory() as workdir:\n",
        "source_code_with_indent": "<DED>@app.route(\"/publish\")\ndef publish() -> None:\n    <IND>with TemporaryDirectory() as workdir:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/publish\")\ndef publish() -> str:\n    <IND>with TemporaryDirectory() as workdir:\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "49cc60cdb23109e2287a1e76d0cdffc5b435f7d2",
    "filename": "src/appengine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/appengine.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/appengine.py:340:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 340,
    "warning_line": "    return \"OK\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef convert_json(expr: str) -> None:\n    with TemporaryDirectory() as workdir:\n",
        "source_code_len": 80,
        "target_code": "\ndef _convert_json(expr: str) -> str:\n    with TemporaryDirectory() as workdir:\n",
        "target_code_len": 80,
        "diff_format": "@@ -321,3 +321,3 @@\n \n-def convert_json(expr: str) -> None:\n+def _convert_json(expr: str) -> str:\n     with TemporaryDirectory() as workdir:\n",
        "source_code_with_indent": "\n<DED>def convert_json(expr: str) -> None:\n    <IND>with TemporaryDirectory() as workdir:\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n<DED>def _convert_json(expr: str) -> str:\n    <IND>with TemporaryDirectory() as workdir:\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/convert_json_1\")\ndef convert_json_1() -> None:\n    return convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n\n",
        "source_code_len": 112,
        "target_code": "@app.route(\"/convert_json_1\")\ndef convert_json_1() -> str:\n    return _convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n\n",
        "target_code_len": 112,
        "diff_format": "@@ -343,4 +343,4 @@\n @app.route(\"/convert_json_1\")\n-def convert_json_1() -> None:\n-    return convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n+def convert_json_1() -> str:\n+    return _convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n \n",
        "source_code_with_indent": "<DED>@app.route(\"/convert_json_1\")\ndef convert_json_1() -> None:\n    <IND>return convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/convert_json_1\")\ndef convert_json_1() -> str:\n    <IND>return _convert_json(r\"(latest\\/)?[a-z_]+.csv\")\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/convert_json_2\")\ndef convert_json_2() -> None:\n    return convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n\n",
        "source_code_len": 114,
        "target_code": "@app.route(\"/convert_json_2\")\ndef convert_json_2() -> str:\n    return _convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n\n",
        "target_code_len": 114,
        "diff_format": "@@ -348,4 +348,4 @@\n @app.route(\"/convert_json_2\")\n-def convert_json_2() -> None:\n-    return convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n+def convert_json_2() -> str:\n+    return _convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n \n",
        "source_code_with_indent": "<DED>@app.route(\"/convert_json_2\")\ndef convert_json_2() -> None:\n    <IND>return convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/convert_json_2\")\ndef convert_json_2() -> str:\n    <IND>return _convert_json(r\"[A-Z]{2}(_\\w+)?\\/\\w+.csv\")\n\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        \"publish\": publish,\n        \"convert_json\": convert_json,\n        \"report_errors_to_github\": report_errors_to_github,\n",
        "source_code_len": 126,
        "target_code": "        \"publish\": publish,\n        \"convert_json\": _convert_json,\n        \"report_errors_to_github\": report_errors_to_github,\n",
        "target_code_len": 127,
        "diff_format": "@@ -386,3 +386,3 @@\n         \"publish\": publish,\n-        \"convert_json\": convert_json,\n+        \"convert_json\": _convert_json,\n         \"report_errors_to_github\": report_errors_to_github,\n",
        "source_code_with_indent": "        \"publish\": publish,\n        \"convert_json\": convert_json,\n        \"report_errors_to_github\": report_errors_to_github,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        \"publish\": publish,\n        \"convert_json\": _convert_json,\n        \"report_errors_to_github\": report_errors_to_github,\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "GoogleCloudPlatform/covid-19-open-data",
    "commit": "49cc60cdb23109e2287a1e76d0cdffc5b435f7d2",
    "filename": "src/appengine.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/GoogleCloudPlatform-covid-19-open-data/src/appengine.py",
    "file_hunks_size": 8,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "src/appengine.py:356:4 Incompatible return type [7]: Expected `None` but got `str`.",
    "message": " Expected `None` but got `str`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 356,
    "warning_line": "    return \"OK\"",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@app.route(\"/report_errors_to_github\")\ndef report_errors_to_github() -> None:\n    register_new_errors(os.getenv(ENV_PROJECT))\n",
        "source_code_len": 126,
        "target_code": "@app.route(\"/report_errors_to_github\")\ndef report_errors_to_github() -> str:\n    register_new_errors(os.getenv(ENV_PROJECT))\n",
        "target_code_len": 125,
        "diff_format": "@@ -353,3 +353,3 @@\n @app.route(\"/report_errors_to_github\")\n-def report_errors_to_github() -> None:\n+def report_errors_to_github() -> str:\n     register_new_errors(os.getenv(ENV_PROJECT))\n",
        "source_code_with_indent": "<DED>@app.route(\"/report_errors_to_github\")\ndef report_errors_to_github() -> None:\n    <IND>register_new_errors(os.getenv(ENV_PROJECT))\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED>@app.route(\"/report_errors_to_github\")\ndef report_errors_to_github() -> str:\n    <IND>register_new_errors(os.getenv(ENV_PROJECT))\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]