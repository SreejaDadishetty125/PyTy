[
  {
    "project": "encode/httpcore",
    "commit": "291ba377925a0e6aa67ee2de566337b361facbff",
    "filename": "tests/conftest.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/encode-httpcore/tests/conftest.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "tests/conftest.py:84:8 Incompatible return type [7]: Expected `typing.Tuple[bytes, bytes, int]` but got `typing.Generator[typing.Tuple[bytes, bytes, int], None, None]`.",
    "message": " Expected `typing.Tuple[bytes, bytes, int]` but got `typing.Generator[typing.Tuple[bytes, bytes, int], None, None]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 84,
    "warning_line": "        yield (b\"http\", PROXY_HOST.encode(), PROXY_PORT)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "@pytest.fixture\ndef proxy_server() -> typing.Tuple[bytes, bytes, int]:\n    \"\"\"Starts a proxy server on a different thread and returns its origin tuple.\"\"\"\n",
        "source_code_len": 155,
        "target_code": "@pytest.fixture\ndef proxy_server() -> typing.Iterable[typing.Tuple[bytes, bytes, int]]:\n    \"\"\"Starts a proxy server on a different thread and returns its origin tuple.\"\"\"\n",
        "target_code_len": 172,
        "diff_format": "@@ -77,3 +79,3 @@\n @pytest.fixture\n-def proxy_server() -> typing.Tuple[bytes, bytes, int]:\n+def proxy_server() -> typing.Iterable[typing.Tuple[bytes, bytes, int]]:\n     \"\"\"Starts a proxy server on a different thread and returns its origin tuple.\"\"\"\n",
        "source_code_with_indent": "<DED><DED>@pytest.fixture\ndef proxy_server() -> typing.Tuple[bytes, bytes, int]:\n    <IND>\"\"\"Starts a proxy server on a different thread and returns its origin tuple.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED>@pytest.fixture\ndef proxy_server() -> typing.Iterable[typing.Tuple[bytes, bytes, int]]:\n    <IND>\"\"\"Starts a proxy server on a different thread and returns its origin tuple.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]