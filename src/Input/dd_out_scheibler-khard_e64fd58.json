[
  {
    "project": "scheibler/khard",
    "commit": "e64fd5836f24766228e5ffe4e7add06514f91a2c",
    "filename": "khard/cli.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/scheibler-khard/khard/cli.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "khard/cli.py:204:36 Incompatible parameter type [6]: Expected `List[str]` for 1st positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "message": " Expected `List[str]` for 1st positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "    field_argument = FieldsArgument('index', 'name', 'phone', 'email',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "source_code_len": 110,
        "target_code": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "target_code_len": 104,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n+    def __init__(self, *choices: str, nested: bool = False) -> None:\n         \"\"\"Initialize the factory\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "scheibler/khard",
    "commit": "e64fd5836f24766228e5ffe4e7add06514f91a2c",
    "filename": "khard/cli.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/scheibler-khard/khard/cli.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "khard/cli.py:204:45 Incompatible parameter type [6]: Expected `List[str]` for 2nd positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "message": " Expected `List[str]` for 2nd positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "    field_argument = FieldsArgument('index', 'name', 'phone', 'email',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "source_code_len": 110,
        "target_code": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "target_code_len": 104,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n+    def __init__(self, *choices: str, nested: bool = False) -> None:\n         \"\"\"Initialize the factory\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "scheibler/khard",
    "commit": "e64fd5836f24766228e5ffe4e7add06514f91a2c",
    "filename": "khard/cli.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/scheibler-khard/khard/cli.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "khard/cli.py:204:53 Incompatible parameter type [6]: Expected `List[str]` for 3rd positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "message": " Expected `List[str]` for 3rd positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "    field_argument = FieldsArgument('index', 'name', 'phone', 'email',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "source_code_len": 110,
        "target_code": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "target_code_len": 104,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n+    def __init__(self, *choices: str, nested: bool = False) -> None:\n         \"\"\"Initialize the factory\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "scheibler/khard",
    "commit": "e64fd5836f24766228e5ffe4e7add06514f91a2c",
    "filename": "khard/cli.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/scheibler-khard/khard/cli.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "khard/cli.py:204:62 Incompatible parameter type [6]: Expected `List[str]` for 4th positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "message": " Expected `List[str]` for 4th positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 204,
    "warning_line": "    field_argument = FieldsArgument('index', 'name', 'phone', 'email',",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "source_code_len": 110,
        "target_code": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "target_code_len": 104,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n+    def __init__(self, *choices: str, nested: bool = False) -> None:\n         \"\"\"Initialize the factory\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        <IND>"
      }
    ]
  },
  {
    "project": "scheibler/khard",
    "commit": "e64fd5836f24766228e5ffe4e7add06514f91a2c",
    "filename": "khard/cli.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/scheibler-khard/khard/cli.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "khard/cli.py:205:37 Incompatible parameter type [6]: Expected `List[str]` for 5th positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "message": " Expected `List[str]` for 5th positional only parameter to call `FieldsArgument.__init__` but got `str`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 205,
    "warning_line": "                                    *CarddavObject.get_properties(),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "source_code_len": 110,
        "target_code": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        \"\"\"Initialize the factory\n",
        "target_code_len": 104,
        "diff_format": "@@ -24,3 +24,3 @@\n \n-    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n+    def __init__(self, *choices: str, nested: bool = False) -> None:\n         \"\"\"Initialize the factory\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "\n    def __init__(self, *choices: List[str], nested: bool = False) -> None:\n        <IND>",
        "target_code_with_indent": "\n    def __init__(self, *choices: str, nested: bool = False) -> None:\n        <IND>"
      }
    ]
  }
]