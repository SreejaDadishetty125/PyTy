[
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:66:12 Incompatible return type [7]: Expected `Dict[str, typing.Any]` but got `And`.",
    "message": " Expected `Dict[str, typing.Any]` but got `And`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 66,
    "warning_line": "            return And(*self.find_expressions)"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:66:24 Incompatible parameter type [6]: Expected `Union[Dict[typing.Any, typing.Any], beanie.odm.operators.find.BaseFindOperator, bool]` for 1st positional only parameter to call `beanie.odm.operators.find.logical.LogicalOperatorForListOfExpressions.__init__` but got `Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]`.",
    "message": " Expected `Union[Dict[typing.Any, typing.Any], beanie.odm.operators.find.BaseFindOperator, bool]` for 1st positional only parameter to call `beanie.odm.operators.find.logical.LogicalOperatorForListOfExpressions.__init__` but got `Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 66,
    "warning_line": "            return And(*self.find_expressions)"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:86:16 Incompatible parameter type [6]: Expected `Type[Document]` for 1st parameter `document_model` to call `UpdateQuery.__init__` but got `Document`.",
    "message": " Expected `Type[Document]` for 1st parameter `document_model` to call `UpdateQuery.__init__` but got `Document`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 86,
    "warning_line": "                document_model=self.document_model,"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:104:12 Incompatible parameter type [6]: Expected `Type[Document]` for 1st parameter `document_model` to call `DeleteQuery.__init__` but got `Document`.",
    "message": " Expected `Type[Document]` for 1st parameter `document_model` to call `DeleteQuery.__init__` but got `Document`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 104,
    "warning_line": "            document_model=self.document_model,"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:166:33 Incompatible parameter type [6]: Expected `typing.Iterable[Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]]` for 1st positional only parameter to call `list.__iadd__` but got `typing.Tuple[Union[Dict[str, typing.Any], Mapping[str, typing.Any], bool], ...]`.",
    "message": " Expected `typing.Iterable[Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]]` for 1st positional only parameter to call `list.__iadd__` but got `typing.Tuple[Union[Dict[str, typing.Any], Mapping[str, typing.Any], bool], ...]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 166,
    "warning_line": "        self.find_expressions += args"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:169:18 Incompatible parameter type [6]: Expected `Union[List[Tuple[str, SortDirection]], Tuple[str, SortDirection], str]` for 1st positional only parameter to call `FindMany.sort` but got `Union[None, List[Tuple[str, SortDirection]], str]`.",
    "message": " Expected `Union[List[Tuple[str, SortDirection]], Tuple[str, SortDirection], str]` for 1st positional only parameter to call `FindMany.sort` but got `Union[None, List[Tuple[str, SortDirection]], str]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 169,
    "warning_line": "        self.sort(sort)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self,\n        *args: Union[\n            str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n        ]\n",
        "source_code_len": 122,
        "target_code": "        self,\n        *args: Optional[\n            Union[\n                str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n            ]\n        ]\n",
        "target_code_len": 162,
        "diff_format": "@@ -196,4 +206,6 @@\n         self,\n-        *args: Union[\n-            str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n+        *args: Optional[\n+            Union[\n+                str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n+            ]\n         ]\n",
        "source_code_with_indent": "        self,\n        *args: Union[\n            str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n        ]\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self,\n        *args: Optional[\n            Union[\n                str, Tuple[str, SortDirection], List[Tuple[str, SortDirection]]\n            ]\n        ]\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:308:12 Incompatible parameter type [6]: Expected `Type[Document]` for 2nd parameter `document_model` to call `AggregationQuery.__init__` but got `Document`.",
    "message": " Expected `Type[Document]` for 2nd parameter `document_model` to call `AggregationQuery.__init__` but got `Document`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 308,
    "warning_line": "            document_model=self.document_model,"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/queries/find.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/queries/find.py",
    "file_hunks_size": 11,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/queries/find.py:352:33 Incompatible parameter type [6]: Expected `typing.Iterable[Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]]` for 1st positional only parameter to call `list.__iadd__` but got `typing.Tuple[Union[Dict[str, typing.Any], Mapping[str, typing.Any], bool], ...]`.",
    "message": " Expected `typing.Iterable[Union[Dict[typing.Any, typing.Any], Mapping[typing.Any, typing.Any]]]` for 1st positional only parameter to call `list.__iadd__` but got `typing.Tuple[Union[Dict[str, typing.Any], Mapping[str, typing.Any], bool], ...]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 352,
    "warning_line": "        self.find_expressions += args"
  },
  {
    "project": "roman-right/beanie",
    "commit": "d834ae8bc02a0ead812cfbcaee9b2317b90b1070",
    "filename": "beanie/odm/utils/collection.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/roman-right-beanie/beanie/odm/utils/collection.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "beanie/odm/utils/collection.py:22:4 Incompatible attribute type [8]: Attribute `name` declared in class `CollectionInputParameters` has type `str` but is used as type `None`.",
    "message": " Attribute `name` declared in class `CollectionInputParameters` has type `str` but is used as type `None`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 22,
    "warning_line": "    name: str = None",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "class CollectionInputParameters(BaseModel):\n    name: str = None\n    indexes: List[IndexModelField] = []\n",
        "source_code_len": 105,
        "target_code": "class CollectionInputParameters(BaseModel):\n    name: str = \"\"\n    indexes: List[IndexModelField] = []\n",
        "target_code_len": 103,
        "diff_format": "@@ -21,3 +21,3 @@\n class CollectionInputParameters(BaseModel):\n-    name: str = None\n+    name: str = \"\"\n     indexes: List[IndexModelField] = []\n",
        "source_code_with_indent": "<DED><DED><DED>class CollectionInputParameters(BaseModel):\n    <IND>name: str = None\n    indexes: List[IndexModelField] = []\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "<DED><DED><DED>class CollectionInputParameters(BaseModel):\n    <IND>name: str = \"\"\n    indexes: List[IndexModelField] = []\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]