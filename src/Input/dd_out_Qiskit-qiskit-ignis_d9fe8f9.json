[
  {
    "project": "Qiskit/qiskit-ignis",
    "commit": "d9fe8f93cbfdea1529e263c5f5bcb736c8fd9ccc",
    "filename": "qiskit/ignis/mitigation/expval/base_meas_mitigator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Qiskit-qiskit-ignis/qiskit/ignis/mitigation/expval/base_meas_mitigator.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qiskit/ignis/mitigation/expval/base_meas_mitigator.py:188:37 Incompatible parameter type [6]: Expected `List[int]` for 1st positional only parameter to call `BaseExpvalMeasMitigator.assignment_matrix` but got `Optional[List[int]]`.",
    "message": " Expected `List[int]` for 1st positional only parameter to call `BaseExpvalMeasMitigator.assignment_matrix` but got `Optional[List[int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 188,
    "warning_line": "        mat = self.assignment_matrix(qubits)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def plot_assignment_matrix(self,\n                               qubits: Optional[List[int]] = None,\n                               ax: Optional[plt.axes] = None) -> plt.axes:\n        \"\"\"Matrix plot of the readout error assignment matrix.\n",
        "source_code_len": 242,
        "target_code": "    def plot_assignment_matrix(self,\n                               qubits=None,\n                               ax=None):\n        \"\"\"Matrix plot of the readout error assignment matrix.\n",
        "target_code_len": 185,
        "diff_format": "@@ -168,4 +168,4 @@\n     def plot_assignment_matrix(self,\n-                               qubits: Optional[List[int]] = None,\n-                               ax: Optional[plt.axes] = None) -> plt.axes:\n+                               qubits=None,\n+                               ax=None):\n         \"\"\"Matrix plot of the readout error assignment matrix.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>def plot_assignment_matrix(self,\n                               qubits: Optional[List[int]] = None,\n                               ax: Optional[plt.axes] = None) -> plt.axes:\n        <IND>",
        "target_code_with_indent": "    <DED>def plot_assignment_matrix(self,\n                               qubits=None,\n                               ax=None):\n        <IND>"
      }
    ]
  },
  {
    "project": "Qiskit/qiskit-ignis",
    "commit": "d9fe8f93cbfdea1529e263c5f5bcb736c8fd9ccc",
    "filename": "qiskit/ignis/mitigation/expval/base_meas_mitigator.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/Qiskit-qiskit-ignis/qiskit/ignis/mitigation/expval/base_meas_mitigator.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "qiskit/ignis/mitigation/expval/base_meas_mitigator.py:218:37 Incompatible parameter type [6]: Expected `List[int]` for 1st positional only parameter to call `BaseExpvalMeasMitigator.mitigation_matrix` but got `Optional[List[int]]`.",
    "message": " Expected `List[int]` for 1st positional only parameter to call `BaseExpvalMeasMitigator.mitigation_matrix` but got `Optional[List[int]]`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 218,
    "warning_line": "        mat = self.mitigation_matrix(qubits)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def plot_mitigation_matrix(self,\n                               qubits: Optional[List[int]] = None,\n                               ax: Optional[plt.axes] = None) -> plt.axes:\n        \"\"\"Matrix plot of the readout error mitigation matrix.\n",
        "source_code_len": 242,
        "target_code": "    def plot_mitigation_matrix(self,\n                               qubits=None,\n                               ax=None):\n        \"\"\"Matrix plot of the readout error mitigation matrix.\n",
        "target_code_len": 185,
        "diff_format": "@@ -197,4 +197,4 @@\n     def plot_mitigation_matrix(self,\n-                               qubits: Optional[List[int]] = None,\n-                               ax: Optional[plt.axes] = None) -> plt.axes:\n+                               qubits=None,\n+                               ax=None):\n         \"\"\"Matrix plot of the readout error mitigation matrix.\n",
        "source_code_with_indent_exact_match": false,
        "target_code_with_indent_exact_match": false,
        "source_code_with_indent": "    <DED>def plot_mitigation_matrix(self,\n                               qubits: Optional[List[int]] = None,\n                               ax: Optional[plt.axes] = None) -> plt.axes:\n        <IND>",
        "target_code_with_indent": "    <DED>def plot_mitigation_matrix(self,\n                               qubits=None,\n                               ax=None):\n        <IND>"
      }
    ]
  }
]