[
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/aos_soa_proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/aos_soa_proxy.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/aos_soa_proxy.py:84:23 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `int`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__setitem__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 84,
    "warning_line": "            self._data[index] = read_attribute(getattr(item, attr_name), index, attr_property, bl_collection, context)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self):\n        self._data: Dict[str, List] = {}\n\n",
        "source_code_len": 66,
        "target_code": "    def __init__(self):\n        self._data: Dict[int, List] = {}\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -68,3 +68,3 @@\n     def __init__(self):\n-        self._data: Dict[str, List] = {}\n+        self._data: Dict[int, List] = {}\n \n",
        "source_code_with_indent": "    def __init__(self):\n        <IND>self._data: Dict[str, List] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self):\n        <IND>self._data: Dict[int, List] = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/aos_soa_proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/aos_soa_proxy.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/aos_soa_proxy.py:87:41 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `int`.",
    "message": " Expected `str` for 1st positional only parameter to call `dict.__getitem__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 87,
    "warning_line": "            if not isinstance(self._data[0], str):",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "    def __init__(self):\n        self._data: Dict[str, List] = {}\n\n",
        "source_code_len": 66,
        "target_code": "    def __init__(self):\n        self._data: Dict[int, List] = {}\n\n",
        "target_code_len": 66,
        "diff_format": "@@ -68,3 +68,3 @@\n     def __init__(self):\n-        self._data: Dict[str, List] = {}\n+        self._data: Dict[int, List] = {}\n \n",
        "source_code_with_indent": "    def __init__(self):\n        <IND>self._data: Dict[str, List] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "    def __init__(self):\n        <IND>self._data: Dict[int, List] = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/datablock_collection_proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/datablock_collection_proxy.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/datablock_collection_proxy.py:105:12 Incompatible return type [7]: Expected `Dict[str, str]` but got `Tuple[str, Dict[str, str]]`.",
    "message": " Expected `Dict[str, str]` but got `Tuple[str, Dict[str, str]]`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 105,
    "warning_line": "            return (self._name, self._snapshot_undo_post)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def snapshot_undo_post(self) -> Dict[str, Uuid]:\n        \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_len": 122,
        "target_code": "\n    def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n        \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "target_code_len": 144,
        "diff_format": "@@ -94,3 +94,3 @@\n \n-    def snapshot_undo_post(self) -> Dict[str, Uuid]:\n+    def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n         \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def snapshot_undo_post(self) -> Dict[str, Uuid]:\n        <IND>\"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n        <IND>\"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/datablock_collection_proxy.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/datablock_collection_proxy.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/datablock_collection_proxy.py:107:8 Incompatible return type [7]: Expected `Dict[str, str]` but got `None`.",
    "message": " Expected `Dict[str, str]` but got `None`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 107,
    "warning_line": "        return None",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def snapshot_undo_post(self) -> Dict[str, Uuid]:\n        \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_len": 122,
        "target_code": "\n    def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n        \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "target_code_len": 144,
        "diff_format": "@@ -94,3 +94,3 @@\n \n-    def snapshot_undo_post(self) -> Dict[str, Uuid]:\n+    def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n         \"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_with_indent": "\n    <DED>def snapshot_undo_post(self) -> Dict[str, Uuid]:\n        <IND>\"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def snapshot_undo_post(self) -> Optional[Tuple[str, Dict[str, Uuid]]]:\n        <IND>\"\"\"Compare post undo uuid state to recover undone uuids.\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/debug_addon.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/debug_addon.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "mixer/blender_data/debug_addon.py:30:24 Invalid type [31]: Expression `bpy.props.BoolProperty($parameter$name = \"ProfileCumulative\", $parameter$default = False)` is not a valid type.",
    "message": " Expression `bpy.props.BoolProperty($parameter$name = \"ProfileCumulative\", $parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 30,
    "warning_line": "    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_len": 304,
        "target_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_len": 352,
        "diff_format": "@@ -29,5 +29,5 @@\n class DebugDataProperties(bpy.types.PropertyGroup):\n-    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n-    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n-    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n+    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n+    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n+    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n \n",
        "source_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/debug_addon.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/debug_addon.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "mixer/blender_data/debug_addon.py:31:21 Invalid type [31]: Expression `bpy.props.BoolProperty($parameter$name = \"ProfileCallers\", $parameter$default = False)` is not a valid type.",
    "message": " Expression `bpy.props.BoolProperty($parameter$name = \"ProfileCallers\", $parameter$default = False)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 31,
    "warning_line": "    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_len": 304,
        "target_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_len": 352,
        "diff_format": "@@ -29,5 +29,5 @@\n class DebugDataProperties(bpy.types.PropertyGroup):\n-    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n-    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n-    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n+    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n+    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n+    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n \n",
        "source_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/debug_addon.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/debug_addon.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": true,
    "full_warning_msg": "mixer/blender_data/debug_addon.py:32:16 Invalid type [31]: Expression `bpy.props.StringProperty($parameter$name = \"TestNames\", $parameter$default = $local_mixer?blender_data?debug_addon$default_test)` is not a valid type.",
    "message": " Expression `bpy.props.StringProperty($parameter$name = \"TestNames\", $parameter$default = $local_mixer?blender_data?debug_addon$default_test)` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 32,
    "warning_line": "    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": true,
        "source_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_len": 304,
        "target_code": "class DebugDataProperties(bpy.types.PropertyGroup):\n    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_len": 352,
        "diff_format": "@@ -29,5 +29,5 @@\n class DebugDataProperties(bpy.types.PropertyGroup):\n-    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n-    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n-    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n+    profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n+    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n+    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n \n",
        "source_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "class DebugDataProperties(bpy.types.PropertyGroup):\n    <IND>profile_cumulative: bpy.props.BoolProperty(name=\"ProfileCumulative\", default=False)  # type: ignore\n    profile_callers: bpy.props.BoolProperty(name=\"ProfileCallers\", default=False)  # type: ignore\n    test_names: bpy.props.StringProperty(name=\"TestNames\", default=default_test)  # type: ignore\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/json_codec.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/json_codec.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/json_codec.py:48:28 Incompatible variable type [9]: ctor_args is declared to have type `Tuple[str]` but is used as type `Tuple[]`.",
    "message": " ctor_args is declared to have type `Tuple[str]` but is used as type `Tuple[]`.",
    "rule_id": "Incompatible variable type [9]",
    "warning_line_no": 48,
    "warning_line": "def serialize(_cls=None, *, ctor_args: Tuple[str] = ()):",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\ndef serialize(_cls=None, *, ctor_args: Tuple[str] = ()):\n    \"\"\"Class decorator to register a Proxy class for serialization\"\"\"\n",
        "source_code_len": 128,
        "target_code": "\ndef serialize(_cls=None, *, ctor_args: Tuple[str, ...] = ()):\n    \"\"\"Class decorator to register a Proxy class for serialization\"\"\"\n",
        "target_code_len": 133,
        "diff_format": "@@ -47,3 +47,3 @@\n \n-def serialize(_cls=None, *, ctor_args: Tuple[str] = ()):\n+def serialize(_cls=None, *, ctor_args: Tuple[str, ...] = ()):\n     \"\"\"Class decorator to register a Proxy class for serialization\"\"\"\n",
        "source_code_with_indent": "\ndef serialize(_cls=None, *, ctor_args: Tuple[str] = ()):\n    <IND>\"\"\"Class decorator to register a Proxy class for serialization\"\"\"\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\ndef serialize(_cls=None, *, ctor_args: Tuple[str, ...] = ()):\n    <IND>\"\"\"Class decorator to register a Proxy class for serialization\"\"\"\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/messages.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/messages.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/messages.py:177:8 Incompatible attribute type [8]: Attribute `arrays` declared in class `BlenderDataMessage` has type `List[typing.Any]` but is used as type `typing.Dict[str, List[Tuple[typing.Any, array.array[typing.Any]]]]`.",
    "message": " Attribute `arrays` declared in class `BlenderDataMessage` has type `List[typing.Any]` but is used as type `typing.Dict[str, List[Tuple[typing.Any, array.array[typing.Any]]]]`.",
    "rule_id": "Incompatible attribute type [8]",
    "warning_line_no": 177,
    "warning_line": "        self.arrays, index = decode_arrays(buffer, index)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        self.soas: List[Soa] = []\n        self.arrays: List[str, array.array] = {}\n\n",
        "source_code_len": 84,
        "target_code": "        self.soas: List[Soa] = []\n        self.arrays: ArrayGroups = {}\n\n",
        "target_code_len": 73,
        "diff_format": "@@ -167,3 +166,3 @@\n         self.soas: List[Soa] = []\n-        self.arrays: List[str, array.array] = {}\n+        self.arrays: ArrayGroups = {}\n \n",
        "source_code_with_indent": "        self.soas: List[Soa] = []\n        self.arrays: List[str, array.array] = {}\n\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        self.soas: List[Soa] = []\n        self.arrays: ArrayGroups = {}\n\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "ubisoft/mixer",
    "commit": "cba3aa1610dda5836d79d64827abb6262e3b4a65",
    "filename": "mixer/blender_data/modifier_proxies.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/ubisoft-mixer/mixer/blender_data/modifier_proxies.py",
    "file_hunks_size": 1,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "mixer/blender_data/modifier_proxies.py:90:8 Incompatible return type [7]: Expected `NodesModifierProxy` but got `StructProxy`.",
    "message": " Expected `NodesModifierProxy` but got `StructProxy`.",
    "rule_id": "Incompatible return type [7]",
    "warning_line_no": 90,
    "warning_line": "        return super().load(modifier, key, context)",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> NodesModifierProxy:\n        # The inputs are stored as \"custom properties\".\n",
        "source_code_len": 163,
        "target_code": "\n    def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> StructProxy:\n        # The inputs are stored as \"custom properties\".\n",
        "target_code_len": 156,
        "diff_format": "@@ -85,3 +85,3 @@\n \n-    def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> NodesModifierProxy:\n+    def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> StructProxy:\n         # The inputs are stored as \"custom properties\".\n",
        "source_code_with_indent": "\n    <DED><DED>def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> NodesModifierProxy:\n        # The inputs are stored as \"custom properties\".\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED><DED>def load(self, modifier: T.bpy_struct, key: Union[int, str], context: Context) -> StructProxy:\n        # The inputs are stored as \"custom properties\".\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]