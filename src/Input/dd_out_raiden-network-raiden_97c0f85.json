[
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:88:12 Incompatible parameter type [6]: Expected `MessageID` for 2nd parameter `message_identifier` to call `SendLockExpired.__init__` but got `int`.",
    "message": " Expected `MessageID` for 2nd parameter `message_identifier` to call `SendLockExpired.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 88,
    "warning_line": "            message_identifier=int(data['message_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:90:12 Incompatible parameter type [6]: Expected `SecretHash` for 4th parameter `secrethash` to call `SendLockExpired.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 4th parameter `secrethash` to call `SendLockExpired.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 90,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:150:12 Incompatible parameter type [6]: Expected `MessageID` for 3rd parameter `message_identifier` to call `SendLockedTransfer.__init__` but got `int`.",
    "message": " Expected `MessageID` for 3rd parameter `message_identifier` to call `SendLockedTransfer.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 150,
    "warning_line": "            message_identifier=int(data['message_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n            transfer=data['transfer'],\n",
        "source_code_len": 178,
        "target_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            transfer=data['transfer'],\n",
        "target_code_len": 189,
        "diff_format": "@@ -149,3 +150,3 @@\n             channel_identifier=ChannelID(int(data['channel_identifier'])),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             transfer=data['transfer'],\n",
        "source_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n            transfer=data['transfer'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            transfer=data['transfer'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:469:12 Incompatible parameter type [6]: Expected `MessageID` for 3rd parameter `message_identifier` to call `SendRefundTransfer.__init__` but got `int`.",
    "message": " Expected `MessageID` for 3rd parameter `message_identifier` to call `SendRefundTransfer.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 469,
    "warning_line": "            message_identifier=int(data['message_identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n            transfer=data['transfer'],\n",
        "source_code_len": 178,
        "target_code": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            transfer=data['transfer'],\n",
        "target_code_len": 189,
        "diff_format": "@@ -468,3 +469,3 @@\n             channel_identifier=ChannelID(int(data['channel_identifier'])),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             transfer=data['transfer'],\n",
        "source_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=int(data['message_identifier']),\n            transfer=data['transfer'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            channel_identifier=ChannelID(int(data['channel_identifier'])),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            transfer=data['transfer'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:510:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockSuccess.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 510,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:511:12 Incompatible parameter type [6]: Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockSuccess.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockSuccess.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 511,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:559:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockFailed.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockFailed.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 559,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:560:12 Incompatible parameter type [6]: Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockFailed.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockFailed.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 560,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:601:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockClaimSuccess.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockClaimSuccess.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 601,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:602:12 Incompatible parameter type [6]: Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockClaimSuccess.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockClaimSuccess.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 602,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:645:12 Incompatible parameter type [6]: Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockClaimFailed.__init__` but got `int`.",
    "message": " Expected `PaymentID` for 1st parameter `identifier` to call `EventUnlockClaimFailed.__init__` but got `int`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 645,
    "warning_line": "            identifier=int(data['identifier']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:646:12 Incompatible parameter type [6]: Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockClaimFailed.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 2nd parameter `secrethash` to call `EventUnlockClaimFailed.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 646,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "raiden-network/raiden",
    "commit": "97c0f859442c6a9e6f9d133b5eb86001a7a5a019",
    "filename": "raiden/transfer/mediated_transfer/events.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/raiden-network-raiden/raiden/transfer/mediated_transfer/events.py",
    "file_hunks_size": 21,
    "min_patch_found": true,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "raiden/transfer/mediated_transfer/events.py:693:12 Incompatible parameter type [6]: Expected `SecretHash` for 1st parameter `secrethash` to call `EventUnexpectedSecretReveal.__init__` but got `bytes`.",
    "message": " Expected `SecretHash` for 1st parameter `secrethash` to call `EventUnexpectedSecretReveal.__init__` but got `bytes`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 693,
    "warning_line": "            secrethash=serialization.deserialize_bytes(data['secrethash']),",
    "min_patch": [
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_len": 144,
        "target_code": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_len": 228,
        "diff_format": "@@ -6,3 +6,4 @@\n from raiden.transfer.state import BalanceProofUnsignedState\n-from raiden.utils import pex, serialization, sha3\n+from raiden.utils import pex, sha3\n+from raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\n from raiden.utils.typing import (\n",
        "source_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, serialization, sha3\nfrom raiden.utils.typing import (\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "from raiden.transfer.state import BalanceProofUnsignedState\nfrom raiden.utils import pex, sha3\nfrom raiden.utils.serialization import deserialize_bytes, deserialize_secret_hash, serialize_bytes\nfrom raiden.utils.typing import (\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_len": 185,
        "target_code": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_len": 171,
        "diff_format": "@@ -77,3 +78,3 @@\n             'balance_proof': self.balance_proof,\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'balance_proof': self.balance_proof,\n            'secrethash': serialize_bytes(self.secrethash),\n            'recipient': to_checksum_address(self.recipient),\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 262,
        "target_code": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 265,
        "diff_format": "@@ -87,5 +88,5 @@\n             recipient=to_canonical_address(data['recipient']),\n-            message_identifier=int(data['message_identifier']),\n+            message_identifier=MessageID(int(data['message_identifier'])),\n             balance_proof=data['balance_proof'],\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=int(data['message_identifier']),\n            balance_proof=data['balance_proof'],\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            recipient=to_canonical_address(data['recipient']),\n            message_identifier=MessageID(int(data['message_identifier'])),\n            balance_proof=data['balance_proof'],\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_len": 140,
        "target_code": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_len": 126,
        "diff_format": "@@ -222,3 +223,3 @@\n             'message_identifier': str(self.message_identifier),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n         }\n",
        "source_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialization.serialize_bytes(self.secret),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'message_identifier': str(self.message_identifier),\n            'secret': serialize_bytes(self.secret),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_len": 161,
        "target_code": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_len": 147,
        "diff_format": "@@ -233,3 +234,3 @@\n             message_identifier=MessageID(int(data['message_identifier'])),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n         )\n",
        "source_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            message_identifier=MessageID(int(data['message_identifier'])),\n            secret=Secret(deserialize_bytes(data['secret'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_len": 177,
        "target_code": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_len": 163,
        "diff_format": "@@ -311,3 +312,3 @@\n             'token_address': to_checksum_address(self.token),\n-            'secret': serialization.serialize_bytes(self.secret),\n+            'secret': serialize_bytes(self.secret),\n             'balance_proof': self.balance_proof,\n",
        "source_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialization.serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'token_address': to_checksum_address(self.token),\n            'secret': serialize_bytes(self.secret),\n            'balance_proof': self.balance_proof,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_len": 196,
        "target_code": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_len": 182,
        "diff_format": "@@ -325,3 +326,3 @@\n             token_address=to_canonical_address(data['token_address']),\n-            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n+            secret=Secret(deserialize_bytes(data['secret'])),\n             balance_proof=data['balance_proof'],\n",
        "source_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(serialization.deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            token_address=to_canonical_address(data['token_address']),\n            secret=Secret(deserialize_bytes(data['secret'])),\n            balance_proof=data['balance_proof'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -391,3 +392,3 @@\n             'expiration': str(self.expiration),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'expiration': str(self.expiration),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_len": 163,
        "target_code": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_len": 149,
        "diff_format": "@@ -405,3 +406,3 @@\n             expiration=BlockExpiration(int(data['expiration'])),\n-            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n+            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n         )\n",
        "source_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(serialization.deserialize_bytes(data['secrethash'])),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            expiration=BlockExpiration(int(data['expiration'])),\n            secrethash=SecretHash(deserialize_bytes(data['secrethash'])),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -501,3 +502,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -509,4 +510,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -549,3 +550,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -558,4 +559,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_len": 132,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_len": 118,
        "diff_format": "@@ -592,3 +593,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n         }\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n        }\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n        }\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_len": 158,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_len": 161,
        "diff_format": "@@ -600,4 +601,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n         )\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n        )\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n        )\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 157,
        "target_code": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 143,
        "diff_format": "@@ -635,3 +636,3 @@\n             'identifier': str(self.identifier),\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "            'identifier': str(self.identifier),\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 183,
        "target_code": "        restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 186,
        "diff_format": "@@ -644,4 +645,4 @@\n         restored = cls(\n-            identifier=int(data['identifier']),\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            identifier=PaymentID(int(data['identifier'])),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            identifier=int(data['identifier']),\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            identifier=PaymentID(int(data['identifier'])),\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": false,
        "inside_window": false,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_len": 128,
        "target_code": "        result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_len": 114,
        "diff_format": "@@ -680,3 +681,3 @@\n         result = {\n-            'secrethash': serialization.serialize_bytes(self.secrethash),\n+            'secrethash': serialize_bytes(self.secrethash),\n             'reason': self.reason,\n",
        "source_code_with_indent": "        <IND>result = {\n            'secrethash': serialization.serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>result = {\n            'secrethash': serialize_bytes(self.secrethash),\n            'reason': self.reason,\n",
        "target_code_with_indent_exact_match": true
      },
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_len": 135,
        "target_code": "        restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_len": 127,
        "diff_format": "@@ -692,3 +693,3 @@\n         restored = cls(\n-            secrethash=serialization.deserialize_bytes(data['secrethash']),\n+            secrethash=deserialize_secret_hash(data['secrethash']),\n             reason=data['reason'],\n",
        "source_code_with_indent": "        <IND>restored = cls(\n            secrethash=serialization.deserialize_bytes(data['secrethash']),\n            reason=data['reason'],\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        <IND>restored = cls(\n            secrethash=deserialize_secret_hash(data['secrethash']),\n            reason=data['reason'],\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]