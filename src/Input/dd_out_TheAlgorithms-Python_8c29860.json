[
  {
    "project": "TheAlgorithms/Python",
    "commit": "8c2986026bc42d81a6d9386c9fe621fea8ff2d15",
    "filename": "linear_algebra/src/polynom_for_points.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/linear_algebra/src/polynom_for_points.py",
    "file_hunks_size": 6,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "linear_algebra/src/polynom_for_points.py:99:28 Incompatible parameter type [6]: Expected `str` for 1st positional only parameter to call `list.append` but got `float`.",
    "message": " Expected `str` for 1st positional only parameter to call `list.append` but got `float`.",
    "rule_id": "Incompatible parameter type [6]",
    "warning_line_no": 99,
    "warning_line": "            solution.append(vector[count] / matrix[count][count])",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "        while count < x:\n            solution.append(vector[count] / matrix[count][count])\n            count += 1\n",
        "source_code_len": 114,
        "target_code": "        while count < x:\n            solution.append(str(vector[count] / matrix[count][count]))\n            count += 1\n",
        "target_code_len": 119,
        "diff_format": "@@ -98,3 +95,3 @@\n         while count < x:\n-            solution.append(vector[count] / matrix[count][count])\n+            solution.append(str(vector[count] / matrix[count][count]))\n             count += 1\n",
        "source_code_with_indent": "        while count < x:\n            <IND>solution.append(vector[count] / matrix[count][count])\n            count += 1\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "        while count < x:\n            <IND>solution.append(str(vector[count] / matrix[count][count]))\n            count += 1\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  },
  {
    "project": "TheAlgorithms/Python",
    "commit": "8c2986026bc42d81a6d9386c9fe621fea8ff2d15",
    "filename": "linear_algebra/src/power_iteration.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/TheAlgorithms-Python/linear_algebra/src/power_iteration.py",
    "file_hunks_size": 1,
    "min_patch_found": false,
    "single_hunk": false,
    "fit_TFix": false,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "linear_algebra/src/power_iteration.py:6:5 Invalid type [31]: Expression `[float, numpy.array]` is not a valid type.",
    "message": " Expression `[float, numpy.array]` is not a valid type.",
    "rule_id": "Invalid type [31]",
    "warning_line_no": 6,
    "warning_line": ") -> [float, np.array]:"
  }
]