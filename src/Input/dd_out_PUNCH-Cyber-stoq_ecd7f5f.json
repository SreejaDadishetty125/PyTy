[
  {
    "project": "PUNCH-Cyber/stoq",
    "commit": "ecd7f5f46146fa9378000ac469f6eca8f64ac31d",
    "filename": "stoq/tests/data/plugins/archiver/dummy_archiver/dummy_archiver.py",
    "filename_after_commit": "/home/chowyi/TypeAnnotation_Study/GitHub/PUNCH-Cyber-stoq/stoq/tests/data/plugins/archiver/dummy_archiver/dummy_archiver.py",
    "file_hunks_size": 2,
    "min_patch_found": true,
    "single_hunk": true,
    "fit_TFix": true,
    "delete_only_patch": false,
    "has_suppression_all_hunks": false,
    "full_warning_msg": "stoq/tests/data/plugins/archiver/dummy_archiver/dummy_archiver.py:29:4 Inconsistent override [14]: `stoq.tests.data.plugins.archiver.dummy_archiver.dummy_archiver.DummyArchiver.get` overrides method defined in `stoq.plugins.archiver.ArchiverPlugin` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `ArchiverResponse`.",
    "message": " `stoq.tests.data.plugins.archiver.dummy_archiver.dummy_archiver.DummyArchiver.get` overrides method defined in `stoq.plugins.archiver.ArchiverPlugin` inconsistently. Parameter of type `str` is not a supertype of the overridden parameter `ArchiverResponse`.",
    "rule_id": "Inconsistent override [14]",
    "warning_line_no": 29,
    "warning_line": "    def get(self, task: str) -> Optional[Payload]:",
    "min_patch": [
      {
        "hunk_fit_TFix": true,
        "inside_window": true,
        "delete_only": false,
        "has_suppression": false,
        "source_code": "\n    def get(self, task: str) -> Optional[Payload]:\n        return None\n",
        "source_code_len": 72,
        "target_code": "\n    def get(self, task: ArchiverResponse) -> Optional[Payload]:\n        return None\n",
        "target_code_len": 85,
        "diff_format": "@@ -28,3 +28,3 @@\n \n-    def get(self, task: str) -> Optional[Payload]:\n+    def get(self, task: ArchiverResponse) -> Optional[Payload]:\n         return None\n",
        "source_code_with_indent": "\n    <DED>def get(self, task: str) -> Optional[Payload]:\n        <IND>return None\n",
        "source_code_with_indent_exact_match": true,
        "target_code_with_indent": "\n    <DED>def get(self, task: ArchiverResponse) -> Optional[Payload]:\n        <IND>return None\n",
        "target_code_with_indent_exact_match": true
      }
    ]
  }
]